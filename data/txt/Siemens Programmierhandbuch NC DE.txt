SINUMERIK

SINUMERIK MC
NC-Programmierung

Programmierhandbuch

Vorwort

Grundlegende 
Sicherheitshinweise

Grundlagen

Arbeitsvorbereitung

Tabellen

Anhang

1

2

3

4

A

Gltig fr

Steuerung
SINUMERIK MC

CNC-Software    Version 1.13

02/2020
A5E47437142A AB

Rechtliche Hinweise

Warnhinweiskonzept

Dieses Handbuch enthlt Hinweise, die Sie zu Ihrer persnlichen Sicherheit sowie zur Vermeidung von 
Sachschden beachten mssen. Die Hinweise zu Ihrer persnlichen Sicherheit sind durch ein Warndreieck 
hervorgehoben, Hinweise zu alleinigen Sachschden stehen ohne Warndreieck. Je nach Gefhrdungsstufe werden 
die Warnhinweise in abnehmender Reihenfolge wie folgt dargestellt.

GEFAHR

bedeutet, dass Tod oder schwere Krperverletzung eintreten wird, wenn die entsprechenden 
Vorsichtsmanahmen nicht getroffen werden.

WARNUNG

bedeutet, dass Tod oder schwere Krperverletzung eintreten kann, wenn die entsprechenden 
Vorsichtsmanahmen nicht getroffen werden.

VORSICHT

bedeutet, dass eine leichte Krperverletzung eintreten kann, wenn die entsprechenden Vorsichtsmanahmen nicht 
getroffen werden.

ACHTUNG

bedeutet, dass Sachschaden eintreten kann, wenn die entsprechenden Vorsichtsmanahmen nicht getroffen 
werden.

Beim Auftreten mehrerer Gefhrdungsstufen wird immer der Warnhinweis zur jeweils hchsten Stufe verwendet. 
Wenn in einem Warnhinweis mit dem Warndreieck vor Personenschden gewarnt wird, dann kann im selben 
Warnhinweis zustzlich eine Warnung vor Sachschden angefgt sein.

Qualifiziertes Personal

Das zu dieser Dokumentation zugehrige Produkt/System darf nur von fr die jeweilige Aufgabenstellung 
qualifiziertem Personal gehandhabt werden unter Beachtung der fr die jeweilige Aufgabenstellung zugehrigen 
Dokumentation, insbesondere der darin enthaltenen Sicherheits- und Warnhinweise. Qualifiziertes Personal ist auf 
Grund seiner Ausbildung und Erfahrung befhigt, im Umgang mit diesen Produkten/Systemen Risiken zu erkennen 
und mgliche Gefhrdungen zu vermeiden.

Bestimmungsgemer Gebrauch von Siemens-Produkten

Beachten Sie Folgendes:

WARNUNG

Siemens-Produkte drfen nur fr die im Katalog und in der zugehrigen technischen Dokumentation vorgesehenen 
Einsatzflle verwendet werden. Falls Fremdprodukte und -komponenten zum Einsatz kommen, mssen diese von 
Siemens empfohlen bzw. zugelassen sein. Der einwandfreie und sichere Betrieb der Produkte setzt sachgemen 
Transport, sachgeme Lagerung, Aufstellung, Montage, Installation, Inbetriebnahme, Bedienung und 
Instandhaltung voraus. Die zulssigen Umgebungsbedingungen mssen eingehalten werden. Hinweise in den 
zugehrigen Dokumentationen mssen beachtet werden.

Marken

Alle mit dem Schutzrechtsvermerk  gekennzeichneten Bezeichnungen sind eingetragene Marken der 
Siemens AG. Die brigen Bezeichnungen in dieser Schrift knnen Marken sein, deren Benutzung durch Dritte fr 
deren Zwecke die Rechte der Inhaber verletzen kann.

Haftungsausschluss

Wir haben den Inhalt der Druckschrift auf bereinstimmung mit der beschriebenen Hard- und Software geprft. 
Dennoch knnen Abweichungen nicht ausgeschlossen werden, so dass wir fr die vollstndige bereinstimmung 
keine Gewhr bernehmen. Die Angaben in dieser Druckschrift werden regelmig berprft, notwendige 
Korrekturen sind in den nachfolgenden Auflagen enthalten.

Siemens AG
Digital Industries
Postfach 48 48
90026 NRNBERG
DEUTSCHLAND

Dokumentbestellnummer: A5E47437142A AB
 02/2020 nderungen vorbehalten

Copyright  Siemens AG 2019 - 2020.
Alle Rechte vorbehalten

Vorwort

SINUMERIK-Dokumentation 

Die SINUMERIK-Dokumentation ist in folgende Kategorien gegliedert:

 Allgemeine Dokumentation/Kataloge

 Anwender-Dokumentation

 Hersteller-/Service-Dokumentation

Weiterfhrende Informationen

Unter folgender Adresse (https://support.industry.siemens.com/cs/de/de/view/108464614) 
finden Sie Informationen zu den Themen:

 Dokumentation bestellen/Druckschriftenbersicht

 Weiterfhrende Links fr den Download von Dokumenten

 Dokumentation online nutzen (Handbcher/Informationen finden und durchsuchen)

Bei Fragen zur technischen Dokumentation (z. B. Anregungen, Korrekturen) senden Sie eine 
E-Mail an folgende Adresse (mailto:docu.motioncontrol@siemens.com).

mySupport/Dokumentation

Unter folgender Adresse (https://support.industry.siemens.com/My/ww/de/documentation) 
finden Sie Informationen, wie Sie Ihre Dokumentation auf Basis der Siemensinhalte individuell 
zusammenstellen und fr die eigene Maschinendokumentation anpassen.

Training

FAQs

SINUMERIK

Unter folgender Adresse (http://www.siemens.de/sitrain) finden Sie Informationen zu SITRAIN 
- dem Training von Siemens fr Produkte, Systeme und Lsungen der Antriebs- und 
Automatisierungstechnik.

Frequently Asked Questions finden Sie in den Service&Support-Seiten unter Produkt Support 
(https://support.industry.siemens.com/cs/de/de/ps/faq).

Informationen zu SINUMERIK finden Sie unter folgender Adresse (http://www.siemens.de/
sinumerik).

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

3

Vorwort

Zielgruppe

Nutzen

Standardumfang

Die vorliegende Druckschrift wendet sich an:

 Programmierer

 Projekteure

Das Programmierhandbuch befhigt die Zielgruppe, Programme und Software-Oberflchen 
zu entwerfen, zu schreiben, zu testen und Fehler zu beheben.

In dem vorliegenden Programmierhandbuch ist die Funktionalitt des Standardumfangs 
beschrieben. Ergnzungen oder nderungen, die durch den Maschinenhersteller 
vorgenommen werden, werden vom Maschinenhersteller dokumentiert.

Es knnen in der Steuerung weitere, in dieser Dokumentation nicht erluterte Funktionen 
ablauffhig sein. Es besteht jedoch kein Anspruch auf diese Funktionen bei der Neulieferung 
bzw. im Servicefall.

Ebenso enthlt diese Dokumentation aus Grnden der bersichtlichkeit nicht smtliche 
Detailinformationen zu allen Typen des Produkts und kann auch nicht jeden denkbaren Fall der 
Aufstellung, des Betriebs und der Instandhaltung bercksichtigen.

Hinweis zur Datenschutzgrundverordnung

Siemens beachtet die Grundstze des Datenschutzes, insbesondere die Gebote der 
Datenminimierung (privacy by design). Fr dieses Produkt bedeutet dies:

Das Produkt verarbeitet/speichert keine personenbezogenen Daten, lediglich technische 
Funktionsdaten (z. B. Zeitstempel). Verknpft der Anwender diese Daten mit anderen Daten 
(z. B. Schichtplne) oder speichert er personenbezogene Daten auf dem gleichen Medium 
(z. B. Festplatte) und stellt so einen Personenbezug her, hat er die Einhaltung der 
datenschutzrechtlichen Vorgaben selbst sicherzustellen.

Technical Support

Landesspezifische Telefonnummern fr technische Beratung finden Sie im Internet unter 
folgender Adresse (https://support.industry.siemens.com/sc/ww/de/sc/2090) im Bereich 
"Kontakt".

Um eine technische Frage zu stellen, nutzen Sie das Online-Formular im Bereich "Support 
Request". 

4

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Vorwort

Informationen zu Struktur und Inhalt der Dokumentation

Die Dokumentation zur NC-Programmierung verteilt sich auf zwei Hauptkapitel:

1. Grundlagen

Das Kapitel "Grundlagen" dient dem Maschinenfacharbeiter und setzt entsprechende 
Kenntnisse fr Bohr-, Frs- und Drehbearbeitungen voraus. An einfachen 
Programmierbeispielen werden die auch nach DIN 66025 bekannten Befehle und 
Anweisungen erlutert.

2. Arbeitsvorbereitung

Das Kapitel "Arbeitsvorbereitung" dient dem Technologen mit Kenntnissen ber die 
gesamten Programmiermglichkeiten. Die SINUMERIK-Steuerung ermglicht mit einer 
speziellen Programmiersprache die Programmierung eines komplexen 
Werkstckprogramms (z. B. Freiformflchen, Kanalkoordinierung, ...) und erleichtert dem 
Technologen eine aufwendige Programmierung.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

5

Vorwort

6

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Inhaltsverzeichnis

Vorwort .........................................................................................................................................................3

1

Grundlegende Sicherheitshinweise ............................................................................................................21

1.1

1.2

1.3

Allgemeine Sicherheitshinweise.............................................................................................21

Gewhrleistung und Haftung fr Applikationsbeispiele..........................................................22

Security-Hinweise ..................................................................................................................23

2

Grundlagen.................................................................................................................................................25

2.1
2.1.1
2.1.1.1
2.1.1.2
2.1.1.3
2.1.1.4
2.1.1.5
2.1.2
2.1.3
2.1.4
2.1.4.1
2.1.4.2
2.1.4.3
2.1.4.4
2.1.4.5
2.1.4.6

2.2
2.2.1
2.2.2
2.2.2.1
2.2.2.2
2.2.2.3
2.2.2.4
2.2.2.5

2.3
2.3.1
2.3.2
2.3.3
2.3.4
2.3.4.1
2.3.4.2
2.3.4.3

2.4
2.4.1
2.4.1.1
2.4.1.2

Geometrische Grundlagen .....................................................................................................25
Werkstck-Positionen ............................................................................................................25
Bezugssystem der Positionsangaben ....................................................................................25
Kartesische Koordinaten ........................................................................................................25
Polarkoordinaten ....................................................................................................................27
Absolutma ............................................................................................................................28
Kettenma..............................................................................................................................30
Arbeitsebenen ........................................................................................................................31
Nullpunkte und Bezugspunkte ...............................................................................................32
Koordinatensysteme ..............................................................................................................34
Maschinen-Koordinatensystem (MKS)...................................................................................34
Basis-Koordinatensystem (BKS)............................................................................................36
Basis-Nullpunktsystem (BNS) ................................................................................................37
Einstellbares Nullpunktsystem (ENS) ....................................................................................38
Werkstck-Koordinatensystem (WKS)...................................................................................39
Wie hngen die verschiedenen Koordinatensysteme zusammen?  ......................................40

Grundlagen der NC-Programmierung ....................................................................................41
Benennung eines NC-Programms .........................................................................................41
Aufbau und Inhalte eines NC-Programms .............................................................................42
Stze und Satzkomponenten .................................................................................................42
Satzregeln ..............................................................................................................................45
Wertzuweisungen...................................................................................................................46
Kommentare...........................................................................................................................46
Ausblenden von Stzen .........................................................................................................47

Anlegen eines NC-Programms ..............................................................................................49
Grundstzliches Vorgehen.....................................................................................................49
Verfgbare Zeichen................................................................................................................50
Programmkopf........................................................................................................................51
Programmbeispiele ................................................................................................................52
Beispiel 1: Erste Programmierschritte....................................................................................52
Beispiel 2: NC-Programm zum Drehen..................................................................................53
Beispiel 3: NC-Programm zum Frsen ..................................................................................55

Werkzeugwechsel ..................................................................................................................58
Werkzeugwechsel bei aktiver Werkzeugverwaltung ..............................................................59
Werkzeugwechsel bei aktiver WZV mit T-Befehl ...................................................................59
Werkzeugwechsel bei aktiver WZV mit M6............................................................................60

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

7

Inhaltsverzeichnis

2.4.2
2.4.2.1
2.4.2.2
2.4.3

2.5
2.5.1
2.5.2
2.5.3
2.5.4
2.5.5
2.5.5.1
2.5.5.2
2.5.5.3
2.5.5.4
2.5.5.5
2.5.5.6
2.5.6
2.5.7
2.5.8

2.6
2.6.1
2.6.2
2.6.3

2.6.4
2.6.5

2.7
2.7.1
2.7.2
2.7.3
2.7.4
2.7.5
2.7.6
2.7.7
2.7.8
2.7.9
2.7.10
2.7.11
2.7.12

2.8
2.8.1

2.8.2

2.8.3
2.8.4
2.8.4.1
2.8.4.2
2.8.4.3
2.8.4.4

Werkzeugwechsel bei nicht aktiver Werkzeugverwaltung .....................................................62
Werkzeugwechsel bei nicht aktiver WZV mit T-Nummer .......................................................62
Werkzeugwechsel bei nicht aktiver WZV mit M6 ...................................................................62
Verhalten bei fehlerhafter T-Programmierung........................................................................64

Werkzeugkorrekturen.............................................................................................................65
Programmierte Kontur und Werkzeugbahn............................................................................65
Werkzeuglngenkorrektur ......................................................................................................65
Werkzeugradiuskorrektur .......................................................................................................66
Werkzeug-Korrekturspeicher .................................................................................................67
Werkzeugtypen ......................................................................................................................68
Werkzeugtypnummer und Werkzeuggruppen........................................................................68
Frswerkzeuge.......................................................................................................................69
Bohrer ....................................................................................................................................71
Schleifwerkzeuge ...................................................................................................................72
Drehwerkzeuge ......................................................................................................................74
Sonderwerkzeuge ..................................................................................................................76
Werkzeugkorrekturen aktivieren/deaktivieren (D, D0) ...........................................................78
Werkzeugkorrekturen unterdrcken (SUPD) .........................................................................80
Programmierbarer Werkzeugkorrektur-Offset (TOFFL, TOFF, TOFFR, TOFFLR)................82

Spindelbewegung...................................................................................................................88
Spindeldrehzahl (S), Spindeldrehrichtung (M3, M4, M5) .......................................................88
Werkzeug-Schnittgeschwindigkeit (SVC)...............................................................................91
Konstante Schnittgeschwindigkeit (G96/G961/G962, G97/G971/G972, G973, LIMS, 
SCC) ......................................................................................................................................97
Konstante Scheibenumfangsgeschwindigkeit ein-/ausschalten (GWPSON, GWPSOF).....102
Programmierbare Spindeldrehzahlbegrenzung (G25, G26) ................................................103

Vorschubregelung ................................................................................................................105
Vorschub (G93, G94, G95, F, FGROUP, FL, FGREF) ........................................................105
Positionierachsen verfahren (POS, POSA, POSP, FA, WAITP, WAITMC) .........................113
Lagegeregelter Spindelbetrieb (SPCON, SPCOF) ..............................................................117
Spindeln positionieren (SPOS, SPOSA, M19, M70, WAITS)...............................................118
Vorschub fr Positionierachsen/Spindeln (FA, FPR, FPRAON, FPRAOF)..........................123
Programmierbare Vorschubkorrektur (OVR, OVRRAP, OVRA) ..........................................126
Programmierbare Beschleunigungskorrektur (ACC)............................................................127
Vorschub mit Handradberlagerung (FD, FDA)...................................................................128
Vorschuboptimierung bei gekrmmten Bahnstcken (CFTCP, CFC, CFIN) .......................132
Mehrere Vorschubwerte in einem Satz (F, ST, SR, FMA, STA, SRA).................................134
Satzweiser Vorschub (FB) ...................................................................................................137
Zahnvorschub (G95 FZ).......................................................................................................138

Geometrie-Einstellungen......................................................................................................144
Einstellbare Nullpunktverschiebung (G54 ... G57, G505 ... G599, G53, G500, SUPA, 
G153) ...................................................................................................................................144
Einstellbare Nullpunktverschiebung (G54 ... G57, G505 ... G599, G53, G500, SUPA, 
G153): Weitere Informationen..............................................................................................145
Wahl der Arbeitsebene (G17/G18/G19)...............................................................................146
Maangaben ........................................................................................................................149
Absolutmaangabe (G90, AC).............................................................................................150
Kettenmaangabe (G91, IC)................................................................................................152
Absolut- und Kettenmaangabe beim Drehen und Frsen (G90/G91)................................156
Absolutmaangabe fr Rundachsen (DC, ACP, ACN) ........................................................157

8

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Inhaltsverzeichnis

2.8.4.5
2.8.4.6

2.8.4.7

2.8.5

2.9
2.9.1
2.9.2
2.9.3
2.9.3.1
2.9.3.2
2.9.4
2.9.4.1
2.9.4.2
2.9.4.3
2.9.5
2.9.6
2.9.6.1
2.9.6.2
2.9.6.3
2.9.6.4

2.9.6.5
2.9.6.6
2.9.6.7
2.9.7
2.9.8
2.9.8.1
2.9.8.2
2.9.8.3
2.9.8.4
2.9.8.5
2.9.9
2.9.9.1
2.9.9.2
2.9.9.3
2.9.9.4

2.9.9.5
2.9.10
2.9.10.1
2.9.10.2
2.9.10.3
2.9.10.4
2.9.10.5
2.9.10.6
2.9.10.7
2.9.11
2.9.11.1
2.9.12

Masystem inch/metrisch (G70/G71, G700/G710)..............................................................159
Kanalspezifische Durchmesser-/Radius-Programmierung (DIAMON, DIAM90, 
DIAMOF, DIAMCYCOF) ......................................................................................................162
Achsspezifische Durchmesser-/Radius-Programmierung (DIAMONA, DIAM90A, 
DIAMOFA, DIACYCOFA, DIAMCHANA, DIAMCHAN, DAC, DIC, RAC, RIC) ....................164
Lage des Werkstcks beim Drehen .....................................................................................168

Wegbefehle ..........................................................................................................................170
Allgemeine Informationen zu den Wegbefehlen ..................................................................170
Fahrbefehle mit kartesischen Koordinaten (G0, G1, G2, G3, X..., Y..., Z...) ........................172
Fahrbefehle mit Polarkoordinaten ........................................................................................173
Bezugspunkt der Polarkoordinaten (G110, G111, G112) ....................................................173
Fahrbefehle mit Polarkoordinaten (G0, G1, G2, G3, AP, RP)..............................................175
Eilgangbewegungen.............................................................................................................179
Eilgang aktivieren (G0).........................................................................................................179
Lineare Interpolation fr Eilgangbewegungen ein-/ausschalten  (RTLION, RTLIOF) ..........180
Toleranzen fr Eilgangbewegungen anpassen (STOLF, CTOLG0, OTOLG0)....................182
Geradeninterpolation (G1) ...................................................................................................186
Kreisinterpolation .................................................................................................................188
bersicht ..............................................................................................................................188
Kreisinterpolation mit Mittelpunkt und Endpunkt (G2/G3, X... Y... Z..., I... J... K...)..............189
Kreisinterpolation mit Radius und Endpunkt (G2/G3, X... Y... Z..., CR) ...............................192
Kreisinterpolation mit ffnungswinkel und Endpunkt / Mittelpunkt (G2/G3, X... Y... Z... / 
I... J... K..., AR).....................................................................................................................194
Kreisinterpolation mit Polarkoordinaten (G2/G3, AP, RP)....................................................196
Kreisinterpolation mit Zwischen- und Endpunkt (CIP, X... Y... Z..., I1... J1... K1...) .............197
Kreisinterpolation mit tangentialem bergang (CT, X... Y... Z...) .........................................200
Schraubenlinien-Interpolation (G2/G3, TURN) ....................................................................204
Konturzge...........................................................................................................................206
Konturzug-Programmierung.................................................................................................206
Konturzge: Eine Gerade.....................................................................................................207
Konturzge: Zwei Geraden ..................................................................................................209
Konturzge: Drei Geraden ...................................................................................................212
Konturzge: Endpunktprogrammierung mit Winkel..............................................................215
Gewindeschneiden...............................................................................................................216
Gewindeschneiden mit konstanter Steigung (G33, SF) .......................................................216
Gewindeschneiden mit zu- oder abnehmender Steigung (G34, G35) .................................223
Programmierter Einlauf- und Auslaufweg bei G33, G34 und G35 (DITS, DITE) .................224
Schnellrckzug whrend Gewindeschneiden (LFON, LFOF, DILF, ALF, LFTXT, LFWP, 
LFPOS, POLF, POLFMASK, POLFMLIN) ...........................................................................226
Ballige Gewinde (G335, G336) ............................................................................................230
Gewindebohren ohne Ausgleichsfutter ................................................................................235
Gewindebohren ohne Ausgleichsfutter und Rckzugsbewegung  (G331, G332)................235
Beispiel: Gewindebohren mit G331 / G332..........................................................................236
Beispiel: Programmierte Bohrdrehzahl in der aktuellen Getriebestufe ausgeben................237
Beispiel: Anwendung des zweiten Getriebestufen-Datensatzes..........................................237
Beispiel: Keine Drehzahlprogrammierung, berwachung der Getriebestufe.......................238
Beispiel: Getriebestufenwechsel nicht mglich, berwachung der Getriebestufe ...............238
Beispiel: Programmierung ohne SPOS................................................................................239
Gewindebohren mit Ausgleichsfutter ...................................................................................239
Gewindebohren mit Ausgleichsfutter und Rckzugsbewegung (G63).................................239
Fase, Rundung (CHF, CHR, RND, RNDM, FRC, FRCM)....................................................240

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

9

Inhaltsverzeichnis

2.10
2.10.1
2.10.2
2.10.3
2.10.4
2.10.4.1

2.10.4.2
2.10.5

2.10.6
2.10.7
2.10.8

2.11
2.11.1
2.11.2

2.12
2.12.1
2.12.2
2.12.3
2.12.4
2.12.5
2.12.6
2.12.7
2.12.8
2.12.9
2.12.10
2.12.11
2.12.12
2.12.13

2.13
2.13.1

2.14
2.14.1
2.14.2
2.14.3
2.14.3.1
2.14.3.2
2.14.4
2.14.5
2.14.6
2.14.7
2.14.8

2.15
2.15.1
2.15.1.1
2.15.1.2
2.15.1.3
2.15.1.4

Werkzeugradiuskorrekturen .................................................................................................246
Werkzeugradiuskorrektur (G40, G41, G42, OFFN) .............................................................246
Kontur anfahren und verlassen (NORM, KONT, KONTC, KONTT).....................................255
Korrektur an den Auenecken (G450, G451, DISC)............................................................262
Weiches An- und Abfahren ..................................................................................................265
An- und Abfahren (G140 bis G143, G147, G148, G247, G248, G347, G348, G340, 
G341, DISR, DISCL, DISRP, FAD, PM, PR) .......................................................................265
An- und Abfahren mit erweiterten Abfahrstrategien (G460, G461, G462) ...........................276
Kollisionsberwachung ("Flaschenhalserkennung") ein-/ausschalten (CDON, CDOF, 
CDOF2)................................................................................................................................279
2 1/2 D-Werkzeugkorrektur (CUT2D, CUT2DD, CUT2DF, CUT2DFD) ...............................281
Werkzeugradiuskorrektur konstant halten (CUTCONON, CUTCONOF) .............................283
Werkzeuge mit relevanter Schneidenlage ...........................................................................285

Bahnfahrverhalten................................................................................................................288
Genauhalt (G60, G9, G601, G602, G603) ...........................................................................288
Bahnsteuerbetrieb (G64, G641, G642, G643, G644, G645, ADIS, ADISPOS) ...................290

Koordinatentransformationen (Frames) ...............................................................................300
Frames .................................................................................................................................300
Frame-Anweisungen ............................................................................................................302
Programmierbare Nullpunktverschiebung (TRANS, ATRANS)............................................305
Programmierbare Nullpunktverschiebung (G58, G59).........................................................309
Programmierbare Drehung (ROT, AROT, RPL) ..................................................................311
Programmierbare Framedrehungen mit Raumwinkeln (ROTS, AROTS, CROTS)..............317
Programmierbarer Mastabsfaktor (SCALE, ASCALE).......................................................320
Programmierbare Spiegelung (MIRROR, AMIRROR) .........................................................323
Frame-Erzeugung nach Werkzeugausrichtung (TOFRAME, TOROT, PAROT)..................328
Frame abwhlen (G53, G153, SUPA, G500).......................................................................331
Programmierung: berlagerungen achsspezifisch abwhlen (CORROF)...........................332
Additive Nullpunktverschiebungen abwhlen (DRFOF).......................................................334
Schleifspezifische Nullpunktverschiebungen (GFRAME0, GFRAME1 ... GFRAME100).....336

Hilfsfunktionsausgaben ........................................................................................................337
M-Funktionen .......................................................................................................................340

Ergnzende Befehle.............................................................................................................344
Meldung ausgeben (MSG) ...................................................................................................344
Zeichenkette in BTSS-Variable schreiben (WRTPR)...........................................................345
Arbeitsfeldbegrenzung .........................................................................................................347
Arbeitsfeldbegrenzung im BKS (G25/G26, WALIMON, WALIMOF) ....................................347
Arbeitsfeldbegrenzung im WKS/ENS (WALCS0 ... WALCS10)...........................................350
Referenzpunktfahren (G74) .................................................................................................353
Festpunkt anfahren (G75) ....................................................................................................354
Fahren auf Festanschlag (FXS, FXST, FXSW) ...................................................................358
Verweilzeit (G4)....................................................................................................................363
Interner Vorlaufstopp............................................................................................................365

Sonstige Informationen ........................................................................................................366
Achsen .................................................................................................................................366
Achsen (bersicht)...............................................................................................................366
Hauptachsen/Geometrieachsen...........................................................................................366
Zusatzachsen.......................................................................................................................368
Hauptspindel, Masterspindel................................................................................................368

10

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Inhaltsverzeichnis

2.15.1.5
2.15.1.6
2.15.1.7
2.15.1.8
2.15.1.9
2.15.1.10
2.15.1.11
2.15.2
2.15.3
2.15.4
2.15.5
2.15.6
2.15.7

Maschinenachsen ................................................................................................................368
Kanalachsen ........................................................................................................................369
Bahnachsen .........................................................................................................................369
Positionierachsen.................................................................................................................369
Synchronachsen ..................................................................................................................370
Kommandoachsen ...............................................................................................................371
PLC-Achsen .........................................................................................................................371
Vom Fahrbefehl zur Maschinenbewegung...........................................................................371
Wegberechnung...................................................................................................................371
Adressen ..............................................................................................................................372
Namen..................................................................................................................................374
Konstanten ...........................................................................................................................376
Operatoren und Rechenfunktionen  .....................................................................................378

3

Arbeitsvorbereitung ..................................................................................................................................381

3.1
3.1.1
3.1.1.1
3.1.1.2
3.1.1.3
3.1.1.4
3.1.1.5
3.1.1.6
3.1.1.7
3.1.1.8
3.1.1.9
3.1.1.10
3.1.1.11
3.1.1.12
3.1.1.13
3.1.1.14
3.1.1.15

3.1.1.16
3.1.2
3.1.2.1
3.1.2.2
3.1.2.3
3.1.2.4
3.1.3
3.1.3.1
3.1.3.2
3.1.3.3
3.1.3.4
3.1.3.5
3.1.4
3.1.4.1
3.1.4.2
3.1.4.3
3.1.4.4
3.1.4.5
3.1.4.6

Flexible NC-Programmierung...............................................................................................381
Variablen ..............................................................................................................................381
Systemdaten ........................................................................................................................382
Vordefinierte Anwendervariablen: Kanalspezifische Rechenparameter (R) ........................384
Vordefinierte Anwendervariablen: Globale Rechenparameter (RG) ....................................386
Definition von Anwendervariablen (DEF) .............................................................................387
Redefinition von Systemdaten, Anwenderdaten und NC-Sprachbefehlen (REDEF) ...........393
Attribut: Initialisierungswert ..................................................................................................396
Attribut: Grenzwerte (LLI, ULI) .............................................................................................399
Attribut: Physikalische Einheit (PHU) ...................................................................................401
Attribut: Zugriffsrechte (APR, APW, APRP, APWP, APRB, APWB) ....................................403
bersicht definierbarer und redefinierbarer Attribute ...........................................................407
Definition und Initialisierung von Feldvariablen (DEF, SET, REP).......................................408
Datentypen...........................................................................................................................414
Minimum, Maximum und Bereich von Variablen (MINVAL, MAXVAL, BOUND) .................415
Vorhandensein einer Variablen prfen (ISVAR) ..................................................................416
Attributwerte/Datentyp lesen (GETVARPHU, GETVARAP, GETVARLIM, GETVARDIM, 
GETVARDFT, GETVARTYP) ..............................................................................................418
Mgliche Typenkonvertierungen ..........................................................................................423
Indirekte Programmierung....................................................................................................424
Indirekte Programmierung von Adressen.............................................................................424
Indirekte Programmierung von G-Befehlen..........................................................................427
Indirekte Programmierung von Positionsattributen (GP)......................................................428
Indirekte Programmierung von Teileprogrammzeilen (EXECSTRING) ...............................430
Operationen .........................................................................................................................431
Rechenfunktionen ................................................................................................................431
Vergleichs- und logische Operationen .................................................................................433
Prioritt der Operationen......................................................................................................435
Genauigkeitskorrektur bei Vergleichsfehlern (TRUNC) .......................................................436
Aufrunden (ROUNDUP) .......................................................................................................437
Stringoperationen.................................................................................................................438
Typenkonvertierung nach STRING (AXSTRING) ................................................................439
Typenkonvertierung von STRING (NUMBER, ISNUMBER, AXNAME)...............................440
Verkettung von Strings (<<) .................................................................................................441
Wandlung in Klein-/Grobuchstaben (TOLOWER, TOUPPER) ..........................................442
Lnge eines Strings bestimmen (STRLEN) .........................................................................443
Zeichen/String in String suchen (INDEX, RINDEX, MINDEX, MATCH) ..............................443

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

11

Inhaltsverzeichnis

3.1.4.7
3.1.4.8
3.1.4.9
3.1.5
3.1.5.1
3.1.5.2
3.1.5.3
3.1.6
3.1.7
3.1.7.1
3.1.7.2
3.1.7.3
3.1.7.4
3.1.7.5
3.1.7.6
3.1.8

3.1.9

3.2
3.2.1
3.2.1.1
3.2.1.2
3.2.1.3
3.2.1.4
3.2.1.5
3.2.1.6
3.2.2
3.2.2.1
3.2.2.2
3.2.2.3
3.2.2.4
3.2.2.5
3.2.2.6
3.2.2.7
3.2.2.8
3.2.2.9
3.2.2.10
3.2.2.11
3.2.3
3.2.3.1
3.2.3.2
3.2.3.3
3.2.3.4
3.2.3.5
3.2.3.6

3.2.3.7
3.2.3.8
3.2.3.9
3.2.3.10

Auswahl eines Teilstrings (SUBSTR)...................................................................................444
Lesen und Schreiben von einzelnen Zeichen ......................................................................445
String formatieren (SPRINT) ................................................................................................447
Programmsprnge und -verzweigungen ..............................................................................455
Rcksprung auf Programmanfang (GOTOS).......................................................................455
Programmsprnge auf Sprungmarken (GOTOB, GOTOF, GOTO, GOTOC)......................456
Programmverzweigung (CASE ... OF ... DEFAULT ...)........................................................459
Programmteilwiederholung (REPEAT, REPEATB, ENDLABEL, P).....................................461
Kontrollstrukturen .................................................................................................................466
Bedingte Anweisung und Verzweigung (IF, ELSE, ENDIF) .................................................468
Endlos-Programmschleife (LOOP, ENDLOOP) ...................................................................470
Zhlschleife (FOR ... TO ..., ENDFOR)................................................................................471
Programmschleife mit Bedingung am Schleifenanfang (WHILE, ENDWHILE)....................472
Programmschleife mit Bedingung am Schleifenende (REPEAT, UNTIL) ............................473
Programmbeispiel mit verschachtelten Kontrollstrukturen ...................................................473
Kanalbergreifende Programmkoordinierung (INIT, START, WAITM, WAITMC, WAITE, 
SETM, CLEARM) .................................................................................................................474
Makrotechnik (DEFINE ... AS) .............................................................................................480

Unterprogrammtechnik.........................................................................................................483
Allgemeines..........................................................................................................................483
Unterprogramm ....................................................................................................................483
Unterprogrammnamen .........................................................................................................484
Schachtelung von Unterprogrammen ..................................................................................485
Suchpfad ..............................................................................................................................486
Formal- und Aktualparameter ..............................................................................................487
Parameterbergabe .............................................................................................................487
Definition eines Unterprogramms.........................................................................................489
Unterprogramm ohne Parameterbergabe ..........................................................................489
Unterprogramm mit Parameterbergabe Call-by-Value (PROC).........................................490
Unterprogramm mit Parameterbergabe Call-by-Reference (PROC, VAR) ........................492
Modale G-Funktionen sichern (SAVE) .................................................................................494
Einzelsatzbearbeitung unterdrcken (SBLOF, SBLON) ......................................................495
Aktuelle Satzanzeige unterdrcken (DISPLOF, DISPLON, ACTBLOCNO).........................500
Unterprogramme mit Vorbereitung kennzeichnen (PREPRO).............................................503
Unterprogrammrcksprung M17 ..........................................................................................504
Unterprogrammrcksprung RET ..........................................................................................505
Parametrierbarer Unterprogrammrcksprung (RET ...) .......................................................506
Parametrierbarer Unterprogrammrcksprung (RETB ...) .....................................................512
Aufruf eines Unterprogramms ..............................................................................................516
Unterprogrammaufruf ohne Parameterbergabe.................................................................516
Unterprogrammaufruf mit Parameterbergabe (EXTERN) ..................................................518
Anzahl der Programmwiederholungen (P) ...........................................................................520
Modaler Unterprogrammaufruf (MCALL) .............................................................................521
Indirekter Unterprogrammaufruf (CALL) ..............................................................................524
Indirekter Unterprogrammaufruf mit Angabe des auszufhrenden Programmteils (CALL 
BLOCK ... TO ...)..................................................................................................................525
Indirekter Aufruf eines in ISO-Sprache programmierten Programms (ISOCALL)................526
Unterprogramm mit Pfadangabe und Parametern aufrufen (PCALL) ..................................527
Suchpfad bei Unterprogrammaufrufen erweitern (CALLPATH) ...........................................527
Externes Unterprogramm abarbeiten (EXTCALL) ...............................................................529

3.3

Interruptroutine (ASUP)........................................................................................................533

12

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Inhaltsverzeichnis

3.3.1
3.3.2
3.3.3
3.3.4
3.3.5
3.3.6
3.3.7
3.3.8

3.4
3.4.1
3.4.1.1
3.4.1.2
3.4.1.3
3.4.1.4
3.4.1.5
3.4.2

3.5
3.5.1
3.5.2
3.5.3
3.5.4
3.5.5

3.6
3.6.1
3.6.2
3.6.3

3.7
3.7.1
3.7.2
3.7.3
3.7.4
3.7.5
3.7.6
3.7.7

3.7.8
3.7.9

3.8
3.8.1
3.8.1.1

3.8.2
3.8.2.1
3.8.2.2
3.8.2.3
3.8.2.4
3.8.3

Funktion einer Interruptroutine .............................................................................................533
Interruptroutine erstellen ......................................................................................................534
Interruptroutine zuordnen und starten (SETINT, PRIO, BLSYNC) ......................................534
Zuordnung einer Interruptroutine deaktivieren/reaktivieren (DISABLE, ENABLE)...............537
Zuordnung einer Interruptroutine lschen (CLRINT)............................................................537
Schnellabheben von der Kontur (SETINT LIFTFAST, ALF) ................................................538
Verfahrrichtung beim Schnellabheben von der Kontur  .......................................................540
Bewegungsablauf bei Interruptroutinen ...............................................................................543

Datei- und Programmverwaltung .........................................................................................545
Programmspeicher...............................................................................................................545
Programmspeicher im NCK .................................................................................................545
Externe Programmspeicher .................................................................................................547
Adressierung von Dateien des Programmspeichers............................................................549
Suchpfad bei Unterprogrammaufruf.....................................................................................554
Abfrage von Pfad und Dateiname ........................................................................................555
Arbeitsspeicher (CHANDATA, COMPLETE, INITIAL) .........................................................556

Dateihandling .......................................................................................................................560
Datei schreiben (WRITE) .....................................................................................................560
Datei lschen (DELETE) ......................................................................................................564
Zeilen in Datei lesen (READ) ...............................................................................................565
Vorhandensein einer Datei prfen (ISFILE) .........................................................................567
Datei-Informationen auslesen (FILEDATE, FILETIME, FILESIZE, FILESTAT, 
FILEINFO)............................................................................................................................568

Schutzbereiche ....................................................................................................................570
Schutzbereiche definieren (CPROTDEF, NPROTDEF).......................................................570
Schutzbereiche aktivieren/deaktivieren (CPROT, NPROT) .................................................573
berprfung auf Schutzbereichsverletzung, Arbeitsfeldbegrenzung und Software-
Endschalter (CALCPOSI).....................................................................................................577

Spezielle Wegbefehle ..........................................................................................................587
Codierte Positionen anfahren (CAC, CIC, CDC, CACP, CACN) .........................................587
NC-Satz-Kompression ein-/ausschalten (COMPCAD, COMPSURF, COMPOF) ................587
Polynom-Interpolation (POLY, POLYPATH, PO, PL) ..........................................................588
Einstellbarer Bahnbezug (SPATH, UPATH) ........................................................................594
Kanalspezifisches Messen (MEAS, MEAW) ........................................................................596
Achsspezifisches Messen (MEASA, MEAWA, MEAC) (Option) ..........................................598
Spezielle Funktionen fr den OEM-Anwender (OMA1 ... OMA5, OEMIPO1, OEMIPO2, 
G810 ... G829) .....................................................................................................................607
Vorschubreduzierung mit Eckenverzgerung (FENDNORM, G62, G621)  .........................608
Programmierbares Bewegungsendekriterium (FINEA, COARSEA, IPOENDA, 
IPOBRKA, ADISPOSA)........................................................................................................609

Koordinatentransformationen (Frames) ...............................................................................612
Koordinatentransformation ber Framevariable...................................................................612
Vordefinierte Framevariable ($P_CHBFRAME, $P_IFRAME, $P_PFRAME, 
$P_ACTFRAME) ..................................................................................................................614
Wertzuweisungen an Frames ..............................................................................................617
Direkte Werte zuweisen (Achswert, Winkel, Mastab) ........................................................617
Framekomponenten lesen und verndern (TR, FI, RT, SC, MI) ..........................................619
Rechnen mit Frames............................................................................................................621
Definition von Framevariablen (DEF FRAME) .....................................................................622
Grob- und Feinverschiebung (CTRANS, CFINE).................................................................623

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

13

Inhaltsverzeichnis

3.8.4
3.8.5
3.8.6
3.8.7
3.8.8
3.8.8.1
3.8.8.2

3.9
3.9.1
3.9.1.1
3.9.1.2
3.9.1.3
3.9.2
3.9.2.1
3.9.2.2
3.9.2.3
3.9.2.4
3.9.2.5
3.9.2.6
3.9.2.7

3.9.2.8

3.9.2.9

3.9.3
3.9.4

3.9.5
3.9.5.1
3.9.5.2
3.9.5.3
3.9.5.4
3.9.6
3.9.7
3.9.8
3.9.8.1
3.9.8.2
3.9.8.3
3.9.9
3.9.9.1
3.9.9.2
3.9.9.3
3.9.9.4
3.9.9.5
3.9.9.6
3.9.10
3.9.11

3.10
3.10.1
3.10.2

Externe Nullpunktverschiebung ($AA_ETRANS).................................................................624
Istwertsetzen mit Verlust des Referenzierstatus (PRESETON)...........................................625
Istwertsetzen ohne Verlust des Referenzierstatus (PRESETONS) .....................................627
Frame-Berechnung aus 3 Messpunkten im Raum (MEAFRAME).......................................628
Globale Frames....................................................................................................................632
Kanalspezifische Frames ($P_CHBFR, $P_UBFR) .............................................................633
Im Kanal wirksame Frames..................................................................................................633

Transformationen .................................................................................................................639
Allgemeine Programmierung der Transformationsarten ......................................................639
Allgemeine Programmierung der Transformationsarten ......................................................639
Orientierungsbewegungen bei den Transformationen .........................................................641
bersicht der Orientierungstransformation TRAORI............................................................645
Drei-, Vier- und Fnf-Achs-Transformation (TRAORI) .........................................................646
Allgemeine Zusammenhnge Kardanischer Werkzeugkopf ................................................646
Drei, Vier, und Fnf- Achs-Transformation (TRAORI) .........................................................649
Varianten der Orientierungsprogrammierung und Grundstellung (ORIRESET) ..................651
Programmierung der Werkzeugorientierung (A..., B..., C..., LEAD, TILT) ...........................652
Stirnfrsen (A4, B4, C4, A5, B5, C5)....................................................................................658
Bezug der Orientierungsachsen (ORIWKS, ORIMKS) ........................................................659
Programmierung der Orientierungsachsen (ORIAXES, ORIVECT, ORIEULER, 
ORIRPY, ORIRPY2, ORIVIRT1, ORIVIRT2) .......................................................................661
Orientierungsprogrammierung entlang einer Kegelmantelflche (ORIPLANE, 
ORICONCW, ORICONCCW, ORICONTO, ORICONIO) .....................................................663
Orientierungsvorgabe zweier Kontaktpunke (ORICURVE, PO[XH]=, PO[YH]=, 
PO[ZH]=) ..............................................................................................................................666
Orientierungspolynome (PO[Winkel], PO[Koordinate]) ........................................................668
Drehungen der Werkzeugorientierung (ORIROTA, ORIROTR, ORIROTT, ORIROTC, 
THETA) ................................................................................................................................670
Bahnrelative Orientierungen ................................................................................................672
Orientierungsarten relativ zur Bahn .....................................................................................672
Bahnrelative Drehung der Werkzeugorientierung (ORIPATH, ORIPATHS, Drehwinkel) ....673
Bahnrelative Interpolation der Werkzeugdrehung (ORIROTC, THETA) ..............................675
Glttung des Orientierungsverlaufs (ORIPATHS A8=, B8=, C8=) .......................................677
Komprimierung der Orientierung (COMPCAD, COMPSURF) .............................................678
Glttung des Orientierungsverlaufs ein-/ausschalten (ORISON, ORISOF) .........................681
Kinematische Transformation ..............................................................................................682
Stirnseitentransformation einschalten (TRANSMIT) ............................................................682
Zylindermanteltransformation einschalten (TRACYL)..........................................................682
Schrges Einstechen an Schleifmaschinen (G5, G7) ..........................................................685
Kartesisches PTP-Fahren ....................................................................................................687
Kartesisches PTP-Fahren ein-/ausschalten (PTP, PTPG0, PTPWOC, CP)........................687
Stellung der Gelenke angeben (STAT) ................................................................................688
Vorzeichen der Achswinkel angeben (TU)...........................................................................692
Beispiel 1: PTP-Fahren eines 6-Achs-Roboters mit ROBX-Transformation ........................695
Beispiel 2: PTP-Fahren bei generischer 5-Achs-Transformation.........................................696
Beispiel 3: PTPG0 und TRANSMIT .....................................................................................697
Randbedingungen bei der Anwahl einer Transformation.....................................................698
Transformation abwhlen (TRAFOOF) ................................................................................700

Kinematische Ketten ............................................................................................................701
Lschen von Komponenten (DELOBJ) ................................................................................701
Indexermittlung per Namen (NAMETOINT) .........................................................................704

14

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Inhaltsverzeichnis

3.11
3.11.1
3.11.2
3.11.3
3.11.4

3.12
3.12.1
3.12.2

Kollisionsvermeidung mit kinematischen Ketten ..................................................................705
Prfen auf Kollisionspaar (COLLPAIR) ................................................................................705
Neuberechnung des Maschinenmodells der Kollisionsvermeidung anfordern (PROTA).....706
Schutzbereichszustand setzen (PROTS).............................................................................707
Abstandsbestimmung zweier Schutzbereiche (PROTD) .....................................................708

Transformationen mit kinematischen Ketten........................................................................710
Transformation einschalten (TRAFOON).............................................................................710
Orientierungstransformation nach Maschinenvermessung modifizieren (CORRTRAFO)....711

3.13.3.4
3.13.4
3.13.4.1
3.13.4.2
3.13.4.3
3.13.4.4
3.13.5
3.13.5.1

3.13
3.13.1
3.13.2
3.13.2.1
3.13.2.2
3.13.2.3
3.13.3
3.13.3.1
3.13.3.2
3.13.3.3

Werkzeugkorrekturen...........................................................................................................719
Korrekturspeicher.................................................................................................................719
Additive Korrekturen.............................................................................................................721
Additive Korrekturen anwhlen (DL) ....................................................................................721
Verschlei- und Einrichtewerte festlegen ($TC_SCPxy[t,d], $TC_ECPxy[t,d]) ....................723
Additive Korrekturen lschen (DELDL) ................................................................................723
Werkzeugkorrektur - Sonderbehandlung .............................................................................724
Werkzeuglngen spiegeln....................................................................................................726
Vorzeichenbewertung Verschlei ........................................................................................726
Koordinatensystem der aktiven Bearbeitung (TOWSTD, TOWMCS, TOWWCS, 
TOWBCS, TOWTCS, TOWKCS).........................................................................................727
Werkzeuglnge und Ebenenwechsel...................................................................................730
Online-Werkzeugkorrektur ...................................................................................................731
Polynom-Funktion definieren (FCTDEF)..............................................................................731
Online-Werkzeugkorrektur schreiben, kontinuierlich (PUTFTOCF) .....................................733
Online-Werkzeugkorrektur schreiben, diskret (PUTFTOC)..................................................734
Online-Werkzeugkorrektur ein-/ausschalten (FTOCON/FTOCOF)......................................734
3D-Werkzeugradiuskorrektur ...............................................................................................735
3D-Werkzeugradiuskorrektur fr das 3D-Umfangsfrsen anwhlen (CUT3DC, 
CUT3DCD, ISD)...................................................................................................................735
3D-Werkzeugradiuskorrektur fr das 3D-Stirnfrsen anwhlen (CUT3DF, CUT3DFS, 
CUT3DFF, CUT3DFD).........................................................................................................739
3D-Umfangsfrsen unter Bercksichtigung einer Begrenzungsflche (CUT3DCC, 
CUT3DCCD) ........................................................................................................................745
Werkzeugorientierung (ORIC, ORID, OSOF, OSC, OSS, OSSE, ORIS, OSD, OST) .........750
Freie D-Nummernvergabe, Schneidennummer ...................................................................756
Freie D-Nummernvergabe, Schneidennummer (Adresse CE).............................................756
Freie D-Nummernvergabe: D-Nummern prfen (CHKDNO)................................................756
Freie D-Nummernvergabe: D-Nummern umbenennen (GETDNO, SETDNO) ....................757
Freie D-Nummernvergabe: T-Nummer zur vorgegebenen D-Nummer ermitteln 
(GETACTTD) .......................................................................................................................758
Freie D-Nummernvergabe: D-Nummern ungltig setzen (DZERO).....................................758
Werkzeugtrgerkinematik ....................................................................................................759
Werkzeuglngenkorrektur fr orientierbare Werkzeugtrger (TCARR, TCOABS, 
TCOFR, TCOFRX, TCOFRY, TCOFRZ) .............................................................................764
Orientierbare Werkzeugtrger nach Maschinenvermessung modifizieren (CORRTC)........766
3.13.10
Online-Werkzeuglngenkorrektur (TOFFON, TOFFOF)......................................................770
3.13.11
3.13.12
Modifikation der Korrekturdaten bei drehbaren Werkzeugen...............................................772
3.13.12.1 Orientierungen berechnen (ORISOLH)................................................................................772
3.13.12.2 Modifikation der Korrekturdaten bei drehbaren Werkzeugen aktivieren (CUTMOD, 

3.13.6
3.13.7
3.13.7.1
3.13.7.2
3.13.7.3
3.13.7.4

3.13.7.5
3.13.8
3.13.9

3.13.5.3

3.13.5.2

CUTMODK)..........................................................................................................................783
3.13.13
Mit Werkzeugumgebungen arbeiten ....................................................................................791
3.13.13.1 Werkzeugumgebung speichern (TOOLENV).......................................................................791

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

15

Inhaltsverzeichnis

3.13.13.2 Werkzeugumgebung speichern (TOOLENV): Weitere Informationen .................................793
3.13.13.3 Werkzeugumgebung lschen (DELTOOLENV) ...................................................................794
T-, D- und DL-Nummer lesen (GETTENV) ..........................................................................795
3.13.13.4
Informationen zu gespeicherten Werkzeugumgebungen lesen ($P_TOOLENVN, 
3.13.13.5
($P_TOOLENV) ...................................................................................................................796
3.13.13.6 Werkzeuglngen bzw. -lngenkomponenten lesen (GETTCOR) ........................................796
3.13.13.7 Werkzeugkomponenten ndern (SETTCOR) ......................................................................803
3.13.14

Zuordnung der Werkzeuglngen L1, L2, L3 zu den Koordinatenachsen lesen 
(LENTOAX) ..........................................................................................................................815

3.14
3.14.1
3.14.2
3.14.2.1
3.14.2.2

3.14.2.3

3.14.3
3.14.4
3.14.5
3.14.6
3.14.7
3.14.8

3.14.9
3.14.9.1
3.14.9.2
3.14.10
3.14.11

3.15
3.15.1
3.15.2
3.15.3
3.15.4
3.15.5
3.15.6

3.16
3.16.1
3.16.2
3.16.2.1
3.16.2.2
3.16.2.3
3.16.2.4

3.16.2.5

3.16.2.6

3.16.2.7

Bahnverhalten ......................................................................................................................819
Vorschubverlauf (FNORM, FLIN, FCUB, FPO)....................................................................819
Beschleunigungsverhalten ...................................................................................................824
Beschleunigungsmodus (BRISK, BRISKA, SOFT, SOFTA, DRIVE, DRIVEA)....................824
Beeinflussung der Beschleunigung bei Folgeachsen (VELOLIMA, ACCLIMA, 
JERKLIMA) ..........................................................................................................................826
Aktivierung von Technologie-spezifischen Dynamikwerten (DYNNORM, DYNPOS, 
DYNROUGH, DYNSEMIFIN, DYNFINISH, DYNPREC)......................................................828
Fahren mit Vorsteuerung (FFWON, FFWOF) ......................................................................829
Programmierbare Konturgenauigkeit (CPRECON, CPRECOF) ..........................................830
Programmablauf mit Vorlaufspeicher (STOPFIFO, STARTFIFO, FIFOCTRL, STOPRE) ....832
Stop-Delay-Bereiche definieren (DELAYFSTON, DELAYFSTOF) ......................................834
Programmstelle fr SERUPRO verhindern (IPTRLOCK, IPTRUNLOCK) ...........................836
Wiederanfahren an Kontur (REPOSA, REPOSL, REPOSQ, REPOSQA, REPOSH, 
REPOSHA, DISR, DISPR, RMIBL, RMBBL, RMEBL, RMNBL)  .........................................839
Beeinflussung der Bewegungsfhrung ................................................................................847
Maximalen Achsruck anpassen (JERKLIM).........................................................................847
Maximale Achsgeschwindigkeit oder Spindeldrehzahl anpassen (VELOLIM).....................848
Kontur-/Orientierungtoleranz programmieren (CTOL, OTOL, ATOL) ..................................850
Satzwechselverhalten bei aktiver Kopplung (CPBC) ...........................................................854

Achsfunktionen.....................................................................................................................856
Achstausch, Spindeltausch (RELEASE, GET, GETD).........................................................856
Achse einem anderen Kanal bergeben (AXTOCHAN) ......................................................860
Achsfunktionen (AXNAME, AX, SPI, AXTOSPI, ISAXIS, AXSTRING, MODAXVAL)..........861
Umschaltbare Geometrieachsen (GEOAX) .........................................................................863
Warten auf gltige Achsposition (WAITENC).......................................................................868
Programmierbare Parametersatzumschaltung (SCPARA) ..................................................869

Achskopplungen...................................................................................................................871
Mitschleppen (TRAILON, TRAILOF)....................................................................................871
Kurventabellen (CTAB) ........................................................................................................875
Kurventabellen definieren (CTABDEF, CATBEND) .............................................................875
Vorhandensein einer Kurventabelle prfen (CTABEXISTS) ................................................882
Kurventabellen lschen (CTABDEL)....................................................................................882
Kurventabellen gegen Lschen und berschreiben sperren (CTABLOCK, 
CTABUNLOCK) ...................................................................................................................883
Kurventabellen: Tabelleneigenschaften ermitteln (CTABID, CTABISLOCK, 
CTABMEMTYP, CTABPERIOD)..........................................................................................884
Kurventabellenwerte lesen (CTABTSV, CTABTEV, CTABTSP, CTABTEP, CTABSSV, 
CTABSEV, CTAB, CTABINV, CTABTMIN, CTABTMAX) ....................................................886
Kurventabellen: Ressourcennutzung prfen (CTABNO, CTABNOMEM, CTABFNO, 
CTABSEGID, CTABSEG, CTABFSEG, CTABMSEG, CTABPOLID, CTABPOL, 
CTABFPOL, CTABMPOL) ...................................................................................................890

16

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Inhaltsverzeichnis

3.16.3
3.16.4
3.16.4.1
3.16.4.2
3.16.4.3
3.16.4.4
3.16.4.5
3.16.5
3.16.5.1

3.16.6
3.16.7
3.16.7.1
3.16.7.2
3.16.7.3
3.16.7.4
3.16.7.5
3.16.8

3.17
3.17.1

3.18
3.18.1
3.18.2

3.19
3.19.1

3.20
3.20.1
3.20.2

3.21
3.21.1
3.21.2
3.21.3
3.21.4

3.21.5
3.21.6
3.21.7

3.22
3.22.1
3.22.2
3.22.3
3.22.4
3.22.5
3.22.6
3.22.7

Axiale Leitwertkopplung (LEADON, LEADOF).....................................................................892
Elektronisches Getriebe (EG) ..............................................................................................897
Elektronisches Getriebe definieren (EGDEF) ......................................................................897
Elektronisches Getriebe einschalten (EGON, EGONSYN, EGONSYNE) ...........................898
Elektronisches Getriebe ausschalten (EGOFS, EGOFC) ....................................................901
Definition eines Elektronischen Getriebes lschen (EGDEL) ..............................................902
Umdrehungsvorschub (G95) / Elektronisches Getriebe (FPR) ............................................902
Synchronspindel...................................................................................................................903
Synchronspindel: Programmierung (COUPDEF, COUPDEL, COUPON, COUPONC, 
COUPOF, COUPOFS, COUPRES, WAITC) .......................................................................903
Generische Kopplung (CP...) ...............................................................................................913
Tangentialsteuerung ............................................................................................................921
Kopplung definieren (TANG)................................................................................................921
Zwischensatzerzeugung einschalten (TLIFT) ......................................................................922
Kopplung einschalten (TANGON) ........................................................................................923
Kopplung ausschalten (TANGOF) .......................................................................................925
Kopplung lschen (TANGDEL) ............................................................................................925
Master/Slave-Kopplung (MASLDEF, MASLDEL, MASLON, MASLOF, MASLOFS) ...........927

Synchronaktionen ................................................................................................................930
Definition einer Synchronaktion ...........................................................................................930

Pendeln ................................................................................................................................931
Asynchrones Pendeln (OS, OSP1, OSP2, OST1, OST2, OSCTRL, OSNSC, OSE, OSB)....931
ber Synchronaktionen gesteuertes Pendeln (OSCILL) .....................................................936

Schleifen ..............................................................................................................................943
Schleifspezifische Werkzeugberwachung ein-/ausschalten (TMON, TMOF) ....................943

Programmlaufzeit / Werkstckzhler ...................................................................................944
Programmlaufzeit .................................................................................................................944
Werkstckzhler...................................................................................................................947

Weitere Funktionen ..............................................................................................................949
Maschinendaten wirksam setzen (NEWCONF) ...................................................................949
Vorhandenen NC-Sprachumfang prfen (STRINGIS) .........................................................950
Fenster aus dem Teileprogramm interaktiv aufrufen (MMC) ...............................................953
Process DataShare - Ausgabe auf ein externes Gert/Datei (EXTOPEN, WRITE, 
EXTCLOSE).........................................................................................................................958
Alarme (SETAL) ...................................................................................................................962
Rohteil definieren (WORKPIECE)........................................................................................964
Sprachmodus umschalten (G290, G291).............................................................................968

Eigene Abspanprogramme ..................................................................................................971
Untersttzende Funktionen fr das Abspanen.....................................................................971
Konturtabelle erstellen (CONTPRON) .................................................................................971
Codierte Konturtabelle erstellen (CONTDCON)...................................................................977
Schnittpunkt zwischen zwei Konturelementen ermitteln (INTERSEC).................................980
Konturelemente einer Tabelle satzweise abfahren (EXECTAB)..........................................982
Kreisdaten berechnen (CALCDAT)......................................................................................982
Konturaufbereitung ausschalten (EXECUTE) ......................................................................984

3.23
3.23.1
3.23.1.1
3.23.1.2

Zyklen extern programmieren ..............................................................................................986
Technologische Zyklen ........................................................................................................986
Einleitung .............................................................................................................................986
Technologie-spezifische bersicht ......................................................................................987

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

17

Inhaltsverzeichnis

3.23.1.3
3.23.1.4
3.23.1.5
3.23.1.6
3.23.1.7
3.23.1.8
3.23.1.9
3.23.1.10
3.23.1.11
3.23.1.12
3.23.1.13

HOLES1 - Positionsmuster Reihe........................................................................................989
HOLES2 - Positionsmuster Kreis oder Teilkreis ..................................................................989
POCKET3 - Rechtecktasche................................................................................................991
POCKET4 - Kreistasche ......................................................................................................994
SLOT1 - Lngsnut................................................................................................................996
SLOT2 - Kreisnut .................................................................................................................999
LONGHOLE - Langloch .....................................................................................................1001
CYCLE60 - Gravur .............................................................................................................1003
CYCLE61 - Planfrsen.......................................................................................................1006
CYCLE62 - Konturaufruf ....................................................................................................1008
CYCLE63 - Konturtasche frsen / Konturtasche Restmaterial / Konturzapfen frsen / 
Konturzapfen Restmaterial.................................................................................................1008
CYCLE64 - Konturtasche vorbohren..................................................................................1011
CYCLE70 - Gewindefrsen................................................................................................1013
CYCLE72 - Bahnfrsen......................................................................................................1014
CYCLE76 - Rechteckzapfen ..............................................................................................1017
CYCLE77 - Kreiszapfen .....................................................................................................1020
CYCLE78 - Bohrgewinde frsen ........................................................................................1022
CYCLE79 - Mehrkant .........................................................................................................1024
CYCLE81 - Bohren, Zentrieren ..........................................................................................1026
CYCLE82 - Bohren, Plansenken........................................................................................1027
CYCLE83 - Tieflochbohren 1 .............................................................................................1030
CYCLE84 - Gewindebohren ohne Ausgleichsfutter ...........................................................1033
CYCLE85 - Reiben.............................................................................................................1036
CYCLE86 - Ausdrehen.......................................................................................................1037
CYCLE92 - Abstich ............................................................................................................1038
CYCLE95 - Konturabspanen..............................................................................................1040
CYCLE98 - Gewindekette ..................................................................................................1042
CYCLE99 - Gewindedrehen...............................................................................................1046
CYCLE435 - Abrichterkoordinatensystem setzen..............................................................1051
CYCLE495 - Profilieren......................................................................................................1051
CYCLE800 - Schwenken Ebene / Schwenken Werkzeug / Ausrichten Werkzeug ............1053
CYCLE801 - Positionsmuster Gitter oder Rahmen............................................................1056
CYCLE802 - Beliebige Positionen .....................................................................................1058
CYCLE830 - Tieflochbohren 2 ...........................................................................................1061
CYCLE832 - High Speed Settings .....................................................................................1067
CYCLE840 - Gewindebohren mit Ausgleichsfutter ............................................................1071
CYCLE899 - Offene Nut.....................................................................................................1073
CYCLE930 - Einstich .........................................................................................................1076
CYCLE940 - Freistich Form E und F / Freistich Gewinde..................................................1078
CYCLE951 - Abspanen......................................................................................................1081
CYCLE952 - Abspanen / Abspanen Rest / Stechen / Stechen Rest / Stechdrehen / 
Stechdrehen Rest ..............................................................................................................1084
CYCLE4071 - Lngsschleifen mit Zustellung am Umkehrpunkt ........................................1090
3.23.1.44
CYCLE4072 - Lngsschleifen mit Zustellung am Umkehrpunkt und Abbruchsignal .........1092
3.23.1.45
CYCLE4073 - Lngschleifen mit kontinuierlicher Zustellung .............................................1096
3.23.1.46
CYCLE4074 - Lngschleifen mit kontinuierlicher Zustellung und Abbruchsignal ..............1097
3.23.1.47
CYCLE4075 - Flachschleifen mit Zustellung am Umkehrpunkt .........................................1100
3.23.1.48
CYCLE4077 - Flachschleifen mit Zustellung am Umkehrpunkt und Abbruchsignal ..........1103
3.23.1.49
CYCLE4078 - Flachschleifen mit kontinuierlicher Zustellung ............................................1107
3.23.1.50
3.23.1.51
CYCLE4079 - Flachschleifen mit intermittierender Zustellung...........................................1109
3.23.1.52 GROUP_BEGIN - Anfang Programmblock ........................................................................1112

3.23.1.14
3.23.1.15
3.23.1.16
3.23.1.17
3.23.1.18
3.23.1.19
3.23.1.20
3.23.1.21
3.23.1.22
3.23.1.23
3.23.1.24
3.23.1.25
3.23.1.26
3.23.1.27
3.23.1.28
3.23.1.29
3.23.1.30
3.23.1.31
3.23.1.32
3.23.1.33
3.23.1.34
3.23.1.35
3.23.1.36
3.23.1.37
3.23.1.38
3.23.1.39
3.23.1.40
3.23.1.41
3.23.1.42
3.23.1.43

18

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Inhaltsverzeichnis

3.23.1.53 GROUP_END - Ende Programmblock...............................................................................1112
3.23.1.54 GROUP_ADDEND - Ende Einfahrzusatz...........................................................................1113
Randbedingungen..............................................................................................................1113
3.23.1.55
bersicht Messzyklenparameter........................................................................................1114
3.23.2

4

Tabellen..................................................................................................................................................1115

4.1

4.2
4.2.1
4.2.2
4.2.3

4.3
4.3.1
4.3.2
4.3.3
4.3.4
4.3.5
4.3.6
4.3.7
4.3.8
4.3.9
4.3.10
4.3.11
4.3.12
4.3.13
4.3.14
4.3.15
4.3.16
4.3.17
4.3.18
4.3.19
4.3.20
4.3.21
4.3.22
4.3.23
4.3.24
4.3.25
4.3.26
4.3.27
4.3.28
4.3.29
4.3.30
4.3.31
4.3.32
4.3.33
4.3.34
4.3.35
4.3.36
4.3.37
4.3.38
4.3.39

Anweisungen......................................................................................................................1115

Adressen ............................................................................................................................1155
Adressbuchstaben .............................................................................................................1155
Feste Adressen ..................................................................................................................1156
Einstellbare Adressen ........................................................................................................1160

G-Befehle ...........................................................................................................................1167
G-Befehle ...........................................................................................................................1167
G-Gruppe 1: Modal wirksame Bewegungsbefehle.............................................................1167
G-Gruppe 2: Satzweise wirksame Bewegungen, Verweilzeit ............................................1168
G-Gruppe 3: Programmierbarer Frame, Arbeitsfeldbegrenzung und Polprogrammierung..1168
G-Gruppe 4: FIFO ..............................................................................................................1169
G-Gruppe 6: Ebenenanwahl ..............................................................................................1169
G-Gruppe 7: Werkzeugradiuskorrektur ..............................................................................1170
G-Gruppe 8: Einstellbare Nullpunktverschiebung ..............................................................1170
G-Gruppe 9: Frame- und Werkzeugkorrektur-Unterdrckung ...........................................1170
G-Gruppe 10: Genauhalt - Bahnsteuerbetrieb ...................................................................1171
G-Gruppe 11: Genauhalt satzweise...................................................................................1171
G-Gruppe 12: Satzwechselkriterien bei Genauhalt (G60/G9)............................................1171
G-Gruppe 13: Werkstckvermaung Inch/metrisch...........................................................1171
G-Gruppe 14: Werkstckvermaung absolut/inkremental .................................................1172
G-Gruppe 15: Vorschubtyp ................................................................................................1172
G-Gruppe 16: Vorschub-Override an Innen- und Auenkrmmung ..................................1173
G-Gruppe 17: An-/Abfahrverhalten Werkzeugkorrektur.....................................................1173
G-Gruppe 18: Eckenverhalten Werkzeugkorrektur ............................................................1173
G-Gruppe 19: Kurvenbergang bei Spline-Beginn ............................................................1173
G-Gruppe 20: Kurvenbergang bei Spline-Ende ...............................................................1174
G-Gruppe 21: Beschleunigungsprofil .................................................................................1174
G-Gruppe 22: Werkzeugkorrekturtyp .................................................................................1174
G-Gruppe 23: Kollisionsberwachung an Innenkonturen ..................................................1175
G-Gruppe 24: Vorsteuerung...............................................................................................1175
G-Gruppe 25: Bezug Werkzeugorientierung......................................................................1175
G-Gruppe 26: Wiederanfahrmodus fr REPOS (modal wirksam)......................................1176
G-Gruppe 27: Werkzeugkorrektur bei Orientierungsnderung an Auenecken ................1176
G-Gruppe 28: Arbeitsfeldbegrenzung ................................................................................1176
G-Gruppe 29: Radius-/Durchmesserprogrammierung .......................................................1176
G-Gruppe 30: NC-Satz-Kompression ................................................................................1177
G-Gruppe 31: OEM-G-Befehle...........................................................................................1177
G-Gruppe 32: OEM-G-Befehle...........................................................................................1178
G-Gruppe 33: Einstellbare Werkzeugfeinkorrektur ............................................................1178
G-Gruppe 34: Glttung Werkzeugorientierung ..................................................................1178
G-Gruppe 37: Vorschubprofil .............................................................................................1179
G-Gruppe 39: Programmierbare Konturgenauigkeit ..........................................................1179
G-Gruppe 40: Werkzeugradiuskorrektur konstant .............................................................1179
G-Gruppe 41: Gewindeschneiden unterbrechbar ..............................................................1179
G-Gruppe 42: Werkzeugtrger...........................................................................................1179

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

19

Inhaltsverzeichnis

4.3.40
4.3.41
4.3.42
4.3.43
4.3.44
4.3.45
4.3.46
4.3.47
4.3.48
4.3.49
4.3.50
4.3.51
4.3.52
4.3.53
4.3.54
4.3.55
4.3.56
4.3.57
4.3.58
4.3.59

4.4

4.5

4.6

G-Gruppe 43: Anfahrrichtung WAB....................................................................................1180
G-Gruppe 44: Wegaufteilung WAB ....................................................................................1180
G-Gruppe 45: Bahnbezug der FGROUP-Achsen ..............................................................1180
G-Gruppe 46: Ebenenanwahl fr Schnellabheben ............................................................1181
G-Gruppe 47: Modus-Umschaltung fr externen NC-Code ...............................................1181
G-Gruppe 48: An- / Abfahrverhalten bei Werkzeugradiuskorrektur ...................................1181
G-Gruppe 49: Punkt-zu-Punkt-Bewegung .........................................................................1181
G-Gruppe 50: Orientierungsprogrammierung ....................................................................1182
G-Gruppe 51: Interpolationsart Orientierungsprogrammierung .........................................1182
G-Gruppe 52: Werkstckbezogene Frame-Drehung .........................................................1183
G-Gruppe 53: Werkzeugbezogene Frame-Drehung..........................................................1183
G-Gruppe 54: Vektordrehung bei Polynomprogrammierung .............................................1183
G-Gruppe 55: Eilgangbewegung mit/ohne Linear-Interpolation.........................................1184
G-Gruppe 56: Einrechnung des Werkzeugverschleies....................................................1184
G-Gruppe 57: Eckenverzgerung ......................................................................................1184
G-Gruppe 59: Dynamikmodus fr Bahninterpolation .........................................................1185
G-Gruppe 60: Arbeitsfeldbegrenzung ................................................................................1185
G-Gruppe 61: Glttung Werkzeugorientierung ..................................................................1185
G-Gruppe 62: Wiederanfahrmodus fr REPOS (satzweise wirksam)................................1186
G-Gruppe 64: Schleifframes ..............................................................................................1186

Vordefinierte Prozeduren ...................................................................................................1187

Vordefinierte Prozeduren in Synchronaktionen..................................................................1208

Vordefinierte Funktionen ....................................................................................................1210

A

Anhang ...................................................................................................................................................1225

A.1

A.2

Liste der Abkrzungen .......................................................................................................1225

Dokumentationsbersicht...................................................................................................1234

Index.......................................................................................................................................................1235

20

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Grundlegende Sicherheitshinweise

1.1

Allgemeine Sicherheitshinweise

1

WARNUNG

Lebensgefahr bei Nichtbeachtung von Sicherheitshinweisen und Restrisiken 

Bei Nichtbeachtung der Sicherheitshinweise und Restrisiken in der zugehrigen Hardware-
Dokumentation knnen Unflle mit schweren Verletzungen oder Tod auftreten.

 Halten Sie die Sicherheitshinweise der Hardware-Dokumentation ein.

 Bercksichtigen Sie bei der Risikobeurteilung die Restrisiken.

WARNUNG

Fehlfunktionen der Maschine infolge fehlerhafter oder vernderter Parametrierung

Durch fehlerhafte oder vernderte Parametrierung knnen Fehlfunktionen an Maschinen 
auftreten, die zu Krperverletzungen oder Tod fhren knnen.

 Schtzen Sie die Parametrierung vor unbefugtem Zugriff.

 Beherrschen Sie mgliche Fehlfunktionen durch geeignete Manahmen, z. B. NOT-HALT 

oder NOT-AUS.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

21

Grundlegende Sicherheitshinweise

1.2 Gewhrleistung und Haftung fr Applikationsbeispiele

1.2

Gewhrleistung und Haftung fr Applikationsbeispiele

Applikationsbeispiele sind unverbindlich und erheben keinen Anspruch auf Vollstndigkeit 
hinsichtlich Konfiguration und Ausstattung sowie jeglicher Eventualitten. 
Applikationsbeispiele stellen keine kundenspezifischen Lsungen dar, sondern sollen lediglich 
Hilfestellung bieten bei typischen Aufgabenstellungen.

Als Anwender sind Sie fr den sachgemen Betrieb der beschriebenen Produkte selbst 
verantwortlich. Applikationsbeispiele entheben Sie nicht der Verpflichtung zu sicherem 
Umgang bei Anwendung, Installation, Betrieb und Wartung.

22

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1.3

Security-Hinweise

Grundlegende Sicherheitshinweise

1.3 Security-Hinweise

Siemens bietet Produkte und Lsungen mit Industrial Security-Funktionen an, die den sicheren 
Betrieb von Anlagen, Systemen, Maschinen und Netzwerken untersttzen.

Um Anlagen, Systeme, Maschinen und Netzwerke gegen Cyber-Bedrohungen zu sichern, ist 
es erforderlich, ein ganzheitliches Industrial Security-Konzept zu implementieren (und 
kontinuierlich aufrechtzuerhalten), das dem aktuellen Stand der Technik entspricht. Die 
Produkte und Lsungen von Siemens formen einen Bestandteil eines solchen Konzepts.

Die Kunden sind dafr verantwortlich, unbefugten Zugriff auf ihre Anlagen, Systeme, 
Maschinen und Netzwerke zu verhindern. Diese Systeme, Maschinen und Komponenten 
sollten nur mit dem Unternehmensnetzwerk oder dem Internet verbunden werden, wenn und 
soweit dies notwendig ist und nur wenn entsprechende Schutzmanahmen (z.B. Firewalls und/
oder Netzwerksegmentierung) ergriffen wurden.

Weiterfhrende Informationen zu mglichen Schutzmanahmen im Bereich Industrial Security 
finden Sie unter:
https://www.siemens.com/industrialsecurity (https://www.siemens.com/industrialsecurity)

Die Produkte und Lsungen von Siemens werden stndig weiterentwickelt, um sie noch 
sicherer zu machen. Siemens empfiehlt ausdrcklich, Produkt-Updates anzuwenden, sobald 
sie zur Verfgung stehen und immer nur die aktuellen Produktversionen zu verwenden. Die 
Verwendung veralteter oder nicht mehr untersttzter Versionen kann das Risiko von Cyber-
Bedrohungen erhhen.

Um stets ber Produkt-Updates informiert zu sein, abonnieren Sie den Siemens Industrial 
Security RSS Feed unter:
https://www.siemens.com/industrialsecurity (https://new.siemens.com/global/en/products/
services/cert.html#Subscriptions)

Weitere Informationen finden Sie im Internet:

Projektierungshandbuch Industrial Security (https://support.industry.siemens.com/cs/ww/de/
view/108862708)

WARNUNG

Unsichere Betriebszustnde durch Manipulation der Software

Manipulationen der Software, z. B. Viren, Trojaner oder Wrmer, knnen unsichere 
Betriebszustnde in Ihrer Anlage verursachen, die zu Tod, schwerer Krperverletzung und zu 
Sachschden fhren knnen.

 Halten Sie die Software aktuell. 

 Integrieren Sie die Automatisierungs- und Antriebskomponenten in ein ganzheitliches 
Industrial Security-Konzept der Anlage oder Maschine nach dem aktuellen Stand der 
Technik.

 Bercksichtigen Sie bei Ihrem ganzheitlichen Industrial Security-Konzept alle 

eingesetzten Produkte.

 Schtzen Sie die Dateien in Wechselspeichermedien vor Schadsoftware durch 

entsprechende Schutzmanahmen, z. B. Virenscanner.

 Prfen Sie beim Abschluss der Inbetriebnahme alle security-relevanten Einstellungen.
 Schtzen Sie den Antrieb vor unberechtigten nderungen, indem Sie die 

Umrichterfunktion "Know-How-Schutz" aktivieren.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

23

Grundlegende Sicherheitshinweise

1.3 Security-Hinweise

24

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Grundlagen

2.1

Geometrische Grundlagen

2.1.1

Werkstck-Positionen

2.1.1.1

Bezugssystem der Positionsangaben

2

Damit die Maschine bzw. Steuerung mit den im NC-Programm angegebenen Positionen 
arbeiten kann, mssen sich diese Positionsangaben auf ein Bezugssystem beziehen, das auf 
die Bewegungsrichtungen der Maschinenachsen bertragen werden kann. Dafr werden bei 
Werkzeugmaschinen fr das Werkstck-Koordinatensystem kartesische, d.h. 
rechtsdrehende, rechtwinkelige, Koordinatensysteme nach DIN 66217 benutzt.

Der Werkstck-Nullpunkt (W) ist Der Ursprung des Werkstck-Koordinatensystems.

2.1.1.2

Kartesische Koordinaten

Die Achsen im Koordinatensystem sind vermat. Dadurch ist es mglich, jeden Punkt im 
Koordinatensystem und damit jede Werkstck-Position durch die Richtung (X, Y und Z) und 
drei Zahlenwerte eindeutig zu beschreiben. Der Werkstck-Nullpunkt hat immer die 
Koordinaten X0, Y0 und Z0.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

25

(cid:14)(cid:61)(cid:16)(cid:61)(cid:14)(cid:59)(cid:16)(cid:60)(cid:14)(cid:60)(cid:16)(cid:59)(cid:58)(cid:28)(cid:19)(cid:114)(cid:28)(cid:19)(cid:114)(cid:28)(cid:19)(cid:114)Grundlagen

2.1 Geometrische Grundlagen

Positionsangaben in Form kartesischer Koordinaten

Der Einfachheit halber betrachten wir bei dem folgenden Beispiel nur eine Ebene des 
Koordinatensystems, die X/Y-Ebene:

Die Punkte P1 bis P4 besitzen folgende Koordinaten:

Position

Koordinaten

P1

P2

P3

P4

X100 Y50

X-50 Y100

X-105 Y-115

X70 Y-75

Beispiel: Werkstck-Positionen beim Drehen

Bei Drehmaschinen gengt eine Ebene, um die Kontur zu beschreiben:

26

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:51)(cid:23)(cid:51)(cid:22)(cid:51)(cid:21)(cid:51)(cid:20)(cid:20)(cid:19)(cid:19)(cid:20)(cid:20)(cid:24)(cid:24)(cid:19)(cid:26)(cid:19)(cid:20)(cid:19)(cid:24)(cid:20)(cid:19)(cid:19)(cid:14)(cid:60)(cid:16)(cid:60)(cid:61)(cid:16)(cid:14)(cid:59)(cid:16)(cid:59)(cid:26)(cid:24)(cid:24)(cid:19)(cid:154)(cid:3)(cid:23)(cid:19)(cid:154)(cid:3)(cid:25)(cid:19)(cid:154)(cid:3)(cid:21)(cid:24)(cid:22)(cid:24)(cid:21)(cid:24)(cid:20)(cid:24)(cid:26)(cid:17)(cid:24)(cid:51)(cid:20)(cid:51)(cid:21)(cid:51)(cid:22)(cid:51)(cid:23)(cid:14)(cid:59)(cid:14)(cid:61)Grundlagen

2.1 Geometrische Grundlagen

Die Punkte P1 bis P4 besitzen folgende Koordinaten:

Position

Koordinaten

P1

P2

P3

P4

X25 Z-7.5

X40 Z-15

X40 Z-25

X60 Z-35

Beispiel: Werkstck-Positionen beim Frsen

Bei Frsbearbeitungen muss auch die Zustelltiefe beschrieben werden, d. h., es muss auch der 
dritten Koordinate (in diesem Fall Z) ein Zahlenwert zugeordnet werden.

Die Punkte P1 bis P3 besitzen folgende Koordinaten:

Position

Koordinaten

P1

P2

P3

X10 Y45 Z-5

X30 Y60 Z-20

X45 Y20 Z-15

2.1.1.3

Polarkoordinaten

Anstelle von kartesischen Koordinaten knnen zur Beschreibung von Werkstck-Positionen 
auch Polarkoordinaten verwendet werden. Das ist dann sinnvoll, wenn ein Werkstck oder ein 
Teil eines Werkstcks mit Radius und Winkel vermat ist. Der Punkt, von dem die Vermaung 
ausgeht, heit "Pol".

Positionsangaben in Form von Polarkoordinaten

Polarkoordinaten setzen sich zusammen aus dem Polarradius und dem Polarwinkel.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

27

(cid:51)(cid:22)(cid:51)(cid:22)(cid:51)(cid:21)(cid:51)(cid:21)(cid:51)(cid:20)(cid:51)(cid:20)(cid:21)(cid:19)(cid:23)(cid:24)(cid:25)(cid:19)(cid:20)(cid:19)(cid:22)(cid:19)(cid:24)(cid:21)(cid:19)(cid:20)(cid:24)(cid:23)(cid:24)(cid:14)(cid:60)(cid:14)(cid:59)(cid:14)(cid:60)(cid:14)(cid:61)Grundlagen

2.1 Geometrische Grundlagen

Der Polarradius ist der Abstand zwischen dem Pol und der Position.

Der Polarwinkel ist der Winkel zwischen dem Polarradius und der waagrechten Achse der 
Arbeitsebene. Negative Polarwinkel verlaufen im Uhrzeigersinn, positive im 
Gegenuhrzeigersinn.

Beispiel

Die Punkte P1 und P2 knnen, bezogen auf den Pol, wie folgt beschrieben werden:

Position

Polarkoordinaten

P1

P2

RP=100 AP=30

RP=60 AP=75

RP: Polarradius

AP: Polarwinkel

2.1.1.4

Absolutma

Positionsangaben im Absolutma

Beim Absolutma beziehen sich alle Positionsangaben immer auf den gerade gltigen 
Nullpunkt.

Im Hinblick auf die Werkzeugbewegung bedeutet das:

Die Absolutmaangabe beschreibt die Position, auf die das Werkzeug fahren soll.

28

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:51)(cid:82)(cid:79)(cid:22)(cid:19)(cid:25)(cid:19)(cid:20)(cid:19)(cid:19)(cid:22)(cid:19)(cid:114)(cid:26)(cid:24)(cid:114)(cid:14)(cid:60)(cid:14)(cid:59)(cid:51)(cid:21)(cid:51)(cid:20)(cid:20)(cid:24)Beispiel: Drehen

Grundlagen

2.1 Geometrische Grundlagen

Im Absolutma ergeben sich fr die Punkte P1 bis P4 folgende Positionsangaben:

Position

Positionsangabe im Absolutma

P1

P2

P3

P4

X25 Z-7,5

X40 Z-15

X40 Z-25

X60 Z-35

Beispiel: Frsen

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

29

(cid:154)(cid:3)(cid:23)(cid:19)(cid:154)(cid:3)(cid:25)(cid:19)(cid:154)(cid:3)(cid:21)(cid:24)(cid:22)(cid:24)(cid:21)(cid:24)(cid:20)(cid:24)(cid:26)(cid:17)(cid:24)(cid:51)(cid:20)(cid:51)(cid:21)(cid:51)(cid:22)(cid:51)(cid:23)(cid:14)(cid:59)(cid:14)(cid:61)(cid:21)(cid:19)(cid:22)(cid:24)(cid:25)(cid:19)(cid:21)(cid:19)(cid:24)(cid:19)(cid:26)(cid:19)(cid:14)(cid:60)(cid:14)(cid:59)(cid:51)(cid:20)(cid:51)(cid:22)(cid:51)(cid:21)Grundlagen

2.1 Geometrische Grundlagen

Im Absolutma ergeben sich fr die Punkte P1 bis P3 folgende Positionsangaben:

Position

Positionsangabe im Absolutma

P1

P2

P3

X20 Y35

X50 Y60

X70 Y20

2.1.1.5

Kettenma

Positionsangaben im Kettenma (Inkrementalma) 

In Fertigungszeichnungen beziehen sich die Mae hufig nicht auf den Nullpunkt, sondern auf 
einen anderen Werkstckpunkt. Um solche Mae nicht umrechnen zu mssen, gibt es die 
Mglichkeit der Ketten- oder Inkrementalmaangabe. Bei dieser Art der Maangabe bezieht 
sich eine Positionsangabe auf den jeweils vorherigen Punkt.

Im Hinblick auf die Werkzeugbewegung bedeutet das:

Die Kettenmaangabe beschreibt, um wie viel das Werkzeug verfahren soll.

Beispiel: Drehen

Im Kettenma ergeben sich fr die Punkte P2 bis P4 folgende Positionsangaben:

Position

Positionsangabe im Kettenma

Die Angabe bezieht sich auf:

X15 Z-7,5

Z-10

X20 Z-10

P2

P3

P4

Hinweis

P1

P2

P3

Bei anstehendem DIAMOF oder DIAM90 (Seite 162) wird der Sollweg bei Kettenmaangabe 
(G91) als Radiusma programmiert.

30

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:154)(cid:3)(cid:23)(cid:19)(cid:154)(cid:3)(cid:25)(cid:19)(cid:154)(cid:3)(cid:21)(cid:24)(cid:26)(cid:17)(cid:24)(cid:26)(cid:17)(cid:24)(cid:20)(cid:19)(cid:20)(cid:19)(cid:51)(cid:20)(cid:51)(cid:21)(cid:51)(cid:22)(cid:51)(cid:23)(cid:14)(cid:59)(cid:14)(cid:61)Beispiel: Frsen

Die Positionsangaben fr die Punkte P1 bis P3 im Kettenma lauten:

Grundlagen

2.1 Geometrische Grundlagen

Im Kettenma ergeben sich fr die Punkte P1 bis P3 folgende Positionsangaben:

Position

Positionsangabe im Kettenma

Die Angabe bezieht sich auf:

P1

P2

P3

X20 Y35

X30 Y20

X20 Y-35

Nullpunkt

P1

P2

2.1.2

Arbeitsebenen

Ein NC-Programm bentigt die Information, in welcher Ebene die Bearbeitung stattfindet. Nur 
dann kann die Steuerung z. B. Werkzeugkorrekturwerte korrekt einrechnen. Des Weiteren wird 
die Angabe der Arbeitsebene fr bestimmte Arten der Kreisprogrammierung und bei 
Polarkoordinaten bentigt. 

Die Arbeitsebene wird im zu Grunde liegenden kartesischen Werkstck-Koordinatensystem 
durch zwei Koordinatenachsen festgelegt. Die dritte Koordinatenachse steht senkrecht auf 
dieser Arbeitsebene und bestimmt die Zustellrichtung des Werkzeugs (z. B. fr 2D-
Bearbeitung).

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

31

(cid:21)(cid:19)(cid:20)(cid:24)(cid:21)(cid:24)(cid:21)(cid:19)(cid:22)(cid:19)(cid:21)(cid:19)(cid:14)(cid:60)(cid:14)(cid:59)(cid:51)(cid:20)(cid:51)(cid:22)(cid:51)(cid:21)Grundlagen

2.1 Geometrische Grundlagen

Arbeitsebenen beim Drehen / Frsen

Arbeitsebenen beim Drehen

Arbeitsebenen beim Frsen

Aktivieren einer Arbeitsebene

Die Arbeitsebenen werden im NC-Programm mit den G-Befehlen G17, G18 und G19 aktiviert. 
Der Zusammenhang ist wie folgt definiert:

G-Befehl

Arbeitsebene

Abszisse

Ordinate

G17

G18

G19

X/Y

Z/X

Y/Z

X

Z

Y

Y

X

Z

Applikate  Zu
stellrichtung

Z

Y

X

2.1.3

Nullpunkte und Bezugspunkte

An einer NC-Maschine sind verschiedene Nullpunkte und Bezugspunkte definiert:  

Nullpunkte

M

Maschinen-Nullpunkt

Mit dem Maschinen-Nullpunkt wird das Maschinen-Koordinatensystem (MKS) festge
legt. Auf den Maschinennullpunkt beziehen sich alle anderen Bezugspunkte.

W

Werkstck-Nullpunkt = Programm-Nullpunkt

Der Werkstcknullpunkt legt das Werkstck-Koordinatensystem in Bezug auf den Ma
schinennullpunkt fest.

A

Anschlagpunkt

Kann mit dem Werkstck-Nullpunkt zusammenfallen (nur bei Drehmaschinen).

32

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:60)(cid:61)(cid:59)(cid:42)(cid:20)(cid:26)(cid:42)(cid:20)(cid:28)(cid:42)(cid:20)(cid:27)(cid:61)(cid:59)(cid:60)(cid:42)(cid:20)(cid:28)(cid:42)(cid:20)(cid:27)(cid:42)(cid:20)(cid:26)Grundlagen

2.1 Geometrische Grundlagen

Bezugspunkte

R

Referenzpunkt

B

T

Durch Nocken und Messsystem festgelegte Position. Der Abstand zum Maschinen-
Nullpunkt M muss bekannt sein, so dass die Achsposition an dieser Stelle exakt auf 
diesen Wert gesetzt werden kann.

Startpunkt

Per Programm festlegbar. Hier beginnt das 1. Werkzeug der Bearbeitung.

Werkzeugtrgerbezugspunkt

Befindet sich an der Werkzeughalteraufnahme. Durch Eingabe der Werkzeuglngen 
berechnet die Steuerung den Abstand der Werkzeugspitze vom Werkzeugtrgerbe
zugspunkt.

N

Werkzeugwechselpunkt

Null- und Bezugspunkte beim Drehen

Nullpunkte beim Frsen

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

33

(cid:48)(cid:58)(cid:36)(cid:53)(cid:37)(cid:49)(cid:59)(cid:61)(cid:58)(cid:20)(cid:58)(cid:21)(cid:48)(cid:60)(cid:59)Grundlagen

2.1 Geometrische Grundlagen

2.1.4

Koordinatensysteme

Folgende Koordinatensysteme werden unterschieden:

 Maschinen-Koordinaten-System (MKS) (Seite 34) mit dem Maschinen-Nullpunkt M

 Basis-Koordinaten-System (BKS) (Seite 36) 

 Basis-Nullpunkt-System (BNS) (Seite 37) 

 Einstellbares Nullpunkt-System (ENS) (Seite 38) 

 Werkstck-Koordinaten-System (WKS) (Seite 39) mit dem Werkstck-Nullpunkt W

2.1.4.1

Maschinen-Koordinatensystem (MKS)

Das Maschinen-Koordinatensystem wird aus allen physikalisch vorhandenen 
Maschinenachsen gebildet.   

Im Maschinen-Koordinatensystem sind Referenzpunkte, Werkzeug- und 
Palettenwechselpunkte (Maschinenfestpunkte) definiert.

Wenn direkt im Maschinen-Koordinatensystem programmiert wird (bei einigen G-Befehlen 
mglich), so werden die physikalischen Achsen der Maschine direkt angesprochen. Eine 
eventuell vorhandene Werkstckaufspannung wird dabei nicht bercksichtigt.

Hinweis

Falls es verschiedene Maschinen-Koordinatensysteme gibt (z. B. 5-Achs-Transformation), 
dann wird durch interne Transformation die Maschinenkinematik auf das Koordinatensystem 
abgebildet, in dem programmiert wird.

Drei-Finger-Regel  

Wie das Koordinatensystem relativ zur Maschine liegt, ist abhngig vom Maschinentyp. Die 
Achsrichtungen folgen der sogenannten "Drei-Finger-Regel" der rechten Hand (nach 
DIN 66217).  

Steht man vor der Maschine so zeigt der Mittelfinger der rechten Hand gegen die 
Zustellrichtung der Hauptspindel. Dann bezeichnet:

 der Daumen die Richtung +X

 der Zeigefinger die Richtung +Y

 der Mittelfinger die Richtung +Z

34

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Grundlagen

2.1 Geometrische Grundlagen

Drehbewegungen um die Koordinatenachsen X, Y und Z werden mit A, B und C bezeichnet. 
Der Drehsinn der Drehung ergibt sich aus der Richtung der Drehbewegung bei Blick in die 
positive Richtung der Koordinatenachse:

Richtung der Drehbewegung

im Uhrzeigersinn

gegen den Uhrzeigersinn

Drehsinn

positiv

negativ

X, Y, Z

Senkrecht aufeinanderstehende Koordinatenachsen

A, B, C Rundachsen, um X, Y, Z drehend

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

35

(cid:14)(cid:61)(cid:14)(cid:59)(cid:14)(cid:60)(cid:28)(cid:19)(cid:114)(cid:37)(cid:36)(cid:14)(cid:61)(cid:14)(cid:59)(cid:14)(cid:60)(cid:28)(cid:19)(cid:114)(cid:28)(cid:19)(cid:114)(cid:38)(cid:14)(cid:14)(cid:14)(cid:16)(cid:16)(cid:16)Grundlagen

2.1 Geometrische Grundlagen

Lage des Koordinatensystems bei unterschiedlichen Maschinentypen

Die Lage des Koordinatensystems, die sich aus der "Drei-Finger-Regel" ergibt, kann bei 
unterschiedlichen Maschinentypen unterschiedlich ausgerichtet sein, wie die beiden 
folgenden Beispiele zeigen:

Vertikale 3-Achsen-Frsmaschine

Horizontale 4-Achsen-Frsmaschine

2.1.4.2

Basis-Koordinatensystem (BKS)

Das Basiskoordinatensystem (BKS) besteht aus drei rechtwinklig angeordneten Achsen 
(Geometrieachsen), sowie aus weiteren Achsen (Zusatzachsen) ohne geometrischen 
Zusammenhang.     

WZ-Maschinen ohne kinematische Transformation

Das BKS und das MKS fallen immer dann zusammen, wenn das BKS ohne kinematische 
Transformation (z. B. 5-Achstransformation, TRANSMIT / TRACYL / TRAANG) auf das MKS 
abgebildet werden kann.

Bei diesen Maschinen knnen Maschinenachsen und Geometrieachsen den gleichen Namen 
haben.

36

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:48)(cid:14)(cid:61)(cid:14)(cid:60)(cid:14)(cid:59)(cid:14)(cid:60)(cid:37)(cid:48)(cid:14)(cid:59)(cid:14)(cid:61)(cid:48)(cid:46)(cid:54)(cid:3)(cid:32)(cid:3)(cid:37)(cid:46)(cid:54)(cid:14)(cid:60)(cid:48)(cid:14)(cid:59)(cid:14)(cid:61)Grundlagen

2.1 Geometrische Grundlagen

WZ-Maschinen mit kinematischer Transformation

Das BKS und das MKS fallen nicht zusammen, wenn das BKS mit kinematischer 
Transformation (z. B. 5-Achstransformation, TRANSMIT / TRACYL / TRAANG) auf das MKS 
abgebildet wird.

Bei diesen Maschinen mssen Maschinenachsen und Geometrieachsen unterschiedliche 
Namen haben.

Maschinenkinematik

Das Werkstck wird immer in einem zwei- oder dreidimensionalen rechtwinkligen 
Koordinatensystem (WKS) programmiert. Zur Fertigung dieser Werkstcke werden aber 
immer hufiger Werkzeugmaschinen mit Rundachsen oder nicht rechtwinklig angeordneten 
Linearachsen eingesetzt. Zur Abbildung der im WKS programmierten Koordinaten 
(rechtwinklig) in reale Maschinenachsbewegungen dient die kinematische Transformation.

2.1.4.3

Basis-Nullpunktsystem (BNS)

Das Basis-Nullpunktsystem (BNS) ergibt sich aus dem Basis-Koordinatensystem durch die 
Basisverschiebung.     

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

37

(cid:48)(cid:46)(cid:54)(cid:37)(cid:46)(cid:54)(cid:60)(cid:48)(cid:46)(cid:54)(cid:59)(cid:48)(cid:46)(cid:54)(cid:61)(cid:48)(cid:46)(cid:54)(cid:60)(cid:37)(cid:46)(cid:54)(cid:59)(cid:37)(cid:46)(cid:54)(cid:61)(cid:37)(cid:46)(cid:54)(cid:46)(cid:76)(cid:81)(cid:72)(cid:80)(cid:68)(cid:87)(cid:76)(cid:86)(cid:70)(cid:75)(cid:72)(cid:3)(cid:55)(cid:85)(cid:68)(cid:81)(cid:86)(cid:73)(cid:82)(cid:85)(cid:80)(cid:68)(cid:87)(cid:76)(cid:82)(cid:81)(cid:37)(cid:46)(cid:54)(cid:37)(cid:49)(cid:54)(cid:37)(cid:68)(cid:86)(cid:76)(cid:86)(cid:89)(cid:72)(cid:85)(cid:86)(cid:70)(cid:75)(cid:76)(cid:72)(cid:69)(cid:88)(cid:81)(cid:74)(cid:14)(cid:60)(cid:3)(cid:14)(cid:59)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:14)(cid:61)(cid:14)(cid:60)(cid:14)(cid:59)(cid:14)(cid:61)(cid:3)(cid:3)Grundlagen

2.1 Geometrische Grundlagen

Basisverschiebung  

Die Basisverschiebung beschreibt die Koordinatentransformation zwischen dem BKS und 
BNS. Mit ihr kann z. B. der Paletten-Nullpunkt festgelegt werden.

Die Basisverschiebung setzt sich zusammen aus:

 Externe Nullpunktverschiebung

 DRF-Verschiebung

 berlagerte Bewegung

 Verkettete Systemframes

 Verkettete Basisframes

2.1.4.4

Einstellbares Nullpunktsystem (ENS)

Einstellbare Nullpunktverschiebung

Durch die einstellbare Nullpunktverschiebung ergibt sich aus dem Basis-Nullpunktsystem 
(BNS) das "Einstellbare Nullpunktsystem" (ENS).

Einstellbare Nullpunktverschiebungen werden im NC-Programm mit den G-Befehlen 
G54 ... G57 und G505 ... G599 aktiviert.

Wenn keine programmierbaren Koordinatentransformationen (Frames) aktiv sind, dann ist das 
"Einstellbare Nullpunktsystem" das Werkstck-Koordinatensystem (WKS).

38

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:37)(cid:49)(cid:54)(cid:40)(cid:49)(cid:54)(cid:40)(cid:76)(cid:81)(cid:86)(cid:87)(cid:72)(cid:79)(cid:79)(cid:69)(cid:68)(cid:85)(cid:72)(cid:3)(cid:49)(cid:88)(cid:79)(cid:79)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:89)(cid:72)(cid:85)(cid:86)(cid:70)(cid:75)(cid:76)(cid:72)(cid:69)(cid:88)(cid:81)(cid:74)(cid:14)(cid:60)(cid:3)(cid:14)(cid:59)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:14)(cid:61)(cid:14)(cid:60)(cid:14)(cid:59)(cid:14)(cid:61)(cid:3)(cid:3)Grundlagen

2.1 Geometrische Grundlagen

Programmierbare Koordinatentransformationen (Frames)   

Manchmal erweist es sich als sinnvoll bzw. notwendig, innerhalb eines NC-Programms das 
ursprnglich gewhlte Werkstck-Koordinatensystem (bzw. das "Einstellbare 
Nullpunktsystem") an eine andere Stelle zu verschieben und ggf. zu drehen, zu spiegeln 
und / oder zu skalieren. Dies erfolgt ber programmierbare Koordinatentransformationen 
(Frames) (Seite 300).

Hinweis

Programmierbare Koordinatentransformationen (Frames) beziehen sich immer auf das 
"Einstellbare Nullpunktsystem".

2.1.4.5

Werkstck-Koordinatensystem (WKS)

Im Werkstck-Koordinatensystem (WKS) wird die Geometrie eines Werkstcks beschrieben. 
Oder anders ausgedrckt: Die Angaben im NC-Programm beziehen sich auf das Werkstck-
Koordinatensystem.   

Das Werkstck-Koordinatensystem ist immer ein kartesisches Koordinatensystem und einem 
bestimmten Werkstck zugeordnet.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

39

Grundlagen

2.1 Geometrische Grundlagen

2.1.4.6

Wie hngen die verschiedenen Koordinatensysteme zusammen? 

Das folgende Beispiel soll die Zusammenhnge zwischen den verschiedenen 
Koordinatensystemen verdeutlichen:

 Eine kinematische Transformation ist nicht aktiv. D. h., das Maschinenkoordinatensystem und 

das Basiskoordinatensystem fallen zusammen.

 Durch die Basisverschiebung ergibt sich das Basis-Nullpunktsystem (BNS) mit dem Paletten-

Nullpunkt.

 Durch die einstellbare Nullpunktverschiebung G54 bzw. G55 wird das "Einstellbare Nullpunkt

system" (ENS) fr Werkstck 1 bzw. Werkstck 2 festgelegt.

 Durch programmierbare Koordinatentransformation ergibt sich das Werkstckkoordinatensys

tem (WKS).

40

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:20)(cid:21)(cid:23)(cid:23)(cid:22)(cid:22)(cid:48)(cid:61)(cid:60)(cid:59)2.2 Grundlagen der NC-Programmierung

Grundlagen

2.2

Grundlagen der NC-Programmierung

Hinweis

Richtlinie fr die NC-Programmierung ist DIN 66025.

2.2.1

Benennung eines NC-Programms

Regeln

Jedem NC-Programm muss beim Erstellen ein Programmname (Bezeichner) zugewiesen 
werden. Der Programmname kann unter Einhaltung folgender Regeln frei gewhlt werden:

 Erlaubte Zeichen:

 Buchstaben: A ... Z, a ... z

 Ziffern: 0 ... 9

 Unterstrich: _

 Die ersten beiden Zeichen sollten zwei Buchstaben oder ein Unterstrich gefolgt von einem 

Buchstaben sein.

Hinweis

Wenn diese Bedingung erfllt ist, dann kann ein NC-Programm allein durch Angabe des 
Programmnamens als Unterprogramm aus einem anderen Programm heraus aufgerufen 
werden. Beginnt der Programmname hingegen mit Ziffern, dann ist der Unterprogramm-
Aufruf nur ber die CALL-Anweisung mglich.

 Maximale Lnge: 24 Zeichen

Hinweis

Gro- / Kleinbuchstaben

In der SINUMERIK NC-Sprache wird nicht zwischen Gro- und Kleinbuchstaben 
unterschieden.

Hinweis

Unzulssige Programmnamen

Um Probleme mit Windows-Applikationen zu vermeiden, drfen folgende 
Programmnamen nicht verwendet werden:

 CON, PRN, AUX, NUL

 COM1, COM2, COM3, COM4, COM5, COM6, COM7, COM8, COM9

 LPT1, LPT2, LPT3, LPT4, LPT5, LPT6, LPT7, LPT8, LPT9

Weitere Einschrnkungen siehe "Namen (Seite 374)".

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

41

Grundlagen

2.2 Grundlagen der NC-Programmierung

Steuerungsinterne Erweiterungen

Der bei der Programmerstellung vergebene Programmname wird steuerungsintern mit einem 
Pre- und Postfix erweitert:

 Prefix: _N_

 Postfix:

 Hauptprogramme: _MPF

 Unterprogramme: _SPF

Dateien im Lochstreifenformat   

Extern erstellte Programmdateien, die ber die V.24-Schnittstelle eingelesen werden sollen, 
mssen im Lochstreifenformat vorliegen.

Fr den Programmname einer Datei im Lochstreifenformat gelten folgende zustzliche Regeln:

 Erstes Zeichen: %

 Abschlieend eine vier Zeichen lange Dateikennung: _xxx

Beispiele:

 %_N_WELLE123_MPF

 %Flansch3_MPF

2.2.2

Aufbau und Inhalte eines NC-Programms

2.2.2.1

Stze und Satzkomponenten

Stze  

Ein NC-Programm besteht aus einer Folge von NC-Stzen. Jeder Satz enthlt die Daten zur 
Ausfhrung eines Arbeitsschritts bei der Werkstckbearbeitung.

Satzkomponenten    

NC-Stze bestehen aus folgenden Komponenten:

 Befehle (Anweisungen) nach DIN 66025

 Elemente der NC-Hochsprache

Befehle nach DIN 66025

Die Befehle nach DIN 66025 bestehen aus einem Adresszeichen und einer Ziffer bzw. einer 
Ziffernfolge, die einen arithmetischen Wert darstellt.

Adresszeichen (Adresse)

42

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

2.2 Grundlagen der NC-Programmierung

Grundlagen

Das Adresszeichen (im Allgemeinen ein Buchstabe) definiert die Bedeutung des Befehls.

Beispiele:

Adresszeichen

Bedeutung

G

X

S

Ziffernfolge

G-Befehl (Wegbedingung)

Weginformation fr Achse X

Spindeldrehzahl

Die Ziffernfolge ist der dem Adresszeichen zugewiesene Wert. Die Ziffernfolge kann 
Vorzeichen und Dezimalpunkt beinhalten, wobei ein Vorzeichen immer zwischen dem 
Adressbuchstaben und der Ziffernfolge steht. Positive Vorzeichen (+) und fhrende Nullen (0) 
mssen nicht geschrieben werden.

Elemente der NC-Hochsprache  

Da der Befehlssatz nach DIN 66025 fr die Programmierung der komplexen 
Bearbeitungsablufe in modernen Werkzeugmaschinen nicht mehr ausreichend ist, wurde er 
um die Elemente der NC-Hochsprache erweitert.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

43

(cid:54)(cid:68)(cid:87)(cid:93)(cid:36)(cid:71)(cid:85)(cid:72)(cid:86)(cid:86)(cid:72)(cid:61)(cid:76)(cid:73)(cid:73)(cid:72)(cid:85)(cid:81)(cid:73)(cid:82)(cid:79)(cid:74)(cid:72)(cid:36)(cid:71)(cid:85)(cid:72)(cid:86)(cid:86)(cid:72)(cid:61)(cid:76)(cid:73)(cid:73)(cid:72)(cid:85)(cid:81)(cid:73)(cid:82)(cid:79)(cid:74)(cid:72)(cid:36)(cid:71)(cid:85)(cid:72)(cid:86)(cid:86)(cid:72)(cid:61)(cid:76)(cid:73)(cid:73)(cid:72)(cid:85)(cid:81)(cid:73)(cid:82)(cid:79)(cid:74)(cid:72)(cid:42)(cid:19)(cid:20)(cid:59)(cid:16)(cid:24)(cid:19)(cid:54)(cid:21)(cid:19)(cid:19)(cid:19)Grundlagen

2.2 Grundlagen der NC-Programmierung

Dazu gehren u. a.:

 Befehle der NC-Hochsprache

Im Unterschied zu den Befehlen nach DIN 66025 bestehen die Befehle der NC-
Hochsprache aus mehreren Adressbuchstaben, z. B.:

 OVR fr Drehzahlkorrektur (Override)

 SPOS fr Spindelpositionieren

 Bezeichner (definierte Namen) fr:

 Systemvariablen

 Anwenderdefinierte Variablen

 Unterprogramme

 Schlsselwrter

 Sprungmarken

 Makros

Hinweis

Ein Bezeichner muss eindeutig sein und darf nicht fr verschiedene Objekte verwendet 
werden.

 Vergleichsoperatoren

 Logische Operatoren

 Rechenfunktionen

 Kontrollstrukturen

Wirksamkeit von Befehlen     

Befehle knnen modal oder satzweise wirken:

 Modal

Modal wirksame Befehle behalten mit dem programmierten Wert so lange ihre Gltigkeit (in 
allen Folgestzen), bis:

 unter dem gleichen Befehl ein neuer Wert programmiert wird.

 ein Befehl programmiert wird, der die Wirkung des bisher gltigen Befehls aufhebt.

 Satzweise

Satzweise wirksame Befehle gelten nur fr den Satz, in dem sie programmiert werden.

Programmende   

Der letzte Satz in den Abarbeitungsreihenfolgen enthlt ein spezielles Wort fr das 
Programmende: M2, M17 bzw. M30.

44

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

2.2 Grundlagen der NC-Programmierung

Grundlagen

2.2.2.2

Satzregeln

Satzanfang    

NC-Stze knnen am Satzanfang durch Satznummern gekennzeichnet werden. Diese 
bestehen aus dem Zeichen "N" und einer positiven ganzen Zahl, z. B.:
N40 ...

Die Reihenfolge der Satznummern ist beliebig, aufsteigende Satznummern sind 
empfehlenswert.

Hinweis

Satznummern mssen innerhalb eines Programms eindeutig sein, um beim Satzsuchlauf ein 
eindeutiges Ergebnis zu erzielen.

Ein Satz endet mit dem Zeichen LF (LINE FEED = neue Zeile).   

Hinweis

Das Zeichen LF muss nicht geschrieben werden. Es wird automatisch durch die 
Zeilenschaltung erzeugt.

Ein Satz kann maximal 512 Zeichen enthalten (inklusive Kommentar und Satzende-Zeichen 
LF).

Hinweis

Im Allgemeinen werden in der aktuellen Satzanzeige am Bildschirm drei Stze mit jeweils 
maximal 66 Zeichen angezeigt. Kommentare werden ebenfalls angezeigt. Meldungen werden 
im eigenen Meldefenster angezeigt.

Satzende  

Satzlnge  

Reihenfolge der Anweisungen  

Um den Satzaufbau bersichtlich zu gestalten, sollten die Anweisungen in einem Satz in 
folgender Reihenfolge angeordnet werden:
N G X Y Z F S T D M H

Adresse

Bedeutung

N

G

X,Y,Z

F

Adresse der Satznummer

Wegbedingung

Weginformation

Vorschub

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

45

Grundlagen

2.2 Grundlagen der NC-Programmierung

Drehzahl

Werkzeug

Werkzeugkorrekturnummer

Zusatzfunktion

Hilfsfunktion

S

T

D

M

H

Hinweis

Einige Adressen knnen innerhalb eines Satzes auch mehrfach verwendet werden, z. B.:

G, M, H

2.2.2.3

Wertzuweisungen

Den Adressen knnen Werte zugewiesen werden. Dabei gelten folgende Regeln: 

 Ein "="-Zeichen zwischen der Adresse und dem Wert muss geschrieben werden, wenn:

 die Adresse aus mehr als einem Buchstaben besteht.

 der Wert aus mehr als einer Konstanten besteht.

Das "="-Zeichen kann entfallen, wenn die Adresse ein einzelner Buchstabe ist und der Wert 
aus nur einer Konstanten besteht.

 Vorzeichen sind erlaubt.

 Trennzeichen nach dem Adressbuchstaben sind zulssig.

Beispiele:

X10

X1=10

Wertzuweisung (10) an die Adresse X, "=" nicht erforderlich

Wertzuweisung (10) an eine Adresse (X) mit numerischer Erweite
rung (1), "=" erforderlich

X=10*(5+SIN(37.5))

Wertzuweisung ber einen numerischen Ausdruck, "=" erforderlich

Hinweis

Nach einer numerischen Erweiterung muss immer eines der Sonderzeichen "=", "(", "[", ")", "]", 
"," oder ein Operator folgen, um die Adresse mit numerischer Erweiterung von einem 
Adressbuchstaben mit Wert zu unterscheiden.

2.2.2.4

Kommentare

Um die Verstndlichkeit eines NC-Programms zu erhhen, knnen die NC-Stze mit 
Kommentaren versehen werden. 

Ein Kommentar steht am Ende eines Satzes und wird durch Strichpunkt (";") vom Programmteil 
des NC-Satzes abgetrennt.

46

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

2.2 Grundlagen der NC-Programmierung

Grundlagen

Beispiel 1:

Programmcode

Kommentar

N10 G1 F100 X10 Y20

; Kommentar zur Erluterung des NC-Satzes

Beispiel 2:

Programmcode

Kommentar

N10

N20

N50

Hinweis

; Firma G&S, Auftrag Nr. 12A71

; Programm erstellt von H. Mller, Abt. TV 4, am 21.11.94

; Teil Nr. 12, Gehuse fr Tauchpumpe Typ TP23A

Kommentare werden abgespeichert und erscheinen beim Programmlauf in der aktuellen 
Satzanzeige.

2.2.2.5

Ausblenden von Stzen

NC-Stze, die nicht bei jedem Programmlauf ausgefhrt werden sollen, knnen fr die 
Abarbeitung ausgeblendet werden. Anwendung findet diese Funktion z. B. beim Testen bzw. 
Einfahren neuer Programme.

Ausblendstze  

Die Stze, die ausgeblendet werden sollen, werden mit dem Zeichen "/" (Schrgstrich) vor der 
Satznummer gekennzeichnet. Es knnen auch mehrere Stze in Folge ausgeblendet werden. 
Die Anweisungen in den ausgeblendeten Stzen werden nicht ausgefhrt, das Programm wird 
mit dem jeweils nchsten nicht ausgeblendeten Satz fortgefhrt.

Beispiel:

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

47

(cid:18)(cid:49)(cid:21)(cid:19)(cid:3)(cid:17)(cid:17)(cid:17)(cid:49)(cid:20)(cid:19)(cid:3)(cid:17)(cid:17)(cid:17)(cid:49)(cid:22)(cid:19)(cid:3)(cid:17)(cid:17)(cid:17)(cid:18)(cid:49)(cid:23)(cid:19)(cid:3)(cid:17)(cid:17)(cid:17)(cid:18)(cid:49)(cid:24)(cid:19)(cid:3)(cid:17)(cid:17)(cid:17)(cid:18)(cid:49)(cid:25)(cid:19)(cid:3)(cid:17)(cid:17)(cid:17)(cid:49)(cid:26)(cid:19)(cid:3)(cid:17)(cid:17)(cid:17)(cid:49)(cid:27)(cid:19)(cid:3)(cid:17)(cid:17)(cid:17)(cid:49)(cid:28)(cid:19)(cid:3)(cid:17)(cid:17)(cid:17)(cid:49)(cid:20)(cid:19)(cid:19)(cid:3)(cid:17)(cid:17)(cid:17)(cid:49)(cid:20)(cid:20)(cid:19)(cid:3)(cid:17)(cid:17)(cid:17)(cid:49)(cid:20)(cid:21)(cid:19)Grundlagen

2.2 Grundlagen der NC-Programmierung

Programmcode

Kommentar

N10 

/N20 

N30 

/N40 

/N50 

/N60 

N70 

...

; wird abgearbeitet

; ausgeblendet

; wird abgearbeitet

; ausgeblendet

; ausgeblendet

; ausgeblendet

; wird abgearbeitet

Ausblendebenen 

Stzen knnen Ausblendebenen (max. 10) zugeordnet werden, die ber die Bedienoberflche 
oder das PLC-Anwenderprogramm aktivierbar sind.

Die Zuordnung erfolgt im NC-Programm durch Voranstellen eines Schrgstrichs, gefolgt von 
der Nummer der Ausblendebene. Pro Satz kann nur eine Ausblendebene angegeben werden.

Beispiel:

Programmcode

Kommentar

/ ...

/0 ...

/1 N010...

/2 N020...

...

/7 N100...

/8 N080...

/9 N090...

Hinweis

; Satz wird ausgeblendet (1. Ausblendebene)

; Satz wird ausgeblendet (1. Ausblendebene)

; Satz wird ausgeblendet (2. Ausblendebene)

; Satz wird ausgeblendet (3. Ausblendebene)

; Satz wird ausgeblendet (8. Ausblendebene)

; Satz wird ausgeblendet (9. Ausblendebene)

; Satz wird ausgeblendet (10. Ausblendebene)

nderungen der auszublendenden Ebenen sind nur im STOP/Reset-Zustand der Steuerung 
mglich.

Hinweis

Wie viele Ausblendebenen nutzbar sind, ist abhngig von einem Anzeige-Maschinendatum.

Hinweis

Das Ausblenden von Stzen ist auch bei einem Satzsuchlauf aktiv.

Hinweis

Vernderbare Programmablufe knnen auch durch den Einsatz von System- und 
Anwendervariablen fr bedingte Sprnge erzeugt werden.

48

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
2.3 Anlegen eines NC-Programms

Grundlagen

2.3

Anlegen eines NC-Programms

2.3.1

Grundstzliches Vorgehen

Beim Erstellen eines NC-Programms ist die Programmierung, also die Umsetzung der 
einzelnen Arbeitsschritte in die NC-Sprache, meist nur ein kleiner Teil der Programmier-Arbeit.

Vor der eigentlichen Programmierung sollte die Planung und Vorbereitung der Arbeitsschritte 
im Vordergrund stehen. Je genauer Sie sich vorab berlegen, wie das NC-Programm eingeteilt 
und aufgebaut sein soll, umso schneller und einfacher wird die eigentliche Programmierung 
von der Hand gehen und umso bersichtlicher und weniger fehleranfllig wird das fertige NC-
Programm sein. bersichtliche Programme erweisen sich auerdem besonders dann als 
vorteilhaft, wenn spter nderungen vorgenommen werden sollen.

Da nicht jedes Teil identisch aussieht, ist es nicht sinnvoll, jedes Programm genau nach 
derselben Methode zu erstellen. Fr die meisten Flle wird sich die folgende Vorgehensweise 
aber als zweckmig erweisen.

Vorgehensweise

1. Werkstckzeichnung vorbereiten

 Werkstcknullpunkt festlegen

 Koordinatensystem einzeichnen

 Eventuell fehlende Koordinaten berechnen

2. Bearbeitungsablauf festlegen

 Welche Werkzeuge werden wann und zur Bearbeitung welcher Kontur eingesetzt?

 In welcher Reihenfolge werden die Einzelelemente des Werkstcks gefertigt?

 Welche Einzelelemente wiederholen sich (evtl. auch gedreht) und sollten in einem 

Unterprogramm abgelegt werden?

 Gibt es in anderen Teileprogrammen bzw. Unterprogrammen Teilkonturen, die fr das 

aktuelle Werkstck wiederverwendet werden knnen?

 Wo ist Nullpunktverschieben, Drehen, Spiegeln, Skalieren zweckmig oder notwendig 

(Frame-Konzept)?

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

49

Grundlagen

2.3 Anlegen eines NC-Programms

3. Arbeitsplan aufstellen

Schrittweise alle Bearbeitungsvorgnge der Maschine festlegen, z. B.:

 Eilgangbewegungen zum Positionieren

 Werkzeugwechsel

 Bearbeitungsebene festlegen

 Freifahren zum Nachmessen

 Spindel, Khlmittel ein-/ausschalten

 Werkzeugdaten aufrufen

 Zustellen

 Bahnkorrektur

 Anfahren an die Kontur

 Wegfahren von der Kontur

 etc.

4. Arbeitsschritte in die Programmiersprache bersetzen

 Jeden Einzelschritt als NC-Satz (bzw. NC-Stze) aufschreiben.

5. Alle Einzelschritte zu einem Programm zusammenfassen

2.3.2

Verfgbare Zeichen

Fr die Erstellung von NC-Programmen stehen folgende Zeichen zur Verfgung:     

 Grobuchstaben:

A, B, C, D, E, F, G, H, I, J, K, L, M, N,(O),P, Q, R, S, T, U, V, W, X, Y, Z

 Kleinbuchstaben:

a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z

 Ziffern:

0, 1, 2, 3, 4, 5, 6, 7, 8, 9

 Sonderzeichen:

Siehe nachfolgende Tabelle!

Sonderzeichen  

Bedeutung

%

(

)

[

]

<

>

: 

= 

Programmanfangszeichen (nur fr Programmerstellung am externen PC)

Klammerung von Parametern oder in Ausdrcken

Klammerung von Parametern oder in Ausdrcken

Klammerung von Adressen oder Feldindizes

Klammerung von Adressen oder Feldindizes

kleiner

grer

Hauptsatz, Labelabschluss, Kettungsoperator

Zuweisung, Teil von Gleichheit

50

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Sonderzeichen  

Bedeutung

2.3 Anlegen eines NC-Programms

Grundlagen

/

*

+

-

"

'

$

s_

?

!

.

,

;

&

LF

Tabulator

Leerzeichen

Hinweis

Division, Satzunterdrckung

Multiplikation

Addition

Subtraktion, negatives Vorzeichen

Anfhrungszeichen, Kennung fr Zeichenkette  

Hochkomma, Kennung fr spezielle Zahlenwerte: hexadezimal, binr  

systemeigene Variablenkennung  

Unterstrich, zu Buchstaben gehrig

reserviert

reserviert

Dezimalpunkt

Komma, Trennzeichen von Parametern

Kommentarbeginn

Formatierungszeichen, gleiche Wirkung wie Leerzeichen

Satzende  

Trennzeichen

Trennzeichen (Blank)

Buchstabe "O" nicht mit der Zahl "0" verwechseln!

Hinweis

Klein- und Grobuchstaben werden nicht unterschieden (Ausnahme: Werkzeugaufruf).

Hinweis

Nicht darstellbare Sonderzeichen werden wie Leerzeichen behandelt.

2.3.3

Programmkopf

Die NC-Stze, die den eigentlichen Bewegungsstzen zur Herstellung der Werkstckkontur 
vorangestellt sind, werden als Programmkopf bezeichnet. 

Der Programmkopf enthlt Informationen / Anweisungen bezglich:

 Werkzeugwechsel

 Werkzeugkorrekturen

 Spindelbewegung

 Vorschubregelung

 Geometrieeinstellungen (Nullpunktverschiebung, Wahl der Arbeitsebene)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

51

Grundlagen

2.3 Anlegen eines NC-Programms

Programmkopf beim Drehen

Das folgende Beispiel zeigt, wie der Programmkopf eines NC-Programms zum Drehen 
typischerweise aufgebaut ist:

Programmcode

Kommentar

N10 G0 G153 X200 Z500 T0 D0

N20 T5

N30 D1

N40 G96 S300 LIMS=3000 M4 M8

; Werkzeugtrger zurckziehen, bevor Werkzeu-
grevolver geschwenkt wird.

; Werkzeug 5 einschwenken.

; Schneidendatensatz des Werkzeugs aktivieren.

; Konstante Schnittgeschwindigkeit (Vc) = 300 m/
min, Drehzahlbegrenzung = 3000 U/min, Drehrich-
tung links, Khlung ein.

N50 DIAMON

; X-Achse wird im Durchmesser programmiert.

N60 G54 G18 G0 X82 Z0.2

; Nullpunktverschiebung und Arbeitsebene aufru-
fen, Startposition anfahren.

...

Programmkopf beim Frsen

Das folgende Beispiel zeigt, wie der Programmkopf eines NC-Programms zum Frsen 
typischerweise aufgebaut ist:

Programmcode

N10 T="SF12"

N20 M6

N30 D1

N40 G54 G17

N50 G0 X0 Y0 Z2 S2000 M3 M8

...

Kommentar

; alternativ: T123

; Werkzeugwechsel auslsen

; Schneidendatensatz des Werkzeugs aktivieren

; Nullpunktverschiebung und Arbeitsebene

; Anfahrbewegung zum Werkstck, Spindel und 
Khlmittel ein

Wenn mit Werkzeugorientierung / Koordinatentransformationen gearbeitet wird, sollten am 
Programmanfang evtl. noch aktive Transformationen abgelscht werden:

Programmcode

N10 CYCLE800()

N20 TRAFOOF

...

Kommentar

; Rcksetzten der geschwenkten Ebene

; Rcksetzen von TRAORI, TRANSMIT, TRACYL, ...

2.3.4

Programmbeispiele

2.3.4.1

Beispiel 1: Erste Programmierschritte

Programmbeispiel 1 soll dazu dienen, erste Programmierschritte durchzufhren und zu testen.

52

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
2.3 Anlegen eines NC-Programms

Grundlagen

Vorgehensweise

1. Teileprogramm neu anlegen (Namen)

2. Teileprogramm editieren

3. Teileprogramm auswhlen

4. Einzelsatz aktivieren

5. Teileprogramm starten

Hinweis

Damit das Programm auf der Maschine ablaufen kann, mssen Maschinendaten 
entsprechend gesetzt sein ( siehe Angaben des Maschinenherstellers!).

Hinweis

Beim Testen eines Programms knnen Alarme auftreten, die erst zurckgesetzt werden 
mssen.

NC-Programm

Programmcode

Kommentar

N10 MSG("DAS IST MEIN NC-PROGRAMM")

N20 F200 S900 T1 D2 M3

N30 G0 X100 Y100

N40 G1 X150

N50 Y120

N60 X100

N70 Y100

N80 G0 X0 Y0

N100 M30

; Meldung "DAS IST MEIN NC-PROGRAMM" 
in Alarmzeile ausgeben

; Vorschub, Spindel, Werkzeug, Werk-
zeugkorrektur, Spindel rechts

; Position im Eilgang anfahren

; Rechteck mit Vorschub, Gerade in X

; Gerade in Y

; Gerade in X

; Gerade in Y

; Rckfahren im Eilgang

; Satzende

2.3.4.2

Beispiel 2: NC-Programm zum Drehen

Programmbeispiel 2 ist fr die Bearbeitung eines Werkstcks auf einer Drehmaschine 
vorgesehen. Es beinhaltet Radiusprogrammierung und Werkzeugradiuskorrektur.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

53

Grundlagen

2.3 Anlegen eines NC-Programms

Mazeichnung des Werkstcks

NC-Programm

Programmcode

N5 G0 G53 X280 Z380 D0

Kommentar

; Startpunkt

N10 TRANS X0 Z250

N15 LIMS=4000

N20 G96 S250 M3

N25 G90 T1 D1 M8

N30 G0 G42 X-1.5 Z1

N35 G1 X0 Z0 F0.25

; Nullpunktverschiebung

; Drehzahlbegrenzung (G96)

; konstante Schnittgeschwindigkeit anwhlen

; Werkzeuganwahl und Korrektur anwhlen

; Werkzeug anstellen mit Werkzeugradiuskorrektur

N40 G3 X16 Z-4 I0 K-10

; Radius 10 drehen

N45 G1 Z-12

N50 G2 X22 Z-15 CR=3

; Radius 3 drehen

N55 G1 X24

N60 G3 X30 Z-18 I0 K-3

; Radius 3 drehen

N65 G1 Z-20

N70 X35 Z-40

N75 Z-57

N80 G2 X41 Z-60 CR=3

; Radius 3 drehen

N85 G1 X46

N90 X52 Z-63

54

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:53)(cid:20)(cid:19)(cid:53)(cid:27)(cid:53)(cid:22)(cid:53)(cid:22)(cid:53)(cid:22)(cid:23)(cid:24)(cid:114)(cid:26)(cid:19)(cid:27)(cid:19)(cid:20)(cid:21)(cid:20)(cid:24)(cid:20)(cid:27)(cid:21)(cid:19)(cid:23)(cid:19)(cid:24)(cid:26)(cid:25)(cid:19)(cid:25)(cid:23)(cid:154)(cid:3)(cid:22)(cid:19)(cid:154)(cid:3)(cid:22)(cid:24)(cid:154)(cid:3)(cid:20)(cid:25)(cid:23)(cid:154)(cid:3)(cid:24)(cid:19)(cid:14)(cid:59)(cid:14)(cid:61) 
 
 
 
 
 
 
 
2.3 Anlegen eines NC-Programms

Grundlagen

Programmcode

Kommentar

N95 G0 G40 G97 X100 Z50 M9

N100 T2 D2

N105 G96 S210 M3

; Werkzeugradiuskorrektur abwhlen und Werkzeug-
wechselpunkt anfahren

; Werkzeug aufrufen und Korrektur anwhlen

; konstante Schnittgeschwindigkeit anwhlen

N110 G0 G42 X50 Z-60 M8

; Werkzeug anstellen mit Werkzeugradiuskorrektur

N115 G1 Z-70 F0.12

; Durchmesser 50 drehen

N120 G2 X50 Z-80 I6.245 K-5

; Radius 8 drehen

N125 G0 G40 X100 Z50 M9

; Werkzeug abheben und Werkzeugradiuskorrektur 
abwhlen

N130 G0 G53 X280 Z380 D0 M5

; Werkzeugwechselpunkt verfahren

N135 M30

; Programm-Ende

2.3.4.3

Beispiel 3: NC-Programm zum Frsen

Programmbeispiel 3 ist fr die Bearbeitung eines Werkstcks auf einer Vertikalfrsmaschine 
vorgesehen. Es beinhaltet Oberflchen- und Seitenfrsen sowie Bohren.

Mazeichnung des Werkstcks

Seitenansicht

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

55

(cid:20)(cid:22)(cid:17)(cid:24)(cid:21)(cid:19)(cid:24)(cid:20)(cid:19)(cid:3544)(cid:3)(cid:24)(cid:3544)(cid:3)(cid:22)(cid:19)Grundlagen

2.3 Anlegen eines NC-Programms

Aufsicht

NC-Programm

Programmcode

N10 T="PF60"

N20 M6

N30 S2000 M3 M8

N40 G90 G64 G54 G17 G0 X-72 Y-72

N50 G0 Z2

N60 G450 CFTCP

N70 G1 Z-10 F3000

N80 G1 G41 X-40

N90 G1 X-40 Y30 RND=10 F1200

N100 G1 X40 Y30 CHR=10

N110 G1 X40 Y-30

N120 G1 X-41 Y-30

N130 G1 G40 Y-72 F3000

Kommentar

; Voranwahl des Werkzeugs mit dem Namen 
PF60.

; Werkzeug in die Spindel einwechseln.

; Drehzahl, Drehrichtung, Khlung ein.

; Grundeinstellungen der Geometrie und 
Startpunkt anfahren.

; Z-Achse auf Sicherheitsabstand.

; Verhalten bei aktivem G41/G42.

; Frser auf Eingriffstiefe mit Vor-
schub=3000mm/min.

; Einschalten der Frserradiuskorrektur.

; Fahren an der Kontur mit Vor-
schub=1200mm/min.

; Abwahl der Frserradiuskorrektur.

56

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:27)(cid:19)(cid:25)(cid:19)(cid:27)(cid:19)(cid:20)(cid:19)(cid:19)(cid:23)(cid:24)(cid:114)(cid:20)(cid:19)(cid:3)(cid:91)(cid:3)(cid:23)(cid:24)(cid:114)(cid:53)(cid:21)(cid:24)(cid:53)(cid:20)(cid:19) 
 
 
Programmcode

N140 G0 Z200 M5 M9

N150 T="SF10"

N160 M6

N170 S2800 M3 M8

N180 G90 G64 G54 G17 G0 X0 Y0

N190 G0 Z2

2.3 Anlegen eines NC-Programms

Grundlagen

Kommentar

; Ausheben des Frsers, Spindel + Kh-
lung aus.

; Voranwahl des Werkzeugs mit dem Namen 
SF10.

; Werkzeug in die Spindel einwechseln.

; Drehzahl, Drehrichtung, Khlung ein.

; Grundeinstellungen fr Geometrie und 
Startpunkt anfahren.

N200 POCKET4(2,0,1,-5,15,0,0,0,0,0,800,1300,0,21,5,,,2,0.5)

; Aufruf des Taschenfrszyklus.

N210 G0 Z200 M5 M9

N220 T="ZB6"

N230 M6

N240 S5000 M3 M8

N250 G90 G60 G54 G17 X25 Y0

N260 G0 Z2

N270 MCALL CYCLE82(2,0,1,-2.6,,0)

N280  POSITION:

N290  HOLES2(0,0,25,0,45,6)

N300  ENDLABEL:

N310 MCALL

N320 G0 Z200 M5 M9

N330 T="SPB5"

N340 M6

N350 S2600 M3 M8

N360 G90 G60 G54 G17 X25 Y0

; Ausheben des Frsers, Spindel + Kh-
lung aus.

; Zentrierbohrer 6mm aufrufen.

; Genauhalt G60 wegen genauem Positio-
nieren.

; Modaler Aufruf des Bohrzyklus.

; Sprungmarke zur Wiederholung.

; Positionsmuster fr Bohrbild.

; Endkennung fr Wiederholung.

; Rcksetzen des modalen Aufrufs.

; Spiralbohrer D5mm aufrufen.

N370 MCALL CYCLE82(2,0,1,-13.5,,0)

; Modaler Aufruf des Bohrzyklus.

N380  REPEAT POSITION

N390 MCALL

N400 G0 Z200 M5 M9

N410 M30

; Wiederholung der Positionsbeschrei-
bung vom Zentrieren.

; Rcksetzen des Bohrzyklus.

; Programmende.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

57

 
 
 
 
 
 
 
 
 
Grundlagen

2.4 Werkzeugwechsel

2.4

Werkzeugwechsel

Art des Werkzeugwechsels

Hinweis

Die Art des Werkzeugwechsels wird vom Maschinenhersteller bei der Inbetriebnahme 
festgelegt.

Werkzeugwechsel bei Drehmaschinen mit Revolvermagazin

Bei Revolvermagazinen an Drehmaschinen wird der Werkzeugwechsel, also das Suchen und 
Wechseln des Werkzeugs, nur mit dem T-Befehl aufgerufen.

Werkzeugwechsel bei Werkzeugmaschinen mit Ketten-, Scheiben- oder Flchenmagazinen

 Spindel
 Greifer
 Magazin (hier: Kettenmagazin)
 Wechselstelle fr Spindel

58

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:20)(cid:23)(cid:21)(cid:22)Grundlagen

2.4 Werkzeugwechsel

Bei Ketten-, Scheiben- und Flchenmagazinen findet ein Werkzeugwechselvorgang 
normalerweise in zwei Schritten statt:

1. Mit dem T-Befehl wird das Werkzeug im Magazin gesucht.

2. Anschlieend erfolgt mit dem M-Befehl das Einwechseln in die Spindel.

Programmierung des Werkzeugwechsel bei aktiver / nicht aktiver Werkzeugverwaltung

Die Programmierung des Werkzeugwechsels bei aktiver Werkzeugverwaltung unterscheidet 
sich von der Programmierung des Werkzeugwechsels bei nicht aktiver Werkzeugverwaltung. 
Es sind daher beide Varianten beschrieben:  

 Werkzeugwechsel bei aktiver Werkzeugverwaltung (Seite 59)

 Werkzeugwechsel bei nicht aktiver Werkzeugverwaltung (Seite 62)

Programmierung der Arbeitsebene

Mit dem Werkzeugwechsel muss die entsprechende Arbeitsebene (Seite 31) programmiert 
werden (Grundstellung: G18). Damit wird sichergestellt, dass die Werkzeuglngenkorrektur 
der richtigen Achse zugeordnet ist.

Aktivierung der Werkzeugkorrektur

Der Werkzeugwechsel aktiviert die unter einer D-Nummer (Seite 78) gespeicherten 
Werkzeugkorrekturwerte.

2.4.1

Werkzeugwechsel bei aktiver Werkzeugverwaltung

2.4.1.1

Werkzeugwechsel bei aktiver WZV mit T-Befehl

Mit Programmierung des T-Befehls erfolgt ein direkter Werkzeugwechsel. Der Werkzeug-
Aufruf kann ber die T-Nummer oder ber den Werkzeugnamen erfolgen.

Anwendung

Syntax

Bei Drehmaschinen mit Revolvermagazin.

Werkzeug anwhlen
T<Nr>
T=<Nr>
T<n>=<Nr>
T=<Name>
T<n>=<Name>

Werkzeug abwhlen
T0

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

59

Grundlagen

2.4 Werkzeugwechsel

T0=<Nr>

Bedeutung

T:

Adresse zur Werkzeuganwahl inklusive Werkzeugwechsel und Aktivierung der Werk
zeugkorrektur

Als Wertzuweisung ist mglich:

<Nr>:

Nummer des Werkzeugs

Wertebereich:

0 ... 32000

<Name>:

Name des Werkzeugs

Hinweis:
Bei der Programmierung eines Werkzeugnamens muss auf die korrekte 
Schreibweise (Gro-/Kleinschreibung) geachtet werden.

<n>:

Spindelnummer als Adresserweiterung

Hinweis:
Die Mglichkeit, eine Spindelnummer als Adresserweiterung zu programmieren, ist von 
der Projektierung der Maschine abhngig ( siehe Angaben des Maschinenherstellers).

M-Funktion fr den Werkzeugwechsel (gem DIN 66025)

Mit M6 werden das angewhlte Werkzeug (T) und die Werkzeugkorrektur (D...) aktiv.

Abwhlen des aktiven Werkzeugs

M6:

T0:

Beispiel

Programmcode

Kommentar

N10 T="Bohrer" D1

; Einwechseln des Werkzeugs mit Namen "Bohrer" und Aktivie-
ren der Werkzeugkorrektur D1.

...

N70 T0

...

; Werkzeug T="Bohrer" abwhlen.

2.4.1.2

Werkzeugwechsel bei aktiver WZV mit M6

Mit Programmierung des T-Befehls wird das Werkzeug angewhlt. Aktiv wird das Werkzeug 
erst mit M6 (inklusive Werkzeugkorrektur).

Der Werkzeug-Anwahl kann ber die T-Nummer oder ber den Werkzeugnamen erfolgen.

Anwendung

Syntax

Bei Werkzeugmaschinen mit Ketten-, Scheiben- oder Flchenmagazinen.

Werkzeug anwhlen
T<Nr>
T=<Nr>
T<n>=<Nr>

60

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
Grundlagen

2.4 Werkzeugwechsel

T=<Name>
T<n>=<Name>

Werkzeugwechsel
M6

Werkzeug abwhlen
T0
T0=<Nr>

Bedeutung

Beispiel

T:

Adresse zur Werkzeuganwahl

Als Wertzuweisung ist mglich:

<Nr>:

Nummer des Werkzeugs

Wertebereich:

0 ... 32000

<Name>:

Name des Werkzeugs

Hinweis:
Bei der Programmierung eines Werkzeugnamens muss auf die korrekte 
Schreibweise (Gro-/Kleinschreibung) geachtet werden.

<n>:

Spindelnummer als Adresserweiterung

Hinweis:
Die Mglichkeit, eine Spindelnummer als Adresserweiterung zu programmieren, ist von 
der Projektierung der Maschine abhngig ( siehe Angaben des Maschinenherstellers).

M-Funktion fr den Werkzeugwechsel (gem DIN 66025)

Mit M6 werden das angewhlte Werkzeug (T) und die Werkzeugkorrektur (D...) aktiv.

Abwhlen des aktiven Werkzeugs

M6:

T0:

Programmcode

Kommentar

N10 T="Fraeser" M6

; Einwechseln des Werkzeugs mit Namen "Fraeser".

N20 D1

; Anwahl Werkzeuglngenkorrektur.

N30 G1 X10 ...

; Arbeiten mit Werkzeug T="Fraeser".

...

N70 T="Bohrer"

; Vorwahl von Werkzeug mit Namen "Bohrer".

N80 ...

...

N100 M6

; Arbeiten mit Werkzeug T="Fraeser".

; Einwechseln des Werkzeugs T="Bohrer".

N140 D1 G1 X10 ...

; Arbeiten mit Werkzeug T="Bohrer".

...

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

61

 
 
 
Grundlagen

2.4 Werkzeugwechsel

2.4.2

Werkzeugwechsel bei nicht aktiver Werkzeugverwaltung

2.4.2.1

Werkzeugwechsel bei nicht aktiver WZV mit T-Nummer

Mit Programmierung der T-Nummer erfolgt ein direkter Werkzeugwechsel. 

Anwendung

Syntax

Bedeutung

Bei Drehmaschinen mit Revolvermagazin.

Werkzeug anwhlen
T<Nr>
T=<Nr>
T<n>=<Nr>

Werkzeug abwhlen
T0
T0=<Nr>

T:

Adresse zur Werkzeuganwahl inklusive Werkzeugwechsel und Aktivierung der Werk
zeugkorrektur

<Nr>:

Nummer des Werkzeugs

Wertebereich:

0 ... 32000

<n>:

Spindelnummer als Adresserweiterung

Hinweis:
Die Mglichkeit, eine Spindelnummer als Adresserweiterung zu programmieren, ist von 
der Projektierung der Maschine abhngig ( siehe Angaben des Maschinenherstellers).

T0:

Abwhlen des aktiven Werkzeugs

Beispiel

Programmcode

Kommentar

N10 T1 D1

...

N70 T0

...

; Einwechseln von Werkzeug T1 und Aktivieren der Werkzeugkor-
rektur D1.

; Werkzeug T1 abwhlen.

2.4.2.2

Werkzeugwechsel bei nicht aktiver WZV mit M6

Mit der Programmierung des T-Befehls wird das Werkzeug angewhlt. Aktiv wird das 
Werkzeug erst mit M6 (inklusive Werkzeugkorrektur).

62

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
Anwendung

Syntax

Bedeutung

Beispiel

Grundlagen

2.4 Werkzeugwechsel

Bei Werkzeugmaschinen mit Ketten-, Scheiben- oder Flchenmagazinen.

Werkzeug anwhlen
T<Nr>
T=<Nr>
T<n>=<Nr>

Werkzeugwechsel
M6

Werkzeug abwhlen
T0
T0=<Nr>

T:

<Nr>:

Adresse zur Werkzeuganwahl

Nummer des Werkzeugs

Wertebereich:

0 ... 32000

<n>:

Spindelnummer als Adresserweiterung

Hinweis:
Die Mglichkeit, eine Spindelnummer als Adresserweiterung zu programmieren, ist von 
der Projektierung der Maschine abhngig ( siehe Angaben des Maschinenherstellers).

M-Funktion fr den Werkzeugwechsel (gem DIN 66025)

Mit M6 werden das angewhlte Werkzeug (T) und die Werkzeugkorrektur (D...) aktiv.

Abwhlen des aktiven Werkzeugs

M6:

T0:

Programmcode

N10 T1 M6

N20 D1

Kommentar

; Einwechseln von Werkzeug T1.

; Anwahl Werkzeuglngenkorrektur.

N30 G1 X10 ...

; Arbeiten mit T1.

...

N70 T5

N80 ...

...

N100 M6

; Vorwahl von Werkzeug T5.

; Arbeiten mit T1.

; Einwechseln von Werkzeug T5.

N110 D1 G1 X10 ...

; Arbeiten mit Werkzeug T5

...

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

63

 
 
 
Grundlagen

2.4 Werkzeugwechsel

2.4.3

Verhalten bei fehlerhafter T-Programmierung

Das Verhalten bei einer fehlerhaften T-Programmierung ist abhngig von der Projektierung der 
Maschine:

MD22562 TOOL_CHANGE_ERROR_MODE

Bit Wert

Bedeutung

7

0

1

Grundstellung!

Bei der T-Programmierung wird sofort geprft, ob die T-Nummer dem NC bekannt ist. 
Wenn dies nicht der Fall, wird ein Alarm abgesetzt.

Die programmierte T-Nummer wird erst geprft, wenn die D-Anwahl erfolgt ist. Wenn 
die T-Nummer dem NC nicht bekannt ist, dann wird bei D-Anwahl ein Alarm gesetzt.

Dieses Verhalten ist dann gewnscht, wenn die T-Programmierung z. B. auch eine 
Positionierung bewirken soll und dafr die Werkzeug-Daten nicht vorhanden sein ms
sen (Revolver-Magazin).

64

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Grundlagen

2.5 Werkzeugkorrekturen

2.5

Werkzeugkorrekturen

2.5.1

Programmierte Kontur und Werkzeugbahn

Werkstckmae werden direkt programmiert (z. B. nach Fertigungszeichnung). 
Werkzeugdaten wie Frserdurchmesser, Schneidenlage der Drehmeiel (linker / rechter 
Drehmeiel) und Werkzeuglngen mssen daher bei der Programmerstellung nicht 
bercksichtigt werden.

Die Steuerung korrigiert den Verfahrweg

Bei der Fertigung eines Werkstcks werden die Werkzeugwege abhngig von der jeweiligen 
Werkzeuggeometrie so gesteuert, dass mit jedem eingesetzten Werkzeug die programmierte 
Kontur hergestellt werden kann.

Damit die Steuerung die Werkzeugwege berechnen kann, mssen die Werkzeugdaten im 
Werkzeugkorrekturspeicher der Steuerung eingetragen sein. ber das NC-Programm werden 
lediglich das bentigte Werkzeug (T...) und der bentigte Korrekturdatensatz (D...) aufgerufen.

Die Steuerung holt sich whrend der Programmverarbeitung die bentigten Korrekturdaten 
aus dem Werkzeugkorrekturspeicher und korrigiert fr unterschiedliche Werkzeuge individuell 
die Werkzeugbahn:

2.5.2

Werkzeuglngenkorrektur

Mit der Werkzeuglngenkorrektur werden die Lngenunterschiede zwischen den eingesetzten 
Werkzeugen ausgeglichen.  

Als Werkzeuglnge gilt der Abstand zwischen Werkzeugtrgerbezugspunkt und 
Werkzeugspitze:

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

65

(cid:51)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)(cid:76)(cid:72)(cid:85)(cid:87)(cid:72)(cid:3)(cid:46)(cid:82)(cid:81)(cid:87)(cid:88)(cid:85)(cid:58)(cid:72)(cid:85)(cid:78)(cid:86)(cid:87)(cid:190)(cid:70)(cid:78)(cid:46)(cid:82)(cid:85)(cid:85)(cid:76)(cid:74)(cid:76)(cid:72)(cid:85)(cid:87)(cid:72)(cid:85)(cid:3)(cid:58)(cid:72)(cid:85)(cid:78)(cid:93)(cid:72)(cid:88)(cid:74)(cid:90)(cid:72)(cid:74)Grundlagen

2.5 Werkzeugkorrekturen

T

P

Werkzeugtrgerbezugspunkt

Werkzeugspitze

Diese Lnge wird vermessen und zusammen mit vorgebbaren Verschleiwerten in den 
Werkzeug-Korrekturspeicher der Steuerung eingegeben. Hieraus errechnet die Steuerung die 
Verfahrbewegungen in Zustellrichtung.

Hinweis

Der Korrekturwert der Werkzeuglnge ist abhngig von der rumlichen Orientierung des 
Werkzeugs.

2.5.3

Werkzeugradiuskorrektur

Kontur und Werkzeugbahn sind nicht identisch. Der Frser- bzw. Schneidenmittelpunkt muss 
entsprechend des Werkzeugradius auf einer quidistanten zur Kontur 
(Werkzeugmittelpunktsbahn) verfahren werden. Dazu wird von der Steuerung whrend der 
Abarbeitung des Programms die programmierte Werkzeugmittelpunktsbahn anhand des 
Werkzeugradius des aktiven Werkzeugs (Werkzeug-Korrekturspeicher) so verschoben, dass 
die Werkzeugschneide exakt an der programmierten Kontur verfahren wird. 

R

S

Werkzeugradius

Schneidenmittelpunkt

66

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:55)(cid:51)(cid:51)(cid:55)(cid:55)(cid:51)(cid:51)(cid:55)(cid:134)(cid:84)(cid:88)(cid:76)(cid:71)(cid:76)(cid:86)(cid:87)(cid:68)(cid:81)(cid:87)(cid:72)(cid:134)(cid:84)(cid:88)(cid:76)(cid:71)(cid:76)(cid:86)(cid:87)(cid:68)(cid:81)(cid:87)(cid:72)(cid:54)(cid:53)Grundlagen

2.5 Werkzeugkorrekturen

Die Werkzeugradiuskorrektur ist ausfhrlich beschrieben in Kapitel 
"Werkzeugradiuskorrekturen (Seite 246)".

Siehe auch

2 1/2 D-Werkzeugkorrektur (CUT2D, CUT2DD, CUT2DF, CUT2DFD) (Seite 281)

2.5.4

Werkzeug-Korrekturspeicher

Im Werkzeug-Korrekturspeicher der Steuerung mssen fr jede Werkzeug-Schneide folgende 
Daten vorhanden sein: 

 Werkzeugtyp

 Schneidenlage

 Geometrische Werkzeug-Gren (Lnge, Radius)

Diese Daten werden als Werkzeug-Parameter (max. 25) eingetragen. Welche Parameter fr 
ein Werkzeug bentigt werden, ist abhngig vom Werkzeugtyp. Nicht bentigte Werkzeug-
Parameter sind mit dem Wert "Null" zu belegen (entspricht der Vorbelegung vom System).

Hinweis

Einmal in den Korrekturspeicher eingetragene Werte werden bei jedem Werkzeug-Aufruf 
mitverrechnet.

Werkzeugtyp

Schneidenlage    

Der Werkzeugtyp (Bohrer, Frser oder Drehwerkzeuge) bestimmt, welche Geometrieangaben 
erforderlich sind und wie diese verrechnet werden.

Die Schneidenlage beschreibt die Lage der Werkzeugspitze in Bezug auf den 
Schneidenmittelpunkt. Die Schneidenlage wird zusammen mit dem Schneidenradius zur 
Berechnung der Werkzeugradiuskorrektur bei Drehwerkzeugen (Werkzeugtyp 5xx) 
(Seite 74) bentigt.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

67

Grundlagen

2.5 Werkzeugkorrekturen

Geometrische Werkzeug-Gren (Lnge, Radius)

T

R

L

Werkzeugtrgerbezugspunkt

Werkzeugradius

Werkzeuglnge

Die geometrischen Werkzeug-Gren bestehen aus mehreren Komponenten (Geometrie, 
Verschlei). Die Komponenten verrechnet die Steuerung zu einer resultierenden Gre (z. B. 
Gesamtlnge 1, Gesamtradius). Das jeweilige Gesamtma kommt bei Aktivierung des 
Korrekturspeichers zur Wirkung.

Wie diese Werte in den Achsen verrechnet werden, bestimmen der Werkzeugtyp und die 
aktuelle Ebene (G17/G18/G19).

2.5.5

Werkzeugtypen

2.5.5.1

Werkzeugtypnummer und Werkzeuggruppen

Jedem Werkzeugtyp ist eine eindeutige 3-stellige Nummer zugeordnet. ber die erste Ziffer 
(Hunderterstelle) erfolgt die Zuordnung des Werkzeugs zu einer der folgenden Technologien 
bzw. Werkzeuggruppen:

Werkzeugtyp

Werkzeuggruppe

1xy

2xy

3xy

4xy

5xy

6xy

7xy

Frser (Seite 69) 

Bohrer (Seite 71) 

reserviert

Schleifwerkzeuge (Seite 72) 

Drehwerkzeuge (Seite 74) 

reserviert

Sonderwerkzeuge (Seite 76)

68

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:47)(cid:53)(cid:55)2.5.5.2

Frswerkzeuge

Innerhalb der Werkzeuggruppe "Frswerkzeuge" gibt es folgende Werkzeugtypen:

Grundlagen

2.5 Werkzeugkorrekturen

100

110

111

120

121

130

131

140

145

150

151

155

156

157

160

Frswerkzeug nach CLDATA (Cutter Location Data)

Kugelkopffrser

Zylindrischer Gesenkfrser

Schaftfrser ohne Eckenverrundung

Schaftfrser mit Eckenverrundung

Winkelkopffrser ohne Eckenverrundung

Winkelkopffrser mit Eckenverrundung

Planfrser

Gewindefrser

Scheibenfrser

Sge

Kegelstumpffrser ohne Eckenverrundung

Kegelstumpffrser mit Eckenverrundung

Kegeliger Gesenkfrser

Bohrgewindefrser

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

69

Grundlagen

2.5 Werkzeugkorrekturen

Werkzeugparameter

Die folgenden Abbildungen geben einen berblick, welche Werkzeugparameter bei 
Frswerkzeugen in den Korrekturspeicher eingetragen werden:




T

T'

L1 

L1'

Werkzeug

Werkzeugaufnahme

Werkzeugadapter

Adapterbezugspunkt (bei eingestecktem Werkzeug = Werkzeugtrgerbezugspunkt)

Werkzeughalterbezugspunkt

Geometrie - Lnge 1

Adapterma - Lnge 1

L1 + L1' Gesamtlnge L1

R

Radius

Werkzeugparameter

Bedeutung

$TC_DP1

$TC_DP3

$TC_DP6

$TC_DP21

Werkzeugtyp 1xy

Geometrie - Lnge 1

Geometrie - Radius

Adapterma - Lnge 1

 Verschleiwerte entsprechend Erfordernis.

 brige Werte sind auf 0 zu setzen.

70

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:20)(cid:21)(cid:22)(cid:53)(cid:47)(cid:20)(cid:47)(cid:20)(cid:3)(cid:14)(cid:3)(cid:47)(cid:20)(cid:10)(cid:47)(cid:20)(cid:10)(cid:55)(cid:55)(cid:10)Grundlagen

2.5 Werkzeugkorrekturen

T

T'

L1

R

L1'

L2'

L3'

Werkzeugtrgerbezugspunkt

Werkzeughalterbezugspunkt

Geometrie - Lnge 1

Werkzeugradius

Basisma - Lnge 1

Basisma - Lnge 2

Basisma - Lnge 3

Werkzeugparameter

Bedeutung

$TC_DP1

$TC_DP3

$TC_DP6

$TC_DP21

$TC_DP22

$TC_DP23

Werkzeugtyp

Geometrie - Lnge 1

Geometrie - Radius

Basisma - Lnge 1

Basisma - Lnge 2

Basisma - Lnge 3

 Verschleiwerte entsprechend Erfordernis.

 brige Werte sind auf 0 zu setzen.

2.5.5.3

Bohrer

Innerhalb der Werkzeuggruppe "Bohrer" gibt es folgende Werkzeugtypen:

Nr.

200

205

210

Werkzeugtyp

Spiralbohrer

Vollbohrer

Bohrstange

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

71

(cid:47)(cid:22)(cid:10)(cid:53)(cid:55)(cid:10)(cid:55)(cid:47)(cid:21)(cid:10)(cid:47)(cid:20)(cid:47)(cid:20)(cid:10)Grundlagen

2.5 Werkzeugkorrekturen

Nr.

220

230

231

240

241

242

250

Werkzeugtyp

Zentrierbohrer

Spitzsenker

Flachsenker

Gewindebohrer Regelgewinde

Gewindebohrer Feingewinde

Gewindebohrer Withworthgewinde

Reibahle

Werkzeugparameter

Die folgende Abbildung gibt einen berblick, welche Werkzeugparameter bei Bohrern in den 
Korrekturspeicher eingetragen werden: 

T

L1

Werkzeugtrgerbezugspunkt

Lnge 1

Werkzeugparameter

Bedeutung

$TC_DP1

$TC_DP3

Werkzeugtyp

Geometrie - Lnge 1

 Verschleiwerte entsprechend Erfordernis.

 brige Werte sind auf 0 zu setzen.

2.5.5.4

Schleifwerkzeuge

Innerhalb der Werkzeuggruppe "Schleifwerkzeuge" gibt es folgende Werkzeugtypen: 

400

401

402

403

410

411

412

413

Umfangsschleifscheibe

Umfangsschleifscheibe mit berwachung

Umfangsschleifscheibe ohne berwachung ohne Basisma (WZV)

Umfangsschleifscheibe mit berwachung ohne Basisma fr Schleifscheibenumfangsge
schwindigkeit SUG

Planscheibe

Planscheibe (WZV) mit berwachung

Planscheibe (WZV) ohne berwachung

Planscheibe mit berwachung ohne Basisma fr Schleifscheibenumfangsgeschwindig
keit SUG

490

Abrichter

72

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:47)(cid:20)(cid:55)Werkzeugparameter

Die folgende Abbildung gibt einen berblick, welche Werkzeugparameter bei 
Schleifwerkzeugen in den Korrekturspeicher eingetragen werden:

Grundlagen

2.5 Werkzeugkorrekturen

T

T'

L1 

L1'

L2 

L2'

R



Werkzeugtrgerbezugspunkt

Werkzeughalterbezugspunkt

Geometrie - Lnge 1

Basisma - Lnge 1

Geometrie - Lnge 2

Basisma - Lnge 2

Radius

Winkel der schrgen Scheibe

Schneidenspezifische Parameter

Bedeutung

$TC_DP1

$TC_DP2

$TC_DP3

$TC_DP4

$TC_DP6

$TC_DP21

$TC_DP22

Werkzeugtyp 4xy

Schneidenlage

Geometrie Lnge 1

Geometrie Lnge 2

Radius

Basisma Lnge 1

Basisma Lnge 2

 Verschleiwerte entsprechend Erfordernis.

 brige Werte sind auf 0 zu setzen.

Werkzeugspezifische Parameter

Bedeutung

$TC_TPG1

$TC_TPG2

$TC_TPG3

Spindelnummer

Verkettungsvorschrift 1)

Minimaler Scheibenradius

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

73

(cid:734)(cid:55)(cid:55)(cid:10)(cid:47)(cid:20)(cid:3)(cid:47)(cid:21)(cid:53)(cid:47)(cid:21)(cid:10)(cid:47)(cid:20)(cid:10)Grundlagen

2.5 Werkzeugkorrekturen

Werkzeugspezifische Parameter

Bedeutung

$TC_TPG4

$TC_TPG5

$TC_TPG6

$TC_TPG7

$TC_TPG8

$TC_TPG9

$TC_TPG_DRSPATH

$TC_TPG_DRSPROG

Minimale Scheibenbreite

Aktuelle Scheibenbreite

Maximale Drehzahl

Maximale Umfangsgeschwindigkeit

Winkel der schrgen Scheibe

Parameter-Nummer fr Radiusberechnung

Verzeichnispfad auf das Abrichtprogramm

Abrichtprogrammname

1) Die Lngenkorrekturen Geometrie, Verschlei und Basisma knnen jeweils fr die linke und rechte 
Scheibenkorrektur verkettet werden. D. h., werden die Lngenkorrekturen fr die linke Schneide 
gendert, so werden die Werte automatisch auch fr die rechte Schneide eingetragen und umgekehrt.

2.5.5.5

Drehwerkzeuge

Innerhalb der Werkzeuggruppe "Drehwerkzeuge" gibt es folgende Werkzeugtypen:

500

510

520

530

540

550

560

580

Schruppstahl

Schlichtstahl

Einstechstahl

Abstechstahl

Gewindestahl

Pilzstahl / Formstahl (WZV)

Drehbohrer (ECOCUT)

Messtaster mit Parameter Schneidenlage

74

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Werkzeugparameter

Die folgende Abbildung gibt einen berblick, welche Werkzeugparameter bei 
Drehwerkzeugen in den Korrekturspeicher eingetragen werden:

Grundlagen

2.5 Werkzeugkorrekturen

 Schneidenlage (1 - 9) bei Bearbeitung hinter der Drehmitte
P

Werkzeugspitze

S

R

T

T'

L1

L2

L1'

L2'

L3'

Schneidenmittelpunkt

Schneidenradius

Werkzeugtrgerbezugspunkt

Werkzeughalterbezugspunkt

Geometrie - Lnge 1

Geometrie - Lnge 2

Basisma - Lnge 1

Basisma - Lnge 2

Basisma - Lnge 3

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

75

(cid:20)(cid:53)(cid:51)(cid:54)(cid:20)(cid:21)(cid:22)(cid:23)(cid:24)(cid:25)(cid:26)(cid:27)(cid:28)(cid:47)(cid:20)(cid:47)(cid:21)(cid:55)(cid:10)(cid:42)(cid:20)(cid:27)(cid:29)(cid:3)(cid:59)(cid:18)(cid:61)(cid:47)(cid:22)(cid:10)(cid:55)(cid:47)(cid:20)(cid:10)(cid:47)(cid:21)(cid:10)(cid:14)(cid:59)(cid:14)(cid:61)Grundlagen

2.5 Werkzeugkorrekturen

Werkzeugparameter

Bedeutung

$TC_DP1

$TC_DP2

$TC_DP3

$TC_DP4

$TC_DP6

$TC_DP21

$TC_DP22

$TC_DP23

Werkzeugtyp

Schneidenlage

Geometrie - Lnge 1

Geometrie - Lnge 2

Geometrie - Radius (Schneidenradius)

Basisma - Lnge 1

Basisma - Lnge 2

Basisma - Lnge 3

 Verschleiwerte entsprechend Erfordernis.

 brige Werte sind auf 0 zu setzen.

2.5.5.6

Sonderwerkzeuge

Innerhalb der Werkzeuggruppe "Sonderwerkzeuge" gibt es folgende Werkzeugtypen:

700

710

711

712

713

714

725

730

731

732

Nutsge

3D-Messtaster

Kantentaster

Monotaster

L-Taster 

Sterntaster

Kalibrierwerkzeug

Anschlag

Pinole

Lnette

76

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Werkzeugparameter

Die folgende Abbildung gibt einen berblick, welche Werkzeugparameter beim Werkzeugtyp 
"Nutsge" in den Korrekturspeicher eingetragen werden:

Grundlagen

2.5 Werkzeugkorrekturen

T'

L1

L2

d

b

k

Werkzeughalterbezugspunkt

Geometrie - Lnge 1

Geometrie - Lnge 2

Durchmesser

Nutbreite

berstand

Werkzeugparameter

Bedeutung

$TC_DP1

$TC_DP3

$TC_DP4

$TC_DP6

$TC_DP7

$TC_DP8

$TC_DP21

$TC_DP22

$TC_DP23

Werkzeugtyp

Geometrie - Lnge 1

Geometrie - Lnge 2

Durchmesser

Nutbreite

berstand

Basisma Lnge 1

Basisma Lnge 2

Basisma Lnge 3

 Verschleiwerte entsprechend Erfordernis.

 brige Werte sind auf 0 zu setzen.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

77

(cid:55)(cid:10)(cid:69)(cid:47)(cid:21)(cid:78)(cid:71)(cid:47)(cid:20)(cid:47)(cid:20)(cid:3)(cid:32)(cid:3)(cid:71)(cid:18)(cid:21)(cid:47)(cid:21)(cid:3)(cid:32)(cid:3)(cid:69)(cid:18)(cid:21)(cid:3)(cid:16)(cid:3)(cid:78)(cid:3)(cid:3)Grundlagen

2.5 Werkzeugkorrekturen

2.5.6

Werkzeugkorrekturen aktivieren/deaktivieren (D, D0)

Den 1 bis 8 (bei aktiver WZV 12) Schneiden eines Werkzeugs knnen verschiedene 
Werkzeugkorrekturdatenstze zugeordnet werden (z. B. unterschiedliche Korrekturwerte fr 
die linke und rechte Schneide bei einem Einstechmeiel).

Die Aktivierung der Korrekturdaten (u. a. die Daten fr die Werkzeuglngenkorrektur) einer 
speziellen Schneide erfolgt durch Aufruf der D-Nummer. Bei Programmierung von D0 sind die 
Korrekturen fr das Werkzeug unwirksam.

Eine Werkzeugradiuskorrektur muss zustzlich durch G41/G42 eingeschaltet werden.

Hinweis

Werkzeuglngenkorrekturen wirken, wenn die D-Nummer programmiert ist. Wird keine D-
Nummer programmiert, ist bei einem Werkzeugwechsel die ber Maschinendatum definierte 
Standardeinstellung aktiv ( siehe Angaben des Maschinenherstellers).

Syntax

D<Nr>

X... Y... Z...

G41/G42 X... Y... Z...

G40

D0

78

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
Bedeutung

Beispiele

Grundlagen

2.5 Werkzeugkorrekturen

D:

Adresse zur Aktivierung eines Korrekturdatensatzes fr das aktive Werkzeug

Die Werkzeuglngenkorrektur wird mit dem ersten programmierten Verfahren der 
zugehrigen Lngenkorrekturachse herausgefahren.

Achtung:
Eine Werkzeuglngenkorrektur wirkt auch ohne D-Programmierung, wenn fr den 
Werkzeugwechsel die automatische Aktivierung einer Werkzeugschneide projektiert 
ist ( siehe Angaben des Maschinenherstellers).

<Nr>:

ber die D-Nummer wird der zu aktivierende Werkzeugkorrekturdatensatz angege
ben.

Die Art der D-Programmierung ist abhngig von der Projektierung der Maschine 
( siehe Angaben des Maschinenherstellers).

Es gibt folgende Mglichkeiten:

 D-Nummer = Schneidennummer 

Zu jedem Werkzeug T<Nr> (ohne WZV) bzw. T="Name" (mit WZV) existieren D-
Nummern von 1 bis max. 12. Diese D-Nummern sind direkt den Schneiden von 
Werkzeugen zugeordnet. Zu jeder D-Nummer (= Schneidennummer) gehrt ein 
Korrekturdatensatz ($TC_DPx[<t>,<d>]).

 Freie Wahl von D-Nummern

Die D-Nummern knnen den Schneidennummern eines Werkzeugs frei zuge
ordnet werden. Die Obergrenze der verwendbaren D-Nummern ist durch ein Ma
schinendatum festgelegt.

Wertebereich:

0 - 32000

Deaktivierung des Korrekturdatensatzes fr das aktive Werkzeug

Befehl zum Einschalten der Werkzeugradiuskorrektur mit Bearbeitungsrichtung links 
von der Kontur

Befehl zum Einschalten der Werkzeugradiuskorrektur mit 
Bearbeitungsrichtung rechts von der Kontur

Befehl zum Ausschalten der Werkzeugradiuskorrektur

D0:

G41:

G42:

G40:

Weitere Informationen zu G40/G41/G42 siehe Kapitel "Werkzeugradiuskorrekturen 
(Seite 246)".

Beispiel 1: Werkzeugwechsel mit T-Befehl (Drehen)

Programmcode

Kommentar

N10 T1 D1

; Werkzeug T1 einwechseln und den Werkzeugkorrekturdatensatz 
D1 von T1 aktivieren.

N11 G0 X... Z...

; Die Lngenkorrekturen werden herausgefahren.

N50 T4 D2

...

; Werkzeug T4 einwechseln und den Werkzeugkorrekturdatensatz 
D2 von T4 aktivieren.

N70 G0 Z... D1

; Andere Schneide D1 fr das Werkzeug T4 aktivieren.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

79

 
Grundlagen

2.5 Werkzeugkorrekturen

Beispiel 2: Unterschiedliche Korrekturwerte fr die linke und rechte Schneide bei einem 
Einstechmeiel

 Einstechdrehmeiel (T2)
 Schneide D1
 Schneide D6

Siehe auch

Werkzeugradiuskorrektur (Seite 66)

Weitere Informationen

nderung der Werkzeugkorrekturdaten

In der Standardeinstellung werden nderungen der Werkzeugkorrekturdaten erst nach 
erneuter T- oder D-Programmierung wirksam.

ber das folgende Maschinendatum kann festgelegt werden, dass eingegebene 
Werkzeugkorrekturdaten sofort wirksam gesetzt werden:

MD9440 $MM_ACTIVATE_SEL_USER

WARNUNG

Kollisionsgefahr

Wenn MD9440 gesetzt ist, dann werden Werkzeugkorrekturen, die sich aus nderungen von 
Werkzeugkorrekturdaten whrend des Teileprogramm-Stopps ergeben, mit dem Fortsetzen 
des Teileprogramms herausgefahren.

2.5.7

Werkzeugkorrekturen unterdrcken (SUPD)

Mit dem Befehl SUPD knnen die Werkzeugkorrekturen satzweise unterdrckt werden.

80

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:55)(cid:72)(cid:76)(cid:79)(cid:72)(cid:83)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)(cid:20)(cid:19)(cid:16)(cid:21)(cid:19)(cid:16)(cid:24)(cid:14)(cid:59)(cid:14)(cid:61)(cid:49)(cid:20)(cid:19)(cid:3)(cid:55)(cid:21)(cid:49)(cid:21)(cid:19)(cid:3)(cid:42)(cid:19)(cid:3)(cid:59)(cid:22)(cid:24)(cid:3)(cid:61)(cid:16)(cid:21)(cid:19)(cid:49)(cid:22)(cid:19)(cid:3)(cid:42)(cid:20)(cid:3)(cid:39)(cid:20)(cid:3)(cid:59)(cid:20)(cid:19)(cid:49)(cid:23)(cid:19)(cid:3)(cid:39)(cid:25)(cid:3)(cid:61)(cid:16)(cid:24)(cid:17)(cid:17)(cid:17)(cid:49)(cid:23)(cid:19)(cid:49)(cid:22)(cid:19)(cid:49)(cid:21)(cid:19)(cid:21)(cid:22)(cid:20)Grundlagen

2.5 Werkzeugkorrekturen

Vorteil gegenber der Werkzeugkorrekturabwahl mit D0 ist, dass bei SUPD die 
Werkzeugkorrekturinformation erhalten bleibt und dadurch die erneute Aktivierung der 
Werkzeugkorrekturdaten durch Programmierung der D-Nummer entfllt.

Anwendung findet SUPD ausschlielich zur Unterdrckung der Werkzeuglngenkorrektur, 
z. B. in Teileprogrammstzen, in denen der Nullpunkt, aber nicht die Werkzeuglnge 
verrechnet werden soll. Eine Anwendung bei aktivem G41/G42 zur zustzlichen 
Unterdrckung der Werkzeugradiuskorrekturen ist nicht zu empfehlen.

Syntax

Bedeutung

D<Nr.>

X... Y... Z...

X... Y... Z... SUPD

...

D0

SUPD:

G-Befehl zur Deaktivierung des Korrekturdatensatzes fr das aktive Werkzeug im 
aktiven Satz

Wirksamkeit:

satzweise

Randbedingungen

 SUPD sollte nur in Linearstzen verwendet werden.

 SUPD kann nicht in Synchronaktionen verwendet werden.

 SUPD kann nicht zusammen mit folgenden Funktionen verwendet werden:

 3D-Werkzeugradiuskorrektur fr das 3D-Stirnfrsen (CUT3DFxx)

 Kurventabellen (CTAB)

 Die Anwendung von SUPD bei aktiver Werkzeugradiuskorrektur (G41/G42) ist mglich, 

wird aber nicht empfohlen.
Soll die Funktion dennoch verwendet werden, muss das folgene Settingdatum auf 0 gesetzt 
werden:
SD42480 $SC_STOP_CUTCOM_STOPRE = 0
Dadurch wird verhindert, dass es bei aktivem G41/G42 zu einer Programmunterbrechung 
kommt.

Beispiel

Im Unterprogramm SUB_SUP soll beim Verfahren die Werkzeuglnge unterdrckt werden.

Teileprogramm

Programmcode

...

Kommentar

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

81

 
 
 
 
 
 
Grundlagen

2.5 Werkzeugkorrekturen

Programmcode

Kommentar

N300 $P_UIFR[1]=CTRANS(X,1000,Y,400,Z,-120)

N310 T="BALL_D3"

N320 M6

N330 TRAFOOF

N340 G54 G0 Z49 D1

N350 G0 X1100 Y500 C0 A0

N360 SUB_SUP

N370 G0 X1200

N380 M30

Unterprogramm mit D0

Programmcode

N10 PROC SUB_SUP

N20 DEF INT NUMBER

N30 NUMBER=$P_TOOL

N40 G0 Z49 D0

N50 D=NUMBER

N60 RET

Unterprogramm mit SUPD

Programmcode

N10 PROC SUB_SUP

N40 G0 Z49 SUPD

N60 RET

; Aufruf des Unterprogramms.  

Kommentar

; Abwahl der Werkzeugkorrekturen.

; Erneute Anwahl der Werkzeugkorrek-
turen.

Kommentar

; Unterdrckung der Werkzeugkorrek-
turen im aktiven Satz.

2.5.8

Programmierbarer Werkzeugkorrektur-Offset (TOFFL, TOFF, TOFFR, TOFFLR)

ber die Adressen TOFFx hat der Anwender die Mglichkeit, die effektive Werkzeuglnge und 
den effektiven Werkzeugradius im NC-Programm zu modifizieren, ohne die im 
Korrekturspeicher abgelegten Werkzeugkorrekturdaten zu verndern. 

Mit dem Programmende werden diese programmierten Offsets wieder gelscht.

Syntax

82

Werkzeuglngen-Offset

TOFFL=<Value>

TOFFL[1]=<Value> TOFFL[2]=<Value> TOFFL[3]=<Value>

TOFF[<GeoAx>]=<Value>

Die Werkzeuglnge kann in allen drei Komponenten gleichzeitig verndert werden. Es drfen 
in einem Satz aber nicht gleichzeitig Befehle der Gruppe TOFFL/TOFFL[1..3] einerseits und 

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
Bedeutung

Grundlagen

2.5 Werkzeugkorrekturen

der Gruppe TOFF[<GeoAx>] andererseits verwendet werden. Ebenso drfen in einem Satz 
nicht gleichzeitig TOFFL und TOFFL[1] geschrieben werden.

Werden in einem Satz nicht alle drei Werkzeuglngenkomponenten programmiert, so bleiben 
die nicht programmierten Komponenten unverndert. Dadurch ist es mglich, Korrekturen fr 
mehrere Komponenten satzweise aufzubauen. Dies gilt jedoch nur, solange die 
Werkzeugkomponenten entweder nur mit TOFFL oder nur mit TOFF modifiziert werden. Ein 
Wechsel der Programmiervariante TOFFL nach TOFF oder umgekehrt lscht zunchst alle 
evtl. zuvor programmierten Werkzeuglngen-Offsets (siehe Beispiel 3).

Werkzeugradius-Offset

TOFFR=<Value>

Simultaner Werkzeuglngen- und Werkzeugradius-Offset

TOFFLR=<Value>

TOFFL:

Korrektur der effektiven Werkzeuglnge

TOFFL kann mit oder ohne Index programmiert werden:

TOFFL=... 

TOFFL[1]=... 

TOFFL[2]=... 

TOFFL[3]=... 

Der programmierte Offset-Wert wirkt in der Richtung, in der auch 
die im Korrekturspeicher abgelegte Werkzeuglngenkomponen
te L1 wirkt.

Die Anweisungen TOFFL und TOFFL[1] sind in ihrer Wirkung 
identisch.

Der programmierte Offset-Wert wirkt in der Richtung, in der auch 
die im Korrekturspeicher abgelegte Werkzeuglngenkomponen
te L1, L2 bzw. L3 wirkt.

Hinweis:
Wie die Werkzeuglngen-Korrekturwerte in den Achsen verrechnet werden, bestimmen 
der Werkzeugtyp und die aktuelle Arbeitsebene (G17/G18/G19).

TOFF:

Korrektur der Werkzeuglnge in der Komponente parallel zu der angegebenen Geo
metrieachse

TOFF wirkt in Richtung der Werkzeuglngenkomponente, die bei nicht gedrehtem 
Werkzeug (orientierbarer Werkzeugtrger bzw. Orientierungstransformation) parallel 
zu der im Index angegebenen Geometrieachse wirkt.

Hinweis:
Ein Frame beeinflusst die Zuordnung der programmierten Werte zu den Werkzeugln
genkomponenten nicht. D. h., fr die Zuordnung der Werkzeuglngenkomponenten zu 
den Geometrieachsen wird nicht das Werkstckkoordinatensystem (WKS), sondern 
das Werkzeugkoordinatensystem in Werkzeuggrundstellung zu Grunde gelegt.

<GeoAx>:

Bezeichner der Geometrieachse

TOFFR:

Korrektur des effektiven Werkzeugradius

TOFFR verndert den effektiven Werkzeugradius bei aktiver Werkzeugradiuskorrektur 
um den programmierten Offset-Wert. 

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

83

Grundlagen

2.5 Werkzeugkorrekturen

TOFFLR:

Korrektur der effektiven Werkzeuglnge in der Komponente L1 und des effektiven 
Werkzeugradius

Hinweis:
Bei Werkzeugen mit Eckenverrundung (Typen 111, 121, 131 und 156) korrigiert 
TOFFLR auch den Eckenradius.

<Value>:

Offset-Wert 

Typ:

REAL

Beispiele

Beispiel 1: Positiver Werkzeuglngen-Offset

Das aktive Werkzeug sei ein Bohrer mit der Lnge L1 = 100 mm.

Die aktive Ebene sei G17. D. h., der Bohrer zeigt in Z-Richtung.

Die effektive Bohrerlnge soll um 1 mm verlngert werden. Fr die Programmierung dieses 
Werkzeuglngen-Offsets stehen folgende Varianten zur Verfgung:

 TOFFL=1

 TOFFL[1]=1

 TOFF[Z]=1

Beispiel 2: Negativer Werkzeuglngen-Offset

Das aktive Werkzeug sei ein Bohrer mit der Lnge L1 = 100 mm.

Die aktive Ebene sei G18. D. h., der Bohrer zeigt in Y-Richtung.

Die effektive Bohrerlnge soll um 1 mm verkrzt werden. Fr die Programmierung dieses 
Werkzeuglngen-Offsets stehen folgende Varianten zur Verfgung:

 TOFFL=-1

 TOFFL[1]=-1

 TOFF[Y]=1

Beispiel 3: Wechsel der Programmiervariante von TOFFL nach TOFF

Das aktive Werkzeug sei ein Frswerkzeug. Die aktive Ebene sei G17.

Programmcode

Kommentar

N10 TOFFL[1]=3 TOFFL[3]=5

; Wirksame Offsets: L1=3, L2=0, L3=5

N20 TOFFL[2]=4

N30 TOFF[Z]=1.3

; Wirksame Offsets: L1=3, L2=4, L3=5

; Wirksame Offsets: L1=0, L2=0, L3=1.3

Beispiel 4: Zuordnung der Offset-Werte nach Ebenenwechsel

Programmcode

Kommentar

N10 $TC_DP1[1,1]=120

N20 $TC_DP3[1,1]=100

; Werkzeuglnge L1=100mm

N30 T1 D1 G17

N40 TOFF[Z]=1.0

; Offset in ZRichtung (entspricht L1 bei G17).

84

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
Grundlagen

2.5 Werkzeugkorrekturen

Programmcode

Kommentar

N50 G0 X0 Y0 Z0

; Maschinenachsposition X0 Y0 Z101

N60 G18 G0 X0 Y0 Z0

; Maschinenachsposition X0 Y100 Z1

N70 G17

N80 TOFFL=1.0

; Offset in L1-Richtung (entspricht Z bei G17).

N90 G0 X0 Y0 Z0

; Maschinenachsposition X0 Y0 Z101.

N100 G18 G0 X0 Y0 Z0

; Maschinenachsposition X0 Y101 Z0.

In diesem Beispiel bleibt beim Wechsel nach G18 im Satz N60 der Offset von 1 mm in der Z
Achse erhalten, die effektive Werkzeuglnge in der YAchse ist die unvernderte 
Werkzeuglnge von 100 mm.

Im Satz N100 wirkt der Offset beim Wechsel nach G18 dagegen in der YAchse, weil er bei der 
Programmierung der Werkzeuglnge L1 zugeordnet wurde, und diese Lngenkomponente bei 
G18 in der Y-Achse wirkt.

Beispiel 5: Simultaner Werkzeuglngen- und Werkzeugradius-Offset

a, Schaftfrser ohne Eckenverrundung (WZ-Typ 120):

Programmcode

Kommentar

...

TOFFLR=0.1

...

; Wirksame Offsets:

; Offset Werkzeuglnge (L1) = 5

; Offset Werkzeugradius = 5

b, Schaftfrser mit Eckenverrundung (WZ-Typ 121):

Programmcode

Kommentar

...

TOFFLR=0.1

...

; Wirksame Offsets:

; Offset Werkzeuglnge (L1) = 0.1

; Offset Werkzeugradius = 0.1

; Offset Eckenradius = 0.1

Weitere Informationen

Werkzeuglngen-Offsets

Programmierte Werkzeuglngen-Offsets werden abhngig von der Art der Programmierung 
entweder den im Korrekturspeicher abgelegten Werkzeuglngenkomponenten L1, L2 und L3 
(TOFFL) oder den Geometrieachsen (TOFF) zugeordnet. Entsprechend werden die 
programmierten Offsets bei einem Ebenenwechsel (G17/G18/G19  G17/G18/G19) 
behandelt:

 Sind die Offset-Werte den Werkzeuglngenkomponenten zugeordnet, werden die 

Richtungen, in welchen die programmierten Offsets wirken, entsprechend getauscht.

 Sind die Offset-Werte den Geometrieachsen zugeordnet, beeinflusst ein Ebenenwechsel 

die Zuordnung in Bezug auf die Koordinatenachsen nicht.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

85

 
 
 
 
 
Grundlagen

2.5 Werkzeugkorrekturen

Bei der Zuordnung der programmierten Offset-Werte zu den Werkzeuglngenkomponenten 
werden folgende Settingdaten ausgewertet:

SD42940 $SC_TOOL_LENGTH_CONST (Wechsel der Werkzeuglngenkomponenten bei 
Ebenenwechsel) 

SD42950 $SC_TOOL_LENGTH_TYPE (Zuordnung der Werkzeuglngenkompensation 
unabhngig vom Werkzeugtyp) 

Haben diese Settingdaten gltige Werte ungleich 0, dann haben diese Vorrang vor dem Inhalt 
der G-Gruppe 6 (Ebenenanwahl G17/G18/G19) bzw. dem in den Werkzeugdaten enthaltenen 
Werkzeugtyp ($TC_DP1[<TNr.>, <DNr.>]). D. h., diese Settingdaten beeinflussen die 
Bewertung der Offsets in gleicher Weise wie die Werkzeuglngenkomponenten L1 bis L3.

Werkzeugradius-Offset

Die Adresse TOFFR hat fast die gleiche Wirkung wie die Adresse OFFN (Seite 246). Ein 
Unterschied ergibt sich lediglich bei aktiver Mantelkurventransformation (TRACYL) und aktiver 
Nutwandkorrektur. In diesem Fall wirkt OFFN mit negativem Vorzeichen auf den 
Werkzeugradius, TOFFR dagegen mit positivem Vorzeichen.

OFFN und TOFFR knnen gleichzeitig wirksam sein. Sie wirken dann in der Regel additiv 
(auer bei Nutwandkorrektur).

Werkzeugwechsel

Alle Offset-Werte bleiben bei einem Werkzeugwechsel (Schneidenwechsel) erhalten. D. h., sie 
werden bei dem neuen Werkzeug (der neuen Schneide) ebenfalls wirksam.

Systemvariablen zum Lesen der aktuellen Offset-Werte

Die aktuell wirksamen Offsets knnen mit den folgenden Systemvariablen gelesen werden:

Systemvariable

$P_TOFFL [<n>]

mit 0  n  3

Bedeutung

Liest den aktuellen Offset-Wert von TOFFL (bei n = 0) bzw. 
TOFFL[1...3] (bei n = 1, 2, 3) im Vorlaufkontext.

$P_TOFF [<GeoAx>]

Liest den aktuellen Offset-Wert von TOFF[<GeoAx>] im Vorlaufkontext.

$P_TOFFR

$P_TOFFCR

$AC_TOFFL[<n>]

mit 0  n  3

$AC_TOFF[<GeoAx>]

$AC_TOFFR

$AC_TOFFCR

Hinweis

Liest den aktuellen Offset-Wert von TOFFR im Vorlaufkontext.

Liest den aktuellen Offset-Wert des Eckenradius im Vorlaufkontext.

Liest den aktuellen Offset-Wert von TOFFL (bei n = 0) bzw. 
TOFFL[1...3] (bei n = 1, 2, 3) im Hauptlaufkontext (Synchronaktionen).

Liest den aktuellen Offset-Wert von TOFF[<GeoAx>] im Hauptlaufkon
text (Synchronaktionen).

Liest den aktuellen Offset-Wert von TOFFR im Hauptlaufkontext (Syn
chronaktionen).

Liest den aktuellen Offset-Wert des Eckenradius im Hauptlaufkontext 
(Synchronaktionen).

Die Systemvariablen $AC_TOFFL, $AC_TOFF, AC_TOFFR und AC_TOFFCR lsen beim 
Lesen aus dem Vorlaufkontext (NC-Programm) einen automatischen Vorlaufstopp aus.

86

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Grundlagen

2.5 Werkzeugkorrekturen

Anwendungen

Die Funktion "Programmierbarer Werkzeugkorrektur-Offset" ist speziell fr Kugelfrser und 
Frser mit Eckenradien interessant, da diese im CAM-System oft auf Kugelmitte statt auf 
Kugelspitze berechnet werden. Bei der Messung des Werkzeugs wird aber in der Regel die 
Werkzeugspitze vermessen und als Werkzeuglnge im Korrekturspeicher hinterlegt.

Fr die 3D-Werkzeugradiuskorrektur bei Verwendung eines Kugelfrsers ist es sinnvoll, 
gleichzeitig Werkzeuglnge und -radius um den gleichen Wert zu korrigieren. Dafr steht dem 
Anwender die Adresse TOFFLR zur Verfgung.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

87

Grundlagen

2.6 Spindelbewegung

2.6

Spindelbewegung

2.6.1

Spindeldrehzahl (S), Spindeldrehrichtung (M3, M4, M5)

Die Angaben Spindeldrehzahl und -drehrichtung versetzen die Spindel in eine Drehbewegung 
und schaffen die Voraussetzung fr die spanabhebende Bearbeitung.

Neben der Hauptspindel knnen weitere Spindeln vorhanden sein (z. B. bei Drehmaschinen 
die Gegenspindel oder ein angetriebenes Werkzeug). In der Regel wird die Hauptspindel per 
Maschinendatum als Masterspindel deklariert. Diese Zuweisung kann per NC-Befehl gendert 
werden.

S... / S<n>=...

M3 / M<n>=3

M4 / M<n>=4

M5 / M<n>=5

SETMS(<
n>)

...

SETMS

S:

Spindeldrehzahl in Umdrehungen/min fr die Masterspindel

S<n>=...:

Spindeldrehzahl in Umdrehungen/min fr Spindel <n>

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Syntax

Bedeutung

88

(cid:14)(cid:59)(cid:14)(cid:59)(cid:14)(cid:59)(cid:14)(cid:61) 
 
 
Grundlagen

2.6 Spindelbewegung

Hinweis:
Die mit S0= angegebene Drehzahl gilt fr die Masterspindel.

M3:

M<n>=3:

M4:

M<n>=4:

M5:

M<n>=5:

Spindeldrehrichtung rechts fr Masterspindel

Spindeldrehrichtung rechts fr Spindel <n>

Spindeldrehrichtung links fr Masterspindel

Spindeldrehrichtung links fr Spindel <n>

Spindel-Halt fr Masterspindel

Spindel-Halt fr Spindel <n>

SETMS(<n>):

Spindel <n> soll als Masterspindel gelten

SETMS:

SETMS ohne Spindelangabe schaltet auf die projektierte Masterspindel zurck

Hinweis

Pro NC-Satz drfen maximal 3 S-Werte programmiert werden, z. B.:

S... S2=... S3=...

Hinweis

SETMS muss in einem eigenen Satz stehen.

Beispiel

S1 ist Masterspindel, S2 ist zweite Arbeitsspindel. Das Drehteil soll von 2 Seiten bearbeitet 
werden. Hierfr ist eine Aufteilung der Arbeitsschritte notwendig. Nach dem Abstechen nimmt 
die Synchroneinrichtung (S2) das Werkstck fr die abstichseitige Bearbeitung auf. Hierzu wird 
diese Spindel S2 als Masterspindel definiert, fr sie gilt dann G95.

Programmcode

N10 S300 M3

Kommentar

; Drehzahl und Drehrichtung fr Antriebsspindel = voreinge-
stellte Masterspindel.

...

; Bearbeitung der rechten Werkstckseite.

N100 SETMS(2)

; S2 ist jetzt Masterspindel.

N110 S400 G95 F

; Drehzahl fr neue Masterspindel.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

89

(cid:54)(cid:20)(cid:54)(cid:21) 
Grundlagen

2.6 Spindelbewegung

Programmcode

Kommentar

...

N160 SETMS

; Bearbeitung der linken Werkstckseite.

; Zurckschalten auf Masterspindel S1.

Weitere Informationen

Interpretation des S-Werts bei der Masterspindel   

Ist in der G-Gruppe 1 (modal wirksame Bewegungsbefehle) die Funktion G331 oder G332 
aktiv, wird der programmierte S-Wert immer als Drehzahl in Umdrehungen/min interpretiert. 
Andernfalls ist die Interpretation des S-Werts abhngig von der G-Gruppe 15 (Vorschubtyp): 
Bei aktivem G96, G961 oder G962 wird der S-Wert als konstante Schnittgeschwindigkeit in m/
min interpretiert, in allen anderen Fllen als Drehzahl in Umdrehungen/min.

Bei einem Wechsel von G96/G961/G962 auf G331/G332 wird der Wert der konstanten 
Schnittgeschwindigkeit auf Null gesetzt, bei einem Wechsel von G331/G332 auf eine Funktion 
innerhalb der G-Gruppe 1 ungleich G331/G332 wird der Drehzahlwert auf Null gesetzt. Die 
betreffenden S-Werte mssen bei Bedarf neu programmiert werden.

Voreingestellte M-Befehle M3, M4, M5

In einem Satz mit Achsbefehlen werden die Funktionen M3, M4, M5 eingeschaltet bevor die 
Achsbewegungen starten (Grundeinstellung der Steuerung).

Beispiel:

Programmcode

Kommentar

N10 G1 F500 X70 Y20 S270 M3

; Die Spindel luft auf 270 U/min hoch, dann 
werden die Bewegungen in X und Y ausgefhrt.

N100 G0 Z150 M5

; Spindel-Halt vor der Rckzugsbewegung in Z.

Hinweis

ber Maschinendatum ist einstellbar, ob die Achsbewegungen erst nach Spindelhochlauf auf 
Solldrehzahl bzw. Spindelstopp ausgefhrt werden oder ob sofort nach den programmierten 
Schaltvorgngen verfahren wird.

Arbeiten mit mehreren Spindeln

In einem Kanal knnen gleichzeitig 5 Spindeln vorhanden sein (Masterspindel plus 4 
zustzliche Spindeln).

Eine Spindel wird per Maschinendatum als Masterspindel definiert. Fr diese Spindel gelten 
spezielle Funktionen wie z. B. Gewindeschneiden, Gewindebohren, Umdrehungsvorschub, 
Verweilzeit. Fr die brigen Spindeln (z. B. eine zweite Arbeitsspindel und ein angetriebenes 
Werkzeug) mssen bei Drehzahl und Drehrichtung/Spindelstopp die entsprechenden 
Nummern angegeben werden.

Beispiel:

Programmcode

Kommentar

N10 S300 M3 S2=780 M2=4

; Masterspindel: 300 U/min, Rechtslauf

2.Spindel: 780 U/min, Linkslauf

Programmierbares Umschalten der Masterspindel

90

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Grundlagen

2.6 Spindelbewegung

ber den Befehl SETMS(<n>) kann im NC-Programm jede Spindel als Masterspindel definiert 
werden. SETMS muss in einem eigenen Satz stehen.

Beispiel:

Programmcode

Kommentar

N10 SETMS(2)

; Spindel 2 ist jetzt Masterspindel.

Hinweis

Fr die neu deklarierte Masterspindel gelten jetzt die mit S... angegebene Drehzahl sowie die 
mit M3, M4, M5 programmierten Funktionen.

Mit SETMS ohne Spindelangabe wird auf die im Maschinendatum festgelegte Masterspindel 
zurckgeschaltet.

2.6.2

Werkzeug-Schnittgeschwindigkeit (SVC)

Alternativ zur Spindeldrehzahl kann bei Frsbearbeitungen auch die in der Praxis 
gebruchlichere Werkzeug-Schnittgeschwindigkeit programmiert werden.

 Spindeldrehzahl
 Werkzeugradius
 Werkzeug-Schnittgeschwindigkeit

ber den Radius des aktiven Werkzeugs berechnet die Steuerung aus der programmierten 
Werkzeug-Schnittgeschwindigkeit die wirksame Spindeldrehzahl:
S = (SVC * 1000) / (RWKZ * 2)
mit:

S:
SVC:
RWKZ:

Spindeldrehzahl in U/min
Werkzeug-Schnittgeschwindigkeit in m/min bzw. ft/min
Radius des aktiven Werkzeugs in mm

Der Werkzeugtyp ($TC_DP1) des aktiven Werkzeugs wird nicht bercksichtigt.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

91

(cid:20)(cid:21)(cid:22)Grundlagen

2.6 Spindelbewegung

Die programmierte Werkzeug-Schnittgeschwindigkeit ist unabhngig vom Bahnvorschub F 
sowie der G-Funktionsgruppe 15 (Vorschubtyp). Drehrichtung und Spindelstart erfolgt ber M3 
bzw. M4, Spindel-Stopp ber M5.

Eine nderung der Werkzeugradiusdaten im Korrekturspeicher wird mit der nchsten 
Werkzeugkorrekturanwahl bzw. der nchsten Aktualisierung der aktiven Korrekturdaten 
wirksam.

Werkzeugwechsel und An-/Abwahl eines Werkzeugkorrekturdatensatzes fhren zu einer 
Neuberechnung der wirksamen Spindeldrehzahl.

Voraussetzungen

Die Programmierung der Werkzeug-Schnittgeschwindigkeit erfordert:

 die geometrischen Verhltnisse eines rotierenden Werkzeugs (Frs- oder Bohrwerkzeug)

 einen aktiven Werkzeugkorrekturdatensatz

Syntax

Bedeutung

T... D... SVC[<n>]=<Value>

...

S... M3/M4

SVC:

[<n>]:

Schlsselwort zur Programmierung der Werkzeug-Schnittgeschwindigkeit

Nummer der Spindel

Mit dieser Adresserweiterung wird angegeben, fr welche Spindel die program
mierte Schnittgeschwindigkeit wirksam sein soll. Ohne Adresserweiterung be
zieht sich die Angabe immer auf die aktuelle Masterspindel.

Hinweis:
Fr jede Spindel kann eine eigene Schnittgeschwindigkeit vorgegeben werden.

Hinweis:
Die Programmierung von SVC ohne Adresserweiterung setzt voraus, dass die 
Masterspindel das aktive Werkzeug besitzt. Bei Wechsel der Masterspindel 
muss der Anwender ein entsprechendes Werkzeug anwhlen.

<Value>:

Wert der Werkzeug-Schnittgeschwindigkeit

T... D...:

Einheit:

m/min (bei G71/G710) bzw. ft/min (bei G70/G700)

Im Satz mit SVC muss der Werkzeugradius bekannt sein. D. h., ein entspre
chendes Werkzeug inklusive Werkzeugkorrekturdatensatz muss aktiv bzw. im 
Satz angewhlt sein. Die Reihenfolge von SVC und T/D-Anwahl bei Program
mierung im gleichen Satz ist beliebig.

S... M3/M4:

Die Programmierung der Spindeldrehzahl fhrt zur Abwahl der Werkzeug-
Schnittgeschwindigkeit.

Hinweis:
Ein Wechsel zwischen SVC- und S-Programmierung ist beliebig mglich, auch 
bei drehender Spindel. Der jeweils nicht aktive Wert wird gelscht. 

92

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
Grundlagen

2.6 Spindelbewegung

Hinweis

Die Programmierung von SVC ist nicht mglich bei folgenden aktiven Spindel-
Vorschubbewegungen:

 Konstante Schnittgeschwindigkeit: G96/G961/G962 S... (Seite 97)

 Konstante Scheibenumfangsgeschindigkeit: SUG (Seite 102)

 Spindel positionieren: SPOS/SPOSA/M19 (Seite 118)

 Masterspindel in den Achsbetrieb umschalten: M70 (Seite 118)

Umgekehrt fhrt die Programmierung eines dieser Funktionen zur Abwahl von SVC 
(Werkzeug-Schnittgeschwindigkeit).

Hinweis

Maximale Werkzeugdrehzahl

ber die Systemvariable $TC_TP_MAX_VELO[<T-Nummer>] kann eine maximale 
Werkzeugdrehzahl (Spindeldrehzahl) vorgegeben werden.
Wenn keine Drehzahlgrenze definiert ist, dann findet keine berwachung statt.     

Hinweis

Die z. B. per CAD-Systemen generierten Werkzeugbahnen von "Normwerkzeugen", welche 
bereits den Werkzeugradius bercksichtigen und nur die Differenz zum Normwerkzeug im 
Schneidenradius enthalten, werden im Zusammenhang mit der SVC-Programmierung nicht 
untersttzt.

Fr alle Beispiele soll gelten: Werkzeughalter = Spindel (fr Frsen Standard)

Beispiel 1: Frser mit Radius 6 mm

Programmcode

N10 G0 X10 T1 D1

Kommentar

; Anwahl Frswerkzeug mit z.B. $TC_DP6[1,1] = 6 (WZ
Radius = 6 mm)

N20 SVC=100 M3

; Schnittgeschwindigkeit = 100 m/min

 Resultierende Spindeldrehzahl:

S = (100 m/min * 1000) / (6,0 mm * 2 * 3,14) = 
2653,93 U/min

N30 G1 X50 G95 FZ=0.03

; SVC und Zahnvorschub

...

Beispiel 2: WZAnwahl und SVC im gleichen Satz

Programmcode

N10 G0 X20

N20 T1 D1 SVC=100

Kommentar

; Werkzeug- und Korrekturdatensatz-Anwahl zusammen 
mit SVC im Satz (Reihenfolge beliebig).

Beispiele

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

93

 
 
Grundlagen

2.6 Spindelbewegung

Programmcode

N30 X30 M3

Kommentar

; Spindelstart mit Drehrichtung rechts, Schnittge-
schwindigkeit 100 m/min

N40 G1 X20 F0.3 G95

; SVC und Umdrehungsvorschub

Beispiel 3: Schnittgeschwindigkeiten fr zwei Spindeln vorgeben

Programmcode

Kommentar

N10 SVC[3]=100 M6 T1 D1

N20 SVC[5]=200

Beispiel 4: 

Annahmen:

; Der Werkzeugradius der aktiven Werkzeugkorrektur 
ist fr beide Spindeln gleich, die wirksame Drehzahl 
ist fr Spindel 3 und Spindel 5 unterschiedlich.

Master bzgl. Werkzeugwechsel wird durch die Toolholder bestimmt:

MD20124 $MC_TOOL_MANAGEMENT_TOOLHOLDER > 1

Beim Werkzeugwechsel wird die alte Werkzeugkorrektur beibehalten und erst mit der 
Programmierung von D wird eine Werkzeugkorrektur des neuen Werkzeugs aktiv:

MD20270 $MC_CUTTING_EDGE_DEFAULT = - 2

Programmcode

N10 $TC_MPP1[9998,1]=2

N11 $TC_MPP5[9998,1]=1

Kommentar

; Magazinplatz ist Werkzeughalter

; Magazinplatz ist Werkzeughalter 1

N12 $TC_MPP_SP[9998,1]=3

; Werkzeughalter 1 ist der Spindel 3 zugeordnet

N20 $TC_MPP1[9998,2]=2

N21 $TC_MPP5[9998,2]=4

; Magazinplatz ist Werkzeughalter

; Magazinplatz ist Werkzeughalter 4

N22 $TC_MPP_SP[9998,2]=6

; Werkzeughalter 4 ist der Spindel 6 zugeordnet

N30 $TC_TP2[2]="WZ2"

N31 $TC_DP6[2,1]=5.0

N40 $TC_TP2[8]="WZ8"

N41 $TC_DP6[8,1]=9.0

N42 $TC_DP6[8,4]=7.0

...

N100 SETMTH(1)

N110 T="WZ2" M6 D1

N120 G1 G94 F1000 M3=3 SVC=100

N130 SETMTH(4)

N140 T="WZ8"

N150 M6

; Radius = 5,0 mm von T2, Korrektur D1

; Radius = 9,0 mm von T8, Korrektur D1

; Radius = 7,0 mm von T8, Korrektur D4

; Masterwerkzeughalternummer setzen

; Werkzeug T2 wird eingewechselt und Korrektur D1 aktiviert.

; S3 = (100 m/min * 1000) / (5,0 mm * 2 * 3,14) = 
3184,71 U/min

; Masterwerkzeughalternummer setzen

; Entspricht T8="WZ8"

; Entspricht M4=6

Werkzeug "WZ8" kommt auf Mastertoolholder, aber wegen 
MD20270=2 bleibt alte Werkzeugkorrektur aktiv.

N160 SVC=50

; S3 = (50 m/min * 1000) / (5,0 mm * 2 * 3,14) = 1592,36 U/min

Korrektur von Werkzeughalter 1 ist noch aktiv und dieser ist 
Spindel 3 zugeordnet.

94

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
Grundlagen

2.6 Spindelbewegung

Kommentar

; Korrektur D4 von neuem Werkzeug "WZ8" wird aktiv (auf Werk-
zeughalter 4).

; S6 = (300 m/min * 1000) / (7,0 mm * 2 * 3,14) = 
6824,39 U/min

Spindel 6 ist Werkzeughalter 4 zugeordnet.

Programmcode

N170 D4

N180 SVC=300

Beispiel 5:

Annahmen:

Spindeln sind zugleich Werkzeughalter:

MD20124 $MC_TOOL_MANAGEMENT_TOOLHOLDER = 0

Bei Werkzeugwechsel wird automatisch Werkzeugkorrekturdatensatz D4 angewhlt:

MD20270 $MC_CUTTING_EDGE_DEFAULT = 4

Programmcode

N10 $TC_MPP1[9998,1]=2

N11 $TC_MPP5[9998,1]=1

N20 $TC_MPP1[9998,2]=2

N21 $TC_MPP5[9998,2]=3

N30 $TC_TP2[2]="WZ2"

N31 $TC_DP6[2,1]=5.0

N40 $TC_TP2[8]="WZ8"

N41 $TC_DP6[8,1]=9.0

N42 $TC_DP6[8,4]=7.0

...

N100 SETMS(1)

N110 T="WZ2" M6 D1

N120 G1 G94 F1000 M3 SVC=100

N200 SETMS(3)

N210 M4 SVC=150

N220 T="WZ8"

N230 M4 SVC=200

Kommentar

; Magazinplatz ist Werkzeughalter

; Magazinplatz ist Werkzeughalter 1 = Spindel 1

; Magazinplatz ist Werkzeughalter

; Magazinplatz ist Werkzeughalter 3 = Spindel 3

; Radius = 5,0 mm von T2, Korrektur D1

; Radius = 9,0 mm von T8, Korrektur D1

; Radius = 7,0 mm von T8, Korrektur D4

; Spindel 1 = Masterspindel

; Werkzeug T2 wird eingewechselt und Korrektur D1 aktiviert.

; S1 = (100 m/min * 1000) / (5,0 mm * 2 * 3,14) = 
3184,71 U/min

; Spindel 3 = Masterspindel

; S3 = (150 m/min * 1000) / (5,0 mm * 2 * 3,14) = 
4777,07 U/min

Bezieht sich auf die Werkzeugkorrektur D1 von T="WZ2", S1 
dreht mit alter Drehzahl weiter.

; Entspricht T8="WZ8"

; S3 = (200 m/min * 1000) / (5,0 mm * 2 * 3,14) = 
6369,43 U/min

Bezieht sich auf die Werkzeugkorrektur D1 von T="WZ2".

N240 M6

; Entspricht M3=6

N250 SVC=50

; S3 = (50 m/min * 1000) / (7,0 mm * 2 * 3,14) = 1137,40 U/min

N260 D1

; Korrektur D1 von neuem Werkzeug "WZ8" aktiv.

Korrektur D4 auf Masterspindel ist aktiv.

Werkzeug "WZ8" kommt auf Masterspindel, die Werkzeugkorrek-
tur D4 des neuen Werkzeugs wird aktiv.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

95

 
 
 
Grundlagen

2.6 Spindelbewegung

Programmcode

N270 SVC[1]=300

...

Weitere Informationen

Werkzeugradius

Kommentar

; S1 = (300 m/min * 1000) / (9,0 mm * 2 * 3,14) = 
5307,86 U/min

S3 = (50 m/min * 1000) / (9,0 mm * 2 * 3,14) = 884,64 U/min

Folgende Werkzeugkorrekturdaten (des aktiven Werkzeugs) tragen zum Werkzeugradius bei:

 $TC_DP6 (Radius- Geometrie)

 $TC_DP15 (Radius - Verschlei)

 $TC_SCPx6 (Korrektur zu $TC_DP6)

 $TC_ECPx6 (Korrektur zu $TC_DP6)

Nicht bercksichtigt werden:

 Online-Radiuskorrekturen

 Aufma zur programmierten Kontur (OFFN)

Werkzeugradiuskorrektur (G41/G42)

Werkzeugradiuskorrektur (G41/G42) und SVC beziehen sich beide auf den Werkzeugradius, 
sind aber funktionell entkoppelt und unabhngig voneinander.

Gewindebohren ohne Ausgleichsfutter (G331, G332)

Die Programmierung von SVC ist auch in Verbindung mit G331 bzw. G332 mglich.

Synchronaktionen

Die Vorgabe von SVC aus Synchronaktionen ist nicht mglich.

Schnittgeschwindigkeit und Spindeldrehzahl-Programmierungsvariante lesen

Die Schnittgeschwindigkeit einer Spindel und die Drehzahl-Programmierungsvariante 
(Spindeldrehzahl S oder Werkzeug-Schnittgeschwindigkeit SVC) knnen ber 
Systemvariablen gelesen werden:

 Mit Vorlauf-Stopp im Teileprogramm ber die Systemvariablen:

$AC_SVC[<n>]   

$AC_S_TYPE[<n>]   

Schnittgeschwindigkeit, die bei der Aufbereitung des aktu
ellen Hauptlaufsatzes fr die Spindel mit Nummer <n> wirk
sam war.
Spindeldrehzahl-Programmierungsvariante, die bei der Auf
bereitung des aktuellen Hauptlaufsatzes fr die Spindel mit 
Nummer <n> wirksam war.
Wert:
1
2

Bedeutung:
Spindeldrehzahl S in U/min
Werkzeug-Schnittgeschwindigkeit SVC in m/min 
bzw. ft/min

96

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
Grundlagen

2.6 Spindelbewegung

 Ohne Vorlauf-Stopp im Teileprogramm ber die Systemvariablen:

$P_SVC[<n>]   
$P_S_TYPE[<n>]   

Programmierte Schnittgeschwindigkeit fr Spindel <n>
Programmierte Spindeldrehzahl-Programmierungsvariante 
fr Spindel <n>
Wert:
1
2

Bedeutung:
Spindeldrehzahl S in U/min
Werkzeug-Schnittgeschwindigkeit SVC in m/min 
bzw. ft/min

2.6.3

Konstante Schnittgeschwindigkeit (G96/G961/G962, G97/G971/G972, G973, 
LIMS, SCC)

Bei aktiver Funktion "Konstante Schnittgeschwindigkeit" wird, abhngig vom jeweiligen 
Werkstckdurchmesser, die Spindeldrehzahl so verndert, dass die Schnittgeschwindigkeit S 
in m/min bzw. ft/min an der Werkzeugschneide konstant bleibt.

 Schnittgeschwindigkeit konstant
 Spindeldrehzahl erhht
 Spindeldrehzahl verringert

Daraus ergeben sich folgende Vorteile:

 Gleichmige Drehbilder und damit eine hohe Oberflchenqualitt

 Werkzeugschonende Bearbeitung

Syntax

Konstante Schnittgeschwindigkeit fr die Masterspindel ein-/ausschalten:

G96/G961/G962 S...

...

G97/G971/G972/G973

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

97

(cid:22)(cid:21)(cid:20) 
 
 
 
Grundlagen

2.6 Spindelbewegung

Drehzahlbegrenzung fr die Masterspindel:
LIMS=<Wert>
LIMS[<Spindel>]=<Wert>

Andere Bezugsachse fr G96/G961/G962:
SCC[<Achse>]

Hinweis

SCC[<Achse>] kann getrennt oder zusammen mit G96/G961/G962 programmiert werden.

Bedeutung

G96:

Umdrehungsvorschub (wie bei G95 (Seite 105)) und konstante Schnittgeschwindigkeit

G961:

G962:

S...:

G97:

G971:

G972:

G973:

Mit G96 wird automatisch G95 eingeschaltet. Falls G95 vorher noch nicht eingeschaltet 
war, muss bei Aufruf von G96 ein neuer Vorschubwert F... angegeben werden.

Linearvorschub (wie bei G94 (Seite 105)) und konstante Schnittgeschwindigkeit

Linearvorschub oder Umdrehungsvorschub und konstante Schnittgeschwindigkeit

Zusammen mit G96, G961 bzw. G962 wird S... nicht als Spindeldrehzahl sondern als 
Schnittgeschwindigkeit interpretiert. Die Schnittgeschwindigkeit wirkt immer auf die 
Masterspindel.

Einheit:

m/min (bei G71/G710) bzw. ft/min (bei G70/G700) 

Wertebereich:

0,1 m/min ... 9999 9999,9 m/min

Umdrehungsvorschub und konstante Spindeldrehzahl (konstante Schnittgeschwindig
keit AUS)

Linearvorschub und konstante Spindeldrehzahl (konstante Schnittgeschwindigkeit 
AUS)

Linearvorschub oder Umdrehungsvorschub und konstante Spindeldrehzahl (konstante 
Schnittgeschwindigkeit AUS)

Umdrehungsvorschub ohne Spindeldrehzahlbegrenzung und konstante Spindeldreh
zahl (G97 ohne LIMS fr ISO-Modus)

Hinweis:
Nach G97 (bzw. G971 ... G973) wird S... wieder als Spindeldrehzahl in Umdrehungen/
min interpretiert. Falls keine neue Spindeldrehzahl angegeben ist, wird die zuletzt durch 
G96 (bzw. G961 oder G962) eingestellte Drehzahl beibehalten.

LIMS:

Drehzahlbegrenzung fr die Masterspindel (nur wirksam bei aktivem G96/G961/G97)

Bei Maschinen mit umschaltbaren Masterspindeln knnen in einem Satz fr bis zu 4 
Spindeln Begrenzungen mit unterschiedlichen Werten programmiert werden.

<Spindel>:

Nummer der Spindel

<Wert>:

Spindeldrehzahlobergrenze in Umdrehungen/min

SCC:

Bei aktiver Funktion G96/G961/G962 kann mit SCC[<Achse>] eine beliebige Geomet
rieachse als Bezugsachse zugeordnet werden.

Hinweis

Bei Erstanwahl von G96/G961/G962 muss eine konstante Schnittgeschwindigkeit S... 
eingegeben werden, bei Wiederanwahl von G96/G961/G962 ist die Angabe optional.

98

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Grundlagen

2.6 Spindelbewegung

Hinweis

Die mit LIMS programmierte Drehzahlbegrenzung darf die mit G26 programmierte oder ber 
Settingdaten festgelegte Grenzdrehzahl nicht berschreiten.

Hinweis

Die Bezugsachse fr G96/G961/G962 muss zum Programmierzeitpunkt von SCC[<Achse>] 
eine im Kanal bekannte Geometrieachse sein. Die Programmierung von SCC[<Achse>] ist 
auch bei aktivem G96/G961/G962 mglich.

Beispiele

Beispiel 1: Konstante Schnittgeschwindigkeit mit Drehzahlbegrenzung einschalten

Programmcode

N10 SETMS(3)

N20 G96 S100 LIMS=2500

...

Kommentar

; Konstante Schnittgeschwindigkeit = 
100 m/min, Max. Drehzahl = 2500 U/min

N60 G96 G90 X0 Z10 F8 S100 LIMS=444

; Max. Drehzahl = 444 U/min

Beispiel 2: Drehzahlbegrenzung fr 4 Spindeln vorgeben

Die Drehzahlbegrenzungen werden fr die Spindel 1 (Masterspindel) und die Spindeln 2, 3 und 
4 festgelegt:

Programmcode

N10 LIMS=300 LIMS[2]=450 LIMS[3]=800 
LIMS[4]=1500

...

Beispiel 3: Zuordnung einer Y-Achse bei einer Planbearbeitung mit X-Achse

Programmcode

Kommentar

N10 G18 LIMS=3000 T1 D1

; Drehzahlbegrenzung auf 3000 U/min

N20 G0 X100 Z200

N30 Z100

N40 G96 S20 M3

N50 G0 X80

N60 G1 F1.2 X34

N70 G0 G94 X100

N80 Z80

N100 T2 D1

N110 G96 S40 SCC[Y]

...

N140 Y30

; Konstante Schnittgeschwindigkeit = 20 m/min, ist 
abhngig von der X-Achse.

; Planbearbeitung in X mit 1,2 mm/Umdrehung.

; Y-Achse wird G96 zugeordnet und G96 aktiviert (ist 
in einem Satz mglich). Konstante Schnittgeschwindig-
keit = 40 m/min, ist abhngig von der Y-Achse.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

99

 
 
 
 
 
 
 
 
 
 
 
 
 
Grundlagen

2.6 Spindelbewegung

Programmcode

Kommentar

N150 G01 F1.2 Y=27

; Einstechen in Y, Vorschub F = 1,2 mm/Umdrehungen.

N160 G97

N170 G0 Y100

; Konstante Schnittgeschwindigkeit aus.

Weitere Informationen

Berechnung der Spindeldrehzahl

Basis fr die Berechnung der Spindeldrehzahl aus der programmierten Schnittgeschwindigkeit 
ist die ENS-Position der Planachse (Radius).

Hinweis

Frames zwischen WKS und ENS (z. B. programmierbare Frames wie SCALE, TRANS oder 
ROT) werden bei der Berechnung der Spindeldrehzahl bercksichtigt und knnen eine 
Drehzahlnderung bewirken (z. B. wenn sich bei SCALE der wirksame Durchmesser ndert).

Drehzahlbegrenzung LIMS

Falls ein Werkstck mit groen Durchmesserunterschieden zu bearbeiten ist, empfiehlt sich 
die Angabe einer Spindeldrehzahlbegrenzung mit LIMS (maximale Spindeldrehzahl). 
Hierdurch lassen sich bei kleinen Durchmessern unzulssig hohe Drehzahlen ausschlieen. 
LIMS ist nur wirksam bei aktivem G96, G961 und G97. Bei G971 wirkt LIMS nicht. Beim 
Einwechseln des Satzes in den Hauptlauf werden alle programmierten Werte in die 
Settingdaten bernommen.

Hinweis

Die im Teileprogramm mit LIMS genderten Drehzahlgrenzen werden in die Settingdaten 
bernommen und bleiben somit auch ber das Programmende hinaus gespeichert. 

Sollen die mit LIMS genderten Drehzahlgrenzen nach Programmende dagegen nicht mehr 
gelten, muss folgende Definition in den GUD-Baustein des Maschinenherstellers eingefgt 
werden:

REDEF $SA_SPIND_MAX_VELO_LIMS PRLOC

Konstante Schnittgeschwindigkeit ausschalten (G97/G971/G972/G973)

Nach G97 (bzw. G971 ... G973) wird S... wieder als Spindeldrehzahl in Umdrehungen/min 
interpretiert. Falls keine neue Spindeldrehzahl angegeben ist, wird die zuletzt durch G96 (bzw. 
G961 oder G962) eingestellte Drehzahl beibehalten.

Die Funktion G96/G961 kann auch mit G94 oder G95 ausgeschaltet werden. In diesem Fall gilt 
die zuletzt programmierte Drehzahl S... fr den weiteren Bearbeitungsablauf.

G97 kann ohne vorheriges G96 programmiert werden. Die Funktion wirkt dann wie G95, 
zustzlich kann LIMS programmiert werden.

100

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
Grundlagen

2.6 Spindelbewegung

Mit G973 kann die konstante Schnittgeschwindigkeit ausgeschaltet werden, ohne dass eine 
Spindeldrehzahlbegrenzung aktiviert wird.

Hinweis

Die Planachse muss ber Maschinendatum definiert sein.

Fahren im Eilgang G0

Beim Fahren im Eilgang G0 werden keine Drehzahlnderungen vorgenommen.

Ausnahme:

Wird die Kontur im Eilgang angefahren und der nchste NC-Satz enthlt einen Bahnbefehl G1/
G2/G3/, dann stellt sich bereits im Anfahrsatz G0 die Drehzahl fr den nchsten Bahnbefehl 
ein.

Andere Bezugsachse fr G96/G961/G962

Bei aktiver Funktion G96/G961/G962 kann mit SCC[<Achse>] eine beliebige Geometrieachse 
als Bezugsachse zugeordnet werden. ndert sich die Bezugsachse und damit die 
Bezugsposition der Werkzeugspitze (TCP - Tool Center Point) fr die konstante 
Schnittgeschwindigkeit, wird die resultierende Spindeldrehzahl ber die eingestellte Brems- 
bzw. Beschleunigungsrampe angefahren.

Achstausch der zugeordneten Kanalachse

Die Eigenschaft Bezugsachse fr G96/G961/G962 ist immer einer Geometrieachse 
zugeordnet. Bei Achstausch der zugeordneten Kanalachse bleibt die Eigenschaft 
Bezugsachse fr G96/G961/G962 im alten Kanal.

Ein Geometrieachstausch beeinflusst die Zuordnung Geometrieachse zur konstanten 
Schnittgeschwindigkeit nicht. Verndert ein Geometrieachstausch die TCP-Bezugsposition fr 
G96/G961/G962, so fhrt die Spindel ber Rampe die neue Drehzahl an.

Wird durch Geometrieachstausch keine neue Kanalachse zugeordnet (z. B. GEOAX(0,X)), so 
wird die Spindeldrehzahl entsprechend G97 eingefroren.

Beispiele fr Geometrieachstausch mit Zuordnungen der Bezugsachse:

Programmcode

N05 G95 F0.1

Kommentar

N10 GEOAX(1,X1)

; Kanalachse X1 wird zur ersten Geoachse.

N20 SCC[X]

; Erste Geoachse (X) wird zur Bezugsachse

; fr G96/G961/G962.

N30 GEOAX(1,X2)

; Kanalachse X2 wird zur ersten Geoachse.

N40 G96 M3 S20

; Bezugsachse fr G96 ist Kanalachse X2.

Programmcode

N05 G95 F0.1

Kommentar

N10 GEOAX(1,X1)

; Kanalachse X1 wird zur ersten Geoachse.

N20 SCC[X1]

; X1 und implizit die erste Geoachse (X) wird

;zur Bezugsachse fr G96/G961/G962.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

101

 
 
 
Grundlagen

2.6 Spindelbewegung

Programmcode

Kommentar

N30 GEOAX(1,X2)

; Kanalachse X2 wird zur ersten Geoachse.

N40 G96 M3 S20

; Bezugsachse fr G96 ist X2 bzw. X, kein Alarm.

Programmcode

N05 G95 F0.1

Kommentar

N10 GEOAX(1,X2)

; Kanalachse X2 wird zur ersten Geoachse.

N20 SCC[X1]

; X1 ist keine Geoachse, Alarm.

Programmcode

Kommentar

N05 G0 Z50

N10 X35 Y30

N15 SCC[X]

; Bezugsachse fr G96/G961/G962 ist X.

N20 G96 M3 S20

; Konstante Schnittgeschwindigkeit mit 10 mm/min ein.

N25 G1 F1.5 X20

; Planbearbeitung in X mit 1,5 mm/Umdrehung.

N30 G0 Z51

N35 SCC[Y]

; Bezugsachse fr G96 ist Y,

; Reduzierung Spindeldrehzahl (Y30).

N40 G1 F1.2 Y25

; Planbearbeitung in Y mit 1,2 mm/Umdrehung.

2.6.4

Konstante Scheibenumfangsgeschwindigkeit ein-/ausschalten (GWPSON, 
GWPSOF)

Mit den vordefinierten Prozeduren GWPSON(...) und GWPSOF(...) wird die konstante 
Scheibenumfangsgeschwindigkeit (SUG) fr Schleifwerkzeuge (WZ-Typ: 400 bis 499) ein- 
bzw. ausgeschaltet.

Syntax

Bedeutung

GWPSON(<TNr>)

S<n>=...

...

GWPSOF(<TNr>)

GWPSON(...):

GWPSOF(...):

<TNr>:

Konstante Scheibenumfangsgeschwindigkeit einschalten

Konstante Scheibenumfangsgeschwindigkeit ausschalten

T-Nummer

Hinweis:
Nur erforderlich, wenn die konstante Scheibenumfangsgeschwindigkeit statt 
fr das aktive, im Einsatz befindliche Werkzeug fr eine nicht aktive Schleif
scheibe ein- bzw. ausgeschaltet werden soll.

102

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
Grundlagen

2.6 Spindelbewegung

S<n>=:

Scheibenumfangsgeschwindigkeit in m/s oder ft/s fr Spindel <n>

S0=... bzw. S... :

Scheibenumfangsgeschwindigkeit fr die Masterspindel

Status abfragen

Mit der folgenden Systemvariablen kann vom Teileprogramm aus abgefragt werden, ob die 
konstante Scheibenumfangsgeschwindigkeit fr eine bestimmte Spindel aktiv ist:

$P_GWPS[<n>] ; mit <n> = Spindelnummer

Wert

0 (= FALSE)

1 (= TRUE)

Bedeutung

SUG ist ausgeschaltet.

SUG ist eingeschaltet.

2.6.5

Programmierbare Spindeldrehzahlbegrenzung (G25, G26)

Die in Maschinen- und Settingdaten festgelegten minimalen und maximalen 
Spindeldrehzahlen knnen per Teileprogrammbefehl verndert werden.

Programmierte Spindeldrehzahlbegrenzungen sind fr alle Spindeln des Kanals mglich.

Syntax

Bedeutung

G25 S S1= S2=
G26 S S1= S2=

G25:
G26:
S... S1= S2= : Minimale bzw. maximale Spindeldrehzahl(en)

Untere Spindeldrehzahlbegrenzung
Obere Spindeldrehzahlbegrenzung

Hinweis:
Pro Satz drfen maximal drei Spindeldrehzahlbegrenzungen pro
grammiert werden.
Wertebereich:

0.1 ... 9999 9999.9 U/min

Hinweis

Eine mit G25 oder G26 programmierte Spindeldrehzahlbegrenzung berschreibt die 
Grenzdrehzahlen in den Settingdaten und bleibt somit auch ber das Programmende hinaus 
gespeichert.

Sollen die mit G25/G26 genderten Drehzahlgrenzen nach Programmende dagegen nicht 
mehr gelten, mssen folgende Definitionen in den GUD-Baustein des Maschinenherstellers 
eingefgt werden:

REDEF $SA_SPIND_MIN_VELO_G25 PRLOC

REDEF $SA_SPIND_MAX_VELO_G26 PRLOC

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

103

Grundlagen

2.6 Spindelbewegung

Beispiel

Programmcode

Kommentar

N10 G26 S1400 S2=350 S3=600

; Obere Grenzdrehzahl fr Masterspindel, Spindel 2 
und Spindel 3

104

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Grundlagen

2.7 Vorschubregelung

2.7

Vorschubregelung

2.7.1

Vorschub (G93, G94, G95, F, FGROUP, FL, FGREF)

Mit diesen Befehlen werden im NC-Programm die Vorschubgeschwindigkeiten fr alle an der 
Bearbeitungsfolge beteiligten Achsen eingestellt.

Syntax

Bedeutung

Beispiele

G93
G94
G95
F<Wert>
FGROUP(<Achse_1>,<Achse_2>,...)
FGREF[<Rundachse>]=<Bezugsradius>
FL[<Achse>]=<Wert>

G93:

G94:

G95:

Typ des Bahnvorschubs: Zeitreziproker Vorschub [1/min]

Typ des Bahnvorschubs: Linearvorschub [mm/min], [inch/min] oder [Grad/min]

Typ des Bahnvorschubs: Umdrehungsvorschub [mm/Umdrehung] bzw. [inch/Umdre
hung]

Der Umdrehungsvorschub kann whlbar abgeleitet werden von einer Masterspindel, 
einer beliebigen anderen Spindel oder Rundachse.

F<Wert>

FGROUP:

FGREF:

Bahnvorschub fr alle oder die mit FGROUP ausgewhlten Bahnachsen.

Festlegung der Bahnachsen, auf die sich der unter F programmierte Bahnvorschub 
bezieht.

Mit FGREF wird fr jede der unter FGROUP angegebenen Rundachsen der effektive 
Radius (<Bezugsradius>) programmiert

FL:

Grenzgeschwindigkeit fr Synchron-/Bahnachsen

Es gilt die mit G94 eingestellte Einheit.

Pro Achse (Kanalachse, Geometrieachse oder Orientierungsachse) kann ein FL-Wert 
programmiert werden.

<Achse>:

Name einer Kanalachse, Typ: AXIS

Beispiel 1: Wirkungsweise von FGROUP

Das folgende Beispiel soll die Wirkung von FGROUP auf den Bahnweg und Bahnvorschub 
verdeutlichen. Die Variable $AC_TIME enthlt die Zeit vom Satzanfang in Sekunden. Sie ist nur 
in Synchronaktionen verwendbar.

Programmcode

N100 G0 X0 A0

N110 FGROUP(X,A)

Kommentar

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

105

 
 
Grundlagen

2.7 Vorschubregelung

Programmcode

N120 G91 G1 G710 F100

N130 DO $R1=$AC_TIME

N140 X10

N150 DO $R2=$AC_TIME

N160 X10 A10

N170 DO $R3=$AC_TIME

N180 A10

N190 DO $R4=$AC_TIME

N200 X0.001 A10

N210 G700 F100

N220 DO $R5=$AC_TIME

N230 X10

N240 DO $R6=$AC_TIME

N250 X10 A10

N260 DO $R7=$AC_TIME

N270 A10

N280 DO $R8=$AC_TIME

N290 X0.001 A10

N300 FGREF[A]=360/(2*$PI)

N310 DO $R9=$AC_TIME

N320 X0.001 A10

N330 M30

Kommentar

; Vorschub= 100mm/min bzw. 100Grad/min

; Vorschub= 100mm/min, Bahnweg= 10mm, 
R1= ca.6s

; Vorschub= 100mm/min, Bahnweg= 14.14mm, 
R2= ca.8s

; Vorschub= 100Grad/min, Bahnweg= 10Grad, 
R3= ca.6s

; Vorschub= 100mm/min, Bahnweg= 10mm, 
R4= ca.6s

; Vorschub= 2540mm/min bzw. 100Grad/min

; Vorschub= 2540mm/min, Bahnweg= 254mm, 
R5= ca.6s

; Vorschub= 2540mm/min, Bahnweg= 254,2mm, 
R6= ca.6s

; Vorschub= 100Grad/min, Bahnweg= 10Grad, 
R7= ca.6s

; Vorschub= 2540mm/min, Bahnweg= 10mm, 
R8= ca.0.288s

; 1 Grad = 1 inch ber den effektiven Radi-
us einstellen.

; Vorschub= 2540mm/min, Bahnweg= 254mm, 
R9= ca.6s

Beispiel 2: Synchronachsen mit Grenzgeschwindigkeit FL verfahren

Die Bahngeschwindigkeit der Bahnachsen wird reduziert, falls die Synchronachse Z die 
Grenzgeschwindigkeit erreicht.

Programmcode

N10 G0 X0 Y0

N20 FGROUP(X)

N30 G1 X1000 Y1000 G94 F1000 FL[Y]=500

N40 Z-50

106

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Grundlagen

2.7 Vorschubregelung

Beispiel 3: Schraubenlinieninterpolation

Die Bahnachsen X und Y fahren mit programmiertem Vorschub, die Zustellachse Z ist 
Synchronachse.

Programmcode

N10 G17 G94 G1 Z0 F500

N20 X10 Y20

N25 FGROUP(X,Y)

N30 G2 X10 Y20 Z-15 I15 J0 F1000 FL[Z]=200

...

N100 FL[Z]=$MA_AX_VELO_LIMIT[0,Z]

N110 M30

Weitere Informationen

Kommentar

; Zustellen des Werkzeugs.

; Anfahren der Startposition.

; Achsen X/Y sind Bahnachsen, 
Z ist Synchronachse.

; Auf der Kreisbahn gilt Vor-
schub 1000 mm/min, in Z-Rich-
tung wird synchron verfahren.

; Durch Lesen der Geschwindig-
keit aus dem MD wird die Grenz-
geschwindigkeit abgewhlt, der 
Wert aus dem MD gelesen.

; Programmende.

Vorschubgeschwindigkeit fr Bahnachsen (F)

Im Regelfall setzt sich der Bahnvorschub aus den einzelnen Geschwindigkeitskomponenten 
aller an der Bewegung beteiligten Geometrieachsen zusammen und bezieht sich auf den 
Frsermittelpunkt bzw. auf die Werkzeugspitze des Drehstahls.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

107

(cid:21)(cid:19)(cid:20)(cid:24)(cid:21)(cid:24)(cid:20)(cid:19)(cid:60)(cid:61)(cid:60)(cid:59) 
Grundlagen

2.7 Vorschubregelung

Die Vorschubgeschwindigkeit wird unter der Adresse F angegeben. Je nach Voreinstellung in 
den Maschinendaten gelten die ber G-Befehle festgelegten Maeinheiten in mm oder inch.

Pro NC-Satz darf ein F-Wert programmiert werden. Die Einheit der Vorschubgeschwindigkeit 
wird ber einen der G-Befehle G93/G94/G95 festgelegt. Der Vorschub F wirkt nur auf 
Bahnachsen und gilt solange, bis ein neuer Vorschubwert programmiert wird. Nach der 
Adresse F sind Trennzeichen zulssig.

Beispiele:

F100 oder F 100

F.5

F=2*FEED

Vorschubart (G93/G94/G95)

Die G-Befehle G93, G94 und G95 sind modal wirksam. Wird zwischen G93, G94 und G95 
umgeschaltet, so ist der Bahnvorschubwert erneut zu programmieren. Fr die Bearbeitung mit 
Rundachsen kann der Vorschub auch in Grad/min angegeben werden.

Zeitreziproker Vorschub (G93)

Der zeitreziproke Vorschub gibt die Zeitdauer fr das Abfahren eines Satzes an.

Einheit: 1/min

Beispiel:

N10 G93 G01 X100 F2

Bedeutet: der programmierte Bahnweg wird in 0,5 min abgefahren.

108

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:37)(cid:72)(cid:90)(cid:72)(cid:74)(cid:88)(cid:81)(cid:74)(cid:3)(cid:76)(cid:81)(cid:3)(cid:60)(cid:37)(cid:72)(cid:90)(cid:72)(cid:74)(cid:88)(cid:81)(cid:74)(cid:3)(cid:76)(cid:81)(cid:3)(cid:59)(cid:41)(cid:59)(cid:60)Grundlagen

2.7 Vorschubregelung

Hinweis

Falls die Bahnlngen von Satz zu Satz sehr unterschiedlich sind, sollte bei G93 in jedem Satz 
ein neuer F-Wert bestimmt werden. Fr die Bearbeitung mit Rundachsen kann der Vorschub 
auch in Grad/min angegeben werden.

Vorschub fr Synchronachsen

Der unter der Adresse F programmierte Vorschub gilt fr alle im Satz programmierten 
Bahnachsen, jedoch nicht fr Synchronachsen. Die Synchronachsen werden so gesteuert, 
dass sie fr ihren Weg die gleiche Zeit bentigen wie die Bahnachsen und alle Achsen ihren 
Endpunkt zur gleichen Zeit erreichen.

Grenzgeschwindigkeit fr Synchronachsen (FL)

Mit dem Befehl FL kann fr Synchronachsen eine Grenzgeschwindigkeit programmiert 
werden. Falls kein FL programmiert wird, gilt die Eilganggeschwindigkeit. Abgewhlt wird FL 
durch MD-Zuweisung (MD36200 $MA_AX_VELO_LIMIT).

Bahnachse als Synchronachse verfahren (FGROUP)

Mit FGROUP wird festgelegt, ob eine Bahnachse mit Bahnvorschub oder als Synchronachse 
verfahren werden soll. Bei der Schraubenlinieninterpolation kann z. B. festgelegt werden, dass 
nur zwei Geometrieachsen X und Y mit programmiertem Vorschub verfahren werden sollen. 
Die Zustellachse Z wre dann Synchronachse.

Beispiel: FGROUP(X,Y)

FGROUP ndern

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

109

(cid:42)(cid:28)(cid:22)(cid:3)(cid:59)(cid:17)(cid:17)(cid:17)(cid:3)(cid:41)(cid:21)(cid:19)(cid:17)(cid:24)(cid:3)(cid:80)(cid:76)(cid:81)(cid:59)(cid:60)Grundlagen

2.7 Vorschubregelung

Eine nderung der mit FGROUP getroffenen Einstellung ist mglich:

1. durch erneute Programmierung von FGROUP: z. B. FGROUP(X,Y,Z)

2. durch Programmierung von FGROUP ohne Achsangabe: FGROUP()

Nach FGROUP() gilt der im Maschinendatum eingestellte Grundzustand. Geometrieachsen 
fahren jetzt wieder im Bahnachsverbund.

Hinweis

Achsbezeichner bei FGROUP mssen Kanalachsnamen sein.

Maeinheiten fr den Vorschub F

Mit den G-Befehlen G700 und G710 wird zustzlich zu den geometrischen Angaben auch das 
Masystem fr die Vorschbe F definiert, d. h.:

 bei G700: [inch/min]

 bei G710: [mm/min]

Hinweis

Durch G70/G71 werden Vorschubangaben nicht beeinflusst.

Maeinheit fr Synchronachsen mit Grenzgeschwindigkeit FL

Die fr F per G-Befehl G700/G710 eingestellte Maeinheit gilt auch fr FL.

Maeinheit fr Rund- und Linearachsen

Fr Linear- und Rundachsen, die ber FGROUP miteinander verbunden sind und gemeinsam 
eine Bahn fahren, gilt der Vorschub in der Maeinheit der Linearachsen. Je nach 
Voreinstellung mit G94/G95 in mm/min oder inch/min bzw. mm/Umdrehung oder inch/
Umdrehung.

Die Tangentialgeschwindigkeit der Rundachse in mm/min oder inch/min errechnet sich nach 
der Formel:

F[mm/min] = F'[Grad/min] *  * D[mm] / 360[Grad]

mit:

Tangentialgeschwindigkeit

F:
F': Winkelgeschwindigkeit
Kreiskonstante
:
Durchmesser
D:

110

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Grundlagen

2.7 Vorschubregelung

Rundachsen mit Bahngeschwindigkeit F verfahren (FGREF)     

Fr Bearbeitungsvorgnge, bei denen das Werkzeug oder das Werkstck oder beide von einer 
Rundachse bewegt werden, soll der wirksame Bearbeitungsvorschub in gewohnter Weise als 
Bahnvorschub ber den F-Wert programmiert werden knnen. Dazu muss fr jede der 
beteiligten Rundachsen ein effektiver Radius (Bezugsradius) angegeben werden.

Die Einheit des Bezugsradius ist abhngig von der G70/G71/G700/G710-Einstellung.

Um zur Berechnung des Bahnvorschubs beizutragen, mssen alle mitwirkenden Achsen in 
den FGROUP-Befehl aufgenommen werden.

Um kompatibel zum Verhalten ohne FGREF-Programmierung zu bleiben, wird nach dem 
System-Hochlauf und bei RESET die Bewertung 1 Grad = 1 mm wirksam. Dies entspricht 
einem Bezugsradius von FGREF = 360 mm / (2) = 57.296 mm.

Hinweis

Diese Voreinstellung ist unabhngig vom aktiven Grundsystem 
(MD10240 $MN_SCALING_SYSTEM_IS_METRIC) und von der aktuell wirksamen G70/G71/
G700/G710-Einstellung.

Besonderheiten:

Programmcode

N100 FGROUP(X,Y,Z,A)

N110 G1 G91 A10 F100

N120 G1 G91 A10 X0.0001 F100

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

111

(cid:41)(cid:10)(cid:41)(cid:39) 
 
 
 
Grundlagen

2.7 Vorschubregelung

Bei dieser Programmierung wird der programmierte F-Wert in N110 als Rundachsvorschub in 
Grad/min bewertet, whrend die Vorschubbewertung in N120 abhngig von der aktuell 
wirksamen G70/G71/G700/G710-Einstellung entweder 100 inch/min oder 100 mm/min ist.

ACHTUNG

Vorschubunterschied

Die FGREF-Bewertung wirkt auch, wenn nur Rundachsen im Satz programmiert sind. Die 
gewohnte F-Wert-Interpretation als Grad/min gilt in diesem Fall nur, wenn der Radiusbezug 
entsprechend der FGREF-Voreinstellung ist:
 bei G71/G710: FGREF[A]=57.296
 bei G70/G700: FGREF[A]=57.296/25.4

Bezugsradius lesen

Der Wert des Bezugsradius einer Rundachse kann ber Systemvariablen gelesen werden:

 In Synchronaktionen oder mit Vorlauf-Stopp im Teileprogramm ber die Systemvariable:

$AA_FGREF[<Achse>]

Aktueller Hauptlauf-Wert

 Ohne Vorlauf-Stopp im Teileprogramm ber die Systemvariable:

$PA_FGREF[<Achse>]

Programmierter Wert

Sind keine Werte programmiert, liest man in beiden Variablen fr Rundachsen die 
Voreinstellung 360 mm / (2) = 57.296 mm (entspricht 1 mm pro Grad).

Fr Linearachsen liest man in beiden Variablen immer den Wert 1 mm.

Geschwindigkeitsbestimmende Bahnachsen lesen

Die an der Bahninterpolation beteiligten Achsen knnen ber Systemvariablen gelesen 
werden:

 In Synchronaktionen oder mit Vorlauf-Stopp im Teileprogramm ber die Systemvariablen:

$AA_FGROUP[<Achse>]

$AC_FGROUP_MASK

Liefert den Wert "1", wenn die angegebene Achse per 
Grundeinstellung oder durch FGROUP-Programmierung 
einen Einfluss auf die Bahngeschwindigkeit im aktuellen 
Hauptlaufsatz hat. Wenn nicht, dann liefert die Variable 
den Wert "0".
Liefert einen Bitschlssel der mit FGROUP programmierten 
Kanalachsen, die zur Bahngeschwindigkeit beitragen sol
len.

 Ohne Vorlauf-Stopp im Teileprogramm ber die Systemvariablen:

112

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
Grundlagen

2.7 Vorschubregelung

$PA_FGROUP[<Achse>]

$P_FGROUP_MASK

Liefert den Wert "1", wenn die angegebene Achse per 
Grundeinstellung oder durch FGROUP-Programmierung 
einen Einfluss auf die Bahngeschwindigkeit hat. Wenn 
nicht, dann liefert die Variable den Wert "0".
Liefert einen Bitschlssel der mit FGROUP programmierten 
Kanalachsen, die zur Bahngeschwindigkeit beitragen sol
len.

Bahnbezugsfaktoren fr Orientierungsachsen mit FGREF

Bei Orientierungsachsen ist die Wirkungsweise der FGREF[]-Faktoren davon abhngig, ob 
die nderung der Orientierung des Werkzeugs entweder durch Rundachs- oder 
Vektorinterpolation erfolgt.

Bei Rundachsinterpolation werden die jeweiligen FGREF-Faktoren der Orientierungsachsen 
wie bei Rundachsen einzeln als Bezugsradius fr die Wege der Achsen eingerechnet.

Bei Vektorinterpolation wird ein effektiver FGREF-Faktor wirksam, der als geometrischer 
Mittelwert aus den einzelnen FGREF-Faktoren bestimmt wird:

FGREF[effektiv] = n-teWurzel aus [(FGREF[A] * FGREF[B]...)]

mit:

A:
B:
C:
n:

Achsbezeichner der 1. Orientierungsachse
Achsbezeichner der 2. Orientierungsachse
Achsbezeichner der 3. Orientierungsachse 
Anzahl der Orientierungsachsen

Beispiel:

Fr eine Standard-5-Achs-Transformation gibt es zwei Orientierungsachsen und somit 
berechnet sich der effektive Faktor als Wurzel aus dem Produkt der beiden axialen Faktoren:

FGREF[effektiv] = Quadratwurzel aus [(FGREF[A] * FGREF[B])]

Hinweis

Mit dem effektiven Faktor fr Orientierungsachsen FGREF kann somit ein Bezugspunkt auf 
dem Werkzeug festgelegt werden, auf den sich der programmierte Bahnvorschub bezieht.

2.7.2

Positionierachsen verfahren (POS, POSA, POSP, FA, WAITP, WAITMC)

Positionierachsen werden unabhngig von Bahnachsen mit eigenem achsspezifischem 
Vorschub verfahren. Es gelten keine Interpolationsbefehle. Mit den Befehlen POS/POSA/
POSP werden die Positionierachsen verfahren und gleichzeitig die Bewegungsablufe 
koordiniert 

Typische Beispiele fr Positionierachsen sind:

 Palettenzufhreinrichtungen

 Messstationen

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

113

 
 
Grundlagen

2.7 Vorschubregelung

Mit WAITP kann im NC-Programm die Stelle gekennzeichnet werden, an der so lange gewartet 
werden soll, bis eine in einem frheren NC-Satz unter POSA programmierte Achse ihren 
Endpunkt erreicht hat.

Mit WAITMC wird bei Eintreffen der angegebenen Wartemarke augenblicklich der nchste NC-
Satz eingewechselt.

Syntax

POS[<Achse>]=<Position>

POSA[<Achse>]=<Position>

POSP[<Achse>]=(<Endposition>,<Teillnge>,<Modus>)

FA[<Achse>]=<Wert>

WAITP(<Achse>) ; Programmierung im eigenen NC-Satz!

WAITMC(<Wartemarke>)

Bedeutung

POS / POSA:

Positionierachse auf die angegebene Position verfahren

POS und POSA haben die gleiche Funktionalitt, unterscheiden sich aber im Satz
wechselverhalten:

 Mit POS wird der NC-Satz erst weitergeschaltet, wenn die anzufahrende Posi

tion erreicht ist.

 Mit POSA wird der NC-Satz weitergeschaltet, auch wenn die anzufahrende 

Position nicht erreicht ist.

<Achse>:

Name der zu verfahrenden Achse (Kanal- oder Geometrieachs
bezeichner)

<Position>:

Anzufahrende Achsposition

Typ:

REAL

POSP:

Positionierachse in Teilstcken auf die angegebene Endposition verfahren

<Endposition>:

Anzufahrende Achsendposition

<Teillnge>:

Lnge eines Teilstcks

<Modus>:

Anfahrmodus

= 0:

Fr die beiden letzten Teilstcke erfolgt eine Auf
teilung des verbleibenden Wegs bis zur Endposi
tion auf zwei gleich groe Reststcke (Vorbeset
zung).

= 1: Die Teillnge wird so angepasst, dass die Sum

me aller errechneten Teillngen genau den Weg 
zur Endposition ergibt.

Hinweis:
POSP wird speziell fr die Programmierung von Pendelbewegungen (Seite 931) 
eingesetzt.

114

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Grundlagen

2.7 Vorschubregelung

FA:

Vorschub fr die angegebene Positionierachse

<Achse>:

Name der zu verfahrenden Achse (Kanal- oder Geometrieachsbe
zeichner)

<Wert>:

Vorschubgeschwindigkeit

Einheit:

mm/min bzw. inch/min oder Grad/min

Hinweis:
Pro NC-Satz knnen maximal 5 FA-Werte programmiert werden.

WAITP:

Warten auf das Verfahrende einer Positionierachse

Mit der Abarbeitung nachfolgender Stze wird solange gewartet, bis die angege
bene und in einem frheren NC-Satz mit POSA programmierte Positionierachse 
ihre Endposition erreicht hat (mit Genauhalt fein).

<Achse>:

Name der Achse (Kanal- oder Geometrieachsbezeichner), fr die 
der WAITP-Befehl gelten soll

Hinweis:
Mit WAITP kann eine Achse als Pendelachse oder fr das Verfahren als konkur
rierende Positionsachse (durch PLC) freigegeben werden.

WAITMC:

Warten auf das Eintreffen der angegebenen Wartemarke

Bei Eintreffen der Wartemarke wird sofort der nchste NC-Satz eingewechselt.

<Wartemarke>:

Nummer der Wartemarke

VORSICHT

Fahren mit POSA

Wird in einem nachfolgenden Satz ein Befehl gelesen, der implizit Vorlaufstopp erzeugt, wird 
der nachfolgende Satz erst dann ausgefhrt, wenn alle vorher aufbereiteten und 
gespeicherten Stze vollstndig abgearbeitet sind. Der vorherige Satz wird im Genauhalt (wie 
bei G9) angehalten.

Beispiele

Beispiel 1: Fahren mit POSA und Zugriff auf Zustandsdaten der Maschine

Beim Zugriff auf Zustandsdaten der Maschine ($A) erzeugt die Steuerung internen 
Vorlaufstopp. Die Bearbeitung wird angehalten, bis alle vorher aufbereiteten und 
gespeicherten Stze vollstndig abgearbeitet sind.

Programmcode

N40 POSA[X]=100

N50 IF $AA_IM[X]==R100 GOTOF MARKE1

Kommentar

; Zugriff auf Zustandsdaten der Ma-
schine. 

N60 G0 Y100

N70 WAITP(X)

N80 MARKE1:

N...

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

115

 
 
 
 
 
 
Grundlagen

2.7 Vorschubregelung

Beispiel 2: Warten auf Verfahrende mit WAITP

Palettenzufhreinrichtung
Achse U:

Palettenspeicher

Achse V:

Transport der Werkstckpalette in den Arbeitsraum
Transfersystem zu einer Messstation, in der prozessbegleitende Stichpro
benkontrollen durchgefhrt werden

Programmcode

N10 FA[U]=100 FA[V]=100

N20 POSA[V]=90 POSA[U]=100 G0 X50 Y70

N50 WAITP(U)



Kommentar

; Achsspezifische Vorschubangaben 
fr die einzelnen Positionierach-
sen U und V.

; Positionier- und Bahnachsen ver-
fahren.

; Der Programmablauf wird erst 
fortgesetzt, wenn die Achse U die 
in N20 programmierte Position er-
reicht hat.

Weitere Informationen

Fahren mit POSA

Die Satzweiterschaltung bzw. der Programmablauf wird durch POSA nicht beeinflusst. Die 
Bewegung zum Endpunkt kann parallel zum Abarbeiten von nachfolgenden NC-Stzen 
durchgefhrt werden.

Fahren mit POS

Die Satzweiterschaltung wird erst ausgefhrt, wenn alle unter POS programmierten Achsen 
ihre Endpositionen erreicht haben.

Warten auf Verfahrende mit WAITP

Nach einem WAITP gilt die Achse so lange als nicht mehr vom NC-Programm belegt, bis sie 
neu programmiert wird. Diese Achse kann dann durch die PLC als Positionierachse oder vom 
NC-Programm/PLC oder HMI als Pendelachse betrieben werden.

Satzwechsel in der Bremsrampe mit IPOBRKA und WAITMC

Eine Achse wird nur abgebremst, wenn die Wartemarke noch nicht erreicht ist, oder ein 
anderes Satzendekriterium den Satzwechsel verhindert. Nach einem WAITMC startet die 
Achse sofort durch, falls nicht ein anderes Satzendekriterium den Satzwechsel verhindert.

116

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
Grundlagen

2.7 Vorschubregelung

2.7.3

Lagegeregelter Spindelbetrieb (SPCON, SPCOF)

Mit den Befehlen SPCON bzw. SPCOF wird der Lageregelbetrieb der Spindel explizit ein- bzw. 
ausgeschaltet.

Hinweis

Das Einschalten des Lageregelbetriebs mit SPCON bentigt maximal drei Lagereglertakte.

Syntax

Bedeutung

SPCON

SPCON(<n>)

SPCON(<n>,<m>,...)

SPCOF

SPCOF(<n>)

SPCOF(<n>,<m>,...)

SPCON:

Lageregelbetrieb einschalten

Die angegebene Spindel wird von Drehzahlregelung in Lageregelung umgeschaltet.

SPCON wirkt modal und bleibt bis SPCOF erhalten.

SPCOF:

Lageregelbetrieb ausschalten

Die angegebene Spindel wird von Lageregelung in Drehzahlregelung umgeschaltet.

Spindelnummern

Ohne Angabe einer Spindelnummer: Masterspindel des Kanals

<n>,<m>,...
:

Hinweis

Bei einer Synchronspindel mit Sollwertkopplung darf die Leitspindel nicht mit SPCOF in den 
drehzahlgeregelten Betrieb geschaltet werden.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

117

Grundlagen

2.7 Vorschubregelung

2.7.4

Spindeln positionieren (SPOS, SPOSA, M19, M70, WAITS)

Mit SPOS, SPOSA oder M19 knnen Spindeln auf bestimmte Winkelstellungen positioniert 
werden, z. B. beim Werkzeugwechsel.

SPOS, SPOSA und M19 bewirken eine temporre Umschaltung in den Lageregelbetrieb bis 
zum nchsten M3/M4/M5/M41  M45.

Positionieren im Achsbetrieb

Die Spindel kann auch unter ihrer im Maschinendatum bestimmten Adresse als Bahn-, 
Synchron- oder Positionierachse verfahren werden. Mit Angabe des Achsbezeichners befindet 
sich die Spindel im Achsbetrieb. Mit M70 wird die Spindel direkt in den Achsbetrieb geschaltet.

Positionierende

Das Bewegungsendekriterium beim Positionieren der Spindel ist ber FINEA, CORSEA, 
IPOENDA oder IPOBRKA programmierbar.

Sind die Bewegungsendekriterien fr alle im Satz zu bearbeitenden Spindeln bzw. Achsen und 
auerdem das Satzwechselkriterium fr die Bahninterpolation erfllt, so erfolgt der 
Satzwechsel.

Synchronisation

Um Spindelbewegungen zu synchronisieren, kann mit WAITS bis zum Erreichen der 
Spindelposition gewartet werden.

Voraussetzungen

Die zu positionierende Spindel muss im lagegeregelten Betrieb arbeiten knnen.

Spindel positionieren:

SPOS=<Wert> / SPOS[<n>]=<Wert>

SPOSA=<Wert> / SPOSA[<n>]=<Wert>

M19 / M<n>=19

Syntax

118

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Grundlagen

2.7 Vorschubregelung

Spindel in den Achsbetrieb umschalten:

M70 / M<n>=70

Bewegungsendekriterium festlegen:

FINEA / FINEA[S<n>]

COARSEA / COARSEA[S<n>]

IPOENDA / IPOENDA[S<n>]

IPOBRKA / IPOBRKA(<Achse>[,<Zeitpunkt>]) ; Programmierung im eigenen NC-Satz!

Spindelbewegungen synchronisieren:

WAITS / WAITS(<n>,<m>) ; Programmierung im eigenen NC-Satz!

Bedeutung

SPOS / SPOSA:

Spindel auf die angegebene Winkelstellung positionieren

SPOS und SPOSA haben die gleiche Funktionalitt, unterscheiden sich aber im 
Satzwechselverhalten:

 Mit SPOS wird der NC-Satz wird erst weitergeschaltet, wenn die Position er

reicht ist.

 Mit SPOSA wird der NC-Satz weitergeschaltet, auch wenn die Position nicht 

erreicht ist.

<n>:

Nummer der Spindel, die positioniert werden soll.

Ohne Angabe einer Spindelnummer oder mit Spindelnummer "0" 
bezieht sich SPOS bzw. SPOSA auf die Masterspindel.

<Wert>:

Winkelstellung, auf die die Spindel positioniert werden soll

Einheit:

Grad

Typ:

REAL

Fr die Programmierung des Positionsanfahrmodus gibt es fol
gende Mglichkeiten:

=AC(<Wert>):

Absolute Maangabe

Wertebereich:

0  359,9999

=IC(<Wert>):

Inkrementelle Maangabe

Wertebereich:

0  99 999,999

=DC(<Wert>):

Anfahren auf direktem Weg auf Absolutwert

=ACN(<Wert>):

Absolute Maangabe, Anfahren in negati
ver Richtung

=ACP(<Wert>):

Absolute Maangabe, Anfahren in positiver 
Richtung

=<Wert>:

wie DC(<Wert>)

M<n>=19:

Masterspindel (M19 oder M0=19) oder Spindel mit Nummer <n> (M<n>=19) auf 
die mit SD43240 $SA_M19_SPOS vorgegebene Winkelstellung mit dem in 
SD43250 $SA_M19_SPOSMODE vorgegebenen Positionsanfahrmodus positio
nieren     

Der NC-Satz wird erst weitergeschaltet, wenn die Position erreicht ist.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

119

 
 
Grundlagen

2.7 Vorschubregelung

M<n>=70:

Masterspindel (M70 oder M0=70) oder Spindel mit Nummer <n> (M<n>=70) in den 
Achsbetrieb umschalten

Es wird keine definierte Position angefahren. Der NC-Satz wird weitergeschaltet, 
wenn die Umschaltung ausgefhrt wurde.

FINEA:

COARSEA:

IPOENDA:

S<n>:

Bewegungsende bei Erreichen von "Genauhalt fein"

Bewegungsende bei Erreichen von "Genauhalt grob"

Bewegungsende bei Erreichen von "Interpolator-Stopp"

Spindel, fr die das programmierte Bewegungsendekriterium wirksam sein soll

<n>:

Spindelnummer

Ohne Angabe einer Spindel [S<n>] oder mit Spindelnummer "0" bezieht sich das 
programmierte Bewegungsendekriterium auf die Masterspindel.

IPOBRKA:

Satzwechsel in der Bremsrampe mglich

<Achse>:

Kanalachsbezeichner

<Zeitpunkt>: 

Zeitpunkt des Satzwechsels bezogen auf die Bremsrampe

Einheit:

Prozent

Wertebereich: 

100 (Einsatzzeitpunkt der Bremsram
pe)  0 (Ende der Bremsrampe)

Ohne Angabe des Parameters <Zeitpunkt> wird der aktuelle 
Wert des Settingdatums wirksam:

SD43600 $SA_IPOBRAKE_BLOCK_EXCHANGE

Hinweis:
IBOBRKA mit Zeitpunkt "0" ist identisch mit IPOENDA.

WAITS:

Synchronisationsbefehl fr die angegebene(n) Spindel(n)

Mit der Abarbeitung nachfolgender Stze wird solange gewartet, bis die angege
bene(n) und in einem frheren NC-Satz mit SPOSA programmierte(n) Spindel(n) 
ihre Position(en) erreicht haben (mit Genauhalt fein).

WAITS nach M5:

Warten, bis die angegebene(n) Spindel(n) stehen.

WAITS nach M3/M4:

<n>,<m>:

Warten, bis die angegebene(n) Spindel(n) ihre Solld
rehzahl erreicht haben.

Nummern der Spindeln, fr die der Synchronisations
befehl gelten soll

Ohne Angabe einer Spindelnummer oder mit Spindel
nummer "0" bezieht sich WAITS auf die Masterspin
del.

Hinweis

Pro NC-Satz sind 3 Spindelpositionsangaben mglich.

Hinweis

Bei Inkrementeller Maangabe IC(<Wert>) ist die Spindelpositionierung ber mehrere 
Umdrehungen mglich.

120

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
Grundlagen

2.7 Vorschubregelung

Hinweis

Wurde vor SPOS die Lageregelung mit SPCON eingeschaltet, bleibt diese bis SPCOF 
erhalten.

Hinweis

Die Steuerung erkennt aufgrund der Programmierabfolge selbstndig den bergang in den 
Achsbetrieb. Die explizite Programmierung von M70 im Teileprogramm ist daher grundstzlich 
nicht mehr notwendig. M70 kann jedoch weiterhin programmiert werden, um z. B. die 
Lesbarkeit des Teileprogramms zu erhhen.

Weitere Informationen

Positionieren mit SPOSA

Die Satzweiterschaltung bzw. der Programmablauf wird durch SPOSA nicht beeinflusst. Die 
Spindelpositionierung kann parallel zum Abarbeiten von nachfolgenden NC-Stzen 
durchgefhrt werden. Der Satzwechsel erfolgt, wenn alle im Satz programmierten Funktionen 
(auer der Spindel) ihr Satzendekriterium erreicht haben. Die Spindelpositionierung kann sich 
dabei ber mehrere Stze erstrecken (siehe WAITS).

Hinweis

Wird in einem nachfolgenden Satz ein Befehl gelesen, der implizit Vorlaufstopp erzeugt, so 
wird die Bearbeitung in diesem Satz so lange angehalten, bis alle positionierenden Spindeln 
stehen.

Positionieren mit SPOS / M19

Die Satzweiterschaltung wird erst ausgefhrt, wenn alle im Satz programmierten Funktionen 
ihr Satzendekriterium erreicht haben (z. B. alle Hilfsfunktionen von der PLC quittiert wurden, 
alle Achsen ihren Endpunkt erreicht haben) und die Spindel die programmierte Position 
erreicht hat.

Geschwindigkeit der Bewegungen:

Die Geschwindigkeit und das Verzgerungsverhalten fr die Positionierung sind in 
Maschinendaten hinterlegt. Die projektierten Werte knnen durch Programmierung oder durch 
Synchronaktionen gendert werden, siehe:

 Vorschub fr Positionierachsen/Spindeln (FA, FPR, FPRAON, FPRAOF) (Seite 123) 

 Programmierbare Beschleunigungskorrektur (ACC) (Seite 127) 

Angabe der Spindelpositionen:

Da die Befehle G90/G91 hier nicht wirken, gelten explizit die entsprechenden Maangaben wie 
z. B. AC, IC, DC, ACN, ACP. Ohne Angaben wird automatisch wie bei der DC-Angabe verfahren.

Spindelbewegungen synchronisieren mit WAITS

Mit WAITS kann im NC-Programm eine Stelle gekennzeichnet werden, an der solange 
gewartet wird, bis eine oder mehrere in einem frheren NC-Satz unter SPOSA programmierte 
Spindeln ihre Position erreicht haben.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

121

Grundlagen

2.7 Vorschubregelung

Beispiel:

Programmcode

Kommentar

N10 SPOSA[2]=180 SPOSA[3]=0

...

N40 WAITS(2,3)

; Im Satz wird so lange gewartet, bis Spindeln 
2 und 3 die in Satz N10 angegebenen Positionen 
erreicht haben.

Nach M5 kann mit WAITS darauf gewartet werden, dass die Spindel(n) zum Stillstand 
gekommen ist/sind. Nach M3/M4 kann mit WAITS darauf gewartet werden, dass die Spindel(n) 
die vorgegebene Drehzahl/Drehrichtung erreicht hat/haben.

Hinweis

Ist die Spindel noch nicht mit Synchronmarken synchronisiert, dann wird die positive 
Drehrichtung aus dem Maschinendatum entnommen (Auslieferungszustand).

Spindel aus der Drehung (M3/M4) positionieren

Bei eingeschaltetem M3 oder M4 kommt die Spindel auf dem programmierten Wert zum 
Stillstand.

Zwischen DC- und AC-Angabe besteht kein Unterschied. In beiden Fllen wird in der durch 
M3/M4 gewhlten Drehrichtung bis zur absoluten Endposition weitergedreht. Bei ACN und ACP 
wird ggf. gebremst und die entsprechende Anfahrrichtung eingehalten. Bei der IC-Angabe 
wird, ausgehend von der aktuellen Spindelposition, um den angegebenen Wert weitergedreht.

Spindel aus dem Stillstand (M5) positionieren

Der programmierte Weg wird aus dem Stillstand (M5) den Vorgaben entsprechend exakt 
abgefahren.

122

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:39)(cid:85)(cid:72)(cid:75)(cid:85)(cid:76)(cid:70)(cid:75)(cid:87)(cid:88)(cid:81)(cid:74)(cid:39)(cid:85)(cid:72)(cid:75)(cid:85)(cid:76)(cid:70)(cid:75)(cid:87)(cid:88)(cid:81)(cid:74)(cid:51)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)(cid:76)(cid:72)(cid:85)(cid:87)(cid:72)(cid:85)(cid:3)(cid:58)(cid:76)(cid:81)(cid:78)(cid:72)(cid:79)(cid:51)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)(cid:76)(cid:72)(cid:85)(cid:87)(cid:72)(cid:85)(cid:16)(cid:58)(cid:76)(cid:81)(cid:78)(cid:72)(cid:79)(cid:3)(cid:39)(cid:38)(cid:3)(cid:32)(cid:3)(cid:36)(cid:38)(cid:39)(cid:38)(cid:3)(cid:32)(cid:3)(cid:36)(cid:38) 
 
Grundlagen

2.7 Vorschubregelung

2.7.5

Vorschub fr Positionierachsen/Spindeln (FA, FPR, FPRAON, FPRAOF)

Daneben besteht die Mglichkeit, den Umdrehungsvorschub fr Bahn- und Synchronachsen 
oder fr einzelne Positionierachsen/Spindeln von einer anderen Rundachse oder Spindel 
abzuleiten. 

Positionierachsen, wie z. B. Werkstcktransportsysteme, Revolver oder Lnetten, werden 
unabhngig von Bahn- und Synchronachsen verfahren. Deshalb wird fr jede Positionierachse 
ein eigener Vorschub definiert.

Auch fr Spindeln kann ein eigener axialer Vorschub programmiert werden.

Syntax

Vorschub fr Positionierachse:
FA[<Achse>]=

Axialer Vorschub fr Spindel:
FA[SPI(<n>)]= 
FA[S<n>]=

Umdrehungsvorschub fr Bahn-/Synchronachsen ableiten:

FPR(<Rundachse>)

FPR(SPI(<n>))

FPR(S<n>)

Umdrehungsvorschub fr Positionierachsen/Spindeln ableiten:

FPRAON(<Achse>,<Rundachse>)

FPRAON(<Achse>,SPI(<n>))

FPRAON(<Achse>,S<n>)

FPRAON(SPI(<n>),<Rundachse>)

FPRAON(S<n>,<Rundachse>)

FPRAON(SPI(<n>),SPI(<n>))

FPRAON(S<n>,S<n>)

FPRAOF(<Achse>,SPI(<n>),)

FPRAOF(<Achse>,S<n>,)

Bedeutung

FA[...]=... :

Vorschub fr die angegebene Positionierachse bzw. Positioniergeschwin
digkeit (axialer Vorschub) fr die angegebene Spindel

Einheit:

mm/min bzw. inch/min oder Grad/min

Wertebereich:

 999 999,999 mm/min, Grad/min

 39 999,9999 inch/min

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

123

Grundlagen

2.7 Vorschubregelung

FPR(...):

Mit FPR wird die Rundachse (<Rundachse>) oder Spindel 
(SPI(<n>) / S<n>) gekennzeichnet, von der der unter G95 programmierte 
Umdrehungsvorschub fr den Umdrehungsvorschub der Bahn- und Syn
chronachsen abgeleitet werden soll.

FPRAON(...):

Umdrehungsvorschub fr Positionierachsen und Spindeln ableiten

Der erste Parameter (<Achse> / SPI(<n>) / S<n>) kennzeichnet die Po
sitionierachse/Spindel, die mit Umdrehungsvorschub verfahren soll.

Der zweite Parameter (<Rundachse> / SPI(<n>) / S<n>) kennzeichnet 
die Rundachse/Spindel, von der der Umdrehungsvorschub abgeleitet wer
den soll.

Hinweis:
Der zweite Parameter kann auch entfallen, dann wird der Vorschub von der 
Masterspindel abgeleitet.

FPRAOF(...):

Mit FPRAOF wird der abgeleitete Umdrehungsvorschub fr die angegebe
nen Achsen oder Spindeln abgewhlt.

<Achse>:

Achsbezeichner (Positionier- oder Geometrieachse)

SPI(<n>) / S<n> :

Spindelbezeichner

SPI(<n>) und S<n> sind funktionell identisch.

<n>:

Spindelnummer

Hinweis:
SPI konvertiert Spindelnummer in Achsbezeichner. Der bergabeparame
ter (<n>) muss eine gltige Spindelnummer enthalten.

Hinweis

Der programmierte Vorschub FA[...] ist modal wirksam.

Pro NC-Satz knnen max. 5 Vorschbe fr Positionierachsen/Spindeln programmiert werden.

Hinweis

Der abgeleitete Vorschub errechnet sich nach folgender Formel:

Abgeleiteter Vorschub = Programmierter Vorschub * Betrag Leitvorschub

Beispiele

Beispiel 1: Synchronspindelkopplung

Bei Synchronspindelkopplung kann die Positioniergeschwindigkeit der Folgespindel 
unabhngig von der Leitspindel programmiert werden, z. B. zum Positionieren.

Programmcode

Kommentar

...

FA[S2]=100

...

; Positioniergeschwindigkeit der Folgespindel (Spindel 2) 
= 100 Grad/min

124

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
Grundlagen

2.7 Vorschubregelung

Beispiel 2: Abgeleiteter Umdrehungsvorschub fr Bahnachsen

Die Bahnachsen X, Y sollen mit Umdrehungsvorschub verfahren werden, der sich von der 
Rundachse A ableitet:

Programmcode

...

N40 FPR(A)

N50 G95 X50 Y50 F500

...

Beispiel 3: Umdrehungsvorschub fr Masterspindel ableiten

Programmcode

Kommentar

N30 FPRAON(S1,S2)

N40 SPOS=150

N50 FPRAOF(S1)

; Der Umdrehungsvorschub fr die Masterspindel (S1) soll 
von Spindel 2 abgeleitet werden.

; Masterspindel positionieren.

; Abgeleiteten Umdrehungsvorschub fr die Masterspindel 
abwhlen.

Beispiel 4: Umdrehungsvorschub fr Positionierachse ableiten

Programmcode

N30 FPRAON(X)

N40 POS[X]=50 FA[X]=500

N50 FPRAOF(X)

Kommentar

; Der Umdrehungsvorschub fr die Positionierachse X 
soll von der Masterspindel abgeleitet werden.

; Die Positionierachse fhrt mit 500 mm/Umdrehung 
der Masterspindel.

Weitere Informationen

FA[]

Es gilt immer die Vorschubart G94. Ist G70/G71 aktiv, so richtet sich die Maeinheit metrisch/
inch nach der Voreinstellung im Maschinendatum. Mit G700/G710 kann die Maeinheit im 
Programm verndert werden.

Hinweis

Wird kein FA programmiert, gilt der im Maschinendatum eingestellte Wert.

FPR()

Mit FPR kann als Erweiterung des G95-Befehls (Umdrehungsvorschub bezogen auf 
Masterspindel) der Umdrehungsvorschub auch von einer beliebigen Spindel oder Rundachse 
abgeleitet werden. G95 FPR() gilt fr Bahn- und Synchronachsen.

Falls die mit FPR gekennzeichnete Rundachse/Spindel mit Lageregelung arbeitet, gilt 
Sollwertkopplung, ansonsten Istwertkopplung.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

125

 
 
 
 
 
 
Grundlagen

2.7 Vorschubregelung

FPRAON()

Mit FPRAON lsst sich axial fr Positionierachsen und Spindeln der Umdrehungsvorschub vom 
augenblicklichen Vorschub einer anderen Rundachse oder Spindel ableiten.

FPRAOF()

Mit FPRAOF lsst sich der Umdrehungsvorschub fr eine oder gleichzeitig mehrere Achsen/
Spindeln ausschalten.

2.7.6

Programmierbare Vorschubkorrektur (OVR, OVRRAP, OVRA)

Die Geschwindigkeit von Bahn-/Positionierachsen und Spindeln kann im NC-Programm 
modifiziert werden.

Syntax

Bedeutung

OVR=<Wert>
OVRRAP=<Wert>
OVRA[<Achse>]=<Wert>
OVRA[SPI(<n>)]=<Wert>
OVRA[S<n>]=<Wert>

OVR:

OVRRAP:

OVRA:

Vorschubnderung fr Bahnvorschub F

Vorschubnderung fr Eilganggeschwindigkeit

Vorschubnderung fr Positioniervorschub FA bzw. fr Spindeldrehzahl S

<Achse>:

Achsbezeichner (Positionier- oder Geometrieachse)

SPI(<n>) / S<n> :

Spindelbezeichner

SPI(<n>) und S<n> sind funktionell identisch.

<n>:

Spindelnummer

Hinweis:
SPI konvertiert Spindelnummer in Achsbezeichner. Der bergabeparame
ter (<n>) muss eine gltige Spindelnummer enthalten.

<Wert>:

Vorschubnderung in Prozent

Der Wert bezieht sich auf bzw. berlagert sich mit dem an der Maschinen
steuertafel eingestellten Vorschub-Override.

Wertebereich:

0  200%, ganzzahlig

Hinweis:
Bei Bahn- und Eilgangkorrektur werden die in Maschinendaten eingestell
ten maximalen Geschwindigkeiten nicht berschritten.

126

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
Grundlagen

2.7 Vorschubregelung

2.7.7

Programmierbare Beschleunigungskorrektur (ACC)

In kritischen Programmabschnitten kann es notwendig sein, die Beschleunigung unter die 
maximal mglichen Werte zu beschrnken, um z. B. mechanische Schwingungen zu 
vermeiden.

Mit der programmierbaren Beschleunigungskorrektur kann fr jede Bahnachse oder Spindel 
die Beschleunigung per Befehl im NC-Programm verndert werden. Die Begrenzung wirkt in 
allen Interpolationsarten. Als 100 % Beschleunigung gelten die in den Maschinendaten 
festgelegten Werte.

Syntax

Syntax

ACC[<Achse>]=<Wert>
ACC[SPI(<n>)]=<Wert>
ACC(S<n>)=<Wert>

Ausschalten:
ACC[...]=100

ACC:

Beschleunigungsnderung fr die angegebene Bahnachse bzw. Drehzahl
nderung fr die angegebene Spindel

<Achse>:

Kanalachsname der Bahnachse

SPI(<n>) / S<n> :

Spindelbezeichner

SPI(<n>) und S<n> sind funktionell identisch.

<n>:

Spindelnummer

Hinweis:
SPI konvertiert Spindelnummer in Achsbezeichner. Der bergabeparame
ter (<n>) muss eine gltige Spindelnummer enthalten.

<Wert>:

Beschleunigungsnderung in Prozent

Der Wert bezieht sich auf bzw. berlagert sich mit dem an der Maschinen
steuertafel eingestellten Vorschub-Override.

Wertebereich:

1  200%, ganzzahlig

Hinweis

Bei einer greren Beschleunigung knnen die vom Maschinenhersteller zulssigen Werte 
berschritten werden.

Beispiel

Programmcode

N50 ACC[X]=80

Kommentar

; Der Achsschlitten in X-Richtung soll nur mit 80% Be-
schleunigung gefahren werden.

N60 ACC[SPI(1)]=50

; Spindel 1 soll nur mit 50% des Beschleunigungsvermgens 
beschleunigen bzw. bremsen.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

127

 
Grundlagen

2.7 Vorschubregelung

Weitere Informationen

Mit ACC programmierte Beschleunigungskorrektur

Die mit ACC[...] programmierte Beschleunigungskorrektur wird immer wie in der 
Systemvariablen $AA_ACC bei der Ausgabe bercksichtigt. Das Auslesen im Teileprogramm 
und in Synchronaktionen findet zu verschiedenen Zeitpunkten in der NC-Verarbeitung statt.  

Im Teileprogramm

Der im Teileprogramm geschriebene Wert wird nur dann in der Systemvariablen $AA_ACC wie 
im Teileprogramm geschrieben bercksichtigt, wenn ACC zwischenzeitlich nicht von einer 
Synchronaktion verndert wurde.

In Sychronaktionen

Entsprechend gilt: Der einer Synchronaktion geschriebene Wert wird nur dann in der 
Systemvariablen $AA_ACC wie der Synchronaktion geschrieben bercksichtigt, wenn ACC 
zwischenzeitlich nicht von einem Teileprogramm verndert wurde.

Die vorgegebene Beschleunigung kann auch ber Synchronaktionen verndert werden.

Beispiel:

Programmcode

...

N100 EVERY $A_IN[1] DO POS[X]=50 FA[X]=2000 ACC[X]=140

Der aktuelle Beschleunigungswert kann mit der Systemvariablen $AA_ACC[<Achse>] 
abgefragt werden. ber Maschinendatum kann eingestellt werden, ob bei RESET/
Teileprogrammende der zuletzt gesetzte ACC-Wert oder 100% gelten soll.

2.7.8

Vorschub mit Handradberlagerung (FD, FDA)

Mit den Befehlen FD und FDA knnen Achsen whrend des Teileprogrammablaufs mit 
Handrdern verfahren werden. Die programmierten Verfahrbewegungen der Achsen werden 
dabei mit den als Weg- oder Geschwindigkeitsvorgaben bewerteten Handradpulsen 
berlagert. 

Bahnachsen 
Bei Bahnachsen kann der programmierte Bahnvorschub berlagert werden. Ausgewertet wird 
dabei das Handrad der 1. Geometrieachse des Kanals. Die drehrichtungsabhngig bewerteten 
Handradpulse pro IPO-Takt entsprechen der zu berlagernden Bahngeschwindigkeit. Die 
durch die Handradberlagerung erreichbaren Bahngeschwindigkeitsgrenzwerte sind:

 Minimum: 0

 Maximum: Maschinendatengrenzwerte der an der Verfahrbewegung beteiligten 

Bahnachsen

Hinweis

Bahnvorschub

Der Bahnvorschub F und der Handradvorschub FD drfen nicht zusammen in einem NC-
Satz programmiert werden.

128

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
Grundlagen

2.7 Vorschubregelung

Positionierachsen 
Bei Positionierachsen knnen axial der Verfahrweg oder die Geschwindigkeit berlagert 
werden. Ausgewertet wird dabei das der Achse zugeordnete Handrad.

 Wegberlagerung 

Die drehrichtungsabhngig bewerteten Handradpulse entsprechen dem zu verfahrenden 
Weg der Achse. Es werden dabei nur Handradpulse in Richtung auf die programmierte 
Position bercksichtigt.

 Geschwindigkeitsberlagerung 

Die drehrichtungsabhngig bewerteten Handradpulse pro IPO-Takt entsprechen der zu 
berlagernden axialen Geschwindigkeit. Die durch die Handradberlagerung erreichbaren 
Bahngeschwindigkeitsgrenzwerte sind:

 Minimum: 0

 Maximum: Maschinendatengrenzwerte der Positionierachse

Syntax

Bedeutung

FD=<Geschwindigkeit>
FDA[<Achse>]=<Geschwindigkeit>

FD=< Geschwindigkeit > :

Bahnvorschub und Freigabe der Geschwindigkeits
berlagerung durch Handrad.

<Geschwindigkeit>:

 Wert = 0: Nicht erlaubt!

 Wert  0: Bahngeschwindigkeit
axialer Vorschub

<Geschwindigkeit>:

 Wert = 0: Wegvorgabe durch Handrad

 Wert  0: axiale Geschwindigkeit
Achsbezeichner der Positionierachse

FDA[<Achse>]=<Geschwindigkeit>
 :

<Achse>:

Hinweis

FD und FDA sind satzweise wirksam.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

129

Grundlagen

2.7 Vorschubregelung

Beispiel

Wegvorgabe: Die in Z-Richtung pendelnde Schleifscheibe wird per Handrad in X-Richtung an 
das Werkstck gefahren.

Hierbei kann der Bediener manuell bis zum gleichmigen Funkenflug zustellen. Durch 
Aktivieren von "Restweglschen" wird in den nchsten NC-Satz gewechselt und im 
AUTOMATIK-Betrieb weiter gearbeitet.

Weitere Informationen

Bahnachsen mit Geschwindigkeitsberlagerung verfahren ( FD=<Geschwindigkeit> ) 
Fr den Teileprogrammsatz in dem die Bahngeschwindigkeitsberlagerung programmiert ist, 
mssen folgende Voraussetzungen erfllt sein:

 Wegbefehl G1, G2 oder G3 aktiv

 Genauhalt G60 aktiv

 Linearvorschub G94 aktiv

Vorschub-Override 
Der Vorschub-Override wirkt nur auf die programmierte Bahngeschwindigkeit, nicht auf den 
per Handrad erzeugten Geschwindigkeitsanteil (Ausnahme: Vorschub-Override = 0).   

Beispiel:

Programmcode 

Beschreibung

N10 X Y F500

; Bahnvorschub = 500 mm/min

N20 X Y FD=700

; Bahnvorschub = 700 mm/min und Geschwindigkeitsberlagerung 

durch Handrad.

; In N20 wird von 500 auf 700 mm/min beschleunigt. ber Handrad 

kann drehrichtungsabhngig die Bahngeschwindigkeit zwischen 0 

und Maximalwert (Maschinendaten) verndert werden.

130

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:59)(cid:61)Grundlagen

2.7 Vorschubregelung

Positionierachsen mit Wegvorgabe verfahren ( FDA[<Achse>]=0 )
Im NC-Satz mit programmiertem FDA[<Achse>]=0 wird der Vorschub auf Null gesetzt, so 
dass vom Programm her keine Fahrbewegung erfolgt. Die programmierte Fahrbewegung zur 
Zielposition wird jetzt ausschlielich vom Bediener durch Drehen des Handrads gesteuert.

Beispiel:

Programmcode 

Beschreibung

...

N20 POS[V]=90 FDA[V]=0

; Zielposition = 90 mm, axialer Vorschub = 0 mm/min und 

Wegberlagerung durch Handrad.

; Geschwindigkeit der Achse V am Satzanfang = 0 mm/min.

; Weg- und Geschwindigkeitsvorgabe erfolgt durch Handradpulse

Bewegungsrichtung, Fahrgeschwindigkeit: 
Die Achsen fahren vorzeichenrichtig den per Handradpulse vorgegebenen Weg. Je nach 
Drehrichtung kann vorwrts und rckwrts gefahren werden. Je schneller das Handrad 
gedreht wird, desto hher die Verfahrgeschwindigkeit.

Verfahrbereich: 
Der Verfahrbereich wird durch die Startposition und den programmierten Endpunkt begrenzt.

Positionierachsen mit Geschwindigkeitsberl. verfahren ( FDA[<Achse>]=<Geschwindigkeit> )

Im NC-Satz mit programmiertem FDA[]= wird der Vorschub vom zuletzt programmierten 
FA-Wert auf den unter FDA programmierten Wert beschleunigt bzw. verzgert. Ausgehend 
vom aktuellen Vorschub FDA kann die programmierte Bewegung zur Zielposition durch Drehen 
des Handrades beschleunigt oder bis Null verzgert werden. Als Maximalgeschwindigkeit 
gelten die in Maschinendaten parametrierten Werte. 

Beispiel:

Programmcode 

Beschreibung

N10 POS[V]= FA[V]=100

; axialer Vorschub = 100 mm/min

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

131

 
Grundlagen

2.7 Vorschubregelung

Programmcode 

Beschreibung

N20 POS[V]=100 FAD[V]=200

; axiale Zielposition = 100, axialer Vorschub = 200 mm/min 

; und Geschwindigkeitsberlagerung durch Handrad.

; In N20 wird von 100 auf 200 mm/min beschleunigt. ber 

; Handrad kann drehrichtungsabhngig die Geschwindigkeit 

; zwischen 0 und Maximalwert (Maschinendaten) verndert 

werden.

Verfahrbereich: 
Der Verfahrbereich wird durch die Startposition und den programmierten Endpunkt begrenzt.

2.7.9

Vorschuboptimierung bei gekrmmten Bahnstcken (CFTCP, CFC, CFIN)

Der programmierte Vorschub bezieht sich bei eingeschaltetem Korrekturbetrieb G41/G42 fr 
den Frser-Radius zunchst auf die Frsermittelpunktsbahn (vgl. Kapitel 
"Koordinatentransformationen (Frames) (Seite 300)").

Beim Frsen eines Kreises (gleiches gilt fr Polynom- und Spline-Interpolation) verndert sich 
der Vorschub am Frserrand unter Umstnden so stark, dass das Bearbeitungsergebnis 
darunter leidet.

Beispiel: Frsen eines kleinen Auenradius mit einem greren Werkzeug. Der Weg, den die 
Auenseite des Frsers zurcklegen muss, ist sehr viel grer als der Weg entlang der Kontur.

Hierdurch wird an der Kontur mit einem sehr kleinen Vorschub gearbeitet. Um solche Effekte 
zu verhindern, sollte bei gekrmmten Konturen der Vorschub entsprechend geregelt werden.

Syntax

CFTCP
CFC
CFIN

132

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:21)(cid:22)(cid:20)(cid:14)(cid:60)(cid:14)(cid:59)Grundlagen

2.7 Vorschubregelung

Bedeutung

Beispiel

CFTCP:

Konstanter Vorschub an der Frsermittelpunktsbahn

Die Steuerung hlt die Vorschubgeschwindigkeit konstant, Vorschub-Overrides werden 
ausgeschaltet.

CFC:

Konstanter Vorschub an der Kontur (Werkzeugschneide)

Diese Funktion ist standardmig voreingestellt.

CFIN:

Konstanter Vorschub an der Werkzeugschneide nur an innengekrmmten Konturen, 
sonst auf der Frsermittelpunktsbahn

Die Vorschubgeschwindigkeit wird bei Innenradien reduziert.

In diesem Beispiel wird zunchst mit CFC-korrigiertem Vorschub die Kontur hergestellt. Beim 
Schlichten wird der Frsgrund mit CFIN zustzlich bearbeitet. Hierdurch lsst sich verhindern, 
dass der Frsgrund an Auenradien durch zu hohe Vorschubgeschwindigkeit beschdigt wird.

Programmcode

Kommentar

N10 G17 G54 G64 T1 M6

N20 S3000 M3 CFC F500 G41

N30 G0 X-10

N40 Y0 Z-10

N50 KONTUR1

N40 CFIN Z-25

N50 KONTUR1

N60 Y120

N70 X200 M30

; Zustellen auf erste Schnitt-Tiefe

; Unterprogramm-Aufruf

; Zustellen auf zweite Schnitt-Tiefe

; Unterprogramm-Aufruf

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

133

(cid:20)(cid:19)(cid:23)(cid:19)(cid:22)(cid:19)(cid:24)(cid:24)(cid:21)(cid:19)(cid:20)(cid:19)(cid:21)(cid:19)(cid:60)(cid:59) 
 
 
 
 
Grundlagen

2.7 Vorschubregelung

Weitere Informationen

Konstanter Vorschub an der Kontur mit CFC

Die Vorschubgeschwindigkeit wird bei Innenradien reduziert, bei Auenradien erhht. 
Hierdurch bleibt die Geschwindigkeit an der Werkzeugschneide und damit an der Kontur 
konstant.

2.7.10

Mehrere Vorschubwerte in einem Satz (F, ST, SR, FMA, STA, SRA)

Mit der Funktion "Mehrere Vorschubwerte in einem Satz" knnen abhngig von externen 
digitalen und/oder analogen Eingngen verschiedene Vorschubwerte eines NC-Satzes, 
Verweilzeit sowie Rckzug bewegungssynchron aktiviert werden 

Syntax

Bahnbewegung:
F=... F7=... F6=... F5=... F4=... F3=... F2=... ST=... SR=...

Axiale Bewegung:
FA[<Ax>]=... FMA[7,<Ax>]=... FMA[6,<Ax>]=... FMA[5,<Ax>]=...  
FMA[4,<Ax>]=... FMA[3,<Ax>]=... FMA[2,<Ax>]=... STA[<Ax>]=... 
SRA[<Ax>]=...

Bedeutung

F=... :

Unter der Adresse F wird der Bahnvorschub pro
grammiert, der gltig ist, solange kein Eingangs
signal ansteht.

Wirksamkeit:

modal

134

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:78)(cid:82)(cid:81)(cid:86)(cid:87)(cid:68)(cid:81)(cid:87)(cid:78)(cid:82)(cid:81)(cid:86)(cid:87)(cid:68)(cid:81)(cid:87)(cid:72)(cid:85)(cid:75)(cid:184)(cid:75)(cid:87)(cid:85)(cid:72)(cid:71)(cid:88)(cid:93)(cid:76)(cid:72)(cid:85)(cid:87)Grundlagen

2.7 Vorschubregelung

Zustzlich zum Bahnvorschub knnen bis zu 6 
weitere Vorschbe im Satz programmiert wer
den. Die numerische Erweiterung gibt die Bit
nummer des Eingangs an, mit dessen nderung 
der Vorschub wirksam wird.

Wirksamkeit:

satzweise

Verweilzeit in s (bei der Technologie Schleifen: 
Ausfeuerzeit)

Eingangsbit:

1

Wirksamkeit:

satzweise

Rckzugsweg

Die Einheit fr den Rckzugsweg bezieht sich 
auf die aktuell gltige Maeinheit (mm oder inch).

Eingangsbit:

0

Wirksamkeit:

satzweise

Unter der Adresse FA wird der axiale Vorschub 
programmiert, der gltig ist, solange kein Ein
gangssignal ansteht.

Wirksamkeit:

modal

Zustzlich zum axialen Vorschub FA knnen 
mit FMA bis zu 6 weitere Vorschbe pro Achse im 
Satz programmiert werden. Der erste Parameter 
gibt die Bitnummer des Eingangs an, der zweite 
die Achse, fr die der Vorschub gelten soll.

Wirksamkeit:

satzweise

axiale Verweilzeit in s (bei der Technologie 
Schleifen: Ausfeuerzeit)

Eingangsbit:

1

Wirksamkeit:

satzweise

axialer Rckzugsweg

Eingangsbit:

0

Wirksamkeit:

satzweise

Achse, fr die der Vorschub gelten soll

F2=... bis F7=... :

ST=... :

SR=... :

FA[<Ax>]=... :

FMA[2,<Ax>]=... bis FMA[7,<Ax>]=... :

STA[<Ax>]=...:

SRA[<Ax>]=...:

<Ax>:

Hinweis

Prioritt der Signale

Die Abfragereihenfolge der Signale erfolgt von Eingangsbit 0 (E0) aufsteigend. Somit besitzen 
die Rckzugsbewegung die hchste und der Vorschub F7 die niedrigste Prioritt. Verweilzeit 
und Rckzugsbewegung beenden die Vorschubbewegungen, die mit F2 bis F7 aktiviert 
wurden.

Das Signal mit der hchsten Prioritt bestimmt den aktuellen Vorschub.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

135

Grundlagen

2.7 Vorschubregelung

Hinweis

Restweglschen

Wenn der Eingang Bit 1 fr Verweilzeit bzw. Rckzugsweg Bit 0 aktiviert wird, wird der Restweg 
fr Bahnachsen oder die betreffenden Einzelachsen gelscht und die Verweilzeit bzw. der 
Rckzug gestartet.

Hinweis

Rckzugsweg

Die Einheit fr den Rckzugsweg bezieht sich auf die aktuell gltige Maeinheit (mm oder inch).

Der Rckhub erfolgt immer in Gegenrichtung zur aktuellen Bewegung. Mit SR/SRA wird immer 
der Betrag des Rckhubs programmiert. Es wird kein Vorzeichen programmiert.

Hinweis

POS statt POSA

Wenn fr eine Achse Vorschbe, Verweilzeit oder Rckzugsweg aufgrund eines externen 
Eingangs programmiert sind, darf diese Achse in diesem Satz nicht als POSA-Achse 
(Positionierachse ber Satzgrenzen hinweg) programmiert werden.

Hinweis

Statusabfrage 

Der Status eines Eingangs kann auch fr Synchronbefehle unterschiedlicher Achsen abgefragt 
werden.

Hinweis

LookAhead

LookAhead ist auch bei mehreren Vorschben in einem Satz wirksam. Damit kann der aktuelle 
Vorschub durch LookAhead begrenzt werden.

Beispiele

Beispiel 1: Bahnbewegung

Programmcode

Kommentar

G1 X48 F1000 F7=200 F6=50 F5=25 F4=5 ST=1.5 SR=0.5

; Bahnvorschub = 1000

; zustzliche Bahnvorschubwerte:
; 200 (Eingangsbit 7)
; 50 (Eingangsbit 6)
; 25 (Eingangsbit 5)
; 5 (Eingangsbit 4)

; Verweilzeit 1,5s

; Rckzug 0,5mm

136

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Beispiel 2: Axiale Bewegung

Programmcode

POS[A]=300 FA[A]=800 FMA[7,A]=720 FMA[6,A]=640 
FMA[5,A]=560 STA[A]=1.5 SRA[A]=0.5

Grundlagen

2.7 Vorschubregelung

Kommentar

; Vorschub fr Achse A = 800

; zustzliche Vorschubwerte fr Achse A: 
720(Eingangsbit 7)
; 640 (Eingangsbit 6)
; 560 (Eingangsbit 5)

; axiale Verweilzeit: 1,5s

; axialer Rckzug: 0,5mm

Beispiel 3: Mehrere Arbeitsgnge in einem Satz

Programmcode

N20 T1 D1 F500 G0 X100

N25 G1 X105 F=20 F7=5 F3=2.5 F2=0.5 ST=1.5 SR=0.5

Kommentar

Ausgangsstellung

; Normalvorschub mit F,
; Schruppen mit F7,
; Schlichten mit F3,
; Feinschlichten mit F2,
; Verweilzeit 1,5 s,
; Rckzugsweg 0,5 mm

...

2.7.11

Satzweiser Vorschub (FB)

Mit der Funktion "Satzweiser Vorschub" kann fr einen einzelnen Satz ein separater Vorschub 
vorgegeben werden. Nach diesem Satz ist der zuvor wirksame modale Vorschub wieder aktiv. 

Syntax

FB=<Wert>

Bedeutung

FB:

Vorschub nur fr den aktuellen Satz

<WERT>:

Der programmierte Wert muss grer Null sein.

Die Interpretation erfolgt entsprechend des aktiven Vorschubtyps:

 G94: Vorschub in mm/min oder Grad/min

 G95: Vorschub in mm/Umdr. oder inch/Umdr.

 G96: konstante Schnittgeschwindigkeit

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

137

 
 
Grundlagen

2.7 Vorschubregelung

Hinweis

Ist im Satz keine Verfahrbewegung programmiert (z. B. Rechensatz), bleibt FB ohne Wirkung.

Ist kein expliziter Vorschub fr Fase/Rundung programmiert, gilt der Wert von FB auch fr ein 
in diesem Satz vorhandenes Konturelement Fase/Rundung.

Vorschubinterpolationen FLIN, FCUB, ... sind uneingeschrnkt mglich.

Die gleichzeitige Programmierung von FB und FD (manuelles Verfahren perr Handrad mit 
Vorschubberlagerung) oder F (modaler Bahnvorschub) ist nicht mglich.

Beispiel

Programmcode

Kommentar

N10 G0 X0 Y0 G17 F100 G94

; Ausgangsstellung

N20 G1 X10

N30 X20 FB=80

N40 X30

...

; Vorschub 100 mm/min

; Vorschub 80 mm/min

; Vorschub ist wieder 100 mm/min.

2.7.12

Zahnvorschub (G95 FZ)

ber den Werkzeugparameter $TC_DPNT (Anzahl der Zhne) des aktiven 
Werkzeugkorrekturdatensatzes berechnet die Steuerung aus dem programmierten 
Zahnvorschub fr jeden Verfahrsatz den wirksamen Umdrehungsvorschub:

F = FZ * $TC_DPNT
mit:

F:
FZ:
$TC_DPNT:

Umdrehungsvorschub in mm/U bzw. inch/U
Zahnvorschub in mm/Zahn bzw. inch/Zahn
Systemvariable Werkzeugparameter: Anzahl der Zhne/U

138

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:57)(cid:82)(cid:85)(cid:86)(cid:70)(cid:75)(cid:88)(cid:69)(cid:90)(cid:72)(cid:74)(cid:3)(cid:83)(cid:85)(cid:82)(cid:3)(cid:61)(cid:68)(cid:75)(cid:81) 
Grundlagen

2.7 Vorschubregelung

Der Werkzeugtyp ($TC_DP1) des aktiven Werkzeugs wird nicht bercksichtigt.

Der programmierte Zahnvorschub ist unabhngig von Werkzeugwechsel und An-/Abwahl 
eines Werkzeugkorrekturdatensatzes und bleibt modal erhalten.

Eine nderung des Werkzeugparameters $TC_DPNT der aktiven Schneide wird mit der 
nchsten Werkzeugkorrekturanwahl bzw. der nchsten Aktualisierung der aktiven 
Korrekturdaten wirksam.

Werkzeugwechsel und An-/Abwahl eines Werkzeugkorrekturdatensatzes fhren zu einer 
Neuberechnung des wirksamen Umdrehungsvorschubs.

Hinweis

Der Zahnvorschub bezieht sich nur auf die Bahn, eine achsspezifische Programmierung ist 
nicht mglich.

Syntax

G95 FZ...

Bedeutung

G95:

Vorschubart: Umdrehungsvorschub in mm/U bzw. inch/U (abhngig von G700/G710)

Zu G95 siehe "Vorschub (G93, G94, G95, F, FGROUP, FL, FGREF) (Seite 105)"

FZ:

Zahnvorschubgeschwindigkeit

Aktivierung:

mit G95

Wirksamkeit:

modal

Maeinheit:

mm/Zahn bzw. inch/Zahn (abhngig von G700/G710)

ACHTUNG

Werkzeugwechsel / Wechsel der Masterspindel

Ein nachfolgender Werkzeugwechsel oder Wechsel der Masterspindel muss vom Anwender 
durch entsprechende Programmierung, z. B. erneute Programmierung von FZ, bercksichtigt 
werden.

ACHTUNG

Werkzeugeingriffe undefiniert

Technologische Belange wie z. B. Gleich- oder Gegenlauffrsen, Stirn- oder 
Umfangsplanfrsen usw. werden ebenso wie die Bahngeometrie (Gerade, Kreis, ...) nicht 
automatisch bercksichtigt. Diese Faktoren mssen daher bei der Programmierung des 
Zahnvorschubs beachtet werden.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

139

Grundlagen

2.7 Vorschubregelung

Hinweis

Umschaltung zwischen G95 F... und G95 FZ...

Mit Umschaltung zwischen G95 F... (Umdrehungsvorschub) und G95 FZ... 
(Zahnvorschub) wird der jeweils nicht aktive Vorschubwert gelscht.

Hinweis

Vorschub ableiten mit FPR

Mit FPR kann analog zum Umdrehungsvorschub auch der Zahnvorschub von einer beliebigen 
Rundachse oder Spindel abgeleitet werden (siehe "Vorschub fr Positionierachsen/Spindeln 
(FA, FPR, FPRAON, FPRAOF) (Seite 123)").

Beispiele

Beispiel 1: Frser mit 5 Zhnen ($TC_DPNT = 5)

Programmcode

N10 G0 X100 Y50

Kommentar

N20 G1 G95 FZ=0.02

; Zahnvorschub 0,02 mm/Zahn

N30 T3 D1

M40 M3 S200

N50 X20

...

; Werkzeug einwechseln und Werkzeugkorrekturdatensatz ak-
tivieren.

; Spindeldrehzahl 200 U/min

; Frsen mit:

FZ = 0,02 mm/Zahn

wirksamer Umdrehungsvorschub:

F = 0,02 mm/Zahn * 5 Zhne/U = 0,1 mm/U

bzw.

F = 0,1 mm/U * 200 U/min = 20 mm/min

Beispiel 2: Umschaltung zwischen G95 F... und G95 FZ...

Programmcode

N10 G0 X100 Y50

N20 G1 G95 F0.1

N30 T1 M6

N35 M3 S100 D1

N40 X20

N50 G0 X100 M5

N60 M6 T3 D1

N70 X22 M3 S300

Kommentar

; Umdrehungsvorschub 0,1 mm/U

; Werkzeug mit z.B. 5 Zhnen ($TC_DPNT = 5) einwechseln.

N80 G1 X3 G95 FZ=0.02

; Wechsel G95 F auf G95 FZ, Zahnvorschub mit 0,02 mm/
Zahn aktiv.

...

140

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
Grundlagen

2.7 Vorschubregelung

Beispiel 3: Zahnvorschub von einer Spindel ableiten (FBR)

Programmcode

Kommentar



N41 FPR(S4)

; Werkzeug auf Spindel 4 (nicht Masterspindel).

N51 G95 X51 FZ=0.5

; Zahnvorschub 0,5 mm/Zahn abhngig von Spindel S4.

...

Beispiel 4: Nachfolgender Werkzeugwechsel

Programmcode

N10 G0 X50 Y5

Kommentar

N20 G1 G95 FZ=0.03

; Zahnvorschub 0,03 mm/Zahn

N30 M6 T11 D1

N30 M3 S100

N40 X30

N50 G0 X100 M5

N60 M6 T33 D1

N70 X22 M3 S300

N80 G1 X3

...

; Werkzeug mit z.B. 7 Zhnen ($TC_DPNT = 7) einwechseln.

; wirksamer Umdrehungsvorschub 0,21 mm/U

; Werkzeug mit z.B. 5 Zhnen ($TC_DPNT = 5) einwechseln.

; Zahnvorschub modal 0,03 mm/Zahn,
wirksamer Umdrehungsvorschub 0,15 mm/U

Beispiel 5: Wechsel der Masterspindel

Programmcode

N10 SETMS(1)

N20 T3 D3 M6

N30 S400 M3

Kommentar

; Spindel 1 ist Masterspindel.

; Werkzeug 3 wird auf Spindel 1 gewechselt.

; Drehzahl S400 der Spindel 1 (und damit T3).

N40 G95 G1 FZ0.03

; Zahnvorschub 0,03 mm/Zahn

N50 X50

; Bahnbewegung, der wirksame Vorschub ist abhngig von:

N60 G0 X60

...

N100 SETMS(2)

N110 T1 D1 M6

N120 S500 M3

- Zahnvorschub FZ

- Drehzahl der Spindel 1

- Anzahl der Zhne des aktiven Werkzeugs T3

; Spindel 2 wird Masterspindel.

; Werkzeug 1 wird auf Spindel 2 gewechselt.

; Drehzahl S500 der Spindel 2 (und damit T1).

N130 G95 G1 FZ0.03 X20

; Bahnbewegung, der wirksame Vorschub ist abhngig von:

- Zahnvorschub FZ

- Drehzahl der Spindel 2

- Anzahl der Zhne des aktiven Werkzeugs T1

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

141

 
 
 
 
 
 
 
 
Grundlagen

2.7 Vorschubregelung

Hinweis

Nach dem Wechsel der Masterspindel (N100) muss ein Werkzeug eingewechselt werden 
(N110), das von Spindel 2 angetrieben wird.

Weitere Informationen

Wechsel zwischen G93, G94 und G95

FZ kann auch bei nicht aktivem G95 programmiert werden, hat jedoch keine Wirkung und wird 
mit der G95-Anwahl gelscht, d. h. mit Wechsel zwischen G93, G94 und G95 wird analog zu F 
auch der der FZ-Wert gelscht.

Erneute Anwahl von G95

Eine erneute Anwahl von G95 bei schon aktivem G95 hat keine Wirkung (falls hierbei kein 
Wechsel zwischen F und FZ programmiert ist).

Satzweise wirksamer Vorschub (FB)

Ein satzweise wirksamer Vorschub FB... wird bei aktivem G95 FZ... (modal) als 
Zahnvorschub interpretiert.

SAVE-Mechanismus

Bei Unterprogrammen mit dem SAVE-Attribut wird FZ analog zu F auf den Wert vor 
Unterprogrammstart geschrieben.

Mehrere Vorschubwerte in einem Satz

Die Funktion "Mehrere Vorschubwerte in einem Satz" ist bei Zahnvorschub nicht mglich.

Synchronaktionen

Die Vorgabe von FZ aus Synchronaktionen ist nicht mglich.

Zahnvorschubgeschwindigkeit und Bahnvorschub-Typ lesen

Die Zahnvorschubgeschwindigkeit und der Bahnvorschub-Typ knnen ber Systemvariablen 
gelesen werden:

 Mit Vorlauf-Stop im Teileprogramm ber die Systemvariablen:

$AC_FZ   

$AC_F_TYPE   

Zahnvorschubgeschwindigkeit, die bei der Aufbereitung des aktuellen 
Hauptlaufsatzes wirksam war.

Bahnvorschub-Typ, der bei der Aufbereitung des aktuellen Hauptlauf
satzes wirksam war.

Wert:

Bedeutung:

0

1

2

3

11

33

mm/min

mm/U

inch/min

inch/U

mm/Zahn

inch/Zahn

142

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
Grundlagen

2.7 Vorschubregelung

 Ohne Vorlauf-Stop im Teileprogramm ber die Systemvariablen:

$P_FZ   

Programmierte Zahnvorschubgeschwindigkeit

$P_F_TYPE   

Programmierter Bahnvorschub-Typ

Wert:

Bedeutung:

0

1

2

3

11

33

mm/min

mm/U

inch/min

inch/U

mm/Zahn

inch/Zahn

Hinweis

Ist G95 nicht aktiv, liefern die Variablen $P_FZ und $AC_FZ immer den Wert Null.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

143

 
Grundlagen

2.8 Geometrie-Einstellungen

2.8

Geometrie-Einstellungen

2.8.1

Einstellbare Nullpunktverschiebung (G54 ... G57, G505 ... G599, G53, G500, 
SUPA, G153)

ber die Befehle G54 bis G57 und G505 bis G599 werden die ber die Bedienoberflche 
einstellbaren Nullpunktverschiebungen zur Verschiebung des Werkstckkoordinatensystems 
gegenber dem Basiskoordinatensystem aktiviert.

Syntax

Bedeutung

Einschalten:
G54
...
G57
G505
...
G599

Ausschalten bzw. Unterdrcken:

G500 / G53 / G153 / SUPA

G54 ... G57:

G505 ... G599:

G500:

Aufruf der 1. bis 4. einstellbaren Nullpunktverschiebung (NV)

Aufruf der 5. bis 99. einstellbaren NV

Ausschalten der aktuellen einstellbaren NV

G500=Nullframe:   

(Standardeinstellung; enthlt kei
ne Verschiebung, Drehung, Spie
gelung oder Skalierung)

G500 ungleich 0:

Ausschalten der einstellbaren NV bis zum 
nchsten Aufruf, Aktivierung des Gesamt-
Basisframes ($P_ACTBFRAME).

Aktivierung der ersten einstellbaren Null
punktverschiebung ($P_UIFR[0]) und Ak
tivierung des Gesamt-Basisframes 
($P_ACTBFRAME) bzw. ein evtl. gen
derter Basisframe wird aktiviert.

G53:

G153:

SUPA:

G53 unterdrckt satzweise einstellbare NV und programmierbare NV.

G153 wirkt wie G53 und unterdrckt darber hinaus den Gesamt-Basisframe.

SUPA wirkt wie G153 und unterdrckt darber hinaus:

 Handradverschiebungen (DRF)

 berlagerte Bewegungen

 externe NV

 PRESET-Verschiebung

144

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Grundlagen

2.8 Geometrie-Einstellungen

Beispiel

Drei Werkstcke, die auf einer Palette entsprechend der Nullpunktverschiebewerte G54 
bis G56 angeordnet sind, sollen nacheinander bearbeitet werden. Die Bearbeitungsfolge ist im 
Unterprogramm L47 programmiert.

Programmcode

N10 G0 G90 X10 Y10 F500 T1

Kommentar

; Anfahren

N20 G54 S1000 M3

N30 L47

N40 G55 G0 Z200

N50 L47

N60 G56

N70 L47

; Aufruf der ersten NV, Spindel rechts

; Programmlauf als Unterprogramm

; Aufruf der zweiten NV, Z ber Hindernis

; Programmlauf als Unterprogramm

; Aufruf der dritten NV

; Programmlauf als Unterprogramm

N80 G53 X200 Y300 M30

; Nullpunktverschiebung unterdrcken, Programmen-
de

2.8.2

Einstellbare Nullpunktverschiebung (G54 ... G57, G505 ... G599, G53, G500, 
SUPA, G153): Weitere Informationen

Weitere Informationen

Einstellbare Nullpunktverschiebung 

Eine einstellbare Nullpunktverschiebung ist im Prinzip ein einstellbarer Frame (Seite 300). 
Daher stehen auch bei einer einstellbaren Nullpunktverschiebung folgende Komponenten 
bzw. Frame-Werte zur Verfgung:

 Verschiebung

 Rotation

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

145

(cid:59)(cid:60)(cid:59)(cid:60)(cid:55)(cid:53)(cid:36)(cid:49)(cid:54)(cid:3)(cid:59)(cid:20)(cid:19)(cid:3)(cid:48)(cid:19)(cid:48)(cid:59)(cid:48)(cid:60)(cid:42)(cid:24)(cid:24)(cid:42)(cid:24)(cid:25)(cid:42)(cid:24)(cid:23)(cid:59)(cid:60)Grundlagen

2.8 Geometrie-Einstellungen

 Skalierung

 Mastab

 Ausgangslage im BKS
 Verschiebung
 Verschiebung + Drehung
 Verschiebung + Skalierung

Die Eingabe der Frame-Werte fr die einstellbaren Nullpunktverschiebungen erfolgt ber die 
Bedienoberflche:

SINUMERIK Operate: Bedienbereich "Parameter" > "Nullpunktverschiebungen" > "Details"

Parametrierbare Anzahl einstellbarer Frames (G505 - G599)

Die Anzahl der anwenderspezifischen einstellbaren Nullpunktverschiebungen (G505 - G599) 
ist kanalspezifisch einstellbar ber:

MD28080 $MC_MM_NUM_USER_FRAMES = <Anzahl>

Siehe auch

Programmierbare Nullpunktverschiebung (G58, G59) (Seite 309)

2.8.3

Wahl der Arbeitsebene (G17/G18/G19)

Durch die Angabe der Arbeitsebene, in der die gewnschte Kontur gefertigt werden soll, 
werden zugleich folgende Funktionen festgelegt:

 Die Ebene fr die Werkzeugradiuskorrektur.

 Die Zustellrichtung fr die Werkzeuglngenkorrektur in Abhngigkeit vom Werkzeugtyp.

 Die Ebene fr die Kreisinterpolation.

146

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:59)(cid:37)(cid:46)(cid:54)(cid:60)(cid:37)(cid:46)(cid:54)(cid:59)(cid:58)(cid:46)(cid:54)(cid:60)(cid:58)(cid:46)(cid:54)(cid:59)(cid:58)(cid:46)(cid:54)(cid:60)(cid:58)(cid:46)(cid:54)(cid:59)(cid:58)(cid:46)(cid:54)(cid:60)(cid:58)(cid:46)(cid:54)(cid:21)(cid:20)(cid:22)(cid:23)Grundlagen

2.8 Geometrie-Einstellungen

Syntax

Bedeutung

G17/G18/G19 ...

G17:

Arbeitsebene X/Y

Zustellrichtung Z Ebenenanwahl 1. - 2. Geometrieachse

G18:

Arbeitsebene Z/X

Zustellrichtung Y Ebenenanwahl 3. - 1. Geometrieachse

G19:

Arbeitsebene Y/Z

Zustellrichtung X Ebenenanwahl 2. - 3. Geometrieachse

Hinweis

In der Grundeinstellung ist fr Frsen G17 (X/Y-Ebene) und fr Drehen G18 (Z/X-Ebene) 
voreingestellt.

Mit Aufruf der Werkzeug-Bahnkorrektur G41/G42 (siehe Kapitel "Werkzeugradiuskorrekturen 
(Seite 246)") muss die Arbeitsebene angegeben werden, damit die Steuerung Werkzeuglnge 
und -radius korrigieren kann.

Beispiel

Die "klassische" Vorgehensweise beim Frsen ist:

1. Arbeitsebene (G17 Grundeinstellung fr Frsen) definieren.

2. Werkzeugtyp (T) und Werkzeugkorrekturwerte (D) aufrufen.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

147

(cid:61)(cid:88)(cid:86)(cid:87)(cid:72)(cid:79)(cid:79)(cid:72)(cid:81)(cid:61)(cid:88)(cid:86)(cid:87)(cid:72)(cid:79)(cid:79)(cid:72)(cid:81)(cid:61)(cid:88)(cid:86)(cid:87)(cid:72)(cid:79)(cid:79)(cid:72)(cid:81)(cid:42)(cid:20)(cid:27)(cid:42)(cid:20)(cid:26)(cid:42)(cid:20)(cid:28)(cid:14)(cid:61)(cid:14)(cid:60)(cid:14)(cid:59)Grundlagen

2.8 Geometrie-Einstellungen

3. Bahnkorrektur (G41) einschalten.

4. Fahrbewegungen programmieren.

Programmcode

N10 G17 T5 D8

N20 G1 G41 X10 Y30 Z-5 F500

N30 G2 X22.5 Y40 I50 J40

Kommentar

; Aufruf der Arbeitsebene X/Y, 
Werkzeugaufruf. Die Lngenkorrektur erfolgt 
in Z-Richtung.

; Die Radiuskorrektur erfolgt in der X/Y-
Ebene.

; Kreisinterpolation/Werkzeugradius-
korrektur in der X/Y-Ebene.

Weitere Informationen

Allgemein

Es empfiehlt sich, die Arbeitsebene G17 bis G19 bereits am Programmanfang festzulegen. In 
der Grundeinstellung ist fr Drehen G18 die Z/X-Ebene voreingestellt:

Die Steuerung bentigt zur Berechnung des Drehsinns die Angabe der Arbeitsebene. Weitere 
Informationen hierzu siehe Kapitel "Kreisinterpolation (Seite 188)".

Bearbeitung in schrg liegenden Ebenen

Durch Drehung des Koordinatensystems mit ROT (Seite 311) werden die Koordinatenachsen 
auf die schrg liegende Flche gelegt. Die Arbeitsebenen drehen sich entsprechend mit.

148

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:60)(cid:61)(cid:59)(cid:42)(cid:20)(cid:26)(cid:42)(cid:20)(cid:28)(cid:42)(cid:20)(cid:27)Werkzeuglngenkorrektur in schrg liegenden Ebenen

Grundlagen

2.8 Geometrie-Einstellungen

Die Werkzeuglngenkorrektur wird generell immer bezogen auf die raumfeste, nicht gedrehte 
Arbeitsebene errechnet.

Hinweis

Mit den Funktionalitten zur "Werkzeuglngenkorrektur fr orientierbare Werkzeuge" knnen 
die Werkzeuglngenkomponenten passend zu den gedrehten Arbeitsebenen errechnet 
werden.

Die Wahl der Korrekturebene erfolgt mit CUT2D, CUT2DF. Weitere Informationen hierzu und 
zur Beschreibung dieser Berechnungsmglichkeit siehe Kapitel "Werkzeugradiuskorrekturen 
(Seite 246)".

Fr die rumliche Festlegung der Arbeitsebene bietet die Steuerung sehr komfortable 
Mglichkeiten fr Koordinatentransformationen. Weitere Informationen hierzu siehe Kapitel 
"Koordinatentransformationen (Frames) (Seite 300)".

2.8.4

Maangaben

Grundlage der meisten NC-Programme ist eine Werkstckzeichnung mit konkreten 
Maangaben.

Diese Maangaben knnen sein:

 im Absolutma oder Kettenma

 in Millimetern oder Inch

 im Radius oder Durchmesser (beim Drehen)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

149

Grundlagen

2.8 Geometrie-Einstellungen

Damit die Angaben aus einer Mazeichnung direkt (ohne Umrechnung) in das NC-Programm 
bernommen werden knnen, stehen dem Anwender fr die verschiedenen Mglichkeiten zur 
Maangabe spezifische Programmierbefehle zur Verfgung.  

2.8.4.1

Absolutmaangabe (G90, AC)

Bei der Absolutmaangabe beziehen sich die Positionsangaben immer auf den Nullpunkt des 
aktuell gltigen Koordinatensystems, d. h. es wird die absolute Position programmiert, auf die 
das Werkzeug fahren soll. 

Modal wirksame Absolutmaangabe

Die modal wirksame Absolutmaangabe wird aktiviert mit dem Befehl G90. Sie ist fr alle 
Achsen wirksam, die in den jeweils folgenden NC-Stzen programmiert werden.

Satzweise wirksame Absolutmaeingabe

Bei voreingestelltem Kettenma (G91) kann mit Hilfe des Befehls AC fr einzelne Achsen 
satzweise Absolutmaangabe eingestellt werden.

Hinweis

Die satzweise wirksame Absolutmaangabe(AC) ist auch fr Spindelpositionierungen 
(SPOS, SPOSA) und Interpolationsparameter (I, J, K) mglich.

Syntax

Bedeutung

G90
<Achse>=AC(<Wert>)

G90:

AC:

<Achse>:

<Wert>:

Befehl zur Aktivierung der modal wirksamen Absolutmaangabe

Befehl zur Aktivierung der satzweise wirksamen Absolutmaangabe

Achsbezeichner der zu verfahrenden Achse

Sollposition der zu verfahrenden Achse im Absolutma

150

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Beispiele

Beispiel 1: Frsen

Grundlagen

2.8 Geometrie-Einstellungen

Programmcode

Kommentar

N10 G90 G0 X45 Y60 Z2 T1 S2000 M3

N20 G1 Z-5 F500

N30 G2 X20 Y35 I=AC(45) J=AC(35)

N40 G0 Z2

N50 M30

Hinweis

; Absolutmaeingabe, im Eilgang auf Posi-
tion XYZ, Werkzeug-Anwahl, Spindel ein 
mit Drehrichtung rechts.

; Geradeninterpolation, Zustellen des 
Werkzeugs.

; Kreisinterpolation im Uhrzeigersinn, 
Kreisendpunkt und Kreismittelpunkt im Ab-
solutma.

; Herausfahren.

; Satzende.

Zur Eingabe der Kreismittelpunktskoordinaten I und J siehe Kapitel "Kreisinterpolation".

Beispiel 2: Drehen

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

151

(cid:22)(cid:24)(cid:21)(cid:24)(cid:24)(cid:21)(cid:24)(cid:21)(cid:19)(cid:59)(cid:61)(cid:60)(cid:59)Grundlagen

2.8 Geometrie-Einstellungen

Programmcode

N5 T1 D1 S2000 M3

N10 G0 G90 X11 Z1

N20 G1 Z-15 F0.2

N30 G3 X11 Z-27 I=AC(-5) K=AC(-21)

N40 G1 Z-40

N50 M30

Hinweis

Kommentar

; Einwechseln von Werkzeug T1, Spindel 
ein mit Drehrichtung rechts.

; Absolutmaeingabe, im Eilgang auf Posi-
tion XZ.

; Geradeninterpolation, Zustellen des 
Werkzeugs.

; Kreisinterpolation gegen Uhrzeiger-
sinn, Kreisendpunkt und Kreismittelpunkt 
im Absolutma.

; Herausfahren.

; Satzende.

Zur Eingabe der Kreismittelpunktskoordinaten I und J siehe Kapitel "Kreisinterpolation".

Siehe auch

Absolut- und Kettenmaangabe beim Drehen und Frsen (G90/G91) (Seite 156)

2.8.4.2

Kettenmaangabe (G91, IC)

Bei der Kettenmaangabe bezieht sich eine Positionsangabe auf den zuletzt angefahrenen 
Punkt, d. h. die Programmierung im Kettenma beschreibt, um wie viel das Werkzeug 
verfahren soll.

Modal wirksame Kettenmaangabe

Die modal wirksame Kettenmaangabe wird aktiviert mit dem Befehl G91. Sie ist fr alle 
Achsen wirksam, die in den jeweils folgenden NC-Stzen programmiert werden.

Satzweise wirksame Kettenmaangabe

152

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:154)(cid:3)(cid:20)(cid:20)(cid:21)(cid:17)(cid:24)(cid:58)(cid:21)(cid:26)(cid:21)(cid:20)(cid:20)(cid:24)(cid:59)(cid:61)(cid:20)(cid:19)Grundlagen

2.8 Geometrie-Einstellungen

Bei voreingestelltem Absolutma (G90) kann mit Hilfe des Befehls IC fr einzelne Achsen 
satzweise Kettenmaangabe eingestellt werden.

Hinweis

Die satzweise wirksame Kettenmaangabe(IC) ist auch fr Spindelpositionierungen 
(SPOS, SPOSA) und Interpolationsparameter (I, J, K) mglich.

Syntax

Bedeutung

G91
<Achse>=IC(<Wert>)

G91:

IC:

<Achse>:

<Wert>:

Befehl zur Aktivierung der modal wirksamen Kettenmaangabe

Befehl zur Aktivierung der satzweise wirksamen Kettenmaangabe

Achsbezeichner der zu verfahrenden Achse

Sollposition der zu verfahrenden Achse im Kettenma

G91-Erweiterung

Fr bestimmte Anwendungen wie z. B. dem Ankratzen ist es erforderlich, im Kettenma nur 
den programmierten Weg zu fahren. Die aktive Nullpunktverschiebung oder 
Werkzeuglngenkorrektur wird nicht gefahren.

Dieses Verhalten kann getrennt fr die aktive Nullpunktverschiebung und 
Werkzeuglngenkorrektur ber folgende Settingdaten eingestellt werden:

SD42440 $SC_FRAME_OFFSET_INCR_PROG (Nullpunktsverschiebungen in Frames)  

SD42442 $SC_TOOL_OFFSET_INCR_PROG (Werkzeuglngenkorrekturen)  

Wert

Bedeutung

0

1

Bei inkrementeller Programmierung (Kettenmaangabe) einer Achse wird die aktive Null
punktverschiebung bzw. die Werkzeuglngenkorrektur nicht herausgefahren.

Bei inkrementeller Programmierung (Kettenmaangabe) einer Achse wird die aktive Null
punktverschiebung bzw. die Werkzeuglngenkorrektur herausgefahren.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

153

Grundlagen

2.8 Geometrie-Einstellungen

Beispiele

Beispiel 1: Frsen

Programmcode

Kommentar

N10 G90 G0 X45 Y60 Z2 T1 S2000 M3

N20 G1 Z-5 F500

N30 G2 X20 Y35 I0 J-25

N40 G0 Z2

N50 M30

Hinweis

; Absolutmaeingabe, im Eilgang auf Posi-
tion XYZ, Werkzeug-Anwahl, Spindel ein 
mit Drehrichtung rechts.

; Geradeninterpolation, Zustellen des 
Werkzeugs.

; Kreisinterpolation im Uhrzeigersinn, 
Kreisendpunkt im Absolutma, Kreismittel-
punkt im Kettenma.

; Herausfahren.

; Satzende.

Zur Eingabe der Kreismittelpunktskoordinaten I und J siehe Kapitel "Kreisinterpolation".

154

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:22)(cid:24)(cid:21)(cid:24)(cid:24)(cid:21)(cid:24)(cid:21)(cid:19)(cid:59)(cid:61)(cid:60)(cid:59)Beispiel 2: Drehen

Grundlagen

2.8 Geometrie-Einstellungen

Programmcode

N5 T1 D1 S2000 M3

N10 G0 G90 X11 Z1

Kommentar

; Einwechseln von Werkzeug T1, Spindel ein mit Dreh-
richtung rechts.

; Absolutmaangabe, im Eilgang auf
Position XZ.

N20 G1 Z-15 F0.2

; Geradeninterpolation, Zustellen des Werkzeugs.

N30 G3 X11 Z-27 I-8 K-6

; Kreisinterpolation gegen Uhrzeigersinn, Kreisend-
punkt im Absolutma, Kreismittelpunkt im Kettenma.

N40 G1 Z-40

N50 M30

Hinweis

; Herausfahren.

; Satzende.

Zur Eingabe der Kreismittelpunktskoordinaten I und J siehe Kapitel "Kreisinterpolation".

Beispiel 3: Kettenmaangabe ohne Herausfahren der aktiven Nullpunktverschiebung

Einstellungen:

 G54 enthlt eine Verschiebung in X um 25

 SD42440 $SC_FRAME_OFFSET_INCR_PROG = 0

Programmcode

Kommentar

N10 G90 G0 G54 X100

N20 G1 G91 X10

N30 G90 X50

; Kettenmaangabe aktiv, Fahren in X um 10mm (die Nullpunkt-
verschiebung wird nicht gefahren).

; Absolutmaangabe aktiv, Fahren auf Position X75 (die Null-
punktverschiebung wird gefahren).

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

155

(cid:154)(cid:3)(cid:20)(cid:20)(cid:21)(cid:17)(cid:24)(cid:58)(cid:21)(cid:26)(cid:21)(cid:20)(cid:20)(cid:24)(cid:59)(cid:61)(cid:20)(cid:19) 
Grundlagen

2.8 Geometrie-Einstellungen

Siehe auch

Absolut- und Kettenmaangabe beim Drehen und Frsen (G90/G91) (Seite 156)

2.8.4.3

Absolut- und Kettenmaangabe beim Drehen und Frsen (G90/G91)

Die beiden folgenden Abbildungen veranschaulichen die Programmierung mit 
Absolutmaangabe (G90) bzw. Kettenmaangabe (G91) am Beispiel der Technologien 
Drehen und Frsen.

Frsen:

Drehen:

156

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:42)(cid:28)(cid:20)(cid:42)(cid:28)(cid:19)(cid:25)(cid:19)(cid:24)(cid:19)(cid:20)(cid:19)(cid:60)(cid:59)(cid:42)(cid:28)(cid:19)(cid:42)(cid:28)(cid:20)(cid:22)(cid:24)(cid:22)(cid:19)(cid:21)(cid:19)(cid:27)(cid:24)(cid:59)(cid:61)(cid:26)(cid:17)(cid:24)(cid:42)(cid:28)(cid:19)(cid:42)(cid:28)(cid:20)(cid:42)(cid:28)(cid:20)(cid:42)(cid:28)(cid:19)(cid:154)(cid:3)(cid:21)(cid:24)Grundlagen

2.8 Geometrie-Einstellungen

Hinweis

An konventionellen Drehmaschinen ist es blich, inkrementelle Verfahrstze in der Planachse 
als Radiuswerte zu betrachten, whrend Durchmesserangaben fr die Bezugsmae gelten. 
Diese Umstellung fr G90 erfolgt mit den Befehlen DIAMON, DIAMOF bzw. DIAM90.

2.8.4.4

Absolutmaangabe fr Rundachsen (DC, ACP, ACN)

Fr die Positionierung von Rundachsen im Absolutma stehen die satzweise wirksamen und 
von G90/G91 unabhngigen Befehle DC, ACP und ACN zur Verfgung.

DC, ACP und ACN unterscheiden sich in der zu Grunde liegenden Anfahrstrategie:

Syntax

Bedeutung

<Rundachse>=DC(<Wert>)
<Rundachse>=ACP(<Wert>)
<Rundachse>=ACN(<Wert>)

<Rundachse>:

Bezeichner der Rundachse, die verfahren werden soll (z. B. A, B oder C)

DC:

ACP:

Befehl zum direkten Anfahren der Position

Die Rundachse fhrt die programmierte Position auf direktem, krzestem Weg 
an. Die Rundachse verfhrt maximal in einem Bereich von 180.

Befehl zum Anfahren der Position in positiver Richtung

Die Rundachse fhrt die programmierte Position in positiver Achsdrehrichtung 
(Gegenuhrzeigersinn) an.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

157

(cid:39)(cid:38)(cid:36)(cid:38)(cid:51)(cid:36)(cid:38)(cid:49)(cid:80)(cid:68)(cid:91)(cid:76)(cid:80)(cid:68)(cid:79)(cid:72)(cid:85)(cid:3)(cid:57)(cid:72)(cid:85)(cid:73)(cid:68)(cid:75)(cid:85)(cid:69)(cid:72)(cid:85)(cid:72)(cid:76)(cid:70)(cid:75)Grundlagen

2.8 Geometrie-Einstellungen

ACN:

Befehl zum Anfahren der Position in negativer Richtung

Die Rundachse fhrt die programmierte Position in negativer Achsdrehrichtung 
(Uhrzeigersinn) an.

<Wert>:

Anzufahrende Rundachsposition im Absolutma

Wertebereich:

0 - 360 Grad

Hinweis

Die positive Drehrichtung (Uhrzeiger- oder Gegenuhrzeigersinn) wird im Maschinendatum 
eingestellt.

Hinweis

Fr die Positionierung mit Richtungsangabe (ACP, ACN) muss im Maschinendatum der 
Verfahrbereich zwischen 0 und 360 eingestellt sein (Modulo-Verhalten). Um Modulo-
Rundachsen in einem Satz um mehr als 360 zu verfahren, ist G91 bzw. IC zu programmieren.

Hinweis

Die Befehle DC, ACP und ACN knnen auch fr die Spindelpositionierung (SPOS, SPOSA) 
aus dem Stillstand genutzt werden.

Beispiel: SPOS=DC(45)

Beispiel

Frsbearbeitung auf einem Rundtisch

Das Werkzeug steht, der Tisch dreht sich auf 270 im Uhrzeigersinn. Dabei entsteht eine 
Kreisnut.

Programmcode

N10 SPOS=0

Kommentar

; Spindel in Lageregelung.

158

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:24)(cid:21)(cid:26)(cid:19)(cid:114)(cid:60)(cid:59)(cid:59)(cid:61)Grundlagen

2.8 Geometrie-Einstellungen

Programmcode

Kommentar

N20 G90 G0 X-20 Y0 Z2 T1

N30 G1 Z-5 F500

N40 C=ACP(270)

; Absolutmaangabe, im Eilgang Werkzeug T1 zustel-
len.

; Im Vorschub Werkzeug absenken.

; Tisch dreht sich auf 270 Grad im Uhrzeigersinn 
(positiv), das Werkzeug frst eine Kreisnut.

N50 G0 Z2 M30

; Abheben, Programmende.

2.8.4.5

Masystem inch/metrisch (G70/G71, G700/G710)

Mit den Befehlen der G-Gruppe 13 (Masystem inch/metrisch) kann innerhalb des 
Teileprogramms zwischen dem metrischen Masystem und dem Inch-Masystem 
umgeschaltet werden.

Aktivierung

Damit die Befehle G700 und G710 zur Verfgung stehen, muss die erweiterte Masystem-
Funktionalitt eingeschaltet werden (MD10260 $MN_CONVERT_SCALING_SYSTEM = 1).

Syntax

Bedeutung

G70
G71
G700
G710

G70:

Einschalten des Inch-Masystems

Lngenbehaftete geometrische Daten werden im Inch-Masystem gelesen und geschrieben.

Lngenbehaftete technologische Daten (z. B. Vorschbe, Werkzeugkorrekturen, einstellba
re Nullpunktverschiebungen, Maschinendaten und Systemvariablen) werden im paramet
rierten Grundsystem gelesen und geschrieben.

G-Gruppe:

13

Grundstellung:

Einstellbar ber MD20150 $MC_GCODE_RESET_VALUES

Wirksamkeit:

Modal

G71:

Einschalten des metrischen Masystems

Lngenbehaftete geometrische Daten werden im metrischen Masystem gelesen und ge
schrieben.

Lngenbehaftete technologische Daten (z. B. Vorschbe, Werkzeugkorrekturen, einstellba
re Nullpunktverschiebungen, Maschinendaten und Systemvariablen) werden im paramet
rierten Grundsystem gelesen und geschrieben.

G-Gruppe:

13

Grundstellung:

Einstellbar ber MD20150 $MC_GCODE_RESET_VALUES

Wirksamkeit:

Modal

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

159

Grundlagen

2.8 Geometrie-Einstellungen

G700:

Einschalten des Inch-Masystems

Alle lngenbehafteten geometrischen und technologischen Daten werden im Inch-Masys
tem gelesen und geschrieben.

G-Gruppe:

13

Grundstellung:

Einstellbar ber MD20150 $MC_GCODE_RESET_VALUES

Wirksamkeit:

Modal

G710:

Einschalten des metrischen Masystems

Alle lngenbehafteten geometrischen und technologischen Daten werden im metrischen 
Masystem gelesen und geschrieben.

G-Gruppe:

13

Grundstellung:

Einstellbar ber MD20150 $MC_GCODE_RESET_VALUES

Wirksamkeit:

Modal

ACHTUNG

Achsspezifische Daten von Rundachsen

Achsspezifische Daten von Rundachsen werden immer im parametrierten Grundsystem 
gelesen und geschrieben.

Beispiel

Das Grundsystem ist metrisch (MD10240 $MN_SCALING_SYSTEM_IS_METRIC = 1). Die 
Werkstckzeichnung enthlt jedoch Maangaben in inch. Es wird deshalb innerhalb des 
Teileprogramms auf das Inch-Masystem umgeschaltet. Nach den inch-Maangaben wird 
wieder zum metrischen Masystem gewechselt.

Programmcode

Kommentar

N10 G0 G90 X20 Y30 Z2 S2000 M3 T1

; X=20 mm, Y=30 mm, Z=2 mm, F=Eilgang mm/min

N20 G1 Z-5 F500

; Z=-5 mm, F=500 mm/min

160

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:22)(cid:19)(cid:22)(cid:17)(cid:21)(cid:21)(cid:5)(cid:22)(cid:17)(cid:24)(cid:23)(cid:5)(cid:21)(cid:17)(cid:26)(cid:24)(cid:5)(cid:42)(cid:26)(cid:19)(cid:42)(cid:26)(cid:19)(cid:42)(cid:26)(cid:20)(cid:42)(cid:26)(cid:20)(cid:28)(cid:19)(cid:20)(cid:17)(cid:20)(cid:27)(cid:5)(cid:21)(cid:19)(cid:60)(cid:59)Grundlagen

2.8 Geometrie-Einstellungen

Programmcode

N30 X90

Kommentar

; X=90 mm

N40 G70 X2.75 Y3.22

; Programmiertes Masystem: inch

N50 X1.18 Y3.54

N60 G71 X20 Y30

N70 G0 Z2

N80 M30

; X=2.75 inch, Y=3.22 inch, F=500 mm/min

; X=1.18 inch, Y=3.54 inch, F=500 mm/min

; Programmiertes Masystem: metrisch

; X=20 mm, Y=30 mm, F=500 mm/min

; Z=2 mm, F=Eilgang mm/min

; Programmende

Weitere Informationen

Lesen und Schreiben von Daten bei G70/G71 und G700/G710

Datenbereich

G70 / G71

G700 / G710

Lesen

Schreiben

Lesen

Schreiben

Anzeigen, Nachkommastellen (WKS)

Anzeigen, Nachkommastellen (MKS)

Vorschbe

Positionsangaben X, Y, Z

Interpolationsparameter I, J, K

Kreisradius (CR)

Polarradius (RP)

Gewindesteigung

Programmierbarer FRAME

Einstellbare FRAMES

Basisframes

Externe Nullpunktverschiebungen

axiale Preset-Verschiebung

Arbeitsfeldbegrenzungen (G25/G26)

Schutzbereiche

Werkzeugkorrekturen

Lngenbehaftete Maschinendaten

Lngenbehaftete Settingdaten

Lngenbehaftete Systemvariablen

GUD's 

LUD's 

PUD's 

R-Parameter

Siemenszyklen

Inkrementbewertung JOG/Handrad

P

G

G

P

P

P

P

P

P

G

G

G

G

G

P

G

G

G

G

G

G

G

G

P

G

P: Schreiben/Lesen erfolgt im programmierten Masystem

G: Schreiben/Lesen erfolgt im parametrierten Grundsystem

P

G

G

P

P

P

P

P

P

G

G

G

G

G

P

G

G

G

G

G

G

G

G

P

G

P

G

P

P

P

P

P

P

P

P

P

P

P

P

P

P

P

P

P

G

G

G

G

P

G

P

G

P

P

P

P

P

P

P

P

P

P

P

P

P

P

P

P

P

G

G

G

G

P

G

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

161

 
 
Grundlagen

2.8 Geometrie-Einstellungen

Synchronaktionen

Hinweis

Lesen von Positionsdaten in Synchronaktionen

Ohne explizite Programmierung des Masystems in der Synchronaktion (Bedingungsteil und/
oder Aktionsteil bzw. Technologiefunktion) werden lngenbehaftete Positionsdaten in der 
Synchronaktion immer im parametrierten Grundsystem gelesen.

Weitere Informationen: Funktionshandbuch Synchronaktionen

2.8.4.6

Kanalspezifische Durchmesser-/Radius-Programmierung (DIAMON, DIAM90, DIAMOF, 
DIAMCYCOF)

Beim Drehen knnen die Mae fr die Planachse im Durchmesser () oder im Radius () 
angegeben sein: 

Damit die Maangaben direkt ohne Umrechnung aus der technischen Zeichnung in das NC-
Programm bernommen werden knnen, wird ber die modal wirksamen Befehle DIAMON, 
DIAM90, DIAMOF und DIAMCYCOF die kanalspezifische Durchmesser- oder Radius-
Programmierung eingeschaltet.

Hinweis

Die kanalspezifische Durchmesser-/Radius-Programmierung bezieht sich auf die ber 
MD20100 $MC_DIAMETER_AX_DEF als Planachse definierte Geometrieachse ( siehe 
Angaben des Maschinenherstellers!).

ber MD20100 kann pro Kanal nur eine Planachse definiert sein.

Syntax

DIAMON

162

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:21)(cid:20)(cid:22)(cid:19)(cid:59)(cid:61)(cid:59)(cid:61)(cid:58)(cid:58)(cid:20)(cid:19)(cid:20)(cid:24)(cid:21)(cid:19)Grundlagen

2.8 Geometrie-Einstellungen

DIAM90
DIAMOF

Bedeutung

DIAMON:

Befehl zum Einschalten der unabhngigen kanalspezifischen Durchmesser-Pro
grammierung

Die Wirkung von DIAMON ist unabhngig vom programmierten Maangabe-Modus 
(Absolutmaangabe G90 oder Kettenmaangabe G91):

 bei G90:

 bei G91:

Maangabe im Durchmesser

Maangabe im Durchmesser

DIAM90:

Befehl zum Einschalten der abhngigen kanalspezifischen Durchmesser-Program
mierung

Die Wirkung von DIAM90 ist abhngig vom programmierten Maangabe-Modus:

 bei G90:

 bei G91:

Maangabe im Durchmesser

Maangabe im Radius

DIAMOF:

Befehl zum Ausschalten der kanalspezifischen Durchmesser-Programmierung

Mit dem Ausschalten der Durchmesser-Programmierung wird die kanalspezifische 
Radius-Programmierung wirksam. Die Wirkung von DIAMOF ist unabhngig vom 
programmierten Maangabe-Modus:

 bei G90:

 bei G91:

Maangabe im Radius

Maangabe im Radius

DIAMCYCOF:

Befehl zum Ausschalten der kanalspezifischen Durchmesser-Programmierung wh
rend der Zyklusbearbeitung

Im Zyklus knnen somit Berechnungen immer im Radius erfolgen. Fr die Positions
anzeige und die Basis-Satzanzeige bleibt der zuletzt aktive G-Befehl dieser Gruppe 
aktiv.

Hinweis

Mit DIAMON oder DIAM90 werden die Istwerte der Planachse immer als Durchmesser 
angezeigt. Das gilt auch fr das Lesen der Istwerte im Werkstckkoordinatensystem bei MEAS, 
MEAW, $P_EP[x] und $AA_IW[x].

Beispiel

Programmcode

N10 G0 X0 Z0

N20 DIAMOF

N30 G1 X30 S2000 M03 F0.7

N40 DIAMON

N50 G1 X70 Z-20

N60 Z-30

Kommentar

; Startpunkt anfahren.

; Durchmesser-Programmierung aus.

; X-Achse = Planachse, Radius-Programmierung ak-
tiv, Fahren auf Radius-Position X30.

; Fr die Planachse ist Durchmesser-Programmie-
rung aktiv.

; Fahren auf Durchmesserposition X70 und Z20.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

163

 
Grundlagen

2.8 Geometrie-Einstellungen

Programmcode

N70 DIAM90

N80 G91 X10 Z-20

N90 G90 X10

N100 M30

Kommentar

; Durchmesser-Programmierung fr Bezugsma und 
Radius-Programmierung fr Kettenma.

; Kettenma aktiv.

; Bezugsma aktiv.

; Programmende.

Weitere Informationen

Durchmesserwerte (DIAMON/DIAM90)

Die Durchmesserwerte gelten fr folgende Daten:

 Istwertanzeige der Planachse im Werkstckkoordinatensystem

 JOG-Betrieb: Inkremente fr Schrittma und manuelles Verfahren per Handrad

 Programmierung von Endpositionen:

Interpolationsparameter I, J, K bei G2/G3, falls diese mit AC absolut programmiert sind.
Bei inkrementeller Programmierung (IC) von I, J, K wird immer Radius verrechnet.

 Istwerte lesen im Werkstckkoordinatensystem bei:

MEAS, MEAW, $P_EP[X], $AA_IW[X]

2.8.4.7

Achsspezifische Durchmesser-/Radius-Programmierung (DIAMONA, DIAM90A, 
DIAMOFA, DIACYCOFA, DIAMCHANA, DIAMCHAN, DAC, DIC, RAC, RIC)

Zustzlich zur kanalspezifischen Durchmesser-Programmierung ermglicht die 
achsspezifische Durchmesser-Programmierung fr eine oder mehrere Achsen die modal oder 
satzweise wirksame Maangabe und Anzeige im Durchmesser. 

Hinweis

Die achsspezifische Durchmesser-Programmierung ist nur mglich bei Achsen, die ber 
MD30460 $MA_BASE_FUNCTION_MASK als weitere Planachsen fr die achsspezifische 
Durchmesser-Programmierung zugelassen sind ( siehe Angaben des 
Maschinenherstellers!).

Syntax

Modal wirksame achsspezifische Durchmesser-Programmierung fr mehrere Planachsen im 
Kanal:
DIAMONA[<Achse>]
DIAM90A[<Achse>]
DIAMOFA[<Achse>]
DIACYCOFA[<Achse>]

bernahme der kanalspezifischen Durchmesser-/Radius-Programmierung:
DIAMCHANA[<Achse>]
DIAMCHAN

Satzweise wirksame achsspezifische Durchmesser-/Radius-Programmierung:

164

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Grundlagen

2.8 Geometrie-Einstellungen

<Achse>=DAC(<Wert>)
<Achse>=DIC(<Wert>)
<Achse>=RAC(<Wert>)
<Achse>=RIC(<Wert>)

Bedeutung

Modal wirksame achsspezifische Durchmesser-Programmierung

DIAMONA:

Befehl zum Einschalten der unabhngigen achsspezifischen Durchmesser-Pro
grammierung

Die Wirkung von DIAMONA ist unabhngig vom programmierten Maangabe-Mo
dus (G90/G91 bzw. AC/IC):

 bei G90, AC:

Maangabe im Durchmesser

 bei G91, IC:

Maangabe im Durchmesser

DIAM90A:

Befehl zum Einschalten der abhngigen achsspezifischen Durchmesser-Program
mierung

Die Wirkung von DIAM90A ist abhngig vom programmierten Maangabe-Modus:

 bei G90, AC:

Maangabe im Durchmesser

 bei G91, IC:

Maangabe im Radius

DIAMOFA:

Befehl zum Ausschalten der achsspezifischen Durchmesser-Programmierung

Mit dem Ausschalten der Durchmesser-Programmierung wird die achsspezifische 
Radius-Programmierung wirksam. Die Wirkung von DIAMOFA ist unabhngig vom 
programmierten Maangabe-Modus:

 bei G90, AC:

Maangabe im Radius

 bei G91, IC:

Maangabe im Radius

DIACYCOFA:

Befehl zum Ausschalten der achsspezifischen Durchmesser-Programmierung 
whrend der Zyklusbearbeitung

Im Zyklus knnen somit Berechnungen immer im Radius erfolgen. Fr die Positi
onsanzeige und die Basis-Satzanzeige bleibt der zuletzt aktive G-Befehl dieser 
Gruppe aktiv.

<Achse>:

Achsbezeichner der Achse, fr die die achsspezifische Durchmesser-Program
mierung aktiviert werden soll

Zugelassene Achsbezeichner sind: 

 Geometrie-/Kanalachsname

oder

 Maschinenachsname

Wertebereich:

Die angegebene Achse muss eine im Kanal bekannte Achse 
sein.

Sonstige Bedingungen:

 Die Achse muss ber MD30460 $MA_BASE_FUNCTI
ON_MASK fr die achsspezifische Durchmesser-Pro
grammierung zugelassen sein.

 Rundachsen sind als Planachsen nicht zugelassen.

bernahme der kanalspezifischen Durchmesser-/Radius-Programmierung

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

165

Grundlagen

2.8 Geometrie-Einstellungen

DIAMCHANA:

DIAMCHAN:

Mit dem Befehl DIAMCHANA[<Achse>] bernimmt die angegebene Achse den 
Kanalzustand der Durchmesser-/Radius-Programmierung und wird in Folge der 
kanalspezifischen Durchmesser-/Radius-Programmierung unterstellt.

Mit dem Befehl DIAMCHAN bernehmen alle fr die achsspezifische Durchmesser-
Programmierung zugelassenen Achsen den Kanalzustand der Durchmesser-/
Radius-Programmierung und werden in Folge der kanalspezifischen Durchmes
ser-/Radius-Programmierung unterstellt.

Satzweise wirksame achsspezifische Durchmesser-/Radius-Programmierung

Die satzweise wirksame achsspezifische Durchmesser-/Radius-Programmierung legt die Art der Ma
angabe als Durchmesser- oder Radiuswert im Teileprogramm und Synchronaktionen fest. Der modale 
Zustand der Durchmesser-/Radius-Programmierung wird nicht verndert.

DAC:

DIC:

RAC:

RIC:

Hinweis

Mit dem Befehl DAC ist fr die angegebene Achse folgende Maangabe satzweise 
wirksam:

Durchmesser im Absolutma

Mit dem Befehl DIC ist fr die angegebene Achse folgende Maangabe satzweise 
wirksam:

Durchmesser im Kettenma

Mit dem Befehl RAC ist fr die angegebene Achse folgende Maangabe satzweise 
wirksam:

Radius im Absolutma

Mit dem Befehl RIC ist fr die angegebene Achse folgende Maangabe satzweise 
wirksam:

Radius im Kettenma

Mit DIAMONA[<Achse>] oder DIAM90A[<Achse>] werden die Istwerte der Planachse 
immer als Durchmesser angezeigt. Das gilt auch fr das Lesen der Istwerte im 
Werkstckkoordinatensystem bei MEAS, MEAW, $P_EP[x] und $AA_IW[x].

Hinweis

Beim Achstausch einer zustzlichen Planachse aufgrund einer GET-Anforderung wird 
mit RELEASE[<Achse>] der Zustand der Durchmesser-/Radius-Programmierung im anderen 
Kanal bernommen.

Beispiele

Beispiel 1: Modal wirksame achsspezifische Durchmesser-/Radius-Programmierung

X ist Planachse im Kanal, fr Y ist achsspezifische Durchmesser-Programmierung zugelassen.

Programmcode

Kommentar

N10 G0 X0 Z0 DIAMON

; Kanalspezifische Durchmesser-Programmierung aktiv fr 
X.

N15 DIAMOF

N20 DIAMONA[Y]

; Kanalspezifische Durchmesser-Programmierung aus.

; Modal wirksame achsspezifische Durchmesser-Programmie-
rung aktiv fr Y.

N25 X200 Y100

; Radius-Programmierung aktiv fr X.

166

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Grundlagen

2.8 Geometrie-Einstellungen

Programmcode

Kommentar

N30 DIAMCHANA[Y]

; Y bernimmt den Zustand der kanalspezifischen Durchmes-
ser-/Radius-Programmierung und ist dieser unterstellt

N35 X50 Y100

N40 DIAMON

N45 X50 Y100

; Radius-Programmierung aktiv fr X und Y.

; Kanalspezifische Durchmesser-Programmierung ein.

; Durchmesser-Programmierung aktiv fr X und Y.

Beispiel 2: Satzweise wirksame achsspezifische Durchmesser-/Radius-Programmierung

X ist Planachse im Kanal, fr Y ist achsspezifische Durchmesser-Programmierung zugelassen.

Programmcode

N10 DIAMON

N15 G0 G90 X20 Y40 DIAMONA[Y]

N20 G01 X=RIC(5)

N25 X=RAC(80)

N30 WHEN $SAA_IM[Y]>50 DO POS[X]=RIC(1)

N40 WHEN $SAA_IM[Y]>60 DO POS[X]=DAC(10)

Kommentar

; Kanalspezifische Durchmesser-
Programmierung ein.

; Modal wirksame achsspezifische 
Durchmesser-Programmierung aktiv 
fr Y.

; Fr diesen Satz wirksame Maan-
gabe fr X: Radius im Kettenma.

; Fr diesen Satz wirksame Maan-
gabe fr X: Radius im Absolutma.

; X ist Kommandoachse.
Fr diesen Satz wirksame Maanga-
be fr X: Radius im Kettenma.

; X ist Kommandoachse.
Fr diesen Satz wirksame Maanga-
be fr X: Radius im Absolutma.

N50 G4 F3

Weitere Informationen

Durchmesserwerte (DIAMONA/DIAM90A)

Die Durchmesserwerte gelten fr folgende Daten:

 Istwertanzeige der Planachse im Werkstckkoordinatensystem

 JOG-Betrieb: Inkremente fr Schrittma und manuelles Verfahren per Handrad

 Programmierung von Endpositionen:

Interpolationsparameter I, J, K bei G2/G3, falls diese mit AC absolut programmiert sind.
Bei inkrementeller Programmierung IC von I, J, K wird immer Radius verrechnet.

 Istwerte lesen im Werkstckkoordinatensystem bei:

MEAS, MEAW, $P_EP[X], $AA_IW[X]

Satzweise wirksame achsspezifische Durchmesserprogrammierung (DAC, DIC, RAC, RIC)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

167

 
Grundlagen

2.8 Geometrie-Einstellungen

Die Anweisungen DAC, DIC, RAC, RIC sind fr alle Befehle zugelassen, fr die die 
kanalspezifische Durchmesserprogrammierung bercksichtigt wird:

 Achsposition: X..., POS, POSA

 Pendeln: OSP1, OSP2, OSS, OSE, POSP

 Interpolationsparameter: I, J, K

 Konturzug: Gerade mit Winkelangabe

 Schnellabheben: POLF[AX]

 Verfahren in Werkzeugrichtung: MOVT

 Weiches An und Abfahren:

G140 bis G143, G147, G148, G247, G248, G347, G348, G340, G341

2.8.5

Lage des Werkstcks beim Drehen

Achsbezeichnungen

Die beiden aufeinander senkrecht stehenden Geometrieachsen werden blicherweise 
bezeichnet als:

Lngsachse

= Z-Achse (Abszisse)

Planachse

= X-Achse (Ordinate)

Werkstck-Nullpunkt 

Whrend der Maschinen-Nullpunkt fest vorgegeben ist, ist die Lage des Werkstck-Nullpunkts 
auf der Lngsachse frei whlbar. Im Allgemeinen liegt der Werkstck-Nullpunkt an der Vorder- 
oder Hinterseite des Werkstcks.

Sowohl Maschinen- als auch Werkstck-Nullpunkt liegen auf Drehmitte. Die einstellbare 
Verschiebung in der X-Achse ergibt sich damit zu Null.

168

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Grundlagen

2.8 Geometrie-Einstellungen

M

W

Z

X

Maschinen-Nullpunkt

Werkstck-Nullpunkt

Lngsachse

Planachse

G54 bis G599
oder TRANS

Aufruf fr die Lage des Werkstck-Nullpunkts

Planachse

Fr die Planachse erfolgen die Maangaben im Allgemeinen als Durchmesser-Angaben 
(doppeltes Wegma gegenber den anderen Achsen):

Welche Geometrieachse als Planachse dient, ist im Maschinendatum festzulegen 
( Maschinenhersteller!).

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

169

(cid:42)(cid:24)(cid:23)(cid:17)(cid:17)(cid:17)(cid:42)(cid:24)(cid:28)(cid:28)(cid:48)(cid:68)(cid:86)(cid:70)(cid:75)(cid:76)(cid:81)(cid:72)(cid:58)(cid:72)(cid:85)(cid:78)(cid:86)(cid:87)(cid:190)(cid:70)(cid:78)(cid:16)(cid:3)(cid:49)(cid:88)(cid:79)(cid:79)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:3)(cid:89)(cid:82)(cid:85)(cid:81)(cid:72)(cid:58)(cid:72)(cid:85)(cid:78)(cid:86)(cid:87)(cid:190)(cid:70)(cid:78)(cid:48)(cid:68)(cid:86)(cid:70)(cid:75)(cid:76)(cid:81)(cid:72)(cid:15)(cid:3)(cid:58)(cid:72)(cid:85)(cid:78)(cid:86)(cid:87)(cid:190)(cid:70)(cid:78)(cid:58)(cid:72)(cid:85)(cid:78)(cid:86)(cid:87)(cid:190)(cid:70)(cid:78)(cid:48)(cid:68)(cid:86)(cid:70)(cid:75)(cid:76)(cid:81)(cid:72)(cid:42)(cid:24)(cid:23)(cid:17)(cid:17)(cid:17)(cid:42)(cid:24)(cid:28)(cid:28)(cid:3)(cid:82)(cid:17)(cid:3)(cid:55)(cid:53)(cid:36)(cid:49)(cid:54)(cid:82)(cid:17)(cid:3)(cid:55)(cid:53)(cid:36)(cid:49)(cid:54)(cid:58)(cid:72)(cid:85)(cid:78)(cid:86)(cid:87)(cid:190)(cid:70)(cid:78)(cid:16)(cid:3)(cid:49)(cid:88)(cid:79)(cid:79)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:3)(cid:75)(cid:76)(cid:81)(cid:87)(cid:72)(cid:81)(cid:48)(cid:68)(cid:86)(cid:70)(cid:75)(cid:76)(cid:81)(cid:72)(cid:15)(cid:3)(cid:58)(cid:72)(cid:85)(cid:78)(cid:86)(cid:87)(cid:190)(cid:70)(cid:78)(cid:58)(cid:48)(cid:48)(cid:59)(cid:59)(cid:61)(cid:59)(cid:59)(cid:61)(cid:58)(cid:47)(cid:166)(cid:81)(cid:74)(cid:86)(cid:68)(cid:70)(cid:75)(cid:86)(cid:72)(cid:51)(cid:79)(cid:68)(cid:81)(cid:68)(cid:70)(cid:75)(cid:86)(cid:72)(cid:39)(cid:20)(cid:58)(cid:39)(cid:21)(cid:48)(cid:61)(cid:59)Grundlagen

2.9 Wegbefehle

2.9

Wegbefehle

2.9.1

Allgemeine Informationen zu den Wegbefehlen

Konturelemente

Fahrbefehle

Zielpositionen

Die programmierte Werkstckkontur kann sich aus folgenden Konturelementen 
zusammensetzen:

 Geraden

 Kreisbgen

 Schraubenlinien (durch berlagerung von Geraden und Kreisbgen)

Zur Herstellung dieser Konturelemente stehen verschiedene Fahrbefehle zur Verfgung:

 Eilgangbewegung (G0)

 Geradeninterpolation (G1)

 Kreisinterpolation im Uhrzeigersinn (G2)

 Kreisinterpolation gegen den Uhrzeigersinn (G3)

Die Fahrbefehle sind modal wirksam.

Ein Bewegungssatz enthlt die Zielpositionen fr die zu verfahrenden Achsen (Bahnachsen, 
Synchronachsen, Positionierachsen).

Die Programmierung der Zielpositionen kann in kartesischen Koordinaten oder in 
Polarkoordinaten erfolgen.

Hinweis

Eine Achsadresse darf pro Satz nur einmal programmiert werden.

Startpunkt-Zielpunkt

Die Fahrbewegung verluft immer von der zuletzt angefahrenen Position zur programmierten 
Zielposition. Diese Zielposition ist wiederum die Startposition fr den nchsten Fahrbefehl. 

170

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Grundlagen

2.9 Wegbefehle

Werkstckkontur

ACHTUNG

Werkzeugeingriff undefiniert

Vor Beginn eines Bearbeitungsablaufs muss das Werkzeug so vorpositionieren werden, dass 
eine Beschdigung von Werkzeug und Werkstck ausgeschlossen ist.

Nacheinander ausgefhrt ergeben die Bewegungsstze die Werkstckkontur:

Bild 2-1

Bewegungsstze beim Drehen

Bild 2-2

Bewegungsstze beim Frsen

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

171

(cid:21)(cid:20)(cid:24)(cid:23)(cid:22)(cid:61)(cid:59)(cid:21)(cid:20)(cid:25)(cid:24)(cid:23)(cid:22)Grundlagen

2.9 Wegbefehle

2.9.2

Fahrbefehle mit kartesischen Koordinaten (G0, G1, G2, G3, X..., Y..., Z...)

Die im NC-Satz mit kartesischen Koordinaten angegebene Position kann mit 
Eilgangbewegung G0, Geradeninterpolation G1 oder Kreisinterpolation G2 /G3 angefahren 
werden.

Syntax

Bedeutung

G0 X... Y... Z...
G1 X... Y... Z...
G2 X... Y... Z... ...
G3 X... Y... Z... ...

Befehl zum Einschalten der Eilgangbewegung

Befehl zum Einschalten der Geradeninterpolation

Befehl zum Einschalten der Kreisinterpolation im Uhrzeigersinn

Befehl zum Einschalten der Kreisinterpolation gegen den Uhrzeigersinn

Kartesische Koordinate der Zielposition in X-Richtung

Kartesische Koordinate der Zielposition in Y-Richtung

Kartesische Koordinate der Zielposition in Z-Richtung

G0:

G1:

G2:

G3:

X...:

Y...:

Z...:

Hinweis

Die Kreisinterpolation G2 / G3 bentigt auer den Koordinaten der Zielposition X..., Y..., 
Z... noch weitere Angaben (z. B. die Kreismittelpunkt-Koordinaten; siehe "bersicht 
(Seite 188)").

Beispiel

172

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:60)(cid:16)(cid:59)(cid:16)(cid:59)(cid:16)(cid:21)(cid:19)(cid:25)(cid:22)(cid:25)(cid:59)(cid:14)(cid:60)(cid:14)(cid:21)(cid:19)(cid:59)(cid:14)(cid:61)(cid:14)Grundlagen

2.9 Wegbefehle

Programmcode

Kommentar

N10 G17 S400 M3

; Wahl der Arbeitsebene, Spindel rechts

N20 G0 X40 Y-6 Z2

; Anfahren der mit kartesischen Koordinaten angegebenen Start-
position im Eilgang

N30 G1 Z-3 F40

N40 X12 Y-20

; Einschalten der Geradeninterpolation, Zustellen des Werk-
zeugs

; Fahren auf einer schrg liegenden Geraden auf die mit kar-
tesischen Koordinaten angegebene Endposition

N50 G0 Z100 M30

; Freifahren zum Werkzeugwechsel im Eilgang

2.9.3

Fahrbefehle mit Polarkoordinaten

2.9.3.1

Bezugspunkt der Polarkoordinaten (G110, G111, G112)

Der Punkt, von dem die Vermaung ausgeht, heit Pol.

Die Angabe des Pols kann in kartesischen oder polaren Koordinaten erfolgen.

Mit den Befehlen G110 bis G112 wird der Bezugspunkt fr die Polkoordinaten eindeutig 
festgelegt. Absolut- oder Kettenmaeingabe haben deshalb keinen Einfluss.

Syntax

Bedeutung

G110/G111/G112 X Y Z
G110/G111/G112 AP= RP=

G110 ...:

G111 ...:

G112 ...:

Mit dem Befehl G110 beziehen sich die nachfolgenden Polkoordinaten auf die 
zuletzt angefahrene Position.

Mit dem Befehl G111 beziehen sich die nachfolgenden Polkoordinaten auf den 
Nullpunkt des aktuellen Werkstck-Koordinatensystems.

Mit dem Befehl G112 beziehen sich die nachfolgenden Polkoordinaten auf den 
zuletzt gltigen Pol.

Hinweis:
Die Befehle G110...G112 mssen im eigenen NC-Satz programmiert werden.

X Y Z:

AP= RP=:

Angabe des Pols in kartesischen Koordinaten

Angabe des Pols in Polarkoordinaten

AP=:

Polarwinkel

Winkel zwischen dem Polarradius und der waagrechten Achse der 
Arbeitsebene (z. B. X-Achse bei G17). Die positive Drehrichtung luft 
im Gegenuhrzeigersinn.

Wertebereich:

 0360

RP=:

Polarradius

Die Angabe erfolgt immer in absoluten positiven Werten in [mm] oder 
[inch].

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

173

 
Grundlagen

2.9 Wegbefehle

Hinweis

Es ist mglich, im NC-Programm satzweise zwischen polaren und kartesischen Maangaben 
zu wechseln. Durch Verwendung der kartesischen Koordinatenbezeichner (X..., Y..., Z...) 
kommt man direkt wieder in das kartesische System zurck. Der definierte Pol bleibt darber 
hinaus bis Programmende erhalten.

Hinweis

Falls kein Pol angegeben wird, gilt der Nullpunkt des aktuellen Werkstck-
Koordinatensystems.

Beispiel

Die Pole 1 bis 3 werden wie folgt definiert:
 Pol 1 mit G111 X Y
 Pol 2 mit G110 X Y
 Pol 3 mit G112 X Y

174

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:51)(cid:82)(cid:79)(cid:3)(cid:20)(cid:51)(cid:82)(cid:79)(cid:3)(cid:21)(cid:51)(cid:82)(cid:79)(cid:3)(cid:22)(cid:25)(cid:19)(cid:114)(cid:42)(cid:20)(cid:20)(cid:21)(cid:3)(cid:11)(cid:59)(cid:12)(cid:42)(cid:20)(cid:20)(cid:20)(cid:11)(cid:60)(cid:12)(cid:42)(cid:20)(cid:20)(cid:20)(cid:11)(cid:59)(cid:12)(cid:42)(cid:20)(cid:20)(cid:19)(cid:3)(cid:11)(cid:59)(cid:12)(cid:22)(cid:19)(cid:114)(cid:42)(cid:20)(cid:20)(cid:19)(cid:3)(cid:11)(cid:60)(cid:12)(cid:42)(cid:20)(cid:20)(cid:21)(cid:3)(cid:11)(cid:60)(cid:12)(cid:60)(cid:59)2.9.3.2

Fahrbefehle mit Polarkoordinaten (G0, G1, G2, G3, AP, RP)

Fahrbefehle mit Polarkoordinaten sind dann sinnvoll, wenn die Bemaung eines Werkstcks 
oder eines Teils eines Werkstcks von einem zentralen Punkt ausgeht und die Mae mit 
Winkeln und Radien angegeben sind (z. B. bei Bohrbildern).  

Grundlagen

2.9 Wegbefehle

Syntax

Bedeutung

G0/G1/G2/G3 AP= RP= 

G0:

G1:

G2:

G3:

AP:

Befehl zum Einschalten der Eilgangbewegung

Befehl zum Einschalten der Geradeninterpolation

Befehl zum Einschalten der Kreisinterpolation im Uhrzeigersinn

Befehl zum Einschalten der Kreisinterpolation gegen den Uhrzeigersinn

Polarwinkel

Winkel zwischen dem Polarradius und der waagrechten Achse der Arbeitsebene (z. B. X-
Achse bei G17). Die positive Drehrichtung luft im Gegenuhrzeigersinn.

Wertebereich:

 0360

Die Winkelangabe kann sowohl absolut als auch inkrementell erfolgen:

AP=AC(...): 

Absolutmaeingabe

AP=IC(...): 

Kettenmaeingabe

Bei Kettenmaeingabe gilt der zuletzt programmierte Winkel als Be
zug.

Der Polarwinkel bleibt solange gespeichert, bis ein neuer Pol definiert oder die Arbeitsebene 
gewechselt wird.

RP:

Polarradius

Die Angabe erfolgt immer in absoluten positiven Werten in [mm] oder [inch].

Der Polarradius bleibt bis zur Eingabe eines neuen Werts gespeichert.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

175

(cid:81)(cid:80)(cid:22)(cid:19)(cid:25)(cid:114)(cid:21)(cid:22)(cid:23)(cid:114)(cid:20)(cid:25)(cid:21)(cid:114)(cid:28)(cid:19)(cid:114)(cid:20)(cid:27)(cid:114)(cid:60)(cid:59)Grundlagen

2.9 Wegbefehle

Hinweis

Die Polarkoordinaten beziehen sich auf den mit G110 ... G112 festgelegten Pol und gelten in 
der mit G17 bis G19 gewhlten Arbeitsebene.

Hinweis

Die senkrecht zur Arbeitsebene stehende 3. Geometrieachse kann zustzlich als kartesische 
Koordinate angegeben werden (siehe folgendes Bild). Damit sind rumliche Angaben in 
Zylinderkoordinaten programmierbar.     

Beispiel: G17 G0 AP RP Z

176

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:61)(cid:36)(cid:51)(cid:53)(cid:51)Grundlagen

2.9 Wegbefehle

Randbedingungen

 In NC-Stzen mit polaren Endpunktangaben drfen fr die angewhlte Arbeitsebene keine 
kartesischen Koordinaten wie Interpolationsparameter, Achsadressen, usw. programmiert 
werden.

 Wenn mit G110 ... G112 kein Pol definiert wird, dann wird automatisch der Nullpunkt des 

aktuellen Werkstckkoordinatensystems als Pol betrachtet:

 Polarradius RP = 0

Der Polarradius errechnet sich aus dem Abstand zwischen Startpunktvektor in der 
Polebene und dem aktiven Polvektor. Anschlieend wird der errechnete Polarradius modal 
gespeichert. 
Das gilt unabhngig von einer gewhlten Poldefinition (G110 ... G112). Sind beide Punkte 
identisch programmiert, so wird dieser Radius = 0 und der Alarm 14095 generiert.

 Nur Polarwinkel AP ist programmiert

Wenn im aktuellen Satz kein Polarradius RP, aber ein Polarwinkel AP programmiert ist, 
dann wird bei einer Differenz zwischen aktueller Position und Pol in Werkstckkoordinaten 
diese Differenz als Polarradius genutzt und modal gespeichert. Ist die Differenz = 0, werden 
erneut die Polkoordinaten vorgegeben und der modale Polarradius bleibt auf Null.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

177

(cid:36)(cid:51)(cid:32)(cid:22)(cid:19)(cid:36)(cid:51)(cid:32)(cid:24)(cid:19)(cid:36)(cid:51)(cid:32)(cid:44)(cid:38)(cid:3)(cid:11)(cid:21)(cid:19)(cid:12)(cid:22)(cid:19)(cid:114)(cid:21)(cid:19)(cid:114)(cid:59)(cid:60)Grundlagen

2.9 Wegbefehle

Beispiel

Herstellung eines Bohrbilds

Die Positionen der Bohrungen sind in Polar
koordinaten angegeben.

Jede Bohrung wird mit dem gleichen Ferti
gungsablauf hergestellt:

Vorbohren, Bohren auf Ma, Reiben 

Die Bearbeitungsfolge ist im Unterprogramm 
abgelegt.

Programmcode

N10 G17 G54

Kommentar

; Arbeitsebene X/Y, Werkstcknullpunkt.

N20 G111 X43 Y38

; Festlegung des Pols.

N30 G0 RP=30 AP=18 Z5

N40 L10

N50 G91 AP=72

N60 L10

N70 AP=IC(72)

N80 L10

N90 AP=IC(72)

N100 L10

N110 AP=IC(72)

N120 L10

; Startpunkt anfahren, Angabe in Zylinderkoordi-
naten.

; Unterprogramm-Aufruf.

; Nchste Position im Eilgang anfahren, Polarwin-
kel im Kettenma, Polarradius von Satz N30 bleibt 
gespeichert und muss nicht angeben werden.

; Unterprogramm-Aufruf.

.







N130 G0 X300 Y200 Z100 M30

; Werkzeug freifahren, Programmende.

Siehe auch

bersicht (Seite 188)

178

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:22)(cid:19)(cid:22)(cid:27)(cid:60)(cid:59)(cid:26)(cid:21)(cid:114)(cid:23)(cid:22)(cid:26)(cid:21)(cid:114)(cid:26)(cid:21)(cid:114)(cid:26)(cid:21)(cid:114)(cid:20)(cid:27)(cid:114) 
 
Grundlagen

2.9 Wegbefehle

2.9.4

Eilgangbewegungen

2.9.4.1

Eilgang aktivieren (G0)

Das Verfahren der Bahnachsen mit Eilganggeschwindigkeit wird eingeschaltet mit dem G-
Befehl G0.

Syntax

Bedeutung

G0 X Y Z 
G0 RP= AP= 

G0:

Verfahren der Achsen mit Eilgangsgeschwindigkeit

Wirksamkeit: modal

X... Y... Z...:

Angabe des Endpunkts in kartesischen Koordinaten

RP=... AP=... :

Angabe des Endpunkts in Polarkoordinaten

Beispiele

Beispiel 1: Frsen

Programmcode

N10 G90 S400 M3

N20 G0 X30 Y20 Z2

N30 G1 Z-5 F1000

N40 X80 Y65

N50 G0 Z2

Kommentar

; Absolutmaeingabe, Spindel rechts

; Anfahren der Startposition

; Zustellen des Werkzeugs

; Fahren auf einer Geraden

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

179

(cid:21)(cid:19)(cid:25)(cid:24)(cid:49)(cid:21)(cid:19)(cid:49)(cid:25)(cid:19)(cid:27)(cid:19)(cid:22)(cid:19)(cid:14)(cid:60)(cid:14)(cid:59) 
Grundlagen

2.9 Wegbefehle

Programmcode

Kommentar

N60 G0 X-20 Y100 Z100 M30

; Werkzeug freifahren, Programmende

Beispiel 2: Drehen

Programmcode

N10 G90 S400 M3

N20 G0 X25 Z5

N30 G1 G94 Z0 F1000

N40 G95 Z-7.5 F0.2

N50 X60 Z-35

N60 Z-50

N70 G0 X62

Kommentar

; Absolutmaeingabe, Spindel rechts

; Anfahren der Startposition

; Zustellen des Werkzeugs

; Fahren auf einer Geraden

N80 G0 X80 Z20 M30

; Werkzeug Freifahren, Programmende

2.9.4.2

Lineare Interpolation fr Eilgangbewegungen ein-/ausschalten  (RTLION, RTLIOF)

Unabhngig von der Voreinstellung (MD20730 $MC_G0_LINEAR_MODE) kann das 
Interpolationsverhalten bei Eilgangbewegungen mit den Befehlen der G-Gruppe 55 auch im 
Teileprogramm eingestellt werden.

RTLIOF

...

RTLION

Syntax

180

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:49)(cid:21)(cid:19)(cid:26)(cid:17)(cid:24)(cid:22)(cid:24)(cid:49)(cid:27)(cid:19)(cid:154)(cid:3)(cid:25)(cid:19)(cid:24)(cid:19)(cid:154)(cid:3)(cid:21)(cid:24)(cid:14)(cid:59)(cid:14)(cid:61) 
 
 
 
 
 
Bedeutung

Grundlagen

2.9 Wegbefehle

RTLIOF:

G-Befehl zum Ausschalten der linearen Interpolation

 Bei Eilgang (G0) ist die nicht-lineare Interpolation aktiv. Alle Bahnachsen errei
chen unabhngig voneinander ihren Endpunkt.

Wirksamkeit:

modal

RTLION:

G-Befehl zum Einschalten der linearen Interpolation

 Bei Eilgang (G0) ist die lineare Interpolation aktiv. Alle Bahnachsen erreichen 
gleichzeitig ihren Endpunkt.

Wirksamkeit:

modal

Hinweis

Voraussetzungen fr RTLIOF

Damit bei RTLIOF nicht-linear interpoliert wird, mssen folgende Voraussetzungen erfllt sein:

 Keine Transformation (TRAORI, TRANSMIT, ...) aktiv.

 G60 aktiv (Anhalten am Satzende).

 Kein Kompressor aktiv (COMPOF).

 Keine Werkzeugradiuskorrektur aktiv (G40).

 Kein Konturhandrad angewhlt.

 Kein Nibbeln aktiv.

Ist eine dieser Voraussetzungen nicht erfllt, wird wie bei RTLION linear interpoliert.

Beispiel

Programmcode

Kommentar

...

N30 RTLIOF

N40 G0 X0 Y10

N50 G41 X20 Y20

N60 G40 X30 Y30

N70 RTLION

...

; Lineare Interpolation ist voreingestellt:

; MD20730 $MC_GO_LINEAR_MODE == TRUE

; Lineare Interpolation ausschalten.

; G0-Stze werden mit nicht-linearer Interpolati-
on verfahren.

; WRK aktiv  G0-Stze werden mit linearer Inter-
polation verfahren.

; WRK nicht aktiv  G0-Stze werden mit nicht-li-
nearer Interpolation verfahren.

; Lineare Interpolation einschalten.

Weitere Informationen

Lesen des aktuellen Interpolationsverhaltens

ber die Systemvariablen $AA_G0MODE kann das aktuelle Interpolationsverhalten gelesen 
werden.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

181

 
 
 
 
Grundlagen

2.9 Wegbefehle

2.9.4.3

Toleranzen fr Eilgangbewegungen anpassen (STOLF, CTOLG0, OTOLG0)

Die ber Maschinendaten projektierten Toleranzen fr Eilgangbewegungen (G0-Toleranzen) 
knnen im Teileprogramm temporr angepasst werden. Die Einstellungen in den 
Maschinendaten werden dabei nicht verndert. Nach Kanal- bzw. Programmende-Reset 
werden wieder die projektierten Toleranzen wirksam.

Voraussetzungen

G0-Toleranzen werden nur wirksam, wenn folgende Bedingungen erfllt sind:

 Eine der folgenden Funktionen ist aktiv:

 Kompressorfunktion COMP...

 berschleiffunktion G642 oder G645

 Orientierungsberschleifen OST

 Orientierungsglttung ORISON

 Glttung bei bahnrelativer Orientierung ORIPATH

 Im Teileprogramm folgen mehrere ( 2) G0-Stze aufeinander.

Bei einem einzelnen G0-Satz werden G0-Toleranzen nicht wirksam, da beim bergang von 
einer Nicht-G0-Bewegung zu einer G0-Bewegung (und umgekehrt) grundstzlich die 
"kleinere Toleranz" (Werkstckbearbeitungstoleranz) wirkt!

Syntax

Anpassung der relativen G0-Toleranz

STOLF=<Value>

Anpassung der absoluten G0-Toleranzen

CTOLG0=<Value> 

OTOLG0=<Value> 

182

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Bedeutung

STOLF:

Adresse zum Programmieren eines temporr wirksamen Toleranzfaktors fr Eilgangbe
wegungen

<Value>: G0-Toleranzfaktor

Grundlagen

2.9 Wegbefehle

Typ:

Wert:

REAL

 0:

Der G0-Toleranzfaktor kann sowohl grer als auch klei
ner 1.0 sein. Ist der Faktor gleich 1.0 (Standardwert), sind 
fr Eilgangbewegungen dieselben Toleranzen wirksam 
wie fr Nicht-Eilgangbewegungen. Im Normalfall wird der 
Toleranzfaktor > 1.0 eingestellt.

Der programmierte G0-Toleranzfaktor ist so lange wirk
sam, bis er durch eine erneute STOLF-Programmierung 
berschrieben bzw. durch eine CTOLG0/OTOLG0-Pro
grammierung abgelst oder durch Kanal- bzw. Programm
ende-Reset gelscht wird.

< 0:

Lschen des programmierten Toleranzfaktors

 Es gilt wieder der im Maschinendatum voreingestellte 
Toleranzfaktor.

CTOLG0:

Adresse zum Programmieren einer temporr wirksamen Konturtoleranz fr Eilgangbewe
gungen

<Value>: Absolutwert fr die Konturtoleranz

Typ:

Wert:

REAL

 0:

Der programmierte Absolutwert fr die Konturtoleranz ist 
so lange wirksam, bis er durch eine erneute CTOLG0-Pro
grammierung berschrieben bzw. durch eine STOLF-Pro
grammierung abgelst oder durch Kanal- bzw. Programm
ende-Reset gelscht wird.

< 0:

Lschen des programmierten Toleranzwerts

 Es gilt wieder der im Maschinendatum voreingestellte 
Toleranzwert.

OTOLG0:

Adresse zum Programmieren einer temporr wirksamen Orientierungstoleranz fr Eil
gangbewegungen

<Value>: Absolutwert fr die Orientierungstoleranz

Typ:

Wert:

REAL

 0:

Der programmierte Absolutwert fr die Orientierungstole
ranz ist so lange wirksam, bis er durch eine erneute 
OTOLG0-Programmierung berschrieben bzw. durch ei
ne STOLF-Programmierung abgelst oder durch Kanal- 
bzw. Programmende-Reset gelscht wird.

< 0:

Lschen des programmierten Toleranzwerts

 Es gilt wieder der im Maschinendatum voreingestellte 
Toleranzwert.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

183

Grundlagen

2.9 Wegbefehle

Hinweis

Vorrang hat immer die zuletzt programmierte Adresse, wie die folgenden Beispiele zeigen:

 Bei Programmierung von CTOLG0 bei bestehendem STOLF wird fr das berschleifen der 

Kontur der mit CTOLG0 programmierte Toleranzwert verwendet.

 Ebenso wird bei Programmierung von OTOLG0 bei bestehendem STOLF fr das 

berschleifen der Orientierung der mit OTOLG0 programmierte Toleranzwert verwendet.

 Nach erneuter Programmierung von STOLF wird wieder der Toleranzfaktor fr die Kontur- 

und Orientierungstoleranz verwendet.

Beispiele

Beispiel 1: Anpassung der relativen G0-Toleranz

Programmcode

Kommentar

COMPCAD G645 G1 F10000

; Kompressor-Funktion COMPCAD

X... Y... Z...

X... Y... Z...

X... Y... Z...

G0  X... Y... Z...

G0  X... Y... Z...

CTOL=0.02

STOLF=4

; Hier wirken die Maschinen- und Settingdaten.

; Hier wirkt das Maschinendatum $MC_G0_TOLERANCE_FACTOR 
(z.B. =3), also eine berschleiftoleranz von:

$MC_G0_TOLERANCE_FACTOR * $MA_COMPRESS_POS_TOL

G1 X... Y... Z...

; Ab hier wirkt eine Konturtoleranz von 0,02 mm.

X... Y... Z...

X... Y... Z...

G0 X... Y... Z...

X... Y... Z...

...

; Ab hier wirkt ein G0-Toleranzfaktor von 4, also eine 
Konturtoleranz von 0,08 mm.

Beispiel 2: Anpassung der absoluten G0-Toleranzen

In den Maschinendaten sollen folgende absolute G0-Toleranzen voreingestellt sein:

 G0-Konturtoleranz: 0.1

 G0-Orientierungstoleranz: 1.0

Im Teileprogramm sollen diese Toleranzen temporr angepasst werden: 

Programmcode

Kommentar

COMPCAD G645 G1 F10000

; Kompressor-Funktion COMPCAD

X... Y... Z...

X... Y... Z...

; Ab hier wirken die projektierten Werkstckbearbei-
tungstoleranzen.

184

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
Grundlagen

2.9 Wegbefehle

Programmcode

X... Y... Z...

G0  X... Y... Z...

Kommentar

G0  X... Y... Z...

; Hier wirken die projektierten absoluten G0-Toleranzen.

CTOLG0=0.2 OTOLG0=2.0

; Programmierung der absoluten G0-Toleranzen. 

G1 X... Y... Z...

X... Y... Z...

X... Y... Z...

G0 X... Y... Z...

X... Y... Z...

; Ab hier wirken die programmierten G0-Toleranzen.

...

Weitere Informationen

Lesen des G0-Toleranzfaktors 

Der aktuell wirksame Toleranzfaktor fr Eilgangbewegungen ist ber Systemvariablen lesbar:

 In Synchronaktionen oder mit Vorlauf-Stopp im Teileprogramm ber die Systemvariable:

$AC_STOLF   

Aktiver G0-Toleranzfaktor

G0-Toleranzfaktor, der bei der Aufbereitung des aktuellen 
Hauptlaufsatzes wirksam war.

 Ohne Vorlauf-Stopp im Teileprogramm ber die Systemvariable:

$P_STOLF   

Programmierter G0-Toleranzfaktor

Ist im aktiven Teileprogramm kein Wert mit STOLF programmiert, dann liefern diese beiden 
Systemvariablen den im Maschinendatum projektierten Wert.

Ist in einem Satz kein Eilgang (G0) aktiv, dann liefern diese Systemvariablen immer den Wert 1.

Lesen der absoluten G0-Toleranzen

Die aktuell wirksamen absoluten Toleranzen fr Eilgangbewegungen sind ber 
Systemvariablen lesbar:

 In Synchronaktionen oder mit Vorlauf-Stopp im Teileprogramm ber die Systemvariablen:

$AC_CTOL_G0_ABS

Aktive Konturtoleranz bei G0-Bewegungen

$AC_OTOL_ G0_ABS

G0-Konturtoleranz, die bei der Aufbereitung des aktuellen 
Hauptlaufsatzes wirksam war.
Aktive Orientierungstoleranz bei G0-Bewegungen

G0-Orientierungstoleranz, die bei der Aufbereitung des aktu
ellen Hauptlaufsatzes wirksam war.

 Ohne Vorlauf-Stopp im Teileprogramm ber die Systemvariablen:

$P_CTOL_ G0_ABS
$P_OTOL_ G0_ABS

Programmierte Konturtoleranz bei G0-Bewegungen
Programmierte Orientierungstoleranz bei G0-Bewegungen

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

185

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Grundlagen

2.9 Wegbefehle

Sind im aktiven Teileprogramm keine absoluten G0-Toleranzen mit CTOLG0 und OTOLG0 
programmiert, dann liefern diese Systemvariablen die in den Maschinendaten projektierten 
Werte.

2.9.5

Geradeninterpolation (G1)

Mit G1 fhrt das Werkzeug auf achsparallelen, schrg liegenden oder beliebig im Raum 
liegenden Geraden. Die Geradeninterpolation ermglicht die Herstellung von 3D-Flchen, 
Nuten uvm. 

Syntax

Bedeutung

G1 X Y Z  F 
G1 AP= RP= F 

G1:

Geradeninterpolation (Linearinterpolalation mit Vorschub)

X... Y... Z...:

Endpunkt in kartesischen Koordinaten

AP=...:

RP=...:

F...:

Endpunkt in Polarkoordinaten, hier Polarwinkel

Endpunkt in Polarkoordinaten, hier Polarradius

Vorschubgeschwindigkeit in mm/min. Das Werkzeug fhrt mit Vorschub F auf 
einer Geraden vom aktuellen Startpunkt zum programmierten Zielpunkt. Den 
Zielpunkt geben Sie in kartesischen Koordinaten oder Polarkoordinaten ein. 
Auf dieser Bahn wird das Werkstck bearbeitet.

Beispiel: G1 G94 X100 Y20 Z30 A40 F100

Der Endpunkt in X, Y, Z wird mit Vorschub 100 mm/min angefahren, die 
Rundachse A wird als Synchronachse so verfahren, dass alle vier Bewegun
gen zeitgleich abgeschlossen werden.

186

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Grundlagen

2.9 Wegbefehle

Hinweis

G1 ist modal wirksam.

Fr die Bearbeitung mssen Spindeldrehzahl S und Spindeldrehrichtung M3/M4 angegeben 
werden.

Mit FGROUP knnen Achsgruppen festgelegt werden, fr die Bahnvorschub F gilt. Mehr 
Informationen hierzu im Kapitel "Bahnverhalten".

Beispiele

Beispiel 1: Herstellung einer Nut (Frsen)

Das Werkzeug fhrt vom Start- zum Endpunkt in X/Y-Richtung. Gleichzeitig wird in Z-Richtung 
zugestellt.

Programmcode

Kommentar

N10 G17 S400 M3

; Wahl der Arbeitsebene, Spindel rechts

N20 G0 X20 Y20 Z2

; Anfahren der Startposition

N30 G1 Z-2 F40

; Zustellen des Werkzeugs

N40 X80 Y80 Z-15

; Fahren auf einer schrg liegenden Geraden

N50 G0 Z100 M30

; Freifahren zum Werkzeugwechsel

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

187

(cid:21)(cid:19)(cid:27)(cid:19)(cid:21)(cid:20)(cid:24)(cid:27)(cid:19)(cid:21)(cid:19)(cid:59)(cid:61)(cid:60)(cid:60)Grundlagen

2.9 Wegbefehle

Beispiel 2: Herstellung einer Nut (Drehen)

Programmcode

Kommentar

N10 G17 S400 M3

; Wahl der Arbeitsebene, Spindel rechts

N20 G0 X40 Y-6 Z2

; Anfahren der Startposition

N30 G1 Z-3 F40

; Zustellen des Werkzeugs

N40 X12 Y-20

; Fahren auf einer schrg liegenden Geraden

N50 G0 Z100 M30

; Freifahren zum Werkzeugwechsel

2.9.6

Kreisinterpolation

2.9.6.1

bersicht

Die Kreisinterpolation ermglicht die Herstellung von Vollkreisen oder Kreisbgen.

Bild 2-3

Anwendungsbeispiel: Frsen einer kreisfrmigen Nut

188

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:60)(cid:16)(cid:59)(cid:16)(cid:59)(cid:16)(cid:21)(cid:19)(cid:25)(cid:22)(cid:25)(cid:59)(cid:14)(cid:60)(cid:14)(cid:21)(cid:19)(cid:59)(cid:14)(cid:61)(cid:14)Grundlagen

2.9 Wegbefehle

Programmiervarianten

Die Steuerung bietet verschiedene Mglichkeiten, Kreisbewegungen zu programmieren. 
Damit kann der Anwender praktisch jede Art der Zeichnungsbemaung direkt umsetzen:

 Kreisinterpolation mit Mittelpunkt und Endpunkt (G2/G3, X... Y... Z..., I... J... K...) (Seite 189)

 Kreisinterpolation mit Radius und Endpunkt (G2/G3, X... Y... Z..., CR) (Seite 192)

 Kreisinterpolation mit ffnungswinkel und Endpunkt / Mittelpunkt (G2/G3, X... Y... Z... / I... 

J... K..., AR) (Seite 194)

 Kreisinterpolation mit Polarkoordinaten (G2/G3, AP, RP) (Seite 196)

 Kreisinterpolation mit Zwischen- und Endpunkt (CIP, X... Y... Z..., I1... J1... K1...) (Seite 197)

 Kreisinterpolation mit tangentialem bergang (CT, X... Y... Z...) (Seite 200)

Ebene fr die Kreisinterpolation

Die Steuerung bentigt zur Berechnung des Kreisdrehsinns, mit G2 im Uhrzeigersinn oder G3 
gegen den Uhrzeigersinn, die Angabe der Arbeitsebene (Seite 146).

Ausnahme:

Es ist auch mglich, auerhalb der gewhlten Arbeitsebene Kreise herzustellen (nicht bei 
ffnungswinkelangabe und Schraubenlinie). In diesem Fall bestimmen die Achsadressen, die 
der Programmierer als Kreisendpunkt angibt, die Kreisebene.

2.9.6.2

Kreisinterpolation mit Mittelpunkt und Endpunkt (G2/G3, X... Y... Z..., I... J... K...)

Kreisinterpolationsvariante, die den Mittelpunkt und Endpunkt eines kreisfrmigen 
Konturelements fr die Interpolation verwendet.

Wird der Kreis ohne Endpunkt programmiert, entsteht ein Vollkreis.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

189

(cid:61)(cid:60)(cid:42)(cid:22)(cid:42)(cid:21)(cid:42)(cid:21)(cid:42)(cid:22)(cid:42)(cid:22)(cid:42)(cid:21)(cid:59)(cid:42)(cid:20)(cid:26)(cid:42)(cid:20)(cid:27)(cid:42)(cid:20)(cid:28)Grundlagen

2.9 Wegbefehle

Syntax

Bedeutung

G2/G3 X Y Z I J K 
G2/G3 X Y Z I=AC() J=AC() K=(AC)

G2:

G3:

Kreisinterpolation im Uhrzeigersinn

Wirksamkeit:

modal

Kreisinterpolation im Gegenuhrzeigersinn

Wirksamkeit:

modal

X... Y... Z... :

Kreisendpunkt in kartesischen Koordinaten

Abhngig von der aktuell gltigen Maangaben-Einstellung G90/G91 
bzw. ...=AC(...) / ...=IC(...) werden die Kreisendpunkt-Koordina
ten entweder im Absolutma oder im Kettenma interpretiert.

I... J... K... :

Interpolationsparameter zur Angabe der Kreismittelpunkt-Koordinaten in 
Richtung X, Y, Z

Die Kreismittelpunkt-Koordinaten werden standardmig im Kettenma be
zogen auf den Kreisanfangspunkt angegeben.

Sollen die Kreismittelpunkt-Koordinaten im Absolutma bezogen auf den 
Werkstcknullpunkt angegeben werden, sind die Interpolationsparameter I, 
J, K wie folgt zu programmieren:

I=AC() J=AC() K=AC() 

Hinweis
Ein Interpolationsparameter mit Wert "0" kann entfallen, der zugehrige 
zweite Parameter muss in jedem Fall angegeben werden.

Hinweis

Die Voreinstellung G90/G91 Absolut- oder Kettenma ist nur fr den Kreisendpunkt gltig.

190

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Beispiele

Beispiel 1: Frsen

Grundlagen

2.9 Wegbefehle

Mittelpunktangabe im Kettenma
N10 G0 X67.5 Y80.211
N20 G3 X17.203 Y38.029 I17.5 J30.211 F500

Mittelpunktangabe im Absolutma
N10 G0 X67.5 Y80.211 
N20 G3 X17.203 Y38.029 I=AC(50) J=AC(50)

Beispiel 2: Drehen

Mittelpunktangabe im Kettenma
N120 G0 X12 Z0
N125 G1 X40 Z-25 F0.2
N130 G3 X70 Z-75 I-3.335 K-29.25
N135 G1 Z-95

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

191

(cid:46)(cid:85)(cid:72)(cid:76)(cid:86)(cid:72)(cid:81)(cid:71)(cid:16)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:46)(cid:85)(cid:72)(cid:76)(cid:86)(cid:68)(cid:81)(cid:73)(cid:68)(cid:81)(cid:74)(cid:86)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:44)(cid:45)(cid:45)(cid:3)(cid:32)(cid:3)(cid:36)(cid:38)(cid:11)(cid:17)(cid:17)(cid:17)(cid:12)(cid:44)(cid:3)(cid:32)(cid:3)(cid:36)(cid:38)(cid:11)(cid:17)(cid:17)(cid:17)(cid:12)(cid:59)(cid:60)(cid:20)(cid:26)(cid:17)(cid:21)(cid:19)(cid:22)(cid:20)(cid:26)(cid:17)(cid:24)(cid:19)(cid:19)(cid:24)(cid:19)(cid:17)(cid:19)(cid:19)(cid:19)(cid:87)(cid:24)(cid:19)(cid:17)(cid:19)(cid:19)(cid:19)(cid:22)(cid:27)(cid:17)(cid:19)(cid:21)(cid:28)(cid:22)(cid:19)(cid:17)(cid:21)(cid:20)(cid:20)(cid:154)(cid:3)(cid:23)(cid:19)(cid:154)(cid:3)(cid:26)(cid:19)(cid:22)(cid:19)(cid:28)(cid:24)(cid:21)(cid:24)(cid:59)(cid:61)(cid:26)(cid:24)Grundlagen

2.9 Wegbefehle

Mittelpunktangabe im Absolutma
N120 G0 X12 Z0
N125 G1 X40 Z-25 F0.2
N130 G3 X70 Z-75 I=AC(33.33) K=AC(-54.25)
N135 G1 Z-95

2.9.6.3

Kreisinterpolation mit Radius und Endpunkt (G2/G3, X... Y... Z..., CR)

Kreisinterpolationsvariante, die den Radius und Endpunkt eines kreisfrmigen Konturelements 
fr die Interpolation verwendet. 

Hinweis

Vollkreise (Verfahrwinkel 360) knnen mit dieser Variante nicht programmiert werden.

Syntax

Bedeutung

G2/G3 X Y Z CR=...

G2:

G3:

Kreisinterpolation im Uhrzeigersinn

Wirksamkeit:

modal

Kreisinterpolation im Gegenuhrzeigersinn

Wirksamkeit:

modal

X... Y... Z... :

Kreisendpunkt in kartesischen Koordinaten

Abhngig von der aktuell gltigen Maangaben-Einstellung G90/G91 
bzw. ...=AC(...) / ...=IC(...) werden die Endpunktkoordinaten ent
weder im Absolutma oder im Kettenma interpretiert.

CR=... :

Kreisradius

Durch das Vorzeichen wird angeben, ob der Verfahrwinkel grer oder klei
ner 180 sein soll. Ein positives Vorzeichen kann entfallen.

CR=+... :

CR=-... :

Verfahrwinkel  180

Verfahrwinkel > 180

Hinweis
Es gibt keine praxisrelevante Beschrnkung fr die Gre des maximal pro
grammierbaren Radius.

192

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Beispiele

Beispiel 1: Frsen

Grundlagen

2.9 Wegbefehle

Programmcode

N10 G0 X67.5 Y80.511

N20 G3 X17.203 Y38.029 CR=34.913 F500

...

Beispiel 2: Drehen

Programmcode

...

N125 G1 X40 Z-25 F0.2

N130 G3 X70 Z-75 CR=30

N135 G1 Z-95

...

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

193

(cid:59)(cid:60)(cid:20)(cid:26)(cid:17)(cid:21)(cid:19)(cid:22)(cid:25)(cid:26)(cid:17)(cid:24)(cid:19)(cid:19)(cid:38)(cid:53)(cid:32)(cid:22)(cid:23)(cid:17)(cid:28)(cid:20)(cid:22)(cid:38)(cid:53)(cid:3)(cid:32)(cid:3)(cid:14)(cid:17)(cid:17)(cid:17)(cid:38)(cid:53)(cid:3)(cid:32)(cid:3)(cid:16)(cid:17)(cid:17)(cid:17)(cid:27)(cid:19)(cid:17)(cid:24)(cid:20)(cid:20)(cid:22)(cid:27)(cid:17)(cid:19)(cid:21)(cid:28)(cid:154)(cid:3)(cid:23)(cid:19)(cid:154)(cid:3)(cid:26)(cid:19)(cid:22)(cid:19)(cid:28)(cid:24)(cid:21)(cid:24)(cid:59)(cid:61)(cid:26)(cid:24) 
 
 
 
 
 
 
 
 
 
Grundlagen

2.9 Wegbefehle

2.9.6.4

Kreisinterpolation mit ffnungswinkel und Endpunkt / Mittelpunkt (G2/G3, X... Y... Z... / I... 
J... K..., AR)

Kreisinterpolationsvariante, die den ffnungswinkel und den Mittelpunkt oder Endpunkt eines 
kreisfrmigen Konturelements fr die Interpolation verwendet.

Hinweis

Vollkreise (Verfahrwinkel 360) knnen mit dieser Variante nicht programmiert werden.

Syntax

Bedeutung

G2/G3 X Y Z AR=... 

G2/G3 I J K AR=... 

G2:

G3:

Kreisinterpolation im Uhrzeigersinn

Wirksamkeit:

modal

Kreisinterpolation im Gegenuhrzeigersinn

Wirksamkeit:

modal

X... Y... Z... :

Kreisendpunkt in kartesischen Koordinaten

Abhngig von der aktuell gltigen Maangaben-Einstellung G90/G91 
bzw. ...=AC(...) / ...=IC(...) werden die Kreisendpunkt-Koordina
ten entweder im Absolutma oder im Kettenma interpretiert.

I... J... K... :

Interpolationsparameter zur Angabe der Kreismittelpunkt-Koordinaten in 
Richtung X, Y, Z

Die Kreismittelpunkt-Koordinaten werden standardmig im Kettenma be
zogen auf den Kreisanfangspunkt angegeben.

Sollen die Kreismittelpunkt-Koordinaten im Absolutma bezogen auf den 
Werkstcknullpunkt angegeben werden, sind die Interpolationsparameter I, 
J, K wie folgt zu programmieren:

I=AC() J=AC() K=AC() 

Hinweis
Ein Interpolationsparameter mit Wert "0" kann entfallen, der zugehrige 
zweite Parameter muss in jedem Fall angegeben werden.

AR=... :

ffnungswinkel

Wertebereich:

0 ... 360

194

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Beispiele

Beispiel 1: Frsen

Grundlagen

2.9 Wegbefehle

Programmcode

N10 G0 X67.5 Y80.211

N20 G3 X17.203 Y38.029 AR=140.134 F500

N20 G3 I17.5 J30.211 AR=140.134 F500

Beispiel 2: Drehen

Programmcode

N125 G1 X40 Z-25 F0.2

N130 G3 X70 Z-75 AR=135.944

N130 G3 I-3.335 K-29.25 AR=135.944

N130 G3 I=AC(33.33) K=AC(-54.25) AR=135.944

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

195

(cid:152)(cid:73)(cid:73)(cid:81)(cid:88)(cid:81)(cid:74)(cid:86)(cid:90)(cid:76)(cid:81)(cid:78)(cid:72)(cid:79)(cid:46)(cid:85)(cid:72)(cid:76)(cid:86)(cid:68)(cid:81)(cid:73)(cid:68)(cid:81)(cid:74)(cid:86)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:44)(cid:45)(cid:59)(cid:60)(cid:20)(cid:26)(cid:17)(cid:21)(cid:19)(cid:22)(cid:20)(cid:26)(cid:17)(cid:24)(cid:19)(cid:19)(cid:24)(cid:19)(cid:17)(cid:19)(cid:19)(cid:19)(cid:24)(cid:19)(cid:17)(cid:19)(cid:19)(cid:19)(cid:22)(cid:27)(cid:17)(cid:19)(cid:21)(cid:28)(cid:22)(cid:19)(cid:17)(cid:21)(cid:20)(cid:20)(cid:20)(cid:23)(cid:19)(cid:17)(cid:20)(cid:22)(cid:23)(cid:114)(cid:154)(cid:3)(cid:23)(cid:19)(cid:154)(cid:3)(cid:22)(cid:22)(cid:17)(cid:22)(cid:22)(cid:28)(cid:24)(cid:21)(cid:24)(cid:24)(cid:23)(cid:17)(cid:21)(cid:24)(cid:59)(cid:61)(cid:20)(cid:22)(cid:24)(cid:17)(cid:28)(cid:23)(cid:23)(cid:114) 
 
 
 
 
 
 
 
 
Grundlagen

2.9 Wegbefehle

Programmcode

N135 G1 Z-95

2.9.6.5

Kreisinterpolation mit Polarkoordinaten (G2/G3, AP, RP)

Kreisinterpolationsvariante, die den Kreisendpunkt in Polarkoordinaten fr die Interpolation 
verwendet.

Hierbei gilt folgende Vereinbarung:

 Der Pol liegt im Kreismittelpunkt.

 Der Polarradius entspricht dem Kreisradius.

Syntax

Bedeutung

G2/G3 AP=... RP=... 

G2:

G3:

Kreisinterpolation im Uhrzeigersinn

Wirksamkeit:

modal

Kreisinterpolation im Gegenuhrzeigersinn

Wirksamkeit:

modal

AP=... RP=... :

Kreisendpunkt in Polarkoordinaten

AP=... :

RP=... :

Polarwinkel

Polarradius ( Kreisradius)

Beispiele

Beispiel 1: Frsen

196

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:42)(cid:20)(cid:20)(cid:20)(cid:27)(cid:19)(cid:17)(cid:21)(cid:20)(cid:20)(cid:24)(cid:19)(cid:17)(cid:19)(cid:19)(cid:19)(cid:25)(cid:26)(cid:17)(cid:24)(cid:19)(cid:19)(cid:24)(cid:19)(cid:17)(cid:19)(cid:19)(cid:19)(cid:53)(cid:51)(cid:32)(cid:22)(cid:23)(cid:17)(cid:28)(cid:20)(cid:22)(cid:60)(cid:59)(cid:36)(cid:51)(cid:32)(cid:21)(cid:19)(cid:19)(cid:17)(cid:19)(cid:24)(cid:21)(cid:114) 
 
Grundlagen

2.9 Wegbefehle

Programmcode

N10 G0 X67.5 Y80.211

N20 G111 X50 Y50

N30 G3 RP=34.913 AP=200.052 F500

Beispiel 2: Drehen

Programmcode

N125 G1 X40 Z-25 F0.2

N130 G111 X33.33 Z-54.25

N135 G3 RP=30 AP=142.326

N140 G1 Z-95

2.9.6.6

Kreisinterpolation mit Zwischen- und Endpunkt (CIP, X... Y... Z..., I1... J1... K1...)

Die mit dem G-Befehl CIP programmierte Kreisinterpolationsvariante ermglicht die 
Interpolation von schrg im Raum liegenden Kreisbgen. 

Der Kreisbewegung wird durch den Zwischenpunkt und den Endpunkt der kreisfrmigen 
Kontur beschrieben.

Die Verfahrrichtung ergibt sich aus der Reihenfolge Anfangspunkt  Zwischenpunkt  
Endpunkt.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

197

(cid:36)(cid:51)(cid:32)(cid:20)(cid:23)(cid:21)(cid:17)(cid:22)(cid:21)(cid:25)(cid:114)(cid:53)(cid:51)(cid:32)(cid:22)(cid:19)(cid:154)(cid:3)(cid:23)(cid:19)(cid:154)(cid:3)(cid:22)(cid:22)(cid:17)(cid:22)(cid:22)(cid:28)(cid:24)(cid:21)(cid:24)(cid:24)(cid:23)(cid:17)(cid:21)(cid:24)(cid:59)(cid:61) 
 
 
 
 
 
 
 
 
Grundlagen

2.9 Wegbefehle

Syntax

Bedeutung

CIP X Y Z I1=AC() J1=AC() K1=(AC)

CIP:

Kreisinterpolation ber Zwischenpunkt

Wirksamkeit:

modal

X... Y... Z... :

Kreisendpunkt in kartesischen Koordinaten

Abhngig von der aktuell gltigen Maangaben-Einstellung G90/G91 
bzw. ...=AC(...) / ...=IC(...) werden die Kreisendpunkt-Koordina
ten entweder im Absolutma oder im Kettenma interpretiert.

I1... J1... K1... :

Interpolationsparameter zur Angabe der Kreiszwischenpunkt-Koordinaten in 
Richtung X, Y, Z

Abhngig von der aktuell gltigen Maangaben-Einstellung G90/G91 
bzw. ...=AC(...) / ...=IC(...) werden die Kreiszwischenpunkt-Koor
dinaten entweder im Absolutma oder im Kettenma interpretiert.

Hinweis
Ein Interpolationsparameter mit Wert "0" kann entfallen, der zugehrige 
zweite Parameter muss in jedem Fall angegeben werden.

Hinweis

Die Voreinstellungen G90/G91 (Absolut- oder Kettenmaangabe) sind fr Kreiszwischenpunkt 
und Kreisendpunkt gltig.

Bei aktiver Kettenmaangabe G91 bzw. ...=IC(...) gilt fr Zwischen- und Endpunkt der 
Kreisanfangspunkt als Bezug.

198

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:61)(cid:90)(cid:76)(cid:86)(cid:70)(cid:75)(cid:72)(cid:81)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:59)(cid:60)(cid:44)(cid:20)(cid:45)(cid:20)(cid:60)(cid:46)(cid:20)(cid:61)Grundlagen

2.9 Wegbefehle

Hinweis

Technologie Drehen

Die Durchmesserprogrammierung des Interpolationsparameters fr die Planachse wird bei der 
Kreisprogrammierung mit CIP nicht untersttzt. Der Interpolationsparameter fr die Planachse 
ist daher im Radius zu programmieren.

Beispiele

Beispiel 1: Frsen

Fr die Herstellung einer schrg im Raum liegenden Kreisnut wird ein Kreis ber 
Zwischenpunktangabe mit 3 Interpolationsparametern und Endpunkt mit ebenfalls 3 
Koordinaten beschrieben.

Programmcode

N10 G0 G90 X130 Y70.70 S800 M3

N20 G17 G1 Z-2 F100

Kommentar

; Startpunkt anfahren.

; Zustellen des Werkzeugs.

N30 CIP X80 Y120 Z-10 I1=IC(-85.35) J1=IC(-35.35) K1=-6 ; Kreisendpunkt und Zwischen-

N40 M30

punkt.

; Koordinaten fr alle 3 Ge-
ometrieachsen.

; Programmende.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

199

(cid:22)(cid:24)(cid:17)(cid:22)(cid:24)(cid:26)(cid:19)(cid:17)(cid:26)(cid:19)(cid:20)(cid:21)(cid:19)(cid:21)(cid:25)(cid:20)(cid:19)(cid:20)(cid:22)(cid:19)(cid:27)(cid:19)(cid:27)(cid:24)(cid:17)(cid:22)(cid:24)(cid:60)(cid:60)(cid:61)(cid:59) 
Grundlagen

2.9 Wegbefehle

Beispiel 2: Drehen

Programmcode

...

N125 G1 G90 X40 Z-25 F0.2

N130 CIP X70 Z-75 I1=IC(26.665) K1=IC(-29.25)

Kommentar

; Interpolationsparameter I1 fr 
Planachse muss im Radius program-
miert sein.

; bzw. 

; N130 CIP X70 Z-75 I1=46.665 K1=-54.25

N135 G1 Z-95

2.9.6.7

Kreisinterpolation mit tangentialem bergang (CT, X... Y... Z...)

Die mit dem G-Befehl CT programmierte Kreisinterpolationsvariante ermglicht die 
Interpolation von Kreisbgen, die tangential an das zuvor programmierte Konturelement 
anschlieen. 

Der Kreis wird dabei durch den Start- und Endpunkt und die Tangentenrichtung im Startpunkt 
definiert.

Hinweis

Tangentenrichtung im Startpunkt

Die Tangentenrichtung im Startpunkt eines CT-Satzes wird aus der Endtangente der 
programmierten Kontur des letzten Vorgngersatzes mit einer Verfahrbewegung bestimmt.

Zwischen diesem Satz und dem aktuellen Satz knnen beliebig viele Stze ohne 
Verfahrinformation liegen.

200

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:154)(cid:3)(cid:23)(cid:19)(cid:154)(cid:3)(cid:26)(cid:19)(cid:28)(cid:24)(cid:21)(cid:24)(cid:59)(cid:61)(cid:26)(cid:24)(cid:154)(cid:3)(cid:28)(cid:22)(cid:17)(cid:22)(cid:22)(cid:24)(cid:23)(cid:17)(cid:21)(cid:24) 
 
Grundlagen

2.9 Wegbefehle

S

E

M

r

t

Startpunkt

Endpunkt

Kreismittelpunkt

Kreisradius

Endtangente der programmierten Kontur des letzten Vorgngersatzes mit einer Verfahrbewe
gung 

Bild 2-4

Tangential an das Geradenstck 1-2 anschlieende Kreisbahn S-E

Bild 2-5

Tangential anschlieende Kreisbahnen hngen vom vorhergehenden Konturelement ab

Syntax

Bedeutung

CT X Y Z

CT:

Kreisinterpolation mit tangentialem bergang

X... Y... Z... :

Kreisendpunkt in kartesischen Koordinaten

Wirksamkeit:

modal

Abhngig von der aktuell gltigen Maangaben-Einstellung G90/G91 
bzw. ...=AC(...) / ...=IC(...) werden die Kreisendpunkt-Koordina
ten entweder im Absolutma oder im Kettenma interpretiert.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

201

(cid:48)(cid:87)(cid:20)(cid:21)(cid:54)(cid:40)(cid:85)(cid:40)(cid:47)(cid:20)(cid:38)(cid:55)(cid:20)(cid:38)(cid:55)(cid:21)(cid:38)(cid:55)(cid:22)(cid:47)(cid:21)(cid:47)(cid:22)(cid:54)Grundlagen

2.9 Wegbefehle

Beispiele

Beispiel 1: Frsen

Programmcode

N10 G0 Z100

N20 G17 T1 M6

Kommentar

N30 G0 X0 Y0 Z2 M3 S300 D1

N40 Z-5 F1000

; Werkzeug zustellen.

N50 G41 X30 Y25 G1 F1000

; Einschalten der Werkzeugradiuskorrektur.

; Kontur frsen.

; Kreisprogrammierung mit tangentialem bergang.

N60 Y35

N70 X60 Y70 

N80 CT X80 Y55

N90 X90 Y35

N100 G1 X100

N110 Y25

N120 X30

N130 G0 G40 X0 Y0

; Ausschalten der Werkzeugradiuskorrektur.

; Werkzeug freifahren.

N140 Z100

N140 M30

Beispiel 2: Drehen

202

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:59)(cid:60)(cid:22)(cid:19)(cid:20)(cid:19)(cid:19)(cid:22)(cid:24)(cid:26)(cid:19)(cid:24)(cid:24)(cid:21)(cid:24)(cid:25)(cid:19)(cid:27)(cid:19)(cid:28)(cid:19)(cid:49)(cid:27)(cid:19) 
 
 
 
 
 
 
 
 
Grundlagen

2.9 Wegbefehle

Programmcode

Kommentar

...

N110 G1 X23.293 Z0 F10

N115 X40 Z-30 F0.2

N120 CT X58.146 Z-42

; Kreisprogrammierung mit tangentialem bergang.

N125 G1 X70

...

Weitere Informationen

Splines

Bei Splines wird die Tangentialrichtung durch die Gerade durch die letzten beiden Punkte 
bestimmt. Diese Richtung ist bei A- und C-Splines bei aktivem ENAT oder EAUTO im 
Allgemeinen nicht mit der Richtung im Endpunkt des Splines identisch.

Der bergang von B-Splines ist immer tangential, wobei die Tangentenrichtung wie bei A- oder 
C-Splines und aktivem ETAN definiert ist.

Framewechsel

Findet zwischen dem Satz, der die Tangente definiert, und dem CT-Satz ein Framewechsel 
statt, so wird die Tangente diesem Wechsel unterworfen.

Grenzfall

Verluft die Verlngerung der Starttangente durch den Endpunkt, wird statt eines Kreises eine 
Gerade erzeugt (Grenzfall eines Kreises mit unendlichem Radius). In diesem Spezialfall darf 
TURN entweder nicht programmiert sein oder es muss TURN=0 gelten.

Hinweis

Bei der Annherung an diesen Grenzfall entstehen Kreise mit beliebig groem Radius, sodass 
bei TURN ungleich 0 die Bearbeitung in der Regel mit einem Alarm wegen der Verletzung der 
Softwarelimits abgebrochen werden wird. 

Lage der Kreisebene

Die Lage der Kreisebene ist von der aktiven Ebene (G17-G19) abhngig.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

203

(cid:154)(cid:3)(cid:23)(cid:19)(cid:154)(cid:3)(cid:24)(cid:27)(cid:17)(cid:20)(cid:23)(cid:25)(cid:154)(cid:3)(cid:26)(cid:19)(cid:154)(cid:3)(cid:21)(cid:22)(cid:17)(cid:21)(cid:28)(cid:22)(cid:22)(cid:19)(cid:23)(cid:21)(cid:59)(cid:61) 
 
 
 
 
Grundlagen

2.9 Wegbefehle

Liegt die Tangente des Vorgngersatzes nicht in der aktiven Ebene, so wird deren Projektion 
in die aktive Ebene verwendet.

Haben Start- und Endpunkt nicht die gleiche Positionskomponente senkrecht zur aktiven 
Ebene, wird statt eines Kreises eine Helix erzeugt.

2.9.7

Schraubenlinien-Interpolation (G2/G3, TURN)

Die Schraubenlinieninterpolation (Helixinterpolation) ermglicht zum Beispiel die Herstellung 
von Gewinden oder Schmiernuten.

Bei der Schraubenlinieninterpolation werden zwei Bewegungen berlagert und parallel 
ausgefhrt:

 eine ebene Kreisbewegung, der

 eine senkrechte Linearbewegung berlagert wird.

G2/G3 X Y Z I J K TURN=

G2/G3 X Y Z I J K TURN=

G2/G3 AR= I J K TURN=

G2/G3 AR= X Y Z TURN=

G2/G3 AP RP= TURN=

G2:

G3:

X Y Z :

Fahren auf einer Kreisbahn im Uhrzeigersinn

Fahren auf einer Kreisbahn gegen den Uhrzeigersinn

Endpunkt in kartesischen Koordinaten

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Syntax

Bedeutung

204

Grundlagen

2.9 Wegbefehle

Kreismittelpunkt in kartesischen Koordinaten

ffnungswinkel

Anzahl der zustzlichen Kreisdurchlufe im Bereich von 0 bis 999

Polarwinkel

Polarradius

I J K :

AR:

TURN= :

AP= :

RP= :

Hinweis

G2 und G3 sind modal wirksam.

Die Kreisbewegung wird in den Achsen ausgefhrt, die durch die Angabe der Arbeitsebene 
festgelegt sind.

Beispiel

Programmcode

N10 G17 G0 X27.5 Y32.99 Z3

N20 G1 Z-5 F50

N30 G3 X20 Y5 Z-20 I=AC(20) J=AC(20) TURN=2

N40 M30

Weitere Informationen

Bewegungsfolge

1. Startpunkt anfahren

2. Mit TURN= programmierte Vollkreise ausfhren.

Kommentar

; Anfahren der Startposition.

; Zustellen des Werkzeugs.

; Schraubenlinie mit den An-
gaben: Ab Startposition 2 
Vollkreise ausfhren, dann 
Endpunkt anfahren.

; Programmende.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

205

(cid:24)(cid:21)(cid:19)(cid:22)(cid:21)(cid:17)(cid:28)(cid:28)(cid:21)(cid:19)(cid:16)(cid:24)(cid:16)(cid:21)(cid:19)(cid:21)(cid:26)(cid:17)(cid:24)(cid:60)(cid:60)(cid:61)(cid:59)Grundlagen

2.9 Wegbefehle

3. Kreisendpunkt anfahren, z. B. als Teilumdrehung.

4. Punkt 2 und 3 ber die Zustelltiefe ausfhren.

Aus der Anzahl der Vollkreise plus programmierten Kreisendpunkt (ausgefhrt ber der 
Zustelltiefe), ergibt sich die Steigung, mit der die Schraubenlinie gefertigt werden soll.

Programmierung des Endpunkts Schraubenlinieninterpolation

Fr detaillierte Erklrungen der Interpolationsparameter siehe Kreisinterpolation. 

Programmierter Vorschub

Bei der Schraubenlinieninterpolation empfiehlt sich die Angabe eines programmierten 
Vorschub-Overrides (CFC). Mit FGROUP kann festgelegt werden, welche Achsen mit 
programmiertem Vorschub verfahren sollen. Mehr Informationen siehe Kapitel Bahnverhalten.

2.9.8

Konturzge

2.9.8.1

Konturzug-Programmierung

Funktion         

Die Konturzug-Programmierung dient der schnellen Eingabe einfacher Konturen.

Programmierbar sind Konturzge mit 1, 2, 3 oder mehr Punkten mit den bergangselementen 
Fase oder Rundung durch Angabe von kartesischen Koordinaten und / oder Winkeln (ANG 
bzw. ANG1 und ANG2).

In den Stzen, die Konturzge beschreiben, knnen beliebige weitere NC-Adressen 
verwendet werden wie z. B. Adressbuchstaben fr weitere Achsen (Einzelachsen oder Achse 
senkrecht zur Bearbeitungsebene), Hilfsfunktionsangaben, G-Befehle, Geschwindigkeiten 
usw.

206

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:54)(cid:87)(cid:68)(cid:85)(cid:87)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:20)(cid:17)(cid:3)(cid:57)(cid:82)(cid:79)(cid:79)(cid:78)(cid:85)(cid:72)(cid:76)(cid:86)(cid:21)(cid:17)(cid:3)(cid:57)(cid:82)(cid:79)(cid:79)(cid:78)(cid:85)(cid:72)(cid:76)(cid:86)(cid:22)(cid:17)(cid:3)(cid:57)(cid:82)(cid:79)(cid:79)(cid:78)(cid:85)(cid:72)(cid:76)(cid:86)(cid:40)(cid:81)(cid:71)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:3)(cid:68)(cid:79)(cid:86)(cid:3)(cid:55)(cid:72)(cid:76)(cid:79)(cid:88)(cid:80)(cid:71)(cid:85)(cid:72)(cid:75)(cid:88)(cid:81)(cid:74)(cid:61)(cid:76)(cid:72)(cid:79)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)Grundlagen

2.9 Wegbefehle

Parametrierung

Die Bezeichner fr Winkel, Radius und Fase werden ber Maschinendaten definiert:

MD10652 $MN_CONTOUR_DEF_ANGLE_NAME (Name des Winkels fr Konturzge)

MD10654 $MN_RADIUS_NAME (Name des Radius fr Konturzge)

MD10656 $MN_CHAMFER_NAME (Name der Fase fr Konturzge)

Hinweis

Siehe Angaben des Maschinenherstellers.

2.9.8.2

Konturzge: Eine Gerade

Hinweis

In der folgenden Beschreibung wird von davon ausgegangen, dass:

 G18 aktiv ist ( aktive Arbeitsebene ist die Z/X-Ebene).

(Die Programmierung von Konturzgen ist jedoch ohne Einschrnkungen auch bei G17 
oder G19 mglich.)

 fr Winkel, Radius und Fase folgende Bezeichner definiert sind:

 ANG (Winkel)

 RND (Radius)

 CHR (Fase

Der Endpunkt der Geraden wird definiert durch folgende Angaben:

 Winkel ANG

 Eine kartesische Endpunkt-Koordinate (X2 oder Z2)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

207

Grundlagen

2.9 Wegbefehle

ANG:

X1, Z1:

X2, Z2:

Winkel der Geraden

Anfangskoordinaten

Endpunktkoordinaten der Geraden

Syntax

Bedeutung

X ANG=
Z ANG=

X... :

Z... :

ANG:

Endpunktkoordinate in X-Richtung

Endpunktkoordinate in Z-Richtung

Bezeichner zur Winkel-Programmierung

Der angegebene Wert (Winkel) bezieht sich auf die Abszisse der aktiven Arbeitsebene (Z-
Achse bei G18).

Beispiel

Programmcode

Kommentar

N10 X5 Z70 F1000 G18

; Anfahren der Startposition

N20 X88.8 ANG=110

; Gerade mit Winkelangabe

N30 ...

Bzw.:

Programmcode

Kommentar

N10 X5 Z70 F1000 G18

; Anfahren der Startposition

N20 Z39.5 ANG=110

; Gerade mit Winkelangabe

N30 ...

208

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:59)(cid:20)(cid:15)(cid:3)(cid:61)(cid:20)(cid:59)(cid:21)(cid:15)(cid:3)(cid:61)(cid:21)(cid:61)(cid:59)(cid:36)(cid:49)(cid:42) 
 
Grundlagen

2.9 Wegbefehle

2.9.8.3

Konturzge: Zwei Geraden

Hinweis

In der folgenden Beschreibung wird von davon ausgegangen, dass:

 G18 aktiv ist ( aktive Arbeitsebene ist die Z/X-Ebene).

(Die Programmierung von Konturzgen ist jedoch ohne Einschrnkungen auch bei G17 
oder G19 mglich.)

 fr Winkel, Radius und Fase folgende Bezeichner definiert sind:

 ANG (Winkel)

 RND (Radius)

 CHR (Fase)

Der Endpunkt der ersten Geraden kann durch Angabe der kartesischen Koordinaten oder 
durch Angabe der Winkel der beiden Geraden programmiert werden. Der Endpunkt der 
zweiten Geraden muss immer kartesisch programmiert werden. Der Schnittpunkt der beiden 
Geraden kann als Ecke, Rundung oder als Fase ausgefhrt werden.

ANG1:

ANG2:

X1, Z1:

X2, Z2:

Winkel der ersten Geraden

Winkel der zweiten Geraden

Anfangskoordinaten der ersten Geraden

Endpunktkoordinaten der ersten Geraden bzw.
Anfangskoordinaten der zweiten Geraden

X3, Z3:

Endpunktkoordinaten der zweiten Geraden

Syntax

Programmierung des Endpunkts der ersten Geraden durch Angabe der Winkel

 Ecke als bergang zwischen den Geraden:

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

209

(cid:46)(cid:68)(cid:81)(cid:81)(cid:3)(cid:68)(cid:88)(cid:70)(cid:75)(cid:3)(cid:53)(cid:88)(cid:81)(cid:71)(cid:88)(cid:81)(cid:74)(cid:3)(cid:82)(cid:71)(cid:72)(cid:85)(cid:3)(cid:41)(cid:68)(cid:86)(cid:72)(cid:3)(cid:86)(cid:72)(cid:76)(cid:81)(cid:36)(cid:49)(cid:42)(cid:20)(cid:59)(cid:61)(cid:59)(cid:22)(cid:15)(cid:3)(cid:61)(cid:22)(cid:59)(cid:20)(cid:15)(cid:3)(cid:61)(cid:20)(cid:36)(cid:49)(cid:42)(cid:21)(cid:59)(cid:21)(cid:15)(cid:3)(cid:61)(cid:21)(cid:59)(cid:20)(cid:15)(cid:3)(cid:61)(cid:20)Grundlagen

2.9 Wegbefehle

ANG=

X Z ANG=

 Rundung als bergang zwischen den Geraden:

ANG= RND=...

X Z ANG= 

 Fase als bergang zwischen den Geraden:

ANG= CHR=...

X Z ANG= 

Programmierung des Endpunkts der ersten Geraden durch Angabe der Koordinaten

 Ecke als bergang zwischen den Geraden:

X Z

X Z 

 Rundung als bergang zwischen den Geraden:

X Z RND=...

X Z 

 Fase als bergang zwischen den Geraden:

X Z CHR=...

X Z 

210

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
Grundlagen

2.9 Wegbefehle

Bedeutung

ANG=... :

Bezeichner zur Winkel-Programmierung

Der angegebene Wert (Winkel) bezieht sich auf die Abszisse der aktiven Ar
beitsebene (Z-Achse bei G18).

RND=... :

Bezeichner zur Programmierung einer Rundung

Der angegebene Wert entspricht dem Radius der Rundung:

CHR=... :

Bezeichner zur Programmierung einer Fase

Der angegebene Wert entspricht der Breite der Fase in der Bewegungsrichtung:

X... :

Z... :

Hinweis

Koordinaten in X-Richtung

Koordinaten in Z-Richtung

Weiterfhrende Informationen zur Programmierung einer Fase oder Rundung siehe " Fase, 
Rundung (CHF, CHR, RND, RNDM, FRC, FRCM) (Seite 240) ".

Beispiel

Programmcode

Kommentar

N10 X10 Z80 F1000 G18

; Anfahren der Startposition.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

211

(cid:53)(cid:88)(cid:81)(cid:71)(cid:88)(cid:81)(cid:74)(cid:53)(cid:49)(cid:39)(cid:58)(cid:76)(cid:81)(cid:78)(cid:72)(cid:79)(cid:75)(cid:68)(cid:79)(cid:69)(cid:76)(cid:72)(cid:85)(cid:72)(cid:81)(cid:71)(cid:72)(cid:41)(cid:68)(cid:86)(cid:72)(cid:38)(cid:43)(cid:53)Grundlagen

2.9 Wegbefehle

Programmcode

Kommentar

N20 ANG=148.65 CHR=5.5

; Gerade mit Winkel- und Fasenangabe.

N30 X85 Z40 ANG=100

; Gerade mit Winkel- und Endpunktangabe.

N40 ...

2.9.8.4

Konturzge: Drei Geraden

Hinweis

In der folgenden Beschreibung wird von davon ausgegangen, dass:

 G18 aktiv ist ( aktive Arbeitsebene ist die Z/X-Ebene).

(Die Programmierung von Konturzgen ist jedoch ohne Einschrnkungen auch bei G17 
oder G19 mglich.)

 fr Winkel, Radius und Fase folgende Bezeichner definiert sind:

 ANG (Winkel)

 RND (Radius)

 CHR (Fase)

Der Endpunkt der ersten Geraden kann durch Angabe der kartesischen Koordinaten oder 
durch Angabe der Winkel der beiden Geraden programmiert werden. Der Endpunkt der 
zweiten und dritten Geraden muss immer kartesisch programmiert werden. Der Schnittpunkt 
der Geraden kann als Ecke, Rundung oder als Fase ausgefhrt werden.

212

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
Grundlagen

2.9 Wegbefehle

ANG1:

ANG2:

X1, Z1:

X2, Z2:

X3, Z3:

Winkel der ersten Geraden

Winkel der zweiten Geraden

Anfangskoordinaten der ersten Geraden

Endpunktkoordinaten der ersten Geraden bzw.
Anfangskoordinaten der zweiten Geraden

Endpunktkoordinaten der zweiten Geraden bzw.
Anfangskoordinaten der dritten Geraden

X4, Z4:

Endpunktkoordinaten der dritten Geraden

Hinweis

Die hier fr einen 3-Punkt-Konturzug erluterte Programmierung kann fr Konturzge mit mehr 
als drei Punkten beliebig fortgesetzt werden.

Syntax

Programmierung des Endpunkts der ersten Geraden durch Angabe der Winkel

 Ecke als bergang zwischen den Geraden:

ANG=

X Z ANG=

X Z

 Rundung als bergang zwischen den Geraden:

ANG= RND=...

X Z ANG= RND=...

X Z

 Fase als bergang zwischen den Geraden:

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

213

(cid:46)(cid:68)(cid:81)(cid:81)(cid:3)(cid:68)(cid:88)(cid:70)(cid:75)(cid:3)(cid:53)(cid:88)(cid:81)(cid:71)(cid:88)(cid:81)(cid:74)(cid:3)(cid:82)(cid:71)(cid:72)(cid:85)(cid:3)(cid:41)(cid:68)(cid:86)(cid:72)(cid:3)(cid:86)(cid:72)(cid:76)(cid:81)(cid:61)(cid:59)(cid:22)(cid:15)(cid:3)(cid:61)(cid:22)(cid:59)(cid:20)(cid:15)(cid:3)(cid:61)(cid:20)(cid:59)(cid:21)(cid:15)(cid:3)(cid:61)(cid:21)(cid:59)(cid:23)(cid:15)(cid:3)(cid:61)(cid:23)(cid:36)(cid:49)(cid:42)(cid:20)(cid:59)(cid:36)(cid:49)(cid:42)(cid:21) 
 
 
 
 
 
Grundlagen

2.9 Wegbefehle

ANG= CHR=...

X Z ANG= CHR=...

X Z

Programmierung des Endpunkts der ersten Geraden durch Angabe der Koordinaten

 Ecke als bergang zwischen den Geraden:

X Z

X Z

X Z 

 Rundung als bergang zwischen den Geraden:

X Z RND=...

X Z RND=...

X Z 

 Fase als bergang zwischen den Geraden:

X Z CHR=...

X Z CHR=...

X Z 

Bedeutung

ANG=... :

Bezeichner zur Winkel-Programmierung

Der angegebene Wert (Winkel) bezieht sich auf die Abszisse der aktiven Ar
beitsebene (Z-Achse bei G18).

RND=... :

Bezeichner zur Programmierung einer Rundung

Der angegebene Wert entspricht dem Radius der Rundung:

214

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:53)(cid:88)(cid:81)(cid:71)(cid:88)(cid:81)(cid:74)(cid:53)(cid:49)(cid:39) 
 
 
 
 
 
 
 
 
 
 
 
CHR=... :

Bezeichner zur Programmierung einer Fase

Der angegebene Wert entspricht der Breite der Fase in der Bewegungsrichtung:

Grundlagen

2.9 Wegbefehle

X... :

Z... :

Hinweis

Koordinaten in X-Richtung

Koordinaten in Z-Richtung

Weiterfhrende Informationen zur Programmierung einer Fase oder Rundung siehe " Fase, 
Rundung (CHF, CHR, RND, RNDM, FRC, FRCM) (Seite 240) ".

Beispiel

Programmcode

Kommentar

N10 X10 Z100 F1000 G18

; Anfahren der Startposition

N20 ANG=140 CHR=7.5

; Gerade mit Winkel- u. Fasenangabe

N30 X80 Z70 ANG=95.824 RND=10

; Gerade auf Zwischenpunkt mit Winkel- u. Rundungs-
angabe

N40 X70 Z50

; Gerade auf Endpunkt

2.9.8.5

Konturzge: Endpunktprogrammierung mit Winkel

Funktion

Erscheint in einem NC-Satz der Adressbuchstabe A, so drfen zustzlich keine, ein oder beide 
Achsen der aktiven Ebene programmiert sein.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

215

(cid:58)(cid:76)(cid:81)(cid:78)(cid:72)(cid:79)(cid:75)(cid:68)(cid:79)(cid:69)(cid:76)(cid:72)(cid:85)(cid:72)(cid:81)(cid:71)(cid:72)(cid:41)(cid:68)(cid:86)(cid:72)(cid:38)(cid:43)(cid:53)Grundlagen

2.9 Wegbefehle

Anzahl der programmierten Achsen

 Ist keine Achse der aktiven Ebene programmiert, so handelt es sich entweder um den 
ersten oder um den zweiten Satz eines Konturzugs, der aus zwei Stzen besteht.
Ist es der zweite Satz eines solchen Konturzugs, so bedeutet das, dass Start- und Endpunkt 
in der aktiven Ebene identisch sind. Der Konturzug besteht dann allenfalls aus einer 
Bewegung senkrecht zur aktiven Ebene.

 Ist genau eine Achse der aktiven Ebene programmiert, so handelt es sich entweder um eine 
einzelne Gerade, deren Endpunkt eindeutig aus dem Winkel und der programmierten 
kartesischen Koordinate bestimmt ist, oder um den zweiten Satz eines aus zwei Stzen 
bestehenden Konturzugs. Im zweiten Fall wird die fehlende Koordinate gleich der letzten 
erreichten (modalen) Position gesetzt.

 Sind zwei Achsen der aktiven Ebene programmiert, handelt es sich um den zweiten Satz 
eines Konturzugs, der aus zwei Stzen besteht. Ging dem aktuellen Satz kein Satz mit 
Winkelprogrammierung ohne programmierte Achsen der aktiven Ebene voraus, so ist ein 
solcher Satz nicht zulssig.

Der Winkel A darf nur bei Linear- oder Spline-Interpolation programmiert werden.

2.9.9

Gewindeschneiden

2.9.9.1

Gewindeschneiden mit konstanter Steigung (G33, SF)

Mit G33 lassen sich Gewinde mit konstanter Steigung fertigen: 

 Zylindergewinde 

 Plangewinde 

 Kegelgewinde 

216

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:21)(cid:22)(cid:20)Grundlagen

2.9 Wegbefehle

Hinweis

Technische Voraussetzung fr das Gewindeschneiden mit G33 ist eine drehzahlgeregelte 
Spindel mit Wegmesssystem.

Mehrgngige Gewinde     

Mehrgngige Gewinde (Gewinde mit versetzten Schnitten) knnen durch die Angabe eines 
Startpunktversatzes hergestellt werden. Die Programmierung erfolgt im G33-Satz unter der 
Adresse SF.

Hinweis

Falls kein Startpunktversatz angegeben ist, wird der in den Settingdaten festgelegte 
"Startwinkel fr Gewinde" verwendet.

Gewindekette   

Durch mehrere, nacheinander programmierte G33-Stze kann eine Gewindekette gefertigt 
werden:

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

217

(cid:54)(cid:87)(cid:68)(cid:85)(cid:87)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:89)(cid:72)(cid:85)(cid:86)(cid:68)(cid:87)(cid:93)(cid:3)(cid:76)(cid:81)(cid:3)(cid:114)(cid:54)(cid:87)(cid:68)(cid:85)(cid:87)(cid:90)(cid:76)(cid:81)(cid:78)(cid:72)(cid:79)(cid:3)(cid:73)(cid:190)(cid:85)(cid:3)(cid:42)(cid:72)(cid:90)(cid:76)(cid:81)(cid:71)(cid:72)(cid:3)(cid:11)(cid:54)(cid:72)(cid:87)(cid:87)(cid:76)(cid:81)(cid:74)(cid:71)(cid:68)(cid:87)(cid:88)(cid:80)(cid:12)(cid:59)(cid:61)Grundlagen

2.9 Wegbefehle

Syntax

Bedeutung

218

Hinweis

Mit Bahnsteuerbetrieb G64 werden die Stze durch vorausschauende 
Geschwindigkeitsfhrung so miteinander verbunden, dass keine Geschwindigkeitssprnge 
entstehen.

Drehrichtung des Gewindes   

Die Drehrichtung des Gewindes wird durch die Drehrichtung der Spindel bestimmt:

 Rechtslauf mit M3 erzeugt Rechtsgewinde 

 Linkslauf mit M4 erzeugt Linksgewinde 

Zylindergewinde:
G33 Z K
G33 Z K SF=

Plangewinde:
G33 X I
G33 X I SF=

Kegelgewinde:
G33 X Z K
G33 X Z K SF=
G33 X Z I
G33 X Z I SF=

G33:

Befehl zum Gewindeschneiden mit konstanter Steigung

X... Y... Z... :

Endpunkt(e) in kartesischen Koordinaten

I... :

Gewindesteigung in X-Richtung

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:21)(cid:17)(cid:3)(cid:54)(cid:68)(cid:87)(cid:93)(cid:3)(cid:80)(cid:76)(cid:87)(cid:3)(cid:42)(cid:22)(cid:22)(cid:22)(cid:17)(cid:3)(cid:54)(cid:68)(cid:87)(cid:93)(cid:3)(cid:80)(cid:76)(cid:87)(cid:3)(cid:42)(cid:22)(cid:22)(cid:20)(cid:17)(cid:3)(cid:54)(cid:68)(cid:87)(cid:93)(cid:3)(cid:80)(cid:76)(cid:87)(cid:3)(cid:42)(cid:22)(cid:22)(cid:61)(cid:59)Grundlagen

2.9 Wegbefehle

J... :

K... :

Z:

X:

Gewindesteigung in Y-Richtung

Gewindesteigung in Z-Richtung

Lngsachse

Planachse

Z... K... :

X... I... :

Gewindelnge und Gewindesteigung fr Zylindergewinde

Gewindedurchmesser und Gewindesteigung fr Plangewinde

I... oder K... :

Gewindesteigung fr Kegelgewinde

Die Angabe (I... oder K...) richtet sich nach dem Kegelwinkel:

< 45:

> 45:

= 45:

Die Gewindesteigung wird mit K... angegeben (Gewindestei
gung in Lngsrichtung).

Die Gewindesteigung wird mit I... angegeben (Gewindestei
gung in Planrichtung).

Die Gewindesteigung kann mit I... oder K... angegeben 
werden.

SF=... :

Startpunktversatz (nur notwendig bei mehrgngigen Gewinden!)

Der Startpunktversatz wird als absolute Winkelposition angegeben.

Wertebereich:

0.0000 bis 359.999 Grad

Beispiele

Beispiel 1: Zweigngiges Zylindergewinde mit Startpunktversatz 180

Programmcode

Kommentar

N10 G1 G54 X99 Z10 S500 F100 M3

; Nullpunktverschiebung, Startpunkt anfah-
ren, Spindel einschalten.

N20 G33 Z-100 K4

; Zylindergewinde: Endpunkt in Z

N30 G0 X102

N40 G0 Z10

N50 G1 X99

; Rckzug auf Startposition.

N60 G33 Z-100 K4 SF=180

; 2. Schnitt: Startpunktversatz 180

N70 G0 X110

; Werkzeug wegfahren.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

219

(cid:54)(cid:87)(cid:68)(cid:85)(cid:87)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:3)(cid:19)(cid:114)(cid:54)(cid:87)(cid:68)(cid:85)(cid:87)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:3)(cid:20)(cid:27)(cid:19)(cid:114)(cid:61)(cid:59)(cid:20)(cid:19)(cid:19)(cid:154)(cid:3)(cid:20)(cid:19)(cid:19)(cid:20)(cid:19) 
 
Grundlagen

2.9 Wegbefehle

Programmcode

N80 G0 Z10

N90 M30

Kommentar

; Programmende.

Beispiel 2: Kegelgewinde mit Winkel kleiner 45

Programmcode

Kommentar

N10 G1 X50 Z0 S500 F100 M3

; Startpunkt anfahren, Spindel einschalten.

N20 G33 X110 Z-60 K4

; Kegelgewinde: Endpunkt in X und Z, Angabe der 
Gewindesteigung mit K... in Z-Richtung (da Kegel-
winkel < 45).

N30 G0 Z0 M30

; Wegfahren, Programmende.

Weitere Informationen

Vorschub beim Gewindeschneiden mit G33

Die Steuerung errechnet aus der programmierten Spindeldrehzahl und der Gewindesteigung 
den notwendigen Vorschub, mit dem der Drehstahl ber die Gewindelnge in Lngs- und / oder 
Planrichtung verfahren wird. Der Vorschub F wird bei G33 nicht bercksichtigt, die Begrenzung 
auf maximale Achsgeschwindigkeit (Eilgang) wird von der Steuerung berwacht.

220

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:154)(cid:3)(cid:20)(cid:20)(cid:19)(cid:154)(cid:3)(cid:24)(cid:19)(cid:25)(cid:19)(cid:59)(cid:61) 
Grundlagen

2.9 Wegbefehle

Zylindergewinde 

Das Zylindergewinde wird beschrieben durch:

 Gewindelnge

 Gewindesteigung

Die Gewindelnge wird mit einer der kartesischen Koordinaten X, Y oder Z im Absolut- oder 
Kettenma eingegeben (bei Drehmaschinen vorzugsweise in Z-Richtung). Zustzlich sind 
Anlauf- und Auslaufwege zu bercksichtigen, auf denen der Vorschub hochgefahren bzw. 
reduziert wird. 

Die Gewindesteigung wird unter den Adressen I, J, K eingegeben (bei Drehmaschinen 
vorzugsweise mit K).

Plangewinde 

Das Plangewinde wird beschrieben durch:

 Gewindedurchmesser (vorzugsweise in X-Richtung)

 Gewindesteigung (vorzugsweise mit I)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

221

(cid:57)(cid:82)(cid:85)(cid:86)(cid:70)(cid:75)(cid:88)(cid:69)(cid:54)(cid:87)(cid:72)(cid:76)(cid:74)(cid:88)(cid:81)(cid:74)(cid:39)(cid:85)(cid:72)(cid:75)(cid:93)(cid:68)(cid:75)(cid:79)(cid:36)(cid:81)(cid:79)(cid:68)(cid:88)(cid:73)(cid:90)(cid:72)(cid:74)(cid:36)(cid:88)(cid:86)(cid:79)(cid:68)(cid:88)(cid:73)(cid:90)(cid:72)(cid:74)(cid:61)(cid:59)(cid:61)(cid:46)Grundlagen

2.9 Wegbefehle

Kegelgewinde 

Das Kegelgewinde wird beschrieben durch:

 Endpunkt in Lngs- und Planrichtung (Kegelkontur)

 Gewindesteigung

Die Kegelkontur wird in kartesischen Koordinaten X, Y, Z im Bezugs- oder Kettenma 
eingegeben, bei der Bearbeitung auf Drehmaschinen vorzugsweise in X- und Z-Richtung. 
Zustzlich sind Anlauf- und Auslaufwege zu bercksichtigen, auf denen der Vorschub 
hochgefahren bzw. reduziert wird.

Die Angabe fr die Steigung richtet sich nach dem Kegelwinkel (Winkel zwischen Lngsachse 
und Kegelmantel):

222

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:54)(cid:87)(cid:72)(cid:76)(cid:74)(cid:88)(cid:81)(cid:74)(cid:39)(cid:88)(cid:85)(cid:70)(cid:75)(cid:80)(cid:72)(cid:86)(cid:86)(cid:72)(cid:85)(cid:44)(cid:59)(cid:33)(cid:3)(cid:23)(cid:24)(cid:114)(cid:44)(cid:59)(cid:61)(cid:31)(cid:3)(cid:23)(cid:24)(cid:114)(cid:46)(cid:59)(cid:61)Grundlagen

2.9 Wegbefehle

2.9.9.2

Gewindeschneiden mit zu- oder abnehmender Steigung (G34, G35)

Mit den Befehlen G34 und G35 wurde die G33-Funktionalitt um die Mglichkeit erweitert, 
unter der Adresse F zustzlich eine nderung der Gewindesteigung zu programmieren. Im 
Falle von G34 fhrt das zu einer linearen Zunahme, im Falle von G35 zu einer linearen 
Abnahme der Gewindesteigung. Die Befehle G34 und G35 knnen damit zur Herstellung von 
selbstscherenden Gewinden eingesetzt werden.

Syntax

Bedeutung

Zylindergewinde mit zunehmender Steigung:
G34 Z K F...

Zylindergewinde mit abnehmender Steigung:
G35 Z K F...

Plangewinde mit zunehmender Steigung:
G34 X I F...

Plangewinde mit abnehmender Steigung:
G35 X I F...

Kegelgewinde mit zunehmender Steigung:
G34 X Z K F...
G34 X Z I F...

Kegelgewinde mit abnehmender Steigung:
G35 X Z K F...
G35 X Z I F...

G34:

G35:

Befehl zum Gewindeschneiden mit linear zunehmender Steigung

Befehl zum Gewindeschneiden mit linear abnehmender Steigung

X... Y... Z... :

Endpunkt(e) in kartesischen Koordinaten

I... :

J... :

K... :

F... :

Gewindesteigung in X-Richtung

Gewindesteigung in Y-Richtung

Gewindesteigung in Z-Richtung

Gewindesteigungsnderung

Ist die Anfangs- und Endsteigung eines Gewindes bekannt, dann kann die 
zu programmierende Gewindesteigungsnderung nach folgender Glei
chung berechnet werden:

Dabei bedeuten:

ke:

ka:
IG:

Gewindeendsteigung (Gewindesteigung der Achszielpunktkoordi
nate) [mm/U]

Gewindeanfangssteigung (unter I, J oder K programmiert) [mm/U]

Gewindelnge [mm]

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

223

(cid:78)(cid:72)(cid:21)(cid:3)(cid:16)(cid:3)(cid:78)(cid:68)(cid:21)(cid:41)(cid:3)(cid:32)(cid:3)(cid:21)(cid:3)(cid:13)(cid:3)(cid:44)(cid:42)(cid:62)(cid:3)(cid:80)(cid:80)(cid:18)(cid:56)(cid:21)(cid:3)(cid:64)Grundlagen

2.9 Wegbefehle

Beispiel

Programmcode

N1608 M3 S10

N1609 G0 G64 Z40 X216

N1610 G33 Z0 K100 SF=R14

Kommentar

; Spindel ein.

; Startpunkt anfahren.

; Gewindeschneiden mit konstanter Steigung 
(100 mm/U)

N1611 G35 Z-200 K100 F17.045455

; Steigungsabnahme: 17.0454 mm/U2

N1612 G33 Z-240 K50

; Gewindesatz ohne Ruck fahren.

Steigung am Satzende: 50mm/U

N1613 G0 X218

N1614 G0 Z40

N1615 M17

2.9.9.3

Programmierter Einlauf- und Auslaufweg bei G33, G34 und G35 (DITS, DITE)

Mit den Adressen DITS und DITE kann im Teileprogramm der Einlauf- und Auslaufweg des 
Gewindes vorgegeben werden.

Die Gewindeachse wird innerhalb des vorgegebenen Wegs beschleunigt bzw. gebremst.

 Ein- bzw. Auslaufweg, je nach Bearbeitungsrichtung

Kurzer Einlaufweg

Durch den Bund am Gewindeeinlauf ist wenig Platz fr die Werkzeug-Startrampe. 
Diese muss deshalb ber DITS krzer vorgegeben werden.

Kurzer Auslaufweg

Durch den Bund am Gewindeauslauf ist wenig Platz fr die Werkzeug-Bremsrampe, wodurch 
Kollisionsgefahr zwischen Werkstck und Schneide besteht. Die Bremsrampe kann ber DITE 
krzer vorgegeben werden. Wegen der Trgheit der Mechanik kann es dennoch zur Kollision 
kommen.

224

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:20)(cid:20)(cid:61)(cid:59) 
 
 
Grundlagen

2.9 Wegbefehle

Abhilfe: Gewinde krzer programmieren, Spindeldrehzahl reduzieren.

Hinweis

DITE wirkt am Gewindeende als berschleifabstand. Damit wird eine stofreie nderung der 
Achsbewegung erreicht.

Auswirkungen

Der programmierte Einlauf- und Auslaufweg wirkt auf die Bahn ausschlielich 
beschleunigungssteigernd. Wird einer der beiden Wege grer vorgegeben, als er fr die 
Gewindeachse mit aktiver Beschleunigung bentigt wird, wird die Gewindeachse mit 
maximaler Beschleunigung beschleunigt bzw. gebremst.

DITS=<Wert> DITE=<Wert>

DITS:

DITE:

Gewinde-Einlaufweg festlegen

Gewinde-Auslaufweg festlegen

<Wert>:

Unter DITS und DITE werden ausschlielich Wege programmiert, keine Positionen!

Der programmierte Ein-/Auslaufweg wird entsprechend der aktuellen Maeinstellung 
(Inch, metrisch) behandelt.

Syntax

Bedeutung

Beispiel

Programmcode

...

N40 G90 G0 Z100 X10 SOFT M3 S500

Kommentar

N50 G33 Z50 K5 SF=180 DITS=1 DITE=3

; berschleifbeginn bei Z=53.

N60 G0 X20

Weitere Informationen

SD42010 $SC_THREAD_RAMP_DISP

Mit dem Einwechseln eines Satzes mit DITS und/oder DITE in den Hauptlauf wird der 
programmierte Ein- bzw. Auslaufweg in das Settingdatum 
SD42010 $SC_THREAD_RAMP_DISP bernommen:

 SD42010 $SC_THREAD_RAMP_DISP[ 0 ] = programmierter Wert von DITS

 SD42010 $SC_THREAD_RAMP_DISP[ 1 ] = programmierter Wert von DITE

Wird vor oder im ersten Gewindesatz kein Ein- bzw. Auslaufweg programmiert, wird jeweils der 
aktuelle Wert des Settingdatums verwendet.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

225

 
 
 
Grundlagen

2.9 Wegbefehle

Verhalten nach Kanal-/BAG-/Programmende-Reset 

Die durch DITS und/oder DITE berschriebenen Werte von SD42010 bleiben auch nach 
einem Kanal-/BAG-/Programmende-Reset wirksam. 

Verhalten nach Warmstart

Bei einem Warmstart wird das Settingdatum auf die Werte zurckgesetzt, die vor dem 
berschreiben durch DITS und/oder DITE wirksam waren (Standardverhalten).

Sollen die mit DITS und DITE programmierten Werte dagegen auch nach einem 
Warmstart wirksam sein, muss das Settingdatum SD42010 $SC_THREAD_RAMP_DISP im 
Maschinendatum MD10710 $MN_PROG_SD_RESET_SAVE_TAB aufgelistet sein: 

MD10710 $MN_PROG_SD_RESET_SAVE_TAB[<n>] = 42010

Verhalten bei sehr kleinem Ein- und/oder Auslaufweg

Bei sehr kleinem Ein- und/oder Auslaufweg wird die Gewindeachse strker beschleunigt, als 
es die Projektierung vorsieht. Die Achse wird dann beschleunigungsmig berlastet.

Fr den Gewindeeinlauf wird dann der Alarm 22280 "Programmierter Einlaufweg zu kurz" 
gemeldet (bei entsprechender Projektierung im MD11411 $MN_ENABLE_ALARM_MASK). 
Der Alarm ist rein informativ und hat keine Auswirkungen auf die Teileprogrammabarbeitung.

2.9.9.4

Schnellrckzug whrend Gewindeschneiden (LFON, LFOF, DILF, ALF, LFTXT, LFWP, 
LFPOS, POLF, POLFMASK, POLFMLIN)

Die Funktion "Schnellrckzug whrend Gewindeschneiden (G33)" ermglicht eine 
zerstrungsfreie Unterbrechung des Gewindeschneidens in folgenden Situationen: 

 NC-Stop ausgelst ber DB21, ... DBX7.3

 NC-Stop implizit ausgelst ber Alarm

 Schalten eines schnellen Eingangs (Seite 538)

Die Rckzugsbewegung ist programmierbar ber:

 Rckzugweg und Rckzugsrichtung (relativ)

 Rckzugsposition (absolut)

Hinweis

NC-Stop-Signale 

Folgende NC-Stop-Signale lsen keinen Schnellrckzug whrend des Gewindeschneidens 
aus:

 DB21, ... DBX3.4 (NC-Stop Achsen plus Spindeln)

 DB21, ... DBX7.2 (NC-Stop an Satzgrenze)

Gewindebohren

Die Funktion "Schnellrckzug" ist beim Gewindebohren (G331 / G332) nicht anwendbar.

Syntax

226

Schnellrckzug freigeben, Rckzugsbewegung ber Rckzugweg und Rckzugsrichtung:

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Grundlagen

2.9 Wegbefehle

G33 ... LFON DILF=<Wert> LFTXT/LFWP ALF=<Wert>

Schnellrckzug freigeben, Rckzugsbewegung ber Rckzugsposition:

POLF[<Achsbezeichner>]=<Wert> LFPOS
POLFMASK/POLFMLIN(<Achsname1>,<Achsname2>,...)
G33 ... LFON

Schnellrckzug whrend Gewindeschneiden sperren:
LFOF

Bedeutung

LFON:

LFOF:

DILF= :

Schnellrckzug whrend Gewindeschneiden (G33) freigeben

Schnellrckzug whrend Gewindeschneiden (G33) sperren

Lnge des Rckzugswegs festlegen

Der durch MD-Projektierung (MD21200 $MC_LIFTFAST_DIST) voreingestellte Wert 
kann im Teileprogramm durch Programmierung von DILF verndert werden.

Hinweis:
Nach NC-RESET ist immer der projektierte MD-Wert aktiv.

LFTXT
LFWP:

Die Rckzugsrichtung wird in Verbindung mit ALF mit den G-Befehlen LFTXT 
und LFWP gesteuert.   

LFTXT:

Die Ebene, in welcher die Rckzugsbewegung ausgefhrt wird, wird aus 
der Bahntangente und der Werkzeugrichtung errechnet (Standardein
stellung). 

LFWP:

Die Ebene, in welcher die Rckzugsbewegung ausgefhrt wird, ist die 
aktive Arbeitsebene. 

ALF= :

In der Ebene der Rckzugsbewegung wird mit ALF die Richtung in diskreten Schrit
ten von Grad programmiert.

Bei LFTXT ist fr ALF=1 der Rckzug in Werkzeugrichtung festgelegt.

Bei LFWP ergibt sich die Richtung in der Arbeitsebene nach folgender Zuordnung:

 G17 (X/Y-Ebene)

ALF=1 ; Rckzug in X-Richtung
ALF=3 ; Rckzug in Y-Richtung

 G18 (Z/X-Ebene)

ALF=1 ; Rckzug in Z-Richtung
ALF=3 ; Rckzug in X-Richtung

 G19 (Y/Z-Ebene)

ALF=1 ; Rckzug in Y-Richtung

ALF=3 ; Rckzug in Z-Richtung

LFPOS:

POLFMASK:

Weitere Informationen zu den Programmiermglichkeiten mit ALF siehe Kapitel 
"Verfahrrichtung beim Schnellabheben von der Kontur  (Seite 540)".

Rckzug der mit POLFMASK oder POLFMLIN bekannt gemachten Achse auf die 
mit POLF programmierte absolute Achsposition

Freigabe der Achsen (<Achsname1>,<Achsname1>,...) fr den unabhngigen 
Rckzug auf Absolutposition

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

227

Grundlagen

2.9 Wegbefehle

Beispiele

POLFMLIN:

Freigabe der Achsen fr den Rckzug auf Absolutposition im linearen Zusammen
hang

Hinweis:
Der lineare Zusammenhang kann je nach dynamischen Verhalten aller beteiligten 
Achsen bis zum Erreichen der Abhebeposition nicht immer hergestellt werden.

POLF[]:

Absolute Rckzugsposition fr die im Index angegebene Geometrieachse bzw. Ma
schinenachse festlegen

Wirksamkeit:

modal

=<Wert>:

Bei Geometrieachsen wird der zugewiesene Wert als Position im 
Werkstckkoordinatensystem (WKS) interpretiert, bei Maschinen
achsen als Position im Maschinenkoordinatensystem (MKS).

Die Wertzuweisung ist auch als Kettenmaangabe programmier
bar:

=IC<Wert>

Bezeichner einer Geometrie- oder Maschinenachse

<Achsbezeic
hner>:

Hinweis

LFON bzw. LFOF knnen immer programmiert werden, die Auswertung erfolgt jedoch 
ausschlielich beim Gewindeschneiden (G33).

Hinweis

POLF mit POLFMASK/POLFMLIN sind nicht auf den Einsatz bei Gewindeschneiden 
beschrnkt.

Beispiel 1: Schnellrckzug whrend Gewindeschneiden freigeben

Programmcode

N55 M3 S500 G90 G18

...

Kommentar

; Aktive Bearbeitungsebene

; Anfahren der Startposition

N65 MSG ("Gewindeschneiden")

; Zustellen des Werkzeugs

MM_THREAD:

N67 $AC_LIFTFAST=0

N68 G0 Z5

N68 X10

; Vor Beginn des Gewindes zurcksetzen.

N70 G33 Z30 K5 LFON DILF=10 LFWP ALF=7

; Schnellrckzug whrend Gewindeschnei-
den freigeben.

N71 G33 Z55 X15

N72 G1

Rckzugsweg=10mm

Rckzugsebene: Z/X (wegen G18)

Rckzugsrichtung: -X

(mit ALF=3: Rckzugsrichtung +X)

; Gewindeschneiden abwhlen.

228

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Grundlagen

2.9 Wegbefehle

Programmcode

Kommentar

N69 IF $AC_LIFTFAST GOTOB MM_THREAD

; Wenn Gewindeschneiden unterbrochen 
wurde.

N90 MSG("")

...

N70 M30

Beispiel 2: Schnellrckzug vor Gewindebohren ausschalten

Programmcode

Kommentar

N55 M3 S500 G90 G0 X0 Z0

...

N87 MSG ("Gewindebohren")

N88 LFOF

N89 CYCLE...

N90 MSG ("")

...

N99 M30

; Schnellrckzug vor Gewindebohren ausschalten.

; Gewindebohrzyklus mit G33.

Beispiel 3: Schnellrckzug auf absolute Rckzugsposition

Bei einem Stopp wird die Bahninterpolation von X unterdrckt und stattdessen eine Bewegung 
mit max. Geschwindigkeit auf die Position POLF[X] interpoliert. Die Bewegung der anderen 
Achsen wird weiterhin durch die programmierte Kontur bzw. die Gewindesteigung und die 
Spindeldrehzahl bestimmt.

Programmcode

Kommentar

N10 G0 G90 X200 Z0 S200 M3

N20 G0 G90 X170

N22 POLF[X]=210 LFPOS

N23 POLFMASK(X)

N25 G33 X100 I10 LFON

N30 X135 Z-45 K10

N40 X155 Z-128 K10

N50 X145 Z-168 K10

N55 X210 I10

N60 G0 Z0 LFOF

N70 POLFMASK()

M30

; Aktivieren (Freigeben) des Schnellabhebens von 
der Achse X.

; Abheben fr alle Achsen sperren.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

229

Grundlagen

2.9 Wegbefehle

2.9.9.5

Ballige Gewinde (G335, G336)

Mit den G-Befehlen G335 und G336 besteht die Mglichkeit, ballige (= von der zylindrischen 
Form abweichende) Gewinde zu drehen. Anwendung ist die Bearbeitung extrem groer 
Bauteile, die durch ihr Eigengewicht in der Maschine durchhngen. Achsparallele Gewinde 
wrden dazu fhren, dass der Gewindegang in der Mitte des Bauteils zu gering ist. Mit den 
balligen Gewinden kann dies ausgeglichen werden. 

Bild 2-6

Drehen eines balligen Gewindes

Programmierung

Das Drehen balliger Gewinde wird mit G335 oder G336 programmiert: 

G335:

G336:

Drehen eines balligen Gewindes auf einer im Uhrzeigersinn verlaufenden kreisfrmigen 
Werkzeugbahn

Drehen eines balligen Gewindes auf einer gegen den Uhrzeigersinn verlaufenden kreisfr
migen Werkzeugbahn

Die Programmierung erfolgt zunchst wie bei einem linearen Gewinde ber die Angabe der 
axialen Satzendpunkte und der Steigung ber die Parameter I, J, und K (siehe 
"Gewindeschneiden mit konstanter Steigung (G33, SF) (Seite 216)").

Zustzlich wird noch ein Kreisbogen mit angegeben. Dieser kann wie bei G2/G3 ber die 
Mittelpunkt-, Radius-, ffnungswinkel- oder Zwischenpunktangabe programmiert werden 
(siehe "Kreisinterpolation (Seite 188)"). Bei Programmierung des balligen Gewindes mit 
Mittelpunktprogrammierung ist dabei Folgendes zu beachten: Da I, J, und K bei 
Gewindeschneiden fr die Steigung benutzt werden, mssen die Kreisparameter bei 
Mittelpunktprogrammierung mit IR=..., JR=... und KR=... programmiert werden.

IR=...:

JR=...:

KR=...:

Kartesische Koordinate fr den Kreismittelpunkt in X-Richtung

Kartesische Koordinate fr den Kreismittelpunkt in Y-Richtung

Kartesische Koordinate fr den Kreismittelpunkt in Z-Richtung

230

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:42)(cid:72)(cid:90)(cid:76)(cid:81)(cid:71)(cid:72)(cid:71)(cid:85)(cid:72)(cid:75)(cid:80)(cid:72)(cid:76)(cid:86)(cid:72)(cid:79)(cid:78)(cid:85)(cid:72)(cid:76)(cid:86)(cid:73)(cid:184)(cid:85)(cid:80)(cid:76)(cid:74)(cid:72)(cid:3)(cid:58)(cid:72)(cid:85)(cid:78)(cid:93)(cid:72)(cid:88)(cid:74)(cid:69)(cid:68)(cid:75)(cid:81)(cid:79)(cid:68)(cid:81)(cid:74)(cid:72)(cid:86)(cid:15)(cid:3)(cid:71)(cid:88)(cid:85)(cid:70)(cid:75)(cid:75)(cid:166)(cid:81)(cid:74)(cid:72)(cid:81)(cid:71)(cid:72)(cid:86)(cid:3)(cid:58)(cid:72)(cid:85)(cid:78)(cid:86)(cid:87)(cid:190)(cid:70)(cid:78)(cid:61)Grundlagen

2.9 Wegbefehle

Hinweis

IR, JR und KR sind die Standardwerte der ber Maschinendatum 
(MD10651 $MN_IPO_PARAM_THREAD_NAME_TAB) einstellbaren Namen der 
Interpolationsparameter fr ballige Gewinde.   

Abweichungen von diesen Standardwerten sind den Angaben des Maschinenherstellers zu 
entnehmen!

Optional kann noch ein Startpunktversatz SF mit angegeben werden (siehe 
"Gewindeschneiden mit konstanter Steigung (G33, SF) (Seite 216)").

Syntax

Die Syntax zur Programmierung eines balligen Gewindes hat also folgende allgemeine Form:
G335/G336 <Achszielpunktkoordinate(n)> <Steigung> <Kreisbogen> 
[<Startpunktversatz>]

Beispiele

Beispiel 1: Balliges Gewinde im Uhrzeigersinn mit End- und Mittelpunktprogrammierung

Programmcode

N5 G0 G18 X50 Z50

N10 G335 Z100 K=3.5 KR=25 IR=-20 SF=90

Kommentar

; Anfangspunkt anfahren.

; Balliges Gewinde im Uhrzeiger-
sinn drehen.

Bild 2-7

Balliges Gewinde im Uhrzeigersinn mit End- und Mittelpunktprogrammierung

Beispiel 2: Balliges Gewinde gegen den Uhrzeigersinn mit End- und 
Mittelpunktprogrammierung

Programmcode

N5 G0 G18 X50 Z50

Kommentar

; Anfangspunkt anfahren.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

231

(cid:36)(cid:81)(cid:73)(cid:68)(cid:81)(cid:74)(cid:86)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:40)(cid:81)(cid:71)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:48)(cid:76)(cid:87)(cid:87)(cid:72)(cid:79)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:91)(cid:24)(cid:19)(cid:22)(cid:19)(cid:93)(cid:20)(cid:19)(cid:19)(cid:46)(cid:53)(cid:46)(cid:44)(cid:53)(cid:26)(cid:24)Grundlagen

2.9 Wegbefehle

Programmcode

Kommentar

N10 G336 Z100 K=3.5 KR=25 IR=20 SF=90

; Balliges Gewinde gegen den Uhr-
zeigersinn drehen.

Bild 2-8

Balliges Gewinde gegen den Uhrzeigersinn mit End- und Mittelpunktprogrammierung

Beispiel 3: Balliges Gewinde im Uhrzeigersinn mit Endpunkt- und Radiusprogrammierung

Programmcode

N5 G0 G18 X50 Z50

N10 G335 Z100 K=3.5 CR=32 SF=90

Bild 2-9

Balliges Gewinde im Uhrzeigersinn mit Endpunkt- und Radiusprogrammierung

232

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:36)(cid:81)(cid:73)(cid:68)(cid:81)(cid:74)(cid:86)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:40)(cid:81)(cid:71)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:48)(cid:76)(cid:87)(cid:87)(cid:72)(cid:79)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:91)(cid:24)(cid:19)(cid:26)(cid:19)(cid:93)(cid:20)(cid:19)(cid:19)(cid:46)(cid:53)(cid:46)(cid:44)(cid:53)(cid:26)(cid:24)(cid:24)(cid:19)(cid:36)(cid:81)(cid:73)(cid:68)(cid:81)(cid:74)(cid:86)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:40)(cid:81)(cid:71)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:48)(cid:76)(cid:87)(cid:87)(cid:72)(cid:79)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:91)(cid:24)(cid:19)(cid:93)(cid:20)(cid:19)(cid:19)(cid:38)(cid:53)(cid:46)(cid:24)(cid:19) 
 
 
Grundlagen

2.9 Wegbefehle

Beispiel 4: Balliges Gewinde im Uhrzeigersinn mit Endpunkt- und 
ffnungswinkelprogrammierung

Programmcode

N5 G0 G18 X50 Z50

N10 G335 Z100 K=3.5 AR=102.75 SF=90

Bild 2-10

Balliges Gewinde im Uhrzeigersinn mit Endpunkt- und ffnungswinkelprogrammierung

Beispiel 5: Balliges Gewinde im Uhrzeigersinn mit Mittelpunkt- und 
ffnungswinkelprogrammierung

Programmcode

N5 G0 G18 X50 Z50

N10 G335 K=3.5 KR=25 IR=-20 AR=102.75 SF=90

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

233

(cid:36)(cid:81)(cid:73)(cid:68)(cid:81)(cid:74)(cid:86)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:40)(cid:81)(cid:71)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:48)(cid:76)(cid:87)(cid:87)(cid:72)(cid:79)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:91)(cid:24)(cid:19)(cid:93)(cid:20)(cid:19)(cid:19)(cid:36)(cid:53)(cid:46)(cid:24)(cid:19)(cid:36)(cid:81)(cid:73)(cid:68)(cid:81)(cid:74)(cid:86)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:40)(cid:81)(cid:71)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:48)(cid:76)(cid:87)(cid:87)(cid:72)(cid:79)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:91)(cid:24)(cid:19)(cid:93)(cid:26)(cid:24)(cid:36)(cid:53)(cid:46)(cid:53)(cid:44)(cid:53)(cid:46)(cid:24)(cid:19) 
 
 
 
 
 
Grundlagen

2.9 Wegbefehle

Bild 2-11

Balliges Gewinde im Uhrzeigersinn mit Mittelpunkt- und ffnungswinkelprogrammierung

Beispiel 6: Balliges Gewinde im Uhrzeigersinn mit End- und Zwischenpunktprogrammierung

Programmcode

N5 G0 G18 X50 Z50

N10 G335 Z100 K=3.5 I1=60 K1=64

Bild 2-12

Balliges Gewinde im Uhrzeigersinn mit End- und Zwischenpunktprogrammierung

Weitere Informationen

Erlaubte Kreisbogenbereiche

Der unter G335/G336 programmierte Kreisbogen muss in einem Bereich liegen, in dem die 
spezifizierte Gewindehauptachse (I, J oder K) ber den gesamten Kreisbogen den 
Hauptachsanteil am Kreisbogen hat:

Erlaubte Bereiche fr die Z-Achse (Steigung mit K 
programmiert)

Erlaubte Bereiche fr die X-Achse (Steigung mit I 
programmiert)

Ein Wechsel der Gewindehauptachse, wie im folgenden Bild dargestellt, ist nicht erlaubt: 

234

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:36)(cid:81)(cid:73)(cid:68)(cid:81)(cid:74)(cid:86)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:40)(cid:81)(cid:71)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:61)(cid:90)(cid:76)(cid:86)(cid:70)(cid:75)(cid:72)(cid:81)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:48)(cid:76)(cid:87)(cid:87)(cid:72)(cid:79)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:91)(cid:24)(cid:19)(cid:93)(cid:20)(cid:19)(cid:19)(cid:46)(cid:46)(cid:20)(cid:44)(cid:20)(cid:24)(cid:19)(cid:61)(cid:59)(cid:23)(cid:24)(cid:114)(cid:61)(cid:59)(cid:23)(cid:24)(cid:114) 
 
 
Grundlagen

2.9 Wegbefehle

Bild 2-13

Ballige Gewinde: Nicht erlaubter Bereich 

Frames

Auch bei aktiven Frames ist G335 und G336 mglich. Es ist allerdings darauf zu achten, dass 
im Basiskoordinatensystem (BKS) die erlaubten Kreisbogenbereiche eingehalten werden.

Randbedingungen zur Kreisprogrammierung

Fr die Kreisprogrammierung unter G335/G336 gelten die bei der Kreisprogrammierung mit 
G2/G3 beschriebenen Randbedingungen (siehe "Kreisinterpolation (Seite 188)").

2.9.10

Gewindebohren ohne Ausgleichsfutter

2.9.10.1

Gewindebohren ohne Ausgleichsfutter und Rckzugsbewegung  (G331, G332)

Beim Gewindebohren ohne Ausgleichsfutter werden mit den Befehlen G331 und G332 
folgenden Verfahrbewegungen ausgefhrt:

 G331: Gewindebohren in Bohrrichtung bis zum Gewindeendpunkt

 G332: Rckzugsbewegung zum Gewindebohrsatz G331 mit automatischer 

Spindeldrehrichtungsumkehr

Syntax

Bedeutung

G331 <Achse> <Gewindesteigung>
G331 <Achse> <Gewindesteigung> S...
G332 <Achse> <Gewindesteigung>

G331:

Gewindebohren 

Die Gewindebohrung wird beschrieben durch die Verfahrbewegung der Ach
se (Bohrtiefe) und die Gewindesteigung.

Wirksamkeit:

modal

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

235

(cid:36)(cid:81)(cid:73)(cid:68)(cid:81)(cid:74)(cid:86)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:40)(cid:81)(cid:71)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:61)(cid:59)(cid:23)(cid:24)(cid:114)Grundlagen

2.9 Wegbefehle

G332:

Rckzugsbewegung des Gewindebohrens

Die Rckzugsbewegung muss mit derselben Steigung ausgefhrt werden 
wie das Gewindebohren (G331). Die Richtungsumkehr der Spindel erfolgt 
automatisch.

Wirksamkeit:

modal

<Achse>:

Verfahrweg/position der Geometrieachse (X, Y oder Z) zum Gewindeend
punkt, z. B. Z50

<Gewindesteigung>:

Gewindesteigung I (X), J (Y) oder K (Z):

 Positive Steigung: Rechtsgewinde, z. B. K1,25

 Negative Steigung: Linksgewinde, z. B. K-1,25

Wertebereich:

0.001 bis 2000.00 mm/Umdrehung

S...:

Spindeldrehzahl

Ist keine Spindeldrehzahl angegeben, wird mit der zuletzt wirksamen Spin
deldrehzahl verfahren.

Hinweis

Zweiter Getriebestufen-Datensatz

Um beim Gewindebohren eine effektive Anpassung von Spindeldrehzahl und Motormoment zu 
erreichen und schneller beschleunigen zu knnen, kann in achsspezifischen Maschinendaten 
abweichend vom ersten Getriebestufen-Datensatz und auch unabhngig von diesen 
Drehzahlschaltschwellen ein zweiter Getriebestufen-Datensatz fr zwei weitere projektierbare 
Schaltschwellen (Maximaldrehzahl und Minimaldrehzahl) voreingestellt sein. Die Vorgaben 
des Maschinenherstellers sind zu beachten.

Weitere Informationen siehe Funktionshandbuch "Achsen und Spindeln".

Beispiele

 Beispiel: Gewindebohren mit G331 / G332 (Seite 236)

 Beispiel: Programmierte Bohrdrehzahl in der aktuellen Getriebestufe ausgeben (Seite 237)

 Beispiel: Anwendung des zweiten Getriebestufen-Datensatzes (Seite 237)

 Beispiel: Keine Drehzahlprogrammierung, berwachung der Getriebestufe (Seite 238)

 Beispiel: Getriebestufenwechsel nicht mglich, berwachung der Getriebestufe (Seite 238)

 Beispiel: Programmierung ohne SPOS (Seite 239)

2.9.10.2

Beispiel: Gewindebohren mit G331 / G332

Programmcode

N10 SPOS[n]=0

Kommentar

; Spindel: Lageregelbetrieb

; Startposition 0 Grad

N20 G0 X0 Y0 Z2

; Achsen: Startposition anfahren

236

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
Programmcode

N30 G331 Z-50 K-4 S200

N40 G332 Z3 K-4

Grundlagen

2.9 Wegbefehle

Kommentar

; Gewindebohren in Z,

; Steigung K-4 negativ =>

; Spindeldrehrichtung: Linkslauf,

; Spindeldrehzahl 200 U/min

; Rckzugsbewegung in Z,

; Steigung K-4 negativ (Linkslauf),

; autom. Drehrichtungsumkehr =>

; Spindeldrehrichtung Rechtslauf

N50 G1 F1000 X100 Y100 Z100 S300 M3

; Spindel im Spindelbetrieb.

2.9.10.3

Beispiel: Programmierte Bohrdrehzahl in der aktuellen Getriebestufe ausgeben

Programmcode

N05 M40 S500

...

N55 SPOS=0

Kommentar

; programmierte Spindeldrehzahl: 500 U/min =>

; Getriebestufe 1 (20 bis 1028 U/min)

; Spindel positionieren

N60 G331 Z-10 K5 S800

; Gewindebohren

; Spindeldrehzahl 800 U/min => Getriebestufe 1

Die zur programmierten Spindeldrehzahl S500 passende Getriebestufe bei M40 wird aus dem 
ersten Getriebestufen-Datensatz ermittelt. Die programmierte Bohrdrehzahl S800 wird in der 
aktuellen Getriebestufe ausgegeben und ist gegebenenfalls auf die Maximaldrehzahl der 
Getriebestufe begrenzt. Ein automatischer Getriebestufenwechsel nach erfolgtem SPOS ist 
nicht mglich. Die Voraussetzung fr den automatischen Getriebestufenwechsel ist der 
Drehzahlsteuerbetrieb der Spindel.

Hinweis

Soll bei einer Spindeldrehzahl von 800 U/min die Getriebestufe 2 angewhlt werden, mssen 
die Schaltschwellen fr die Maximal- und Minimaldrehzahl hierfr in den betreffenden 
Maschinendaten des zweiten Getriebestufen-Datensatzes projektiert sein (siehe 
nachfolgende Beispiele).

2.9.10.4

Beispiel: Anwendung des zweiten Getriebestufen-Datensatzes

Die Schaltschwellen des zweiten Getriebestufen-Datensatzes fr die Maximaldrehzahl und 
Minimaldrehzahl werden bei G331/G332 und Programmierung eines S-Werts fr die aktive 
Masterspindel ausgewertet. Automatischer Getriebestufenwechsel M40 muss aktiv sein. Die 
so ermittelte Getriebestufe wird mit der aktiven Getriebestufe verglichen. Besteht zwischen 
beiden ein Unterschied, wird ein Getriebestufenwechsel ausgefhrt.

Programmcode

N05 M40 S500

...

Kommentar

; programmierte Spindeldrehzahl: 500 U/min

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

237

 
 
Grundlagen

2.9 Wegbefehle

Programmcode

Kommentar

N50 G331 S800

; Masterspindel: Getriebestufe 2 wird angewhlt

N55 SPOS=0

; Spindel positionieren

N60 G331 Z-10 K5

; Gewindebohren

; Spindel-Beschleunigung aus Getriebestufen-Datensatz 2

2.9.10.5

Beispiel: Keine Drehzahlprogrammierung, berwachung der Getriebestufe

Wird bei Anwendung des zweiten Getriebestufen-Datensatzes mit G331 keine Drehzahl 
programmiert, wird das Gewinde mit der zuletzt programmierten Drehzahl gefertigt. Ein 
Getriebestufenwechsel erfolgt nicht. In diesem Fall wird jedoch berwacht, dass die zuletzt 
programmierte Drehzahl im vorgegebenen Drehzahlbereich (Schaltschwellen fr die Maximal- 
und Minimaldrehzahl) der aktiven Getriebestufe liegt. Anderenfalls wird Alarm 16748 
angezeigt.

Programmcode

N05 M40 S800

...

Kommentar

; programmierte Spindeldrehzahl: 800 U/min

N55 SPOS=0

; Spindel positionieren

N60 G331 Z-10 K5

; Gewindebohren

; berwachung der Spindeldrehzahl 800 U/min 

; Getriebestufen 1 ist aktiv

; Getriebestufe 2 msste aktiv sein => Alarm 16748

2.9.10.6

Beispiel: Getriebestufenwechsel nicht mglich, berwachung der Getriebestufe

Wird bei Anwendung des zweiten Getriebestufen-Datensatzes im G331-Satz zustzlich zur 
Geometrie die Spindeldrehzahl programmiert, dann kann, falls die Drehzahl nicht im 
vorgegebenen Drehzahlbereich (Schaltschwellen fr die Maximal- und Minimaldrehzahl) der 
aktiven Getriebestufe liegt, kein Getriebestufenwechsel durchgefhrt werden, weil dann die 
Bahnbewegung von Spindel und Zustellachse(n) nicht eingehalten werden wrde.

Wie im vorhergehenden Beispiel werden im G331-Satz die Drehzahl und die Getriebestufe 
berwacht und gegebenenfalls der Alarm 16748 angezeigt.

Programmcode

N05 M40 S500

...

N55 SPOS=0

Kommentar

; programmierte Spindeldrehzahl: 500 U/min =>

; Getriebestufe 1

; Spindel positionieren

N60 G331 Z-10 K5 S800

; Gewindebohren

; Getriebestufenwechsel nicht mglich, 

; berwachung der Spindeldrehzahl 800 U/min

; mit Getriebestufen-Datensatz 1: Getriebestufe 2 

; msste aktiv sein => Alarm 16748

238

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
2.9.10.7

Beispiel: Programmierung ohne SPOS

Grundlagen

2.9 Wegbefehle

Programmcode

N05 M40 S500

...

Kommentar

; programmierte Spindeldrehzahl: 500 U/min =>

; Getriebestufe 1 (20 bis 1028 U/min)

N50 G331 S800

; Masterspindel: Getriebestufe 2 wird angewhlt

N60 G331 Z-10 K5

; Gewindebohren

; Spindel-Beschleunigung aus Getriebestufen-Datensatz 2

Die Gewindeinterpolation fr die Spindel beginnt von der aktuellen Position, die von dem zuvor 
abgearbeiteten Teileprogrammbereich abhngig ist, z. B. wenn ein Getriebestufenwechsel 
ausgefhrt wurde. Eine Nachbearbeitung des Gewindes ist deshalb ggf. nicht mglich.

Hinweis

Es ist darauf zu achten, dass bei der Bearbeitung mit mehreren Spindeln die Bohrspindel auch 
Masterspindel sein muss. Durch die Programmierung von SETMS(<Spindelnummer>) kann 
die Bohrspindel zur Masterspindel gemacht werden.

2.9.11

Gewindebohren mit Ausgleichsfutter

2.9.11.1

Gewindebohren mit Ausgleichsfutter und Rckzugsbewegung (G63)

Beim Gewindebohren mit Ausgleichsfutter werden mit dem Befehl G63 folgenden 
Verfahrbewegungen ausgefhrt:

 G63: Gewindebohren in Bohrrichtung bis zum Gewindeendpunkt

 G63: Rckzugsbewegung mit programmierter Spindeldrehrichtungsumkehr

Hinweis

Nach einem G63 -Satz wird wieder die zuletzt wirksame Interpolationsart G0, G1, G2 aktiv.

Syntax

Bedeutung

G63 <Achse> <Drehrichtung> <Drehzahl> <Vorschub>

G63:

Gewindebohren mit Ausgleichsfutter

Wirksamkeit:

satzweise

<Achse>:

Verfahrweg/position der Geometrieachse (X, Y oder Z) zum Gewindeend
punkt, z. B. Z50

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

239

 
Grundlagen

2.9 Wegbefehle

Beispiel

<Drehrichtung>:

Spindeldrehrichtung:

 M3: Drehrichtung im Uhrzeigersinn, Rechtsgewinde

 M4: Drehrichtung gegen den Uhrzeigersinn, Linksgewinde

<Drehzahl>:

Maximale whrend des Gewindebohrens zulssige Spindeldrehzahl, z. B. 
S100

<Vorschub>:

Vorschub der Bohrachse F, mit F = Spindeldrehzahl * Gewindesteigung

Bohren eines M5-Gewindes:

 Gewindesteigung nach Norm: 0,8 mm/U

 Spindeldrehzahl S: 200 U/min 

 Vorschub F = 200 U/min * 0,8 mm/U = 160 mm/min.

Programmcode

Kommentar

N10 G1 X0 Y0 Z2 F1000 S200 M3

; Startpunkt anfahren

N20 G63 Z-50 F160

; Gewindebohren mit Ausgleichsfutter

; Spindel im Uhrzeigersinn, 200 U/min

N30 G63 Z3 M4

; Rckzugsbewegung: absolut Z=3mm

; Bohrtiefe: absolut Z=50mm

; Vorschub: 160 mm/min

; Drehrichtungsumkehr

; Spindel gegen den Uhrzeigersinn, 200 U/min

2.9.12

Fase, Rundung (CHF, CHR, RND, RNDM, FRC, FRCM)

Konturecken innerhalb der aktiven Arbeitsebene knnen als Rundung oder Fase ausgefhrt 
werden.

Zur Optimierung der Oberflchengte kann fr das Anfasen/Verrunden ein eigener Vorschub 
programmiert werden. Wird kein Vorschub programmiert, wirkt der normale Bahnvorschub F.

Mit der Funktion "Modales Verrunden" knnen mehrere Konturecken hintereinander 
gleichartig verrundet werden.

Syntax

240

Konturecke anfasen:
G... X... Z... CHR/CHF=<Wert> FRC/FRCM=<Wert>
G... X... Z...

Konturecke verrunden:
G... X... Z... RND=<Wert> FRC=<Wert>
G... X... Z...

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Bedeutung

Grundlagen

2.9 Wegbefehle

Modales Verrunden:

G... X... Z... RNDM=<Wert> FRCM=<Wert>

...

RNDM=0

Hinweis

Die Technologie (Vorschub, Vorschubtyp, M-Befehle ...) fr das Anfasen/Verrunden wird 
abhngig von der Einstellung von Bit 0 im Maschinendatum 
MD20201 $MC_CHFRND_MODE_MASK (Verhalten Fase/Rundung) entweder vom 
Vorgnger- oder vom Nachfolgersatz abgeleitet. Empfohlene Einstellung ist die Ableitung aus 
dem Vorgngersatz (Bit 0 = 1).

CHF= :

Konturecke anfasen 

<Wert>:

Lnge der Fase (Maeinheit entsprechend G70/G71)

CHR= :

Konturecke anfasen

<Wert>:

Breite der Fase in der ursprnglichen Bewegungsrichtung (Maeinheit 
entsprechend G70/G71)

RND= :

Konturecke verrunden

<Wert>:

Radius der Rundung (Maeinheit entsprechend G70/G71)

RNDM= :

Modales Verrunden (mehrere aufeinanderfolgende Konturecken gleichartig verrunden)

<Wert>:

Radius der Rundungen (Maeinheit entsprechend G70/G71)

Mit RNDM=0 wird das modale Verrunden ausgeschaltet.

FRC= :

Satzweise wirksamer Vorschub fr Anfasen/Verrunden

<Wert>:

Vorschubgeschwindigkeit in mm/min (bei aktivem G94) bzw. mm/Umdr 
(bei aktivem G95)

FRCM= :

Modal wirksamer Vorschub fr Anfasen/Verrunden

<Wert>:

Vorschubgeschwindigkeit in mm/min (bei aktivem G94) bzw. mm/Umdr 
(bei aktivem G95)

Mit FRCM=0 wird der modal wirksame Vorschub fr Anfasen/Verrunden 
ausgeschaltet und der unter F programmierte Vorschub ist aktiv. 

Hinweis

Fase/Rundung zu gro

Sind die programmierten Werte fr Fase (CHF/CHR) oder Rundung (RND/RNDM) fr die 
beteiligten Konturelemente zu gro, werden Fase oder Rundung automatisch angepasst:

1. Falls MD11411 $MN_ENABLE_ALARM_MASK Bit 4 gesetzt ist, wird Alarm 10833 "Fase 

oder Rundung muss verkrzt werden" ausgegeben (Cancel-Alarm).

2. Die Fase/Rundung wird soweit verkleinert, dass sie in die Konturecke passt. Dabei entsteht 
mindestens ein Satz ohne Bewegung. An diesem Satz kommt die Bewegung notwendig 
zum Stehen.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

241

 
 
 
Grundlagen

2.9 Wegbefehle

Hinweis

Fase/Rundung nicht mglich

Keine Fase/Rundung wird eingefgt, wenn:

 keine Geraden- oder Kreiskontur in der Ebene vorhanden ist.

 eine Bewegung auerhalb der Ebene stattfindet.

 ein Wechsel der Ebene vorgenommen wird.

 eine im Maschinendatum festgelegte Anzahl von Stzen, die keine Informationen zum 

Verfahren enthalten (z. B. nur Befehlsausgaben), berschritten wird.

Hinweis

FRC/FRCM

FRC/FRCM wirkt nicht, wenn eine Fase mit G0 verfahren wird; die Programmierung ist 
entsprechend dem F-Wert ohne Fehlermeldung mglich.

FRC ist nur wirksam, wenn im Satz eine Fase/Rundung programmiert ist bzw. RNDM aktiviert 
wurde.

FRC berschreibt im aktuellen Satz den F- bzw. FRCM-Wert.

Der unter FRC programmierte Vorschub muss grer Null sein.

FRCM=0 aktiviert fr das Anfasen/Verrunden den unter F programmierten Vorschub.

Ist FRCM programmiert, muss quivalent zu F der FRCM-Wert bei Wechsel G94  G95 usw. 
neu programmiert werden. Wird nur F neu programmiert und ist vor dem Wechsel des 
Vorschubtyps FRCM > 0, dann erfolgt eine Fehlermeldung.

Beispiele

Beispiel 1: Anfasen zwischen zwei Geraden

 MD20201 Bit 0 = 1 (Ableitung aus dem 

Vorgngersatz)

 G71 ist aktiv.

 Die Breite der Fase in der Bewegungsrich
tung (CHR) soll 2 mm, der Vorschub fr 
das Anfasen 100 mm/min betragen.

Die Programmierung kann auf zwei Arten erfolgen:

 Programmierung mit CHR

242

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:41)(cid:68)(cid:86)(cid:72)(cid:58)(cid:76)(cid:81)(cid:78)(cid:72)(cid:79)(cid:75)(cid:68)(cid:79)(cid:69)(cid:76)(cid:72)(cid:85)(cid:72)(cid:81)(cid:71)(cid:72)(cid:93)(cid:17)(cid:3)(cid:37)(cid:17)(cid:3)(cid:42)(cid:20)(cid:27)(cid:29)(cid:734)(cid:38)(cid:43)(cid:41)(cid:42)(cid:20)(cid:38)(cid:43)(cid:53)(cid:42)(cid:20)(cid:61)(cid:59)Programmcode

...

N30 G1 Z CHR=2 FRC=100

N40 G1 X

...

 Programmierung mit CHF

Programmcode

...

N30 G1 Z CHF=2(cos*2) FRC=100

N40 G1 X

...

Beispiel 2: Verrunden zwischen zwei Geraden

Grundlagen

2.9 Wegbefehle

 MD20201 Bit 0 = 1 (Ableitung aus dem 

Vorgngersatz)

 G71 ist aktiv.

 Der Radius der Rundung soll 2 mm, der 
Vorschub fr das Verrunden 50 mm/min 
betragen.

Programmcode

...

N30 G1 Z RND=2 FRC=50

N40 G1 X

...

Beispiel 3: Verrunden zwischen Gerade und Kreis

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

243

(cid:53)(cid:88)(cid:81)(cid:71)(cid:88)(cid:81)(cid:74)(cid:93)(cid:17)(cid:3)(cid:37)(cid:17)(cid:3)(cid:42)(cid:20)(cid:27)(cid:29)(cid:53)(cid:49)(cid:39)(cid:3)(cid:32)(cid:3)(cid:17)(cid:17)(cid:17)(cid:61)(cid:59)(cid:42)(cid:20)(cid:42)(cid:20) 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Grundlagen

2.9 Wegbefehle

Zwischen Linear- und Kreiskonturen in beliebigen Kombinationen kann durch die Funktion 
RND mit tangentialem Anschluss ein Kreiskonturelement eingefgt werden.

 MD20201 Bit 0 = 1 (Ableitung aus dem 

Vorgngersatz)

 G71 ist aktiv.

 Der Radius der Rundung soll 2 mm, der 
Vorschub fr das Verrunden 50 mm/min 
betragen.

Programmcode

...

N30 G1 Z RND=2 FRC=50

N40 G3 X Z I K

...

Beispiel 4: Modales Verrunden zum Entgraten scharfer Werkstckkanten

Programmcode

...

Kommentar

N30 G1 X Z RNDM=2 FRCM=50

; Modales Verrunden einschalten.

N40...

N120 RNDM=0

...

Radius der Rundung: 2mm

Vorschub fr das Verrunden: 50 mm/min

; Modales Verrunden ausschalten.

Beispiel 5: Technologie vom Nachfolgesatz oder Vorgngersatz bernehmen

 MD20201 Bit 0 = 0: Ableitung aus dem Nachfolgesatz (Standardeinstellung!)

Programmcode

Kommentar

N10 G0 X0 Y0 G17 F100 G94

N20 G1 X10 CHF=2

N30 Y10 CHF=4

; Fase N20-N30 mit F=100 mm/min

; Fase N30-N40 mit FRC=200 mm/min

N40 X20 CHF=3 FRC=200

; Fase N40-N60 mit FRCM=50 mm/min

N50 RNDM=2 FRCM=50

244

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:93)(cid:17)(cid:3)(cid:37)(cid:17)(cid:3)(cid:42)(cid:20)(cid:27)(cid:29)(cid:53)(cid:88)(cid:81)(cid:71)(cid:88)(cid:81)(cid:74)(cid:61)(cid:59)(cid:42)(cid:20)(cid:53)(cid:49)(cid:39)(cid:3)(cid:32)(cid:3)(cid:17)(cid:17)(cid:17)(cid:42)(cid:22) 
 
 
 
 
 
 
 
 
 
Grundlagen

2.9 Wegbefehle

Programmcode

N60 Y20

N70 X30

Kommentar

; Modale Rundung N60-N70 mit FRCM=50 mm/min

; Modale Rundung N70-N80 mit FRCM=50 mm/min

N80 Y30 CHF=3 FRC=100

; Fase N80-N90 mit FRC=100 mm/min

N90 X40

N100 Y40 FRCM=0

N110 S1000 M3

N120 X50 G95 F3 FRC=1

...

M02

; Modale Rundung N90-N100 mit F=100 mm/min (Ab-
wahl FRCM)

; Modale Rundung N100-N120 mit G95 FRC=1 mm/Umdr

 MD20201 Bit 0 = 1: Ableitung aus dem Vorgngersatz (empfohlenen Einstellung!)

Programmcode

Kommentar

N10 G0 X0 Y0 G17 F100 G94

N20 G1 X10 CHF=2

N30 Y10 CHF=4 FRC=120

N40 X20 CHF=3 FRC=200

N50 RNDM=2 FRCM=50

N60 Y20

N70 X30

; Fase N20-N30 mit F=100 mm/min

; Fase N30-N40 mit FRC=120 mm/min

; Fase N40-N60 mit FRC=200 mm/min

; Modale Rundung N60-N70 mit FRCM=50 mm/min

; Modale Rundung N70-N80 mit FRCM=50 mm/min

N80 Y30 CHF=3 FRC=100

; Fase N80-N90 mit FRC=100 mm/min

N90 X40

N100 Y40 FRCM=0

N110 S1000 M3

; Modale Rundung N90-N100 mit FRCM=50 mm/min

; Modale Rundung N100-N120 mit F=100 mm/min

N120 X50 CHF=4 G95 F3 FRC=1

; Fase N120-N130 mit G95 FRC=1 mm/Umdr

N130 Y50

N140 X60

...

M02

; Modale Rundung N130-N140 mit F=3 mm/Umdr

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

245

 
 
 
 
 
 
 
 
 
 
Grundlagen

2.10 Werkzeugradiuskorrekturen

2.10

Werkzeugradiuskorrekturen

2.10.1

Werkzeugradiuskorrektur (G40, G41, G42, OFFN)

Bei eingeschalteter Werkzeugradiuskorrektur (WRK) errechnet die Steuerung automatisch fr 
unterschiedliche Werkzeuge die jeweils quidistanten Werkzeugwege. 

Syntax

Bedeutung

G0/G1 X... Y Z... G41/G42 [OFFN=<Wert>]

...

G40 X... Y Z...

G41:

G42:

WRK mit Bearbeitungsrichtung links von der Kontur einschalten

WRK mit Bearbeitungsrichtung rechts von der Kontur einschalten

OFFN=<Wert>:

Aufma zur programmierten Kontur (Offset Kontur normal) (optional)

Z. B. zum Erzeugen von quidistanten Bahnen fr das Grobschlichten.

G40:

WRK ausschalten

246

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:134)(cid:84)(cid:88)(cid:76)(cid:71)(cid:76)(cid:86)(cid:87)(cid:68)(cid:81)(cid:87)(cid:72)(cid:134)(cid:84)(cid:88)(cid:76)(cid:71)(cid:76)(cid:86)(cid:87)(cid:68)(cid:81)(cid:87)(cid:72) 
 
 
Grundlagen

2.10 Werkzeugradiuskorrekturen

Hinweis

Im NC-Satz mit G40/G41/G42 muss G0 oder G1 aktiv sein und mindestens eine Achse der 
gewhlten Arbeitsebene angegeben werden.

Wird beim Einschalten nur eine Achse angegeben, dann wird die letzte Position der zweiten 
Achse automatisch ergnzt und in beiden Achsen verfahren.

Die beiden Achsen mssen als Geometrieachsen im Kanal aktiv sein. Dies kann durch GEOAX-
Programmierung sichergestellt werden.

Beispiele

Beispiel 1: Frsen

Programmcode

N10 G0 X50 T1 D1

Kommentar

; Nur die Werkzeuglngenkorrektur wird eingeschaltet. 
X50 wird unkorrigiert angefahren.

N20 G1 G41 Y50 F200

; Die Radiuskorrektur wird eingeschaltet, der Punkt 
X50/Y50 wird korrigiert angefahren.

N30 Y100



NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

247

(cid:46)(cid:82)(cid:85)(cid:85)(cid:72)(cid:78)(cid:87)(cid:88)(cid:85)(cid:3)(cid:76)(cid:81)(cid:3)(cid:60)(cid:46)(cid:82)(cid:85)(cid:85)(cid:72)(cid:78)(cid:87)(cid:88)(cid:85)(cid:3)(cid:76)(cid:81)(cid:3)(cid:59)(cid:59)(cid:60)(cid:24)(cid:19)(cid:49)(cid:20)(cid:19)(cid:49)(cid:21)(cid:19)(cid:24)(cid:19) 
 
 
 
 
Grundlagen

2.10 Werkzeugradiuskorrekturen

Beispiel 2: "Klassische" Vorgehensweise am Beispiel Frsen

"Klassische" Vorgehensweise:

1. Werkzeugaufruf

2. Werkzeug einwechseln.

3. Arbeitsebene und Werkzeugradiuskorrektur einschalten.

Programmcode

N10 G0 Z100

N20 G17 T1 M6

Kommentar

; Freifahren zum Werkzeugwechsel.

; Werkzeugwechsel

N30 G0 X0 Y0 Z1 M3 S300 D1

; Werkzeugkorrekturwerte aufrufen, Lngenkorrektur 
anwhlen.

; Werkzeug zustellen.

; Werkzeugradiuskorrektur einschalten, Werkzeug ar-
beitet links von der Kontur.

; Kontur frsen.

N40 Z-7 F500

N50 G41 X20 Y20

N60 Y40

N70 X40 Y70

N80 X80 Y50

N90 Y20

N100 X20

N110 G40 G0 Z100 M30

; Werkzeug freifahren, Programm-Ende.

248

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:26)(cid:19)(cid:24)(cid:19)(cid:23)(cid:19)(cid:21)(cid:19)(cid:60)(cid:61)(cid:27)(cid:19)(cid:23)(cid:19)(cid:26)(cid:21)(cid:19)(cid:60)(cid:59) 
 
 
 
Beispiel 3: Drehen

Grundlagen

2.10 Werkzeugradiuskorrekturen

Programmcode



N20 T1 D1

N30 G0 X100 Z20 

N40 G42 X20 Z1

N50 G1 Z-20 F0.2



Kommentar

; Nur die Werkzeuglngenkorrektur wird eingeschaltet.

; X100 Z20 wird unkorrigiert angefahren.

; Die Radiuskorrektur wird eingeschaltet, der Punkt 
X20/Z1 wird korrigiert angefahren.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

249

(cid:59)(cid:61)(cid:154)(cid:3)(cid:21)(cid:19)(cid:21)(cid:19)(cid:21)(cid:19)(cid:20)(cid:154)(cid:3)(cid:20)(cid:19)(cid:19) 
 
 
Grundlagen

2.10 Werkzeugradiuskorrekturen

Beispiel 4: Drehen

Programmcode

N5 G0 G53 X280 Z380 D0

N10 TRANS X0 Z250

N15 LIMS=4000

N20 G96 S250 M3

N25 G90 T1 D1 M8

N30 G0 G42 X-1.5 Z1

N35 G1 X0 Z0 F0.25

N40 G3 X16 Z-4 I0 K-10

N45 G1 Z-12

Kommentar

; Startpunkt

; Nullpunktverschiebung

; Drehzahlbegrenzung (G96)

; konstanten Vorschub anwhlen

; Werkzeuganwahl und Korrektur anwhlen

; Werkzeug anstellen mit Werkzeugradius-
korrektur

; Radius 10 drehen

N50 G2 X22 Z-15 CR=3

; Radius 3 drehen

N55 G1 X24

N60 G3 X30 Z-18 I0 K-3

; Radius 3 drehen

N65 G1 Z-20

N70 X35 Z-40

N75 Z-57

N80 G2 X41 Z-60 CR=3

; Radius 3 drehen

N85 G1 X46

N90 X52 Z-63

N95 G0 G40 G97 X100 Z50 M9

; Werkzeugradiuskorrektur abwhlen und 
Werkzeugwechselpunkt anfahren

250

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:53)(cid:20)(cid:19)(cid:53)(cid:27)(cid:53)(cid:22)(cid:53)(cid:22)(cid:53)(cid:22)(cid:23)(cid:24)(cid:114)(cid:26)(cid:19)(cid:27)(cid:19)(cid:20)(cid:21)(cid:20)(cid:24)(cid:20)(cid:27)(cid:21)(cid:19)(cid:23)(cid:19)(cid:24)(cid:26)(cid:25)(cid:19)(cid:25)(cid:23)(cid:154)(cid:3)(cid:22)(cid:19)(cid:154)(cid:3)(cid:22)(cid:24)(cid:154)(cid:3)(cid:20)(cid:25)(cid:23)(cid:154)(cid:3)(cid:24)(cid:19)(cid:14)(cid:59)(cid:14)(cid:61) 
 
 
 
 
 
 
 
Programmcode

N100 T2 D2

N105 G96 S210 M3

N110 G0 G42 X50 Z-60 M8

Grundlagen

2.10 Werkzeugradiuskorrekturen

Kommentar

; Werkzeug aufrufen und Korrektur anwh-
len

; konstante Schnittgeschwindigkeit anwh-
len

; Werkzeug anstellen mit Werkzeugradius-
korrektur

N115 G1 Z-70 F0.12

; Durchmesser 50 drehen

N120 G2 X50 Z-80 I6.245 K-5

; Radius 8 drehen

N125 G0 G40 X100 Z50 M9

; Werkzeug abheben und Werkzeugradiuskor-
rektur abwhlen

N130 G0 G53 X280 Z380 D0 M5

; Werkzeugwechselpunkt verfahren

N135 M30

; Programm-Ende

Weitere Informationen

Fr die Berechnung der Werkzeugwege bentigt die Steuerung folgende Informationen:

 Werkzeugnr. (T...), Schneidennr. (D...)

 Bearbeitungsrichtung (G41/G42)

 Arbeitsebene (G17/G18/G19)

Werkzeugnr. (T...), Schneidennr. (D...)

Aus den Frserradien bzw. Schneidenradien und Angaben zur Schneidenlage wird der 
Abstand zwischen Werkzeugbahn und Werkstckkontur berechnet.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

251

(cid:42)(cid:23)(cid:20)(cid:42)(cid:23)(cid:20)(cid:42)(cid:23)(cid:20)(cid:42)(cid:23)(cid:21)(cid:42)(cid:23)(cid:21)Grundlagen

2.10 Werkzeugradiuskorrekturen

Bearbeitungsrichtung (G41/G42)

Hieraus erkennt die Steuerung die Richtung, in die die Werkzeugbahn verschoben werden soll.

Hinweis

Ein negativer Korrekturwert ist gleichbedeutend mit einem Wechsel der Korrekturseite 
(G41  G42).

Arbeitsebene (G17/G18/G19)

Hieraus erkennt die Steuerung die Ebene und damit die Achsrichtungen, in denen korrigiert 
wird.

Beispiel: Frswerkzeug

Programmcode

Kommentar

...

N10 G17 G41 

...

Hinweis

; Die Werkzeugradiuskorrektur erfolgt in der X/Y-Ebene, 
die Werkzeuglngenkorrektur in Z-Richtung.

Bei 2-Achs-Maschinen ist die Werkzeugradiuskorrektur nur in "echten" Ebenen mglich, in der 
Regel bei G18.

Werkzeuglngenkorrektur

Der bei Werkzeuganwahl der Durchmesserachse zugeordnete Verschleiparameter kann 
ber ein Maschinendatum als Durchmesserwert definiert werden. Bei einem nachfolgenden 
Ebenenwechsel wird diese Zuordnung nicht automatisch verndert. Dafr muss das Werkzeug 
nach Ebenenwechsel neu angewhlt werden.

Drehen:

252

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:47)(cid:166)(cid:81)(cid:74)(cid:72)(cid:47)(cid:166)(cid:81)(cid:74)(cid:72)(cid:53)(cid:68)(cid:71)(cid:76)(cid:88)(cid:86)(cid:53)(cid:68)(cid:71)(cid:76)(cid:88)(cid:86)(cid:53)(cid:68)(cid:71)(cid:76)(cid:88)(cid:86)(cid:14)(cid:61)(cid:14)(cid:59)(cid:14)(cid:60) 
 
Grundlagen

2.10 Werkzeugradiuskorrekturen

Mit NORM und KONT kann die Werkzeugbahn beim Ein- und Ausschalten des Korrekturbetriebs 
festgelegt werden (siehe "Kontur anfahren und verlassen (NORM, KONT, KONTC, KONTT) 
(Seite 255)").

Schnittpunkt

Die Auswahl des Schnittpunkts erfolgt ber das Settingdatum:

SD42496 $SC_CUTCOM_CLSD_CONT (Verhalten der Werkzeugradiuskorrektur bei 
geschlossener Kontur)

Wert

FALSE

Bedeutung

Ergeben sich bei einer (nahezu) geschlossenen Kontur, die aus zwei aufeinanderfol
genden Kreisstzen oder einem Kreis- und einem Linearsatz besteht, bei Korrektur an 
der Innenseite zwei Schnittpunkte, so wird entsprechend dem Standardverfahren der 
Schnittpunkt gewhlt, der auf der ersten Teilkontur nher am Satzende liegt.

Eine Kontur wird dann als (nahezu) geschlossen betrachtet, wenn der Abstand zwi
schen dem Startpunkt des ersten Satzes und dem Endpunkt des zweiten Satzes kleiner 
ist als 10 % des wirksamen Korrekturradius, aber nicht grer als 1000 Weginkremente 
(entspricht 1 mm bei 3 Nachkommastellen).

TRUE

In der gleichen Situation wie oben beschrieben wird der Schnittpunkt gewhlt, der auf 
der ersten Teilkontur nher am Satzanfang liegt.

Wechsel der Korrekturrichtung (G41  G42)

Ein Wechsel der Korrekturrichtung (G41  G42) kann ohne zwischengeschaltetes G40 
programmiert werden.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

253

(cid:47)(cid:166)(cid:81)(cid:74)(cid:72)(cid:3)(cid:21)(cid:47)(cid:166)(cid:81)(cid:74)(cid:72)(cid:47)(cid:166)(cid:81)(cid:74)(cid:72)(cid:53)(cid:68)(cid:71)(cid:76)(cid:88)(cid:86)(cid:47)(cid:166)(cid:81)(cid:74)(cid:72)(cid:3)(cid:20)(cid:53)(cid:68)(cid:71)(cid:76)(cid:88)(cid:86)(cid:59)(cid:60)(cid:61)Grundlagen

2.10 Werkzeugradiuskorrekturen

Wechsel der Arbeitsebene

Ein Wechsel der Arbeitsebene (G17/G18/G19) ist bei eingeschaltetem G41/G42 nicht mglich.

Wechsel des Werkzeugkorrekturdatensatzes (D)

Der Werkzeugkorrekturdatensatz kann im Korrekturbetrieb gewechselt werden.

Ein vernderter Werkzeugradius gilt bereits ab dem Satz, in dem die neue D-Nummer steht.

Hinweis

Die Radiusnderung bzw. Ausgleichsbewegung erstreckt sich ber den gesamten Satz und 
erreicht erst im programmierten Endpunkt den neuen quidistanten Abstand.

Bei Linearbewegungen fhrt das Werkzeug auf einer schrg liegenden Bahn zwischen 
Anfangs- und Endpunkt:

Bei Kreisinterpolationen entstehen Spiralbewegungen.

254

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:49)(cid:38)(cid:16)(cid:54)(cid:68)(cid:87)(cid:93)(cid:3)(cid:80)(cid:76)(cid:87)(cid:3)(cid:74)(cid:72)(cid:166)(cid:81)(cid:71)(cid:72)(cid:85)(cid:87)(cid:72)(cid:85)(cid:3)(cid:53)(cid:68)(cid:71)(cid:76)(cid:88)(cid:86)(cid:78)(cid:82)(cid:85)(cid:85)(cid:72)(cid:78)(cid:87)(cid:88)(cid:85)(cid:57)(cid:72)(cid:85)(cid:73)(cid:68)(cid:75)(cid:85)(cid:90)(cid:72)(cid:74)(cid:83)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)(cid:76)(cid:72)(cid:85)(cid:87)(cid:72)(cid:3)(cid:37)(cid:68)(cid:75)(cid:81)Grundlagen

2.10 Werkzeugradiuskorrekturen

nderung des Werkzeugradius

Die nderung kann z. B. ber Systemvariablen erfolgen. Fr den Ablauf gilt das Gleiche wie 
beim Wechsel des Werkzeugkorrekturdatensatzes (D).

Hinweis

Die genderten Werte werden erst nach erneuter T- oder D-Programmierung wirksam. Die 
nderung gilt erst im nchsten Satz.

Korrekturbetrieb

Der Korrekturbetrieb darf nur von einer bestimmten Anzahl aufeinanderfolgender Stze oder 
M-Befehle unterbrochen werden, die keine Fahrbefehle bzw. Wegangaben in der 
Korrekturebene enthalten.

Hinweis

Die Anzahl aufeinanderfolgender Stze oder M-Befehle ist ber ein Maschinendatum 
einstellbar (siehe Angaben des Maschinenherstellers!).

Hinweis

Ein Satz mit Bahnweg Null zhlt ebenfalls als Unterbrechung!

2.10.2

Kontur anfahren und verlassen (NORM, KONT, KONTC, KONTT)

Vorraussetzung

Die Befehle KONTC und KONTT stehen nur zur Verfgung, wenn in der Steuerung die Option 
"Polynom-Interpolation" freigegeben ist.

Funktion

Mit den Befehlen NORM, KONT, KONTC oder KONTT kann bei eingeschalteter 
Werkzeugradiuskorrektur (G41/G42) der An- und Abfahrweg des Werkzeugs an den 
gewnschten Konturverlauf oder an die Rohteilform angepasst werden.

Mit KONTC oder KONTT werden die Stetigkeitsbedingungen in allen drei Achsen eingehalten. 
Damit wird es zulssig, gleichzeitig eine Wegkomponente senkrecht zur Korrekturebene zu 
programmieren.

Syntax

G41/G42 NORM/KONT/KONTC/KONTT X... Y... Z...

...

G40 X... Y... Z...

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

255

 
 
 
Grundlagen

2.10 Werkzeugradiuskorrekturen

Bedeutung

NORM:

Direktes An-/Abfahren auf einer Geraden einschalten

Das Werkzeug wird senkrecht zum Konturpunkt ausgerichtet.

An-/Abfahren mit Umfahren des Anfangs-/Endpunkts nach programmiertem Eckenver
halten G450 bzw. G451 einschalten

Krmmungsstetiges An-/Abfahren einschalten

Tangentenstetiges An-/Abfahren einschalten

KONT:

KONTC:

KONTT:

Hinweis

Als Original-An-/Abfahrstze fr KONTC und KONTT sind nur G1-Stze zulssig. Diese werden 
von der Steuerung durch Polynome fr die entsprechende Anfahr-/Abfahrbahn ersetzt.

Randbedingungen

KONTT und KONTC stehen bei den 3D-Varianten der Werkzeugradiuskorrektur 
(CUT3DC, CUT3DCC, CUT3DF) nicht zur Verfgung. Werden sie dennoch programmiert, wird 
steuerungsintern ohne Fehlermeldung auf NORM umgeschaltet.

Beispiel

KONTC

In der Kreismitte beginnend wird an den Vollkreis angefahren. Dabei sind im Satzendpunkt des 
Anfahrsatzes Richtung und Krmmungsradius gleich den Werten des folgenden Kreises. In 
den beiden An-/Abfahrstzen wird gleichzeitig in Z-Richtung zugestellt. Das folgende Bild zeigt 
die senkrechte Projektion der Werkzeugbahnbahn:

Bild 2-14

Senkrechte Projektion

256

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Grundlagen

2.10 Werkzeugradiuskorrekturen

Das zugehrige NC-Programmsegment sieht folgendermaen aus:

Programmcode

$TC_DP1[1,1]=121

$TC_DP6[1,1]=10

N10 G1 X0 Y0 Z60 G64 T1 D1 F10000

N20 G41 KONTC X70 Y0 Z0

N30 G2 I-70

N40 G40 G1 X0 Y0 Z60

N50 M30

Kommentar

; Frser

; Radius 10 mm

; Anfahren

; Vollkreis

; Abfahren

Gleichzeitig zur Anpassung der Krmmung an die Kreisbahn des Vollkreises wird von Z60 auf 
die Ebene des Kreises Z0 verfahren:

Bild 2-15

Rumliche Darstellung

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

257

 
 
Grundlagen

2.10 Werkzeugradiuskorrekturen

Weitere Informationen

An-/Abfahren mit NORM

1. Anfahren:

Bei eingeschaltetem NORM fhrt das Werkzeug direkt auf einer Geraden auf die korrigierte 
Startposition (unabhngig von dem durch die programmierte Fahrbewegung vorgegebenen 
Anfahrwinkel) und wird senkrecht zur Bahntangente im Anfangspunkt ausgerichtet:   

2. Abfahren:

Das Werkzeug steht in senkrechter Position zum letzten korrigierten Bahn-Endpunkt und 
fhrt dann (unabhngig von dem durch die programmierte Fahrbewegung vorgegebenen 
Anfahrwinkel) direkt auf einer Geraden zur nchsten, unkorrigierten Position, z. B. zum 
Werkzeugwechselpunkt:

Vernderte An-/Abfahrwinkel stellen eine Kollisionsgefahr dar:

258

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:78)(cid:82)(cid:85)(cid:85)(cid:76)(cid:74)(cid:76)(cid:72)(cid:85)(cid:87)(cid:72)(cid:85)(cid:3)(cid:58)(cid:72)(cid:85)(cid:78)(cid:93)(cid:72)(cid:88)(cid:74)(cid:90)(cid:72)(cid:74)(cid:55)(cid:68)(cid:81)(cid:74)(cid:72)(cid:81)(cid:87)(cid:72)(cid:53)(cid:68)(cid:71)(cid:76)(cid:88)(cid:86)(cid:78)(cid:82)(cid:85)(cid:85)(cid:76)(cid:74)(cid:76)(cid:72)(cid:85)(cid:87)(cid:72)(cid:85)(cid:3)(cid:58)(cid:72)(cid:85)(cid:78)(cid:93)(cid:72)(cid:88)(cid:74)(cid:90)(cid:72)(cid:74)(cid:42)(cid:23)(cid:21)(cid:42)(cid:23)(cid:21)(cid:55)(cid:68)(cid:81)(cid:74)(cid:72)(cid:81)(cid:87)(cid:72)(cid:53)(cid:68)(cid:71)(cid:76)(cid:88)(cid:86)(cid:42)(cid:23)(cid:20)(cid:42)(cid:23)(cid:20)Grundlagen

2.10 Werkzeugradiuskorrekturen

ACHTUNG

Kollisionsgefahr

Um eventuelle Kollisionen zu vermeiden, mssen vernderte An-/Abfahrwinkel bei der 
Programmierung bercksichtigt werden.

An-/Abfahren mit KONT

Vor dem Anfahren kann sich das Werkzeug vor oder hinter der Kontur befinden. Als Trennlinie 
gilt dabei die Bahntangente im Anfangspunkt:

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

259

(cid:36)(cid:81)(cid:73)(cid:68)(cid:81)(cid:74)(cid:86)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:75)(cid:76)(cid:81)(cid:87)(cid:72)(cid:85)(cid:3)(cid:46)(cid:82)(cid:81)(cid:87)(cid:88)(cid:85)(cid:89)(cid:82)(cid:85)(cid:3)(cid:46)(cid:82)(cid:81)(cid:87)(cid:88)(cid:85)(cid:37)(cid:68)(cid:75)(cid:81)(cid:87)(cid:68)(cid:81)(cid:74)(cid:72)(cid:81)(cid:87)(cid:72)Grundlagen

2.10 Werkzeugradiuskorrekturen

Entsprechend sind beim An-/Abfahren mit KONT zwei Flle zu unterscheiden:

1. Das Werkzeug befindet sich vor der Kontur.

 An-/Abfahrstrategie wie bei NORM.

2. Das Werkzeug befindet sich hinter der Kontur

 Anfahren:

Das Werkzeug umfhrt den Anfangspunkt je nach programmiertem Eckenverhalten 
(G450/G451) auf einer Kreisbahn oder ber den Schnittpunkt der quidistanten.
Die Befehle G450/G451 gelten fr den bergang vom aktuellen Satz zum nchsten Satz:

In beiden Fllen (G450/G451) wird folgender Anfahrweg erzeugt:

Vom unkorrigierten Anfahrpunkt wird eine Gerade gezogen, die einen Kreis mit 
Kreisradius = Werkzeugradius tangiert. Der Kreismittelpunkt liegt im Anfangspunkt.

 Abfahren:

Fr das Abfahren gilt, in umgekehrter Reihenfolge, das Gleiche wie fr das Anfahren.

260

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:42)(cid:23)(cid:24)(cid:20)(cid:42)(cid:23)(cid:24)(cid:20)(cid:42)(cid:23)(cid:24)(cid:19)(cid:42)(cid:23)(cid:24)(cid:19)(cid:36)(cid:81)(cid:73)(cid:68)(cid:75)(cid:85)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:36)(cid:81)(cid:73)(cid:68)(cid:75)(cid:85)(cid:90)(cid:72)(cid:74)(cid:36)(cid:81)(cid:73)(cid:68)(cid:81)(cid:74)(cid:86)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:58)(cid:72)(cid:85)(cid:78)(cid:93)(cid:72)(cid:88)(cid:74)(cid:85)(cid:68)(cid:71)(cid:76)(cid:88)(cid:86)Grundlagen

2.10 Werkzeugradiuskorrekturen

An-/Abfahren mit KONTC

Der Konturpunkt wird krmmungsstetig angefahren/verlassen. Am Konturpunkt tritt kein 
Beschleunigungssprung auf. Die Bahn vom Ausgangspunkt zum Konturpunkt wird als 
Polynom interpoliert.

An-/Abfahren mit KONTT

Der Konturpunkt wird tangentenstetig angefahren/verlassen. Am Konturpunkt kann ein 
Beschleunigungssprung auftreten. Die Bahn vom Ausgangspunkt zum Konturpunkt wird als 
Polynom interpoliert.

Unterschied zwischen KONTC und KONTT

In diesem Bild ist das unterschiedliche An-/Abfahrverhalten bei KONTT und KONTC dargestellt. 
Ein Kreis mit dem Radius 20 mm um den Mittelpunkt bei X0 Y-40 wird mit einem Werkzeug mit 
20 mm Radius an der Auenseite korrigiert. Es ergibt sich deshalb eine kreisfrmige 
Bewegung des Werkzeugmittelpunkts mit dem Radius 40 mm. Der Endpunkt des Abfahrsatzes 
liegt bei X40 Y30. Der bergang zwischen dem Kreissatz und dem Abfahrsatz liegt im 
Nullpunkt. Wegen der verlangten Krmmungsstetigkeit bei KONTC fhrt der Abfahrsatz 
zunchst eine Bewegung mit negativer Y-Komponente aus. Dies wird hufig unerwnscht sein. 
Der Abfahrsatz mit KONTT zeigt dieses Verhalten nicht. Allerdings tritt in diesem Fall am 
Satzbergang ein Beschleunigungssprung auf.

Ist der KONTT- bzw. KONTC-Satz nicht der Ab- sondern der Anfahrsatz, ergibt sich exakt die 
gleiche Kontur, die lediglich in umgekehrter Richtung durchlaufen wird.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

261

Grundlagen

2.10 Werkzeugradiuskorrekturen

2.10.3

Korrektur an den Auenecken (G450, G451, DISC)

Mit dem Befehl G450 bzw. G451 wird bei eingeschalteter Werkzeugradiuskorrektur (G41/G42) 
der Verlauf der korrigierten Werkzeugbahn beim Umfahren von Auenecken festgelegt: 

Mit G450 umfhrt der Werkzeugmittel
punkt die Werkstckecke auf einem 
Kreisbogen mit Werkzeugradius.

Mit G451 fhrt der Werkzeugmittelpunkt den 
Schnittpunkt der beiden quidistanten an, die 
im Abstand Werkzeugradius zur programmier
ten Kontur liegen. G451 gilt nur fr Geraden 
und Kreise.

Hinweis

Mit G450/G451 wird auch der Anfahrweg bei aktivem KONT und Anfahrpunkt hinter der Kontur 
festgelegt (siehe "Kontur anfahren und verlassen (NORM, KONT, KONTC, KONTT) 
(Seite 255)").

Mit dem Befehl DISC knnen die bergangskreise bei G450 verzerrt und damit scharfe 
Konturecken hergestellt werden.

Syntax

G450 [DISC=<Wert>]

G451

262

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:51)(cid:13)(cid:42)(cid:23)(cid:24)(cid:19)(cid:51)(cid:13)(cid:42)(cid:23)(cid:24)(cid:20) 
Bedeutung

Grundlagen

2.10 Werkzeugradiuskorrekturen

G450:

DISC:

Mit G450 werden Werkstckecken auf einer Kreisbahn umfahren.

Flexible Programmierung der Kreisbahn bei G450 (optional)

<Wert>:

Typ:

INT

Wertebereich:

0, 1, 2, ... 100

Bedeutung:

0

100

bergangskreis

Schnittpunkt der quidistanten (theoreti
scher Wert)

G451:

Mit G451 wird bei Werkstckecken der Schnittpunkt der beiden quidistanten angefah
ren. Das Werkzeug schneidet in der Werkstckecke frei.

Hinweis

DISC wirkt nur mit Aufruf von G450, kann allerdings in einem vorherigen Satz ohne G450 
programmiert werden. Beide Befehle sind modal wirksam.

Beispiel

Im folgenden Beispiel wird bei allen Auenecken ein bergangsradius eingefgt 
(entsprechend der Programmierung des Eckenverhaltens in Satz N30). Hierdurch vermeidet 
man, dass das Werkzeug zum Richtungswechsel stehen bleiben muss und freischneidet.

Programmcode

Kommentar

N10 G17 T1 G0 X35 Y0 Z0 F500

; Startbedingungen

N20 G1 Z-5

; Werkzeug zustellen.

N30 G41 KONT G450 X10 Y10

N40 Y60

N50 X50 Y30

N60 X10 Y10

; WRK mit An-/Abfahrmodus KONT und Eckenverhal-
ten G450 einschalten.

; Frsen der Kontur.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

263

(cid:25)(cid:19)(cid:22)(cid:19)(cid:20)(cid:19)(cid:60)(cid:61)(cid:24)(cid:24)(cid:19)(cid:20)(cid:19)(cid:60)(cid:59) 
 
Grundlagen

2.10 Werkzeugradiuskorrekturen

Programmcode

N80 G40 X-20 Y50

N90 G0 Y100

N100 X200 M30

Weitere Informationen

G450/G451

Kommentar

; Korrekturbetrieb ausschalten, Wegfahren auf 
bergangskreis.

Im Zwischenpunkt P* fhrt die Steuerung Anweisungen durch, wie z. B. Zustellbewegungen 
oder Schaltfunktionen. Diese Anweisungen werden in Stzen programmiert, die zwischen den 
beiden Stzen liegen, die die Ecke bilden.

Der bergangskreis bei G450 gehrt datentechnisch zum anschlieenden Fahrbefehl.

DISC

Bei Angabe von DISC-Werten grer 0 werden Zwischenkreise berhht dargestellt, hierbei 
entstehen bergangsellipsen bzw. Parabeln oder Hyperbeln:

ber Maschinendatum kann ein oberer Grenzwert festgelegt werden, in der Regel DISC=50.

Fahrverhalten

Bei eingeschaltetem G450 hebt das Werkzeug bei spitzen Konturwinkeln und hohen DISC-
Werten an den Ecken von der Kontur ab. Bei Konturwinkel ab 120 wird die Kontur gleichmig 
umfahren:

264

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:39)(cid:44)(cid:54)(cid:38)(cid:32)(cid:19)(cid:39)(cid:44)(cid:54)(cid:38)(cid:32)(cid:20)(cid:19)(cid:19) 
 
Grundlagen

2.10 Werkzeugradiuskorrekturen

Bei eingeschaltetem G451 knnen bei spitzen Konturwinkeln durch Abhebebewegungen 
berflssige Leerwege des Werkzeugs entstehen. ber Maschinendatum lsst sich festlegen, 
dass in solchen Fllen automatisch auf bergangskreis umgeschaltet wird.

2.10.4

Weiches An- und Abfahren

2.10.4.1

An- und Abfahren (G140 bis G143, G147, G148, G247, G248, G347, G348, G340, G341, 
DISR, DISCL, DISRP, FAD, PM, PR)

Die Funktion "Weiches An- und Abfahren (WAB)" dient dazu, im Startpunkt einer Kontur 
unabhngig von der Lage des Ausgangspunkts tangential anzufahren.   

Die Funktion wird vorwiegend in Verbindung mit der Werkzeugradiuskorrektur eingesetzt.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

265

(cid:53)(cid:3)(cid:16)(cid:3)(cid:58)(cid:72)(cid:85)(cid:78)(cid:93)(cid:72)(cid:88)(cid:74)(cid:85)(cid:68)(cid:71)(cid:76)(cid:88)(cid:86)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:54)(cid:3)(cid:16)(cid:3)(cid:74)(cid:72)(cid:73)(cid:68)(cid:75)(cid:85)(cid:72)(cid:81)(cid:72)(cid:3)(cid:158)(cid:69)(cid:72)(cid:85)(cid:75)(cid:184)(cid:75)(cid:88)(cid:81)(cid:74)(cid:54)(cid:18)(cid:53)(cid:3)(cid:16)(cid:3)(cid:81)(cid:82)(cid:85)(cid:80)(cid:76)(cid:72)(cid:85)(cid:87)(cid:72)(cid:3)(cid:158)(cid:69)(cid:72)(cid:85)(cid:75)(cid:184)(cid:75)(cid:88)(cid:81)(cid:74)(cid:3)(cid:11)(cid:69)(cid:72)(cid:93)(cid:82)(cid:74)(cid:72)(cid:81)(cid:3)(cid:68)(cid:88)(cid:73)(cid:3)(cid:58)(cid:72)(cid:85)(cid:78)(cid:93)(cid:72)(cid:88)(cid:74)(cid:85)(cid:68)(cid:71)(cid:76)(cid:88)(cid:86)(cid:12)(cid:46)(cid:82)(cid:81)(cid:87)(cid:88)(cid:85)(cid:90)(cid:76)(cid:81)(cid:78)(cid:72)(cid:79)(cid:3)(cid:11)(cid:42)(cid:85)(cid:68)(cid:71)(cid:12)(cid:19)(cid:22)(cid:19)(cid:25)(cid:19)(cid:28)(cid:19)(cid:20)(cid:21)(cid:19)(cid:20)(cid:24)(cid:19)(cid:20)(cid:27)(cid:19)(cid:19)(cid:15)(cid:21)(cid:19)(cid:15)(cid:23)(cid:24)(cid:19)(cid:23)(cid:19)(cid:22)(cid:19)(cid:21)(cid:19)(cid:20)(cid:19)(cid:19)(cid:15)(cid:25)(cid:19)(cid:15)(cid:27)(cid:20)(cid:15)(cid:19)(cid:39)(cid:44)(cid:54)(cid:38)(cid:32)(cid:39)(cid:44)(cid:54)(cid:38)(cid:32)(cid:20)(cid:19)(cid:19)(cid:54)(cid:18)(cid:53)(cid:83)(cid:85)(cid:82)(cid:74)(cid:85)(cid:17)(cid:3)(cid:46)(cid:82)(cid:81)(cid:87)(cid:88)(cid:85)(cid:42)(cid:20)(cid:39)(cid:44)(cid:54)(cid:53)(cid:42)(cid:19)(cid:42)(cid:21)(cid:23)(cid:26)Grundlagen

2.10 Werkzeugradiuskorrekturen

Bei der Aktivierung der Funktion bernimmt die Steuerung die Aufgabe, Zwischenpunkte so zu 
berechnen, dass der bergang in den Folgesatz (bzw. der bergang vom Vorgngersatz beim 
Abfahren) entsprechend den angegebenen Parametern erfolgt.

Die Anfahrbewegung besteht aus maximal 4 Teilbewegungen. Der Startpunkt der Bewegung 
wird im Folgenden mit P0, der Endpunkt mit P4 bezeichnet. Dazwischen knnen maximal drei 
Zwischenpunkte P1, P2 und P3 liegen. Die Punkte P0, P3 und P4 sind immer definiert. Die 
Zwischenpunkte P1 und P2 knnen ja nach Parametrierung und geometrischen Verhltnissen 
entfallen. Beim Abfahren werden die Punkte in der umgekehrten Reihenfolge durchlaufen, d. h. 
beginnend mit P4 und endend mit P0.

Syntax

Weiches Anfahren:

 mit einer Geraden:

Bedeutung

G147 G340/G341 ... DISR=..., DISCL=..., DISRP=... FAD=...

 mit einem Viertelkreis/Halbkreis:

G247/G347 G340/G341 G140/G141/G142/G143 ... DISR=... DISCL=... 
DISRP=... FAD=...

Weiches Abfahren:

 mit einer Geraden:

G148 G340/G341 ... DISR=..., DISCL=..., DISRP=... FAD=...

 mit einem Viertelkreis/Halbkreis:

G248/G348 G340/G341 G140/G141/G142/G143 ... DISR=... DISCL=... 
DISRP=... FAD=...

G147:

G148:

G247:

G248:

G347:

G348:

G340:

G341:

G140:

G141:

G142:

G143:

Anfahren mit einer Geraden

Abfahren mit einer Geraden

Anfahren mit einem Viertelkreis

Abfahren mit einem Viertelkreis

Anfahren mit einem Halbkreis

Abfahren mit einem Halbkreis

An- und Abfahren rumlich (Grundeinstellung)

An- und Abfahren in der Ebene

An- und Abfahrrichtung abhngig von der aktuellen Korrekturseite (Grundein
stellung)

Anfahren von links bzw. Abfahren nach links

Anfahren von rechts bzw. Abfahren nach rechts

An- bzw. Abfahrrichtung abhngig von der relativen Lage von Start- bzw. End
punkt zur Tangentenrichtung

266

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Grundlagen

2.10 Werkzeugradiuskorrekturen

DISR=...:

1. Beim An- und Abfahren mit Geraden (G147/G148):
Abstand der Frserkante vom Startpunkt der Kontur

2. Beim An- und Abfahren mit Kreisen (G247, G347/G248, G348):

Radius der Werkzeugmittelpunktsbahn

Achtung:
Bei REPOS mit einem Halbkreis bezeichnet DISR den Kreisdurchmesser.

DISCL=...:

Abstand des Endpunkts der schnellen Zustellbewegung von der Bearbeitungs
ebene

DISCL=AC(...) Angabe der absoluten Lage des Endpunkts der schnellen Zu
stellbewegung

DISCL=AC(...):

Angabe der absoluten Lage des Endpunkts der schnellen Zustellbewegung

DISRP:

Abstand des Punkts P1 (Rckzugsebene) von der Bearbeitungsebene

DISRP=AC(...):

Angabe der absoluten Lage des Punkts P1

FAD=...:

Geschwindigkeit der langsamen Zustellbewegung

FAD=PM(...):

FAD=PR(...):

Der programmierte Wert wirkt entsprechend dem aktiven Vorschubtyp (G-Grup
pe 15).

Der programmierte Wert wird unabhngig vom aktiven Vorschubtyp als Linear
vorschub (wie G94) interpretiert.

Der programmierte Wert wird unabhngig vom aktiven Vorschubtyp als Umdre
hungsvorschub (wie G95) interpretiert.

Beispiel

 Weiches Anfahren (Satz N20 aktiviert)

 Anfahrbewegung mit Viertelkreis (G247)

 Anfahrrichtung nicht programmiert, es wirkt G140, d. h. WRK ist aktiv (G41)

 Konturoffset OFFN=5 (N10)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

267

(cid:58)(cid:72)(cid:85)(cid:78)(cid:93)(cid:72)(cid:88)(cid:74)(cid:80)(cid:76)(cid:87)(cid:87)(cid:72)(cid:79)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:86)(cid:69)(cid:68)(cid:75)(cid:81)(cid:58)(cid:72)(cid:85)(cid:78)(cid:93)(cid:72)(cid:88)(cid:74)(cid:43)(cid:72)(cid:79)(cid:76)(cid:91)(cid:43)(cid:68)(cid:79)(cid:69)(cid:78)(cid:85)(cid:72)(cid:76)(cid:86)(cid:46)(cid:82)(cid:81)(cid:87)(cid:88)(cid:85)(cid:51)(cid:22)(cid:68)(cid:81)(cid:3)(cid:51)(cid:22)(cid:68)(cid:69)(cid:51)(cid:23)(cid:68)(cid:81)(cid:51)(cid:23)(cid:68)(cid:69)(cid:51)(cid:22)(cid:68)(cid:69)(cid:51)(cid:19)(cid:68)(cid:81)(cid:51)(cid:19)(cid:68)(cid:69)(cid:21)(cid:19)(cid:22)(cid:19)(cid:23)(cid:19)(cid:24)(cid:19)(cid:25)(cid:19)(cid:27)(cid:19)(cid:21)(cid:19)(cid:24)(cid:60)(cid:59)Grundlagen

2.10 Werkzeugradiuskorrekturen

 Aktueller Werkzeugradius=10, damit ist der effektive Korrekturradius fr WRK=15, der 
Radius der WAB-Kontur=25, so dass Radius der Werkzeugmittelpunktsbahn gleich 
DISR=10 wird

 Endpunkt des Kreises ergibt sich aus N30, da in N20 nur Z-Position programmiert ist

 Zustellbewegung

 Von Z20 nach Z7 (DISCL=AC(7)) im Eilgang.

 Anschlieend nach Z0 mit FAD=200.

 Anfahrkreis in X-Y-Ebene und Folgestze mit F1500 (damit diese Geschwindigkeit in 
den Folgestzen wirksam wird, muss der aktive G0 in N30 mit G1 berschrieben 
werden, andernfalls wrde die Kontur mit G0 weiter bearbeitet werden).

 Weiches Abfahren (Satz N60 aktiviert)

 Abfahrbewegung mit Viertelkreis (G248) und Helix (G340)

 FAD nicht programmiert, da bei G340 ohne Bedeutung

 Z=2 im Startpunkt; Z=8 im Endpunkt, da DISCL=6

 Bei DISR=5 ist Radius der WAB-Kontur=20, der Radius der Werkzeugmittelpunktsbahn=5

Wegfahrbewegungen von Z8 nach Z20 und die Bewegung parallel zur X-Y Ebene zu X70 Y0.

Programmcode

$TC_DP1[1,1]=120

$TC_DP6[1,1]=10

N10 G0 X0 Y0 Z20 G64 D1 T1 OFFN=5

Kommentar

; Werkzeugdefinition T1/D1

; Radius

; (P0 an)

N20 G41 G247 G341 Z0 DISCL=AC(7) DISR=10 F1500 FAD=200

; Anfahren (P3an)

N30 G1 X30 Y-10

N40 X40 Z2

N50 X50

; (P4 an)

; (P4 ab)

N60 G248 G340 X70 Y0 Z20 DISCL=6 DISR=5 G40 F10000

; Abfahren (P3 ab)

N70 X80 Y0

N80 M30

Weitere Informationen

; (P0 ab)

Wahl der An- bzw. Abfahrkontur

Die Wahl der An- bzw. Abfahrkontur erfolgt mit dem entsprechenden G-Befehl aus der 2. G-
Gruppe:

G147:

G247:

G347:

G148:

G248:

G348:

Anfahren mit einer Geraden

Anfahren mit einem Viertelkreis

Anfahren mit einem Halbkreis

Abfahren mit einer Geraden

Abfahren mit einem Viertelkreis

Abfahren mit einem Halbkreis

268

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
Grundlagen

2.10 Werkzeugradiuskorrekturen

Bild 2-16

Anfahrbewegungen bei gleichzeitiger Aktivierung der Werkzeugradiuskorrektur

Wahl der An- bzw. Abfahrrichtung

Bestimmung der An- und Abfahrrichtung mit Hilfe der Werkzeugradiuskorrektur (G140, 
Grundeinstellung) bei positivem Werkzeugradius:

 G41 aktiv  Anfahren von links

 G42 aktiv  Anfahren von rechts

Weitere Anfahrmglichkeiten sind mit G141, G142 und G143 gegeben.

Diese G-Befehle sind nur dann von Bedeutung, wenn die Anfahrkontur ein Viertel- oder 
Halbkreis ist.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

269

(cid:39)(cid:44)(cid:54)(cid:53)(cid:39)(cid:44)(cid:54)(cid:53)(cid:69)(cid:72)(cid:76)(cid:80)(cid:3)(cid:36)(cid:81)(cid:73)(cid:68)(cid:75)(cid:85)(cid:72)(cid:81)(cid:3)(cid:80)(cid:76)(cid:87)(cid:3)(cid:72)(cid:76)(cid:81)(cid:72)(cid:85)(cid:3)(cid:42)(cid:72)(cid:85)(cid:68)(cid:71)(cid:72)(cid:81)(cid:3)(cid:11)(cid:42)(cid:20)(cid:23)(cid:26)(cid:12)(cid:46)(cid:82)(cid:81)(cid:87)(cid:88)(cid:85)(cid:69)(cid:72)(cid:76)(cid:80)(cid:3)(cid:36)(cid:81)(cid:73)(cid:68)(cid:75)(cid:85)(cid:72)(cid:81)(cid:3)(cid:80)(cid:76)(cid:87)(cid:3)(cid:57)(cid:76)(cid:72)(cid:85)(cid:87)(cid:72)(cid:79)(cid:78)(cid:85)(cid:72)(cid:76)(cid:86)(cid:3)(cid:11)(cid:42)(cid:21)(cid:23)(cid:26)(cid:12)(cid:46)(cid:82)(cid:81)(cid:87)(cid:88)(cid:85)(cid:69)(cid:72)(cid:76)(cid:80)(cid:3)(cid:36)(cid:81)(cid:73)(cid:68)(cid:75)(cid:85)(cid:72)(cid:81)(cid:3)(cid:80)(cid:76)(cid:87)(cid:3)(cid:43)(cid:68)(cid:79)(cid:69)(cid:78)(cid:85)(cid:72)(cid:76)(cid:86)(cid:3)(cid:11)(cid:42)(cid:22)(cid:23)(cid:26)(cid:12)(cid:46)(cid:82)(cid:81)(cid:87)(cid:88)(cid:85)(cid:58)(cid:72)(cid:85)(cid:78)(cid:93)(cid:72)(cid:88)(cid:74)(cid:80)(cid:76)(cid:87)(cid:87)(cid:72)(cid:79)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:86)(cid:69)(cid:68)(cid:75)(cid:81)(cid:58)(cid:72)(cid:85)(cid:78)(cid:16)(cid:93)(cid:72)(cid:88)(cid:74)(cid:58)(cid:72)(cid:85)(cid:78)(cid:93)(cid:72)(cid:88)(cid:74)(cid:58)(cid:72)(cid:85)(cid:78)(cid:93)(cid:72)(cid:88)(cid:74)(cid:80)(cid:76)(cid:87)(cid:87)(cid:72)(cid:79)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:86)(cid:69)(cid:68)(cid:75)(cid:81)(cid:58)(cid:72)(cid:85)(cid:78)(cid:93)(cid:72)(cid:88)(cid:74)(cid:58)(cid:72)(cid:85)(cid:78)(cid:93)(cid:72)(cid:88)(cid:74)(cid:80)(cid:76)(cid:87)(cid:87)(cid:72)(cid:79)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:86)(cid:69)(cid:68)(cid:75)(cid:81)(cid:51)(cid:22)(cid:51)(cid:19)(cid:51)(cid:23)(cid:51)(cid:19)(cid:51)(cid:23)(cid:51)(cid:19)(cid:51)(cid:23)(cid:39)(cid:44)(cid:54)(cid:53)(cid:51)(cid:22)(cid:51)(cid:22)Grundlagen

2.10 Werkzeugradiuskorrekturen

Aufteilung der Bewegung vom Start- zum Endpunkt (G340 und G341)

Die Bewegungen setzen sich in jedem Fall aus einer oder mehreren Geraden sowie abhngig 
vom G-Befehl zur Bestimmung der Anfahrkontur aus einer weiteren Geraden bzw. einem 
Viertel- oder Halbkreis zusammen. Die 2 Varianten der Wegaufteilung sind in folgendem Bild 
dargestellt:

G340:

Anfahren mit einer Geraden vom Punkt P0 zum Punkt P1. Diese Gerade ist parallel zur 
Bearbeitungsebene, wenn der Parameter DISRP nicht programmiert wurde.

Senkrecht zur Bearbeitungsebene vom Punkt P1 zum Punkt P3 zustellen auf den durch den 
Parameter DISCL definierten Sicherheitsabstand zur Bearbeitungsebene.

Anfahren des Endpunkts P4 mit der durch den G-Befehl der zweiten Gruppe bestimmten 
Kurve (Gerade, Kreis, Helix). Ist G247 oder G347 aktiv (Viertel- oder Halbkreis) und der 
Startpunkt P3 liegt nicht in der durch den Endpunkt P4 definierten Bearbeitungsebene, wird 
statt eines Kreises eine Helix eingefgt. Der Punkt P2 ist nicht definiert bzw. er fllt mit P3 
zusammen.

Die Kreisebene bzw. die Helixachse wird dabei durch die in im WAB-Satz aktive Ebene (G17/
G18/G19) bestimmt, d. h. vom Folgesatz wird nicht die Starttangente selbst zur Bestimmung 
des Kreises verwendet, sondern deren Projektion in die aktive Ebene.

Die Bewegung vom Punkt P0 zum Punkt P3 erfolgt in zwei Geraden mit der Geschwindigkeit, 
die vor dem WAB-Satz wirksam war.

G341:

Anfahren mit einer Geraden vom Punkt P0 zum Punkt P1. Diese Gerade ist parallel zur 
Bearbeitungsebene, wenn der Parameter DISRP nicht programmiert wurde.

Senkrecht zur Bearbeitungsebene vom Punkt P1 bis zu dem durch den Parameter DISCL 
definierten Sicherheitsabstand zur Bearbeitungsebene im Punkt P2 zustellen.
Senkrecht zur Bearbeitungsebene vom Punkt P2 zum Punkt P3 zustellen. Anfahren des 
Endpunkts mit der durch den G-Befehl der zweiten Gruppe bestimmten Kurve. P3 und P4 
liegen in der Bearbeitungsebene, so dass bei G247 bzw. G347 nie eine Helix, sondern 
immer ein Kreis eingefgt wird.

In allen Fllen, in denen die Lage der aktiven Ebene G17/G18/G19 eingeht (Kreisebene, 
Helixachse, Zustellbewegungen senkrecht zur aktiven Ebene), wird ein eventuell aktiver 
drehender Frame bercksichtigt.

270

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:37)(cid:72)(cid:68)(cid:85)(cid:69)(cid:72)(cid:76)(cid:87)(cid:88)(cid:81)(cid:74)(cid:86)(cid:72)(cid:69)(cid:72)(cid:81)(cid:72)(cid:61)(cid:88)(cid:86)(cid:87)(cid:72)(cid:79)(cid:79)(cid:69)(cid:72)(cid:90)(cid:72)(cid:74)(cid:88)(cid:81)(cid:74)(cid:42)(cid:72)(cid:85)(cid:68)(cid:71)(cid:72)(cid:15)(cid:3)(cid:46)(cid:85)(cid:72)(cid:76)(cid:86)(cid:82)(cid:71)(cid:72)(cid:85)(cid:3)(cid:43)(cid:72)(cid:79)(cid:76)(cid:91)(cid:42)(cid:72)(cid:85)(cid:68)(cid:71)(cid:72)(cid:82)(cid:71)(cid:72)(cid:85)(cid:3)(cid:46)(cid:85)(cid:72)(cid:76)(cid:86)(cid:36)(cid:81)(cid:73)(cid:68)(cid:75)(cid:85)(cid:69)(cid:72)(cid:90)(cid:72)(cid:74)(cid:88)(cid:81)(cid:74)(cid:3)(cid:68)(cid:69)(cid:75)(cid:166)(cid:81)(cid:74)(cid:76)(cid:74)(cid:3)(cid:89)(cid:82)(cid:81)(cid:3)(cid:42)(cid:22)(cid:23)(cid:19)(cid:18)(cid:42)(cid:22)(cid:23)(cid:20)(cid:39)(cid:44)(cid:54)(cid:38)(cid:47)(cid:39)(cid:44)(cid:54)(cid:38)(cid:47)(cid:51)(cid:23)(cid:42)(cid:22)(cid:23)(cid:19)(cid:42)(cid:22)(cid:23)(cid:20)(cid:51)(cid:23)(cid:51)(cid:21)(cid:51)(cid:20)(cid:51)(cid:19)(cid:51)(cid:20)(cid:51)(cid:19)(cid:51)(cid:21)(cid:3)(cid:15)(cid:51)(cid:22)(cid:51)(cid:22)Grundlagen

2.10 Werkzeugradiuskorrekturen

Lnge der Anfahrgerade bzw. Radius bei Anfahrkreisen (DISR)

 An-/Abfahren mit Geraden

DISR gibt den Abstand der Frserkante vom Startpunkt der Kontur an, d. h. die Lnge der 
Geraden ergibt sich bei aktiver WRK als Summe von Werkzeugradius und programmiertem 
Wert von DISR. Der Werkzeugradius wird nur bercksichtigt, wenn er positiv ist.
Die resultierende Geradenlnge muss positiv sein, d. h. es sind negative Werte fr DISR 
zulssig, solange der Betrag von DISR kleiner als der Werkzeugradius ist.

 An-/Abfahren mit Kreisen

DISR gibt den Radius der Werkzeugmittelpunktsbahn an. Ist WRK aktiviert, wird ein Kreis 
mit einem solchen Radius erzeugt, dass auch in diesem Fall die Werkzeugmittelpunktsbahn 
mit dem programmierten Radius resultiert.

Abstand des Punktes P2 von der Bearbeitungsebene (DISCL)

Soll die Position des Punkts P2 auf der Achse senkrecht zur Kreisebene absolut angegeben 
werden, ist der Wert in der Form DISCL=AC(...) zu programmieren.

Bei DISCL=0 gilt:

 Bei G340: Die gesamte Anfahrbewegung besteht nur noch aus zwei Stzen (P1, P2 und P3 

fallen zusammen). Die Anfahrkontur wird von P1 zu P4 gebildet.

 Bei G341: Die gesamte Anfahrbewegung besteht aus drei Stzen (P2 und P3 fallen 
zusammen). Liegen P0 und P4 in der gleichen Ebene entstehen nur zwei Stze 
(Zustellbewegung von P1 nach P3 entfllt).

 Es wird berwacht, dass der durch DISCL definierte Punkt zwischen P1 und P3 liegt, d. h. bei 
allen Bewegungen, die eine Komponente senkrecht zur Bearbeitungsebene haben, muss 
diese Komponente das gleiche Vorzeichen haben.

 Bei der Erkennung der Richtungsumkehr wird eine durch das Maschinendatum 

MD20204 $MC_WAB_CLEARANCE_TOLERANCE definierte Toleranz zugelassen.

Abstand des Punkts P1 (Rckzugsebene) von der Bearbeitungsebene (DISRP)

Soll die Position des Punkts P1 auf der Achse senkrecht zur Bearbeitungsebene absolut 
angegeben werden, ist der Wert in der Form DISRP=AC(...) zu programmieren.

Ist dieser Parameter nicht programmiert, hat der Punkt P1 den gleichen Abstand von der 
Bearbeitungsebene wie der Punkt P0, d. h die Anfahrgerade P0  P1 ist parallel zur 
Bearbeitungsebene.

Es wird berwacht, dass der durch DISRP definierte Punkt zwischen P0 und P2 liegt, d. h. bei 
allen Bewegungen, die eine Komponente senkrecht zur Bearbeitungsebene haben 
(Zustellbewegungen, Anfahrbewegung von P3 nach P4) muss diese Komponente das gleiche 
Vorzeichen haben. Eine Richtungsumkehr ist nicht zugelassen. Gegebenenfalls wird ein Alarm 
ausgegeben.

Bei der Erkennung der Richtungsumkehr wird eine durch das Maschinendatum 
MD20204 $MC_WAB_CLEARANCE_TOLERANCE definierte Toleranz zugelassen. Liegt P1 
auerhalb des durch P0 und P2 definierten Bereichs, ist die Abweichung jedoch kleiner oder 
gleich dieser Toleranz, wird angenommen, dass P1 in der durch P0 bzw. P2 definierten Ebene 
liegt.

Programmierung des Endpunkts

Der Endpunkt wird in der Regel programmiert mit X... Y... Z...

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

271

Grundlagen

2.10 Werkzeugradiuskorrekturen

Die Programmierung des Konturendpunkts beim Anfahren unterscheidet sich wesentlich von 
der beim Abfahren. Die beiden Flle werden deshalb hier getrennt behandelt.

Programmierung des Endpunktes P4 beim Anfahren

Der Endpunkt P4 kann im WAB-Satz selbst programmiert sein. Alternativ dazu besteht die 
Mglichkeit, P4 durch den Endpunkt des nchsten Verfahrsatzes zu bestimmen. Zwischen 
WAB-Satz und nchsten Verfahrsatz knnen weitere Stze ohne Bewegung der 
Geometrieachsen eingefgt werden.

Beispiel:

Programmcode

$TC_DP1[1,1]=120

$TC_DP6[1,1]=7

N10 G90 G0 X0 Y0 Z30 D1 T1

N20 X10

N30 G41 G147 DISCL=3 DISR=13 Z=0 F1000

N40 G1 X40 Y-10

N50 G1 X50

...

Kommentar

; Frserwerkzeug T1/D1

; Werkzeug mit 7 mm Radius

N30/N40 kann ersetzt werden durch:
N30 G41 G147 DISCL=3 DISR=13 X40 Y-10 Z0 F1000

bzw.
N30 G41 G147 DISCL=3 DISR=13 F1000
N40 G1 X40 Y-10 Z0

Programmierung des Endpunktes P0 beim Abfahren

Beim Abfahren ist die Programmierung des Endpunkts der WAB-Kontur in einem Folgesatz 
nicht vorgesehen, d. h. die Endposition wird immer aus dem WAB-Satz selbst entnommen, 

272

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:37)(cid:72)(cid:68)(cid:85)(cid:69)(cid:72)(cid:76)(cid:87)(cid:88)(cid:81)(cid:74)(cid:3)(cid:69)(cid:76)(cid:86)(cid:3)(cid:93)(cid:88)(cid:3)(cid:71)(cid:76)(cid:72)(cid:86)(cid:72)(cid:80)(cid:3)(cid:51)(cid:88)(cid:81)(cid:78)(cid:87)(cid:3)(cid:80)(cid:76)(cid:87)(cid:3)(cid:42)(cid:19)(cid:15)(cid:3)(cid:71)(cid:68)(cid:81)(cid:68)(cid:70)(cid:75)(cid:3)(cid:80)(cid:76)(cid:87)(cid:3)(cid:42)(cid:20)(cid:3)(cid:41)(cid:20)(cid:19)(cid:19)(cid:19)(cid:46)(cid:82)(cid:81)(cid:87)(cid:88)(cid:85)(cid:19)(cid:20)(cid:19)(cid:21)(cid:19)(cid:22)(cid:19)(cid:23)(cid:19)(cid:24)(cid:19)(cid:59)(cid:16)(cid:20)(cid:19)(cid:60)(cid:39)(cid:44)(cid:54)(cid:53)(cid:32)(cid:20)(cid:22)(cid:51)(cid:23)(cid:61)(cid:32)(cid:22)(cid:19)(cid:61)(cid:32)(cid:22)(cid:3)(cid:61)(cid:32)(cid:19)(cid:3) 
 
 
 
 
 
Grundlagen

2.10 Werkzeugradiuskorrekturen

unabhngig davon wie viele Achsen programmiert wurden. Bei der Bestimmung des 
Endpunkts sind dabei die folgenden drei Flle zu unterscheiden:

1.

Im WAB-Satz ist keine Geometrieachse programmiert. Die Kontur endet in diesem Fall im 
Punkt P1 (falls DISRP programmiert ist), im Punkt P2 (falls DISCL aber nicht DISRP 
programmiert ist) oder im Punkt P3 (falls weder DICLS noch DISRP programmiert ist).
Die Position in den Achsen, die die Bearbeitungsebene bilden, ergibt sich aus der 
Wegfahrkontur (Endpunkt der Geraden bzw. des Kreises). Die Achskomponente senkrecht 
dazu wird durch DISCL bzw. DISPR definiert. Ist in diesem Fall sowohl DISCL=0 als auch 
DISRP=0, verluft die Bewegung deshalb vollstndig in der Ebene, d. h. die Punkt P0 bis P3 
fallen zusammen.

2.

Im WAB-Satz ist nur die Achse senkrecht zur Bearbeitungsebene programmiert. Die Kontur 
endet in diesem Fall im Punkt P0. Falls DISRP programmiert ist (d. h. die beiden Punkte P0 
und P1 fallen nicht zusammen), verluft die Gerade P1  P0 senkrecht zur 
Bearbeitungsebene. Die Positionen der brigen beiden Achsen ergeben sich wie unter 1.

3. Es ist mindestens eine Achse der Bearbeitungsebene programmiert. Die eventuell fehlende 
zweite Achse der Bearbeitungsebene wird aus ihrer letzten Position im Vorgngersatz 
modal ergnzt.

Die Position der Achse senkrecht zur Bearbeitungsebene wird  abhngig davon, ob diese 
Achse programmiert ist oder nicht  wie unter 1. oder 2. gebildet. Die so gebildete Position 
definiert den Endpunkt P0. Ist der WAB-Abfahrsatz gleichzeitig der Deaktivierungssatz der 
Werkzeugradiuskorrektur, so wird in den ersten beiden Fllen eine zustzliche 
Wegkomponente in der Bearbeitungsebene von P1 nach P0 derart eingefgt, dass sich bei der 
Deaktivierung der Werkzeugradiuskorrektur am Ende der Wegfahrkontur keine Bewegung 
ergibt, d. h. dieser Punkt definiert dann nicht eine Position auf einer zu korrigierenden Kontur, 
sondern den Werkzeugmittelpunkt. Im Fall drei muss die Abwahl der Werkzeugradiuskorrektur 
nicht gesondert behandelt werden, da der programmierte Punkt P0 bereits unmittelbar die 
Position des Werkzeugmittelpunkts am Ende der Gesamtkontur definiert.

Das Verhalten in den Fllen 1 und 2, d. h. bei nicht explizit programmiertem Endpunkt in der 
Bearbeitungsebene bei gleichzeitiger Abwahl der Werkzeugradiuskorrektur, ist in folgendem 
Bild dargestellt:

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

273

(cid:46)(cid:82)(cid:81)(cid:87)(cid:88)(cid:85)(cid:3)(cid:11)(cid:57)(cid:82)(cid:85)(cid:74)(cid:166)(cid:81)(cid:74)(cid:72)(cid:85)(cid:86)(cid:68)(cid:87)(cid:93)(cid:12)(cid:58)(cid:72)(cid:85)(cid:78)(cid:93)(cid:72)(cid:88)(cid:74)(cid:58)(cid:72)(cid:85)(cid:78)(cid:93)(cid:72)(cid:88)(cid:74)(cid:80)(cid:76)(cid:87)(cid:87)(cid:72)(cid:79)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:86)(cid:69)(cid:68)(cid:75)(cid:81)(cid:41)(cid:82)(cid:79)(cid:74)(cid:72)(cid:86)(cid:68)(cid:87)(cid:93)(cid:3)(cid:82)(cid:75)(cid:81)(cid:72)(cid:3)(cid:46)(cid:82)(cid:85)(cid:85)(cid:72)(cid:78)(cid:87)(cid:88)(cid:85)(cid:58)(cid:36)(cid:37)(cid:16)(cid:54)(cid:68)(cid:87)(cid:93)(cid:3)(cid:11)(cid:42)(cid:21)(cid:23)(cid:27)(cid:3)(cid:42)(cid:23)(cid:19)(cid:3)(cid:17)(cid:17)(cid:17)(cid:12)(cid:36)(cid:69)(cid:73)(cid:68)(cid:75)(cid:85)(cid:72)(cid:81)(cid:3)(cid:80)(cid:76)(cid:87)(cid:3)(cid:58)(cid:36)(cid:37)(cid:3)(cid:69)(cid:72)(cid:76)(cid:3)(cid:74)(cid:79)(cid:72)(cid:76)(cid:70)(cid:75)(cid:93)(cid:72)(cid:76)(cid:87)(cid:76)(cid:74)(cid:72)(cid:85)(cid:3)(cid:39)(cid:72)(cid:68)(cid:78)(cid:87)(cid:76)(cid:89)(cid:76)(cid:72)(cid:85)(cid:88)(cid:81)(cid:74)(cid:3)(cid:71)(cid:72)(cid:85)(cid:3)(cid:58)(cid:53)(cid:46)(cid:3)(cid:51)(cid:23)(cid:51)(cid:20)(cid:51)(cid:19)Grundlagen

2.10 Werkzeugradiuskorrekturen

An- bzw. Abfahrgeschwindigkeiten

 Geschwindigkeit des Vorgngersatzes (G0)

Mit dieser Geschwindigkeit werden alle Bewegungen von P0 bis zu P2 ausgefhrt, d. h. die 
Bewegung parallel zur Bearbeitungsebene und der Teil der Zustellbewegung bis zum 
Sicherheitsabstand.

 Programmierung mit FAD

Angabe der Vorschubgeschwindigkeit bei

 G341: Zustellbewegung senkrecht zur Bearbeitungsebene von P2 nach P3

 G340: von Punkt P2 bzw. P3 zum P4

Wird FAD nicht programmiert, wird dieser Teil der Kontur ebenfalls mit der modal 
wirksamen Geschwindigkeit des Vorgngersatzes, falls im WAB-Satz kein F-Wort 
programmiert ist, verfahren.

 Programmierter Vorschub F

Dieser Vorschubwert ist ab P3 bzw. P2 wirksam, falls FAD nicht programmiert ist. Wird im 
WAB-Satz kein F-Wort programmiert, wirkt die Geschwindigkeit des Vorgngersatzes.

Beispiel:

Programmcode

$TC_DP1[1,1]=120

$TC_DP6[1,1]=7

N10 G90 G0 X0 Y0 Z20 D1 T1

N20 G41 G341 G247 DISCL=AC(5) DISR=13 FAD 500 X40 Y-10 Z=0 F200

N30 X50

N40 X60

...

Kommentar

; Frserwerkzeug T1/D1

; Werkzeug mit 7mm Radius

Beim Abfahren sind die Rollen von modal wirksamem Vorschub aus dem Vorgngersatz und 
dem im WAB-Satz programmierten Vorschubwert vertauscht, d. h. die eigentliche 
Abfahrkontur wird mit dem alten Vorschub verfahren, eine neu mit F-Wort programmierte 
Geschwindigkeit gilt entsprechend ab P2 bis zum P0.

274

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:51)(cid:23)(cid:51)(cid:22)(cid:51)(cid:21)(cid:51)(cid:20)(cid:51)(cid:19)(cid:25)(cid:19)(cid:24)(cid:41)(cid:21)(cid:19)(cid:19)(cid:41)(cid:21)(cid:19)(cid:19)(cid:42)(cid:19)(cid:41)(cid:24)(cid:19)(cid:19)(cid:42)(cid:19)(cid:21)(cid:19)(cid:20)(cid:19)(cid:61)(cid:59)(cid:19)(cid:60)(cid:16)(cid:20)(cid:19)(cid:59)(cid:24)(cid:19)(cid:23)(cid:19)(cid:22)(cid:19)(cid:21)(cid:19)(cid:20)(cid:19)(cid:19) 
 
 
 
 
Grundlagen

2.10 Werkzeugradiuskorrekturen

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

275

(cid:78)(cid:72)(cid:76)(cid:81)(cid:72)(cid:3)(cid:42)(cid:72)(cid:86)(cid:70)(cid:75)(cid:90)(cid:17)(cid:3)(cid:83)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)(cid:76)(cid:72)(cid:85)(cid:87)(cid:3)(cid:81)(cid:88)(cid:85)(cid:3)(cid:41)(cid:3)(cid:83)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:17)(cid:81)(cid:88)(cid:85)(cid:3)(cid:41)(cid:36)(cid:39)(cid:3)(cid:83)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:17)(cid:41)(cid:3)(cid:88)(cid:81)(cid:71)(cid:3)(cid:41)(cid:36)(cid:39)(cid:3)(cid:83)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)(cid:76)(cid:72)(cid:85)(cid:87)(cid:40)(cid:76)(cid:79)(cid:74)(cid:68)(cid:81)(cid:74)(cid:3)(cid:73)(cid:68)(cid:79)(cid:79)(cid:86)(cid:3)(cid:42)(cid:19)(cid:3)(cid:68)(cid:78)(cid:87)(cid:76)(cid:89)(cid:3)(cid:76)(cid:86)(cid:87)(cid:15)(cid:3)(cid:68)(cid:81)(cid:71)(cid:72)(cid:85)(cid:81)(cid:73)(cid:68)(cid:79)(cid:79)(cid:86)(cid:3)(cid:80)(cid:76)(cid:87)(cid:3)(cid:71)(cid:72)(cid:80)(cid:3)(cid:68)(cid:79)(cid:87)(cid:72)(cid:81)(cid:3)(cid:69)(cid:93)(cid:90)(cid:17)(cid:3)(cid:81)(cid:72)(cid:88)(cid:72)(cid:81)(cid:3)(cid:41)(cid:16)(cid:58)(cid:82)(cid:85)(cid:87)(cid:42)(cid:72)(cid:86)(cid:70)(cid:75)(cid:90)(cid:76)(cid:81)(cid:71)(cid:76)(cid:74)(cid:78)(cid:72)(cid:76)(cid:87)(cid:3)(cid:71)(cid:72)(cid:86)(cid:3)(cid:57)(cid:82)(cid:85)(cid:74)(cid:166)(cid:81)(cid:74)(cid:72)(cid:85)(cid:86)(cid:68)(cid:87)(cid:93)(cid:72)(cid:86)(cid:3)(cid:11)(cid:68)(cid:79)(cid:87)(cid:72)(cid:86)(cid:3)(cid:41)(cid:16)(cid:58)(cid:82)(cid:85)(cid:87)(cid:12)(cid:48)(cid:76)(cid:87)(cid:3)(cid:41)(cid:36)(cid:39)(cid:3)(cid:83)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:17)(cid:3)(cid:61)(cid:88)(cid:86)(cid:87)(cid:72)(cid:79)(cid:79)(cid:74)(cid:72)(cid:86)(cid:70)(cid:75)(cid:90)(cid:76)(cid:81)(cid:71)(cid:76)(cid:74)(cid:78)(cid:72)(cid:76)(cid:87)(cid:48)(cid:76)(cid:87)(cid:3)(cid:41)(cid:3)(cid:83)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:17)(cid:3)(cid:81)(cid:72)(cid:88)(cid:72)(cid:3)(cid:80)(cid:82)(cid:71)(cid:68)(cid:79)(cid:3)(cid:90)(cid:76)(cid:85)(cid:78)(cid:86)(cid:68)(cid:80)(cid:72)(cid:3)(cid:42)(cid:72)(cid:86)(cid:70)(cid:75)(cid:90)(cid:76)(cid:81)(cid:71)(cid:76)(cid:74)(cid:78)(cid:72)(cid:76)(cid:87)(cid:3)(cid:42)(cid:72)(cid:86)(cid:70)(cid:75)(cid:90)(cid:76)(cid:81)(cid:71)(cid:76)(cid:74)(cid:78)(cid:72)(cid:76)(cid:87)(cid:72)(cid:81)(cid:3)(cid:76)(cid:81)(cid:3)(cid:71)(cid:72)(cid:81)(cid:3)(cid:58)(cid:36)(cid:37)(cid:16)(cid:55)(cid:72)(cid:76)(cid:79)(cid:86)(cid:166)(cid:87)(cid:93)(cid:72)(cid:81)(cid:3)(cid:69)(cid:72)(cid:76)(cid:80)(cid:3)(cid:36)(cid:81)(cid:73)(cid:68)(cid:75)(cid:85)(cid:72)(cid:81)(cid:3)(cid:80)(cid:76)(cid:87)(cid:3)(cid:42)(cid:22)(cid:23)(cid:19)(cid:51)(cid:19)(cid:51)(cid:20)(cid:51)(cid:21)(cid:18)(cid:51)(cid:22)(cid:51)(cid:23)(cid:42)(cid:72)(cid:86)(cid:70)(cid:75)(cid:90)(cid:76)(cid:81)(cid:71)(cid:76)(cid:74)(cid:78)(cid:72)(cid:76)(cid:87)(cid:72)(cid:81)(cid:3)(cid:76)(cid:81)(cid:3)(cid:71)(cid:72)(cid:81)(cid:3)(cid:58)(cid:36)(cid:37)(cid:16)(cid:55)(cid:72)(cid:76)(cid:79)(cid:86)(cid:166)(cid:87)(cid:93)(cid:72)(cid:81)(cid:3)(cid:69)(cid:72)(cid:76)(cid:80)(cid:3)(cid:36)(cid:81)(cid:73)(cid:68)(cid:75)(cid:85)(cid:72)(cid:81)(cid:3)(cid:80)(cid:76)(cid:87)(cid:3)(cid:42)(cid:22)(cid:23)(cid:20)(cid:3)(cid:48)(cid:76)(cid:87)(cid:3)(cid:41)(cid:3)(cid:83)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:17)(cid:3)(cid:81)(cid:72)(cid:88)(cid:72)(cid:3)(cid:80)(cid:82)(cid:71)(cid:68)(cid:79)(cid:3)(cid:90)(cid:76)(cid:85)(cid:78)(cid:86)(cid:68)(cid:80)(cid:72)(cid:3)(cid:42)(cid:72)(cid:86)(cid:70)(cid:75)(cid:90)(cid:76)(cid:81)(cid:71)(cid:76)(cid:74)(cid:78)(cid:72)(cid:76)(cid:87)(cid:3)(cid:48)(cid:76)(cid:87)(cid:3)(cid:41)(cid:36)(cid:39)(cid:3)(cid:83)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:17)(cid:3)(cid:61)(cid:88)(cid:86)(cid:87)(cid:72)(cid:79)(cid:79)(cid:74)(cid:72)(cid:86)(cid:70)(cid:75)(cid:90)(cid:76)(cid:81)(cid:71)(cid:76)(cid:74)(cid:78)(cid:72)(cid:76)(cid:87)(cid:42)(cid:72)(cid:86)(cid:70)(cid:75)(cid:90)(cid:76)(cid:81)(cid:71)(cid:76)(cid:74)(cid:78)(cid:72)(cid:76)(cid:87)(cid:3)(cid:71)(cid:72)(cid:86)(cid:3)(cid:57)(cid:82)(cid:85)(cid:74)(cid:166)(cid:81)(cid:74)(cid:72)(cid:85)(cid:86)(cid:68)(cid:87)(cid:93)(cid:72)(cid:86)(cid:3)(cid:11)(cid:68)(cid:79)(cid:87)(cid:72)(cid:86)(cid:3)(cid:41)(cid:16)(cid:58)(cid:82)(cid:85)(cid:87)(cid:12)(cid:3)(cid:40)(cid:76)(cid:79)(cid:74)(cid:68)(cid:81)(cid:74)(cid:3)(cid:73)(cid:68)(cid:79)(cid:79)(cid:86)(cid:3)(cid:42)(cid:19)(cid:3)(cid:68)(cid:78)(cid:87)(cid:76)(cid:89)(cid:3)(cid:76)(cid:86)(cid:87)(cid:15)(cid:3)(cid:68)(cid:81)(cid:71)(cid:72)(cid:85)(cid:81)(cid:73)(cid:68)(cid:79)(cid:79)(cid:86)(cid:3)(cid:80)(cid:76)(cid:87)(cid:3)(cid:71)(cid:72)(cid:80)(cid:3)(cid:68)(cid:79)(cid:87)(cid:72)(cid:81)(cid:3)(cid:69)(cid:93)(cid:90)(cid:17)(cid:3)(cid:81)(cid:72)(cid:88)(cid:72)(cid:81)(cid:3)(cid:41)(cid:16)(cid:58)(cid:82)(cid:85)(cid:87)(cid:41)(cid:3)(cid:88)(cid:81)(cid:71)(cid:3)(cid:41)(cid:36)(cid:39)(cid:3)(cid:83)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)(cid:76)(cid:72)(cid:85)(cid:87)(cid:81)(cid:88)(cid:85)(cid:3)(cid:41)(cid:36)(cid:39)(cid:3)(cid:83)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:17)(cid:81)(cid:88)(cid:85)(cid:3)(cid:41)(cid:3)(cid:83)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:17)(cid:78)(cid:72)(cid:76)(cid:81)(cid:72)(cid:3)(cid:42)(cid:72)(cid:86)(cid:70)(cid:75)(cid:90)(cid:17)(cid:3)(cid:83)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)(cid:76)(cid:72)(cid:85)(cid:87)(cid:3)(cid:51)(cid:23)(cid:51)(cid:22)(cid:51)(cid:21)(cid:51)(cid:20)(cid:51)(cid:19)(cid:78)(cid:72)(cid:76)(cid:81)(cid:72)(cid:3)(cid:42)(cid:72)(cid:86)(cid:70)(cid:75)(cid:90)(cid:17)(cid:3)(cid:83)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)(cid:76)(cid:72)(cid:85)(cid:87)(cid:3)(cid:81)(cid:88)(cid:85)(cid:3)(cid:41)(cid:3)(cid:83)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:17)(cid:81)(cid:88)(cid:85)(cid:3)(cid:41)(cid:36)(cid:39)(cid:3)(cid:83)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:17)(cid:41)(cid:3)(cid:88)(cid:81)(cid:71)(cid:3)(cid:41)(cid:36)(cid:39)(cid:3)(cid:83)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)(cid:76)(cid:72)(cid:85)(cid:87)(cid:42)(cid:72)(cid:86)(cid:70)(cid:75)(cid:90)(cid:76)(cid:81)(cid:71)(cid:76)(cid:74)(cid:78)(cid:72)(cid:76)(cid:87)(cid:3)(cid:71)(cid:72)(cid:86)(cid:3)(cid:57)(cid:82)(cid:85)(cid:74)(cid:166)(cid:81)(cid:74)(cid:72)(cid:85)(cid:86)(cid:68)(cid:87)(cid:93)(cid:72)(cid:86)(cid:3)(cid:11)(cid:68)(cid:79)(cid:87)(cid:72)(cid:86)(cid:3)(cid:41)(cid:16)(cid:58)(cid:82)(cid:85)(cid:87)(cid:12)(cid:3)(cid:48)(cid:76)(cid:87)(cid:3)(cid:41)(cid:36)(cid:39)(cid:3)(cid:83)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:17)(cid:3)(cid:53)(cid:190)(cid:70)(cid:78)(cid:93)(cid:88)(cid:74)(cid:86)(cid:74)(cid:72)(cid:86)(cid:70)(cid:75)(cid:90)(cid:76)(cid:81)(cid:71)(cid:76)(cid:74)(cid:78)(cid:72)(cid:76)(cid:87)(cid:48)(cid:76)(cid:87)(cid:3)(cid:41)(cid:3)(cid:83)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:17)(cid:3)(cid:81)(cid:72)(cid:88)(cid:72)(cid:3)(cid:80)(cid:82)(cid:71)(cid:68)(cid:79)(cid:3)(cid:90)(cid:76)(cid:85)(cid:78)(cid:86)(cid:68)(cid:80)(cid:72)(cid:3)(cid:42)(cid:72)(cid:86)(cid:70)(cid:75)(cid:90)(cid:76)(cid:81)(cid:71)(cid:76)(cid:74)(cid:78)(cid:72)(cid:76)(cid:87)(cid:3)(cid:42)(cid:72)(cid:86)(cid:70)(cid:75)(cid:90)(cid:76)(cid:81)(cid:71)(cid:76)(cid:74)(cid:78)(cid:72)(cid:76)(cid:87)(cid:72)(cid:81)(cid:3)(cid:76)(cid:81)(cid:3)(cid:71)(cid:72)(cid:81)(cid:3)(cid:58)(cid:36)(cid:37)(cid:16)(cid:55)(cid:72)(cid:76)(cid:79)(cid:86)(cid:166)(cid:87)(cid:93)(cid:72)(cid:81)(cid:3)(cid:69)(cid:72)(cid:76)(cid:80)(cid:3)(cid:36)(cid:69)(cid:73)(cid:68)(cid:75)(cid:85)(cid:72)(cid:81)(cid:3)(cid:40)(cid:76)(cid:79)(cid:74)(cid:68)(cid:81)(cid:74)(cid:3)(cid:73)(cid:68)(cid:79)(cid:79)(cid:86)(cid:3)(cid:42)(cid:19)(cid:3)(cid:68)(cid:78)(cid:87)(cid:76)(cid:89)(cid:3)(cid:76)(cid:86)(cid:87)(cid:15)(cid:3)(cid:68)(cid:81)(cid:71)(cid:72)(cid:85)(cid:81)(cid:73)(cid:68)(cid:79)(cid:79)(cid:86)(cid:3)(cid:80)(cid:76)(cid:87)(cid:3)(cid:71)(cid:72)(cid:80)(cid:3)(cid:68)(cid:79)(cid:87)(cid:72)(cid:81)(cid:3)(cid:69)(cid:93)(cid:90)(cid:17)(cid:3)(cid:81)(cid:72)(cid:88)(cid:72)(cid:81)(cid:3)(cid:41)(cid:16)(cid:58)(cid:82)(cid:85)(cid:87)(cid:51)(cid:23)(cid:51)(cid:22)(cid:51)(cid:21)(cid:51)(cid:20)(cid:51)(cid:19)Grundlagen

2.10 Werkzeugradiuskorrekturen

Lesen von Positionen

Die Punkte P3 und P4 knnen beim Anfahren als Systemvariable im WKS gelesen werden.

 $P_APR: Lesen von P 

 3 (Aufstartpunkt)

 $P_AEP: Lesen von P 

 4 (Konturanfangspunkt)

 $P_APDV: Lesen, ob $P_APR und $P_AEP gltige Werte enthalten 

2.10.4.2

An- und Abfahren mit erweiterten Abfahrstrategien (G460, G461, G462)

In bestimmten geometrischen Sonderfllen werden gegenber der bisherigen Realisierung mit 
eingeschalteter Kollisionsberwachung fr An- und Abfahrsatz, spezielle erweiterte An- und 
Abfahrstrategien beim Aktivieren bzw. Deaktivieren der Werkzeugradiuskorrektur bentigt. So 
kann z. B. eine Kollisionsberwachung dazu fhren, dass ein Abschnitt auf der Kontur nicht 
vollstndig bearbeitet wird, siehe folgendes Bild:

Bild 2-17

Abfahrverhalten bei G460

Syntax

Bedeutung

G460

G461

G462

G460:

G461:

Wie bisher (Einschalten der Kollisionsberwachung fr An- und Abfahrsatz)

Einfgen eines Kreises im WRK-Satz, wenn kein Schnittpunkt mglich ist, dessen Mittel
punkt im Endpunkt des nicht korrigierten Satzes liegt, und dessen Radius gleich dem Werk
zeugradius ist.

Bis zum Schnittpunkt wird mit Hilfskreis um den Konturendpunkt (also bis Konturende) be
arbeitet.

G462:

Einfgen einer Geraden im WRK-Satz, wenn kein Schnittpunkt mglich ist, der Satz wird 
durch seine Endtangente verlngert (Standardeinstellung)

Bearbeitet wird bis zur Verlngerung des letzten Konturelements (also bis kurz vor Kontu
rende).

276

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:48)(cid:76)(cid:87)(cid:87)(cid:72)(cid:79)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:86)(cid:69)(cid:68)(cid:75)(cid:81)(cid:3)(cid:80)(cid:76)(cid:87)(cid:3)(cid:58)(cid:72)(cid:85)(cid:78)(cid:93)(cid:72)(cid:88)(cid:74)(cid:85)(cid:68)(cid:71)(cid:76)(cid:88)(cid:86)(cid:78)(cid:82)(cid:85)(cid:85)(cid:72)(cid:78)(cid:87)(cid:88)(cid:85)(cid:83)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)(cid:76)(cid:72)(cid:85)(cid:87)(cid:72)(cid:3)(cid:46)(cid:82)(cid:81)(cid:87)(cid:88)(cid:85)(cid:58)(cid:72)(cid:85)(cid:78)(cid:93)(cid:72)(cid:88)(cid:74)(cid:85)(cid:68)(cid:71)(cid:76)(cid:88)(cid:86)(cid:20)(cid:19)(cid:21)(cid:19)(cid:24)(cid:19)(cid:20)(cid:19)(cid:19)(cid:20)(cid:19)(cid:49)(cid:21)(cid:19)(cid:49)(cid:22)(cid:19)(cid:60)(cid:59)(cid:49)(cid:20)(cid:19)Grundlagen

2.10 Werkzeugradiuskorrekturen

Hinweis

Das Anfahrverhalten ist symmetrisch zum Abfahrverhalten.

Das An- bzw. Abfahrverhalten wird vom Zustand des G-Befehls im An- bzw. Abfahrsatz 
bestimmt. Das Anfahrverhalten kann deshalb unabhngig vom Abfahrverhalten eingestellt 
werden.

Beispiele

Beispiel 1: Abfahrverhalten bei G460

Im Folgenden wird immer nur die Situation bei Deaktivieren der Werkzeugradiuskorrektur 
dargestellt. Das Verhalten beim Anfahren ist dazu vllig analog.

Programmcode

Kommentar

G42 D1 T1 

; Werkzeugradius 20mm

...

G1 X110 Y0

N10 X0

N20 Y10

N30 G40 X50 Y50

Beispiel 2: Anfahren bei G461

Programmcode

Kommentar

N10 $TC_DP1[1,1]=120

; Werkzeugtyp Frser

N20 $TC_DP6[1,1]=10

; Werkzeugradius

N30 X0 Y0 F10000 T1 D1

N40 Y20

N50 G42 X50 Y5 G461

N60 Y0 F600

N70 X30

N80 X20 Y-5

N90 X0 Y0 G40

N100 M30

Weitere Informationen

G461

Wenn kein Schnittpunkt des letzten WRK-Satzes mit einem Vorgngersatz mglich ist, wird die 
Offsetkurve dieses Satzes mit einem Kreis verlngert, dessen Mittelpunkt im Endpunkt des 
nicht korrigierten Satzes liegt, und dessen Radius gleich dem Werkzeugradius ist.

Die Steuerung versucht, diesen Kreis mit einem der Vorgngerstze zu schneiden.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

277

 
 
 
 
 
 
 
 
 
 
 
 
 
Grundlagen

2.10 Werkzeugradiuskorrekturen

Bild 2-18

Abfahrverhalten bei G461

Kollisionsberwachung CDON, CDOF

Dabei wird bei aktivem CDOF (siehe Abschnitt Kollisionsberwachung, CDON, CDOF) die 
Suche abgebrochen, wenn ein Schnittpunkt gefunden wurde, d. h. es wird nicht berprft, ob 
auch noch Schnittpunkte mit weiter in der Vergangenheit liegenden Stzen existieren.

Bei aktivem CDON wird auch dann, wenn bereits ein Schnittpunkt gefunden wurde, nach 
weiteren Schnittpunkten gesucht.

Ein so gefundener Schnittpunkt ist der neue Endpunkt eines Vorgngersatzes und der 
Startpunkt des Deaktivierungssatzes. Der eingefgte Kreis dient nur zur 
Schnittpunktberechnung und hat selbst keine Verfahrbewegung zur Folge.

Hinweis

Wird kein Schnittpunkt gefunden, wird der Alarm 10751 (Kollisionsgefahr) ausgegeben.

G462

Wenn kein Schnittpunkt des letzten WRK-Satzes mit einem Vorgngersatz mglich ist, wird 
beim Abfahren mit G462 (Grundstellung) im Endpunkt des letzen Satzes mit 
Werkzeugradiuskorrektur eine Gerade eingefgt (der Satz wird durch seine Endtangente 
verlngert).

Die Schnittpunktsuche verluft dann identisch zu der bei G461.

Abfahrverhalten bei G462 (siehe Beispiel)

Bei G462 wird die im Beispielprogramm von N10 und N20 gebildete Ecke nicht soweit 
ausgerumt, wie es mit dem verwendeten Werkzeug mglich wre. Dieses Verhalten kann 
aber dennoch notwendig sein, wenn die Teilekontur (abweichend von der programmierten 
Kontur) im Beispiel links von N20 auch bei greren Werten von y als 10 mm nicht verletzt 
werden darf.

278

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:43)(cid:76)(cid:79)(cid:73)(cid:86)(cid:78)(cid:88)(cid:85)(cid:89)(cid:72)(cid:48)(cid:76)(cid:87)(cid:87)(cid:72)(cid:79)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:86)(cid:69)(cid:68)(cid:75)(cid:81)(cid:3)(cid:80)(cid:76)(cid:87)(cid:3)(cid:58)(cid:72)(cid:85)(cid:78)(cid:93)(cid:72)(cid:88)(cid:74)(cid:85)(cid:68)(cid:71)(cid:76)(cid:88)(cid:86)(cid:78)(cid:82)(cid:85)(cid:85)(cid:72)(cid:78)(cid:87)(cid:88)(cid:85)(cid:83)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)(cid:76)(cid:72)(cid:85)(cid:87)(cid:72)(cid:3)(cid:46)(cid:82)(cid:81)(cid:87)(cid:88)(cid:85)(cid:20)(cid:19)(cid:21)(cid:19)(cid:24)(cid:19)(cid:20)(cid:19)(cid:19)(cid:20)(cid:19)(cid:49)(cid:21)(cid:19)(cid:49)(cid:22)(cid:19)(cid:60)(cid:59)(cid:49)(cid:20)(cid:19)(cid:43)(cid:76)(cid:79)(cid:73)(cid:86)(cid:78)(cid:88)(cid:85)(cid:89)(cid:72)(cid:48)(cid:76)(cid:87)(cid:87)(cid:72)(cid:79)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:86)(cid:69)(cid:68)(cid:75)(cid:81)(cid:3)(cid:80)(cid:76)(cid:87)(cid:3)(cid:58)(cid:72)(cid:85)(cid:78)(cid:93)(cid:72)(cid:88)(cid:74)(cid:85)(cid:68)(cid:71)(cid:76)(cid:88)(cid:86)(cid:78)(cid:82)(cid:85)(cid:85)(cid:72)(cid:78)(cid:87)(cid:88)(cid:85)(cid:83)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)(cid:76)(cid:72)(cid:85)(cid:87)(cid:72)(cid:3)(cid:46)(cid:82)(cid:81)(cid:87)(cid:88)(cid:85)(cid:20)(cid:19)(cid:21)(cid:19)(cid:24)(cid:19)(cid:20)(cid:19)(cid:19)(cid:20)(cid:19)(cid:49)(cid:21)(cid:19)(cid:49)(cid:22)(cid:19)(cid:60)(cid:59)(cid:49)(cid:20)(cid:19)Grundlagen

2.10 Werkzeugradiuskorrekturen

Eckenverhalten bei KONT

Ist KONT aktiv (Kontur im Start- oder Endpunkt umfahren), wird unterschieden, ob der 
Endpunkt vor oder hinter der Kontur liegt.

 Endpunkt vor der Kontur

Liegt der Endpunkt vor der Kontur, ist das Abfahrverhalten gleich wie bei NORM. Diese 
Eigenschaft ndert sich auch nicht, wenn der letzte Kontursatz bei G451 mit einer Geraden 
oder einem Kreis verlngert wird. Zustzliche Umfahrungsstrategien, um eine 
Konturverletzung in der Nhe des Konturendpunktes zu vermeiden, sind deshalb nicht 
notwendig.

 Endpunkt hinter der Kontur

Liegt der Endpunkt hinter der Kontur, wird immer abhngig von G450/G451 ein Kreis bzw. 
eine Gerade eingefgt. G460 - G462 hat dann keine Bedeutung. Hat der letzte Verfahrsatz 
in dieser Situation keinen Schnittpunkt mit einem Vorgngersatz, kann sich nun ein 
Schnittpunkt mit dem eingefgten Konturelement oder mit dem Geradenstck vom 
Endpunkt des Umfahrungskreises zum programmierten Endpunkt ergeben.
Ist das eingefgte Konturelement ein Kreis (G450), und dieses bildet mit dem 
Vorgngersatz einen Schnittpunkt, ist dieser gleich dem Schnittpunkt, der sich auch bei 
NORM und G461 ergeben wrde. Im allgemeinen bleibt jedoch ein zustzliches Stck des 
Kreises zu verfahren. Fr den linearen Teil des Abfahrsatzes ist keine 
Schnittpunktberechnung mehr notwendig.
Im zweiten Fall, wenn kein Schnittpunkt des eingefgten Konturelements mit den 
Vorgngerstzen gefunden wird, wird auf den Schnittpunkt zwischen der Abfahrgeraden 
und einem Vorgngersatz verfahren.
Es kann sich somit bei aktivem G461 bzw. G462 nur dann ein gegenber G460 verndertes 
Verhalten ergeben, wenn entweder NORM aktiv ist, oder das Verhalten bei KONT 
geometrisch bedingt identisch zu dem bei NORM ist.

2.10.5

Kollisionsberwachung ("Flaschenhalserkennung") ein-/ausschalten (CDON, 
CDOF, CDOF2)

Die Kollisionsberwachung ("Flaschenhalserkennung") bei aktiver WRK wird im NC-
Programm mit den Befehlen der G-Gruppe 23 ein- bzw. ausgeschaltet.

Syntax

G41/G42 CDON

...

CDOF/CDOF2

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

279

 
 
 
Grundlagen

2.10 Werkzeugradiuskorrekturen

Bedeutung

CDON:

Kollisionsberwachung ("Flaschenhalserkennung") einschalten

Mit CDON wird ber eine einstellbare (MD20240) Anzahl an Stzen hinweg berprft, ob 
sich die Werkzeugwege von nicht benachbarten Stzen schneiden. Hierdurch lassen sich 
mgliche Kollisionen rechtzeitig erkennen und aktiv durch die Steuerung verhindern.

CDOF:

Kollisionsberwachung ("Flaschenhalserkennung")  ausschalten

Mit CDOF wird fr den aktuellen Satz beim vorhergehenden Verfahrsatz (an Innenecken) 
nach einem gemeinsamen Schnittpunkt gesucht, gegebenenfalls auch in weiter zurck
liegenden Stzen. Wird ein Schnittpunkt gefunden, werden keine weiteren Stze betrach
tet. Bei Auenecken wird zwischen zwei aufeinander folgenden Stzen immer ein Schnitt
punkt gefunden.

Hinweis:
Mit CDOF lsst sich die fehlerhafte Erkennung von Engstellen vermeiden, die z. B. auf 
fehlende Informationen im NC-Programm zurckzufhren sind.

CDOF2:

Kollisionsberwachung fr das 3D-Umfangsfrsen ausschalten

Mit CDOF2 wird die Werkzeugkorrekturrichtung aus benachbarten Satzteilen ermittelt. 
CDOF2 wirkt nur beim 3D-Umfangsfrsen und hat bei allen anderen Bearbeitungsarten 
(z. B. 3D-Stirnfrsen) die gleiche Bedeutung wie CDOF.

Auswirkung der Kollisionsberwachung an einem Beispiel

Das NC-Programm beschreibt die Mittelpunktsbahn eines Normwerkzeugs. Die Kontur fr ein 
aktuell verwendetes Werkzeug ergibt ein Unterma, welches im folgenden Bild zur 
Verdeutlichung der geometrischen Verhltnisse unrealistisch gro dargestellt ist.

Auerdem soll fr das Beispiel gelten, dass die Steuerung nur drei Stze berblickt:

MD20240 $MC_CUTCOM_MAXNUM_CHECK_BLOCKS = 3

Da ein Schnittpunkt nur zwischen den Offsetkurven der beiden Stze N10 und N40 existiert, 
mssten die beiden Stze N20 und N30 ausgelassen werden. Im Beispiel ist der Steuerung der 
Satz N40 noch nicht bekannt, wenn N10 abschlieend bearbeitet werden muss. Damit kann 
nur ein einzelner Satz ausgelassen werden.

Bei aktiven CDOF2 wird die im Bild dargestellte Ausgleichsbewegung ausgefhrt und nicht 
angehalten. In dieser Situation wrde ein aktives CDOF oder CDON zu einem Alarm fhren.

280

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:55)(cid:72)(cid:76)(cid:79)(cid:72)(cid:78)(cid:82)(cid:81)(cid:87)(cid:88)(cid:85)(cid:36)(cid:88)(cid:86)(cid:74)(cid:79)(cid:72)(cid:76)(cid:70)(cid:75)(cid:86)(cid:16)(cid:69)(cid:72)(cid:90)(cid:72)(cid:74)(cid:88)(cid:81)(cid:74)(cid:56)(cid:81)(cid:87)(cid:72)(cid:85)(cid:80)(cid:68)(cid:161)(cid:49)(cid:82)(cid:85)(cid:80)(cid:80)(cid:68)(cid:161)(cid:50)(cid:73)(cid:73)(cid:86)(cid:72)(cid:87)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:76)(cid:80)(cid:3)(cid:54)(cid:87)(cid:68)(cid:85)(cid:87)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:89)(cid:82)(cid:81)(cid:3)(cid:49)(cid:21)(cid:19)(cid:50)(cid:73)(cid:73)(cid:86)(cid:72)(cid:87)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:76)(cid:80)(cid:3)(cid:40)(cid:81)(cid:71)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:89)(cid:82)(cid:81)(cid:3)(cid:49)(cid:20)(cid:19)(cid:51)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)(cid:76)(cid:72)(cid:85)(cid:87)(cid:72)(cid:3)(cid:50)(cid:85)(cid:76)(cid:74)(cid:76)(cid:81)(cid:68)(cid:79)(cid:69)(cid:68)(cid:75)(cid:81)(cid:3)(cid:11)(cid:49)(cid:82)(cid:85)(cid:80)(cid:90)(cid:72)(cid:85)(cid:78)(cid:93)(cid:72)(cid:88)(cid:74)(cid:12)(cid:46)(cid:82)(cid:85)(cid:85)(cid:76)(cid:74)(cid:76)(cid:72)(cid:85)(cid:87)(cid:72)(cid:54)(cid:82)(cid:79)(cid:79)(cid:69)(cid:68)(cid:75)(cid:81)(cid:11)(cid:50)(cid:73)(cid:73)(cid:86)(cid:72)(cid:87)(cid:78)(cid:88)(cid:85)(cid:89)(cid:72)(cid:12)(cid:49)(cid:21)(cid:19)(cid:49)(cid:20)(cid:19)(cid:49)(cid:22)(cid:19)(cid:49)(cid:23)(cid:19)(cid:49)(cid:24)(cid:19)2.10.6

2 1/2 D-Werkzeugkorrektur (CUT2D, CUT2DD, CUT2DF, CUT2DFD)

Grundlagen

2.10 Werkzeugradiuskorrekturen

Die 2 D-Werkzeugradiuskorrektur ist zu verwenden, wenn fr die Bearbeitung von schrgen 
Flchen nicht die Ausrichtung des Werkzeugs, sondern das Werkstck gedreht wird. Die 
Aktivierung erfolgt durch die Befehle CUT2D, CUT2DD, CUT2DF oder CUT2DFD.

Werkzeuglngenkorrektur

Die Werkzeuglngenkorrektur wird immer bezogen auf die raumfeste, nicht gedrehte 
Arbeitsebene eingerechnet.

2 D-Werkzeugradiuskorrektur fr Konturwerkzeuge

Die 2 D-Werkzeugradiuskorrektur fr Konturwerkzeuge wird aktiviert, wenn zusammen mit 
CUT2D, CUT2DD, CUT2DF oder CUT2DFD einer der beiden Befehle G41 
(Werkzeugradiuskorrektur links von der Kontur) oder G42 (Werkzeugradiuskorrektur rechts 
von der Kontur) programmiert wird. Sie dient zur automatischen Schneidenauswahl fr nicht 
rotationssymmetrische Werkzeuge, mit denen stckweise einzelne Kontursegmente 
bearbeitet werden knnen. 

Hinweis

Bei nicht aktiver 2 D-Werkzeugradiuskorrektur verhlt sich ein Konturwerkzeug wie ein 
normales Werkzeug, das nur aus der ersten Schneide besteht.

2 D-Werkzeugradiuskorrektur bezogen auf ein Differenzwerkzeug

Die auf ein Differenzwerkzeug bezogene 2 D-Werkzeugradiuskorrektur wird durch die 
Befehle CUT2DD oder CUT2DFD aktiviert. Sie ist anzuwenden, wenn sich die programmierte 
Kontur auf die Mittelpunktsbahn eines Differenzwerkzeugs bezieht und die Bearbeitung mit 
einem davon abweichenden Werkzeug erfolgt. Bei der Berechnung der 2 D-
Werkzeugradiuskorrektur werden dann nur der Verschleiwert des Radius des aktiven 
Werkzeugs ($TC_DP_15) und die gegebenenfalls programmierten Werkzeugkorrekturoffsets 
OFFN (Seite 246) und TOFFR (Seite 82) eingerechnet. Der Grundradius ($TC_DP6) des 
aktiven Werkzeugs wird nicht eingerechnet.

Syntax

Bedeutung

CUT2D
CUT2DD
CUT2DF
CUT2DFD

CUT2D:

CUT2DD:

CUT2DF:

CUT2DFD:

Aktivierung der 2 D-Radiuskorrektur

Aktivierung der auf ein Differenzwerkzeug bezogenen 2 D-Radiuskorrektur

Aktivierung der 2 D-Radiuskorrektur, Werkzeugradiuskorrektur relativ zum aktuellen 
Frame bzw. schrgen Ebene

Aktivierung der auf ein Differenzwerkzeug bezogenen 2 D-Radiuskorrektur relativ 
zum aktuellen Frame bzw. schrgen Ebene

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

281

Grundlagen

2.10 Werkzeugradiuskorrekturen

Weitere Informationen

Konturwerkzeuge

 Freigabe

Die Freigabe der Werkzeugradiuskorrektur fr Konturwerkzeuge erfolgt kanalspezifisch 
ber:
MD28290 $MC_MM_SHAPED_TOOLS_ENABLE

 Werkzeugtyp

Die Werkzeugtypen von Konturwerkzeugen werden kanalspezifisch festgelegt ber:
MD20370 $MC_SHAPED_TOOL_TYPE_NO

 Schneiden

Jedem Konturwerkzeug knnen in beliebiger Reihenfolge eine Anzahl Schneiden (D-
Nummern) zugeordnet werden. Die maximale Anzahl von Schneiden pro Werkzeug wird 
parametriert ber:
MD18106 $MN_MM_MAX_CUTTING_EDGE_PERTOOL
Die erste Schneide eines Konturwerkzeugs ist die Schneide, die bei der Aktivierung des 
Werkzeugs angewhlt wird. Wird z. B. in einem Programm durch die Befehle T3 D5 die 
fnfte Schneide (D5) des dritten Werkzeugs (T3) aktiviert, dann definiert D5 und die 
nachfolgenden Schneiden entweder mit einem Teil oder alle zusammen das 
Konturwerkzeug. Die vor D5 liegenden Schneiden werden ignoriert.

2 D-Werkzeugradiuskorrektur ohne Drehung der Korrekturebene (CUT2D, CUT2DD)

Wird ein Frame programmiert, der eine Drehung enthlt, wird bei CUT2D bzw. CUT2DD die 
Ebene, in der die Werkzeugradiuskorrektur (Korrekturebene) stattfindet, nicht mitgedreht. Die 
Werkzeugradiuskorrektur wird bezogen auf die nicht gedrehte Arbeitsebene (G17, G18, G19) 
eingerechnet. Die Werkzeuglngenkorrektur wirkt relativ zur Korrekturebene.

Fr die Bearbeitung von schrgen Flchen mssen die Werkzeugkorrekturwerte entsprechend 
definiert oder unter Einsatz der Funktionalitten zur "Werkzeuglngenkorrektur fr 
orientierbare Werkzeuge" berechnet werden.

282

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:61)(cid:61)(cid:59)(cid:59)Grundlagen

2.10 Werkzeugradiuskorrekturen

2 D-Werkzeugradiuskorrektur mit Drehung der Korrekturebene (CUT2DF, CUT2DFD) 

Wird ein Frame programmiert, der eine Drehung enthlt, wird bei CUT2DF bzw. CUT2DFD die 
Ebene, in der die Werkzeugradiuskorrektur (Korrekturebene) stattfindet, mitgedreht. Die 
Werkzeugradiuskorrektur wird bezogen auf die gedrehte Arbeitsebene (G17, G18, G19) 
eingerechnet. Die Werkzeuglngenkorrektur wirkt aber weiterhin relativ zur nicht gedrehten 
Arbeitsebene.

Voraussetzung: An der Maschine muss die Werkzeugorientierung senkrecht zur gedrehten 
Arbeitsebene einstellbar sein und zur Bearbeitung eingestellt werden.

Hinweis

Die Werkzeuglngenkorrektur wirkt weiterhin relativ zur nicht gedrehten Arbeitsebene.

Weitere Informationen siehe Funktionshandbuch "Werkzeuge".

2.10.7

Werkzeugradiuskorrektur konstant halten (CUTCONON, CUTCONOF)

Die Funktion "Werkzeugradiuskorrektur konstant halten" dient dazu, die 
Werkzeugradiuskorrektur fr eine Anzahl von Stzen zu unterdrcken, wobei jedoch eine 
durch die Werkzeugradiuskorrektur in vorhergehenden Stzen aufgebaute Differenz zwischen 
der programmierten und der tatschlich abgefahrenen Bahn des Werkzeugmittelpunkts als 
Verschiebung beibehalten wird. Sie kann z. B. dann vorteilhaft eingesetzt werden, wenn beim 
Zeilenfrsen in den Umkehrpunkten mehrere Verfahrstze notwendig sind, die von der 
Werkzeugradiuskorrektur erzeugten Konturen (Umfahrungsstrategien) jedoch nicht erwnscht 
sind. Sie ist unabhngig von der Art der Werkzeugradiuskorrektur (21/2D, 3D-Stirnfrsen, 3D-
Umfangsfsen) einsetzbar. 

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

283

(cid:61)(cid:61)(cid:59)(cid:59)Grundlagen

2.10 Werkzeugradiuskorrekturen

Syntax

Bedeutung

Beispiel

CUTCONON

CUTCONOF

CUTCONON:

CUTCONOF:

Befehl zum Einschalten der Funktion "Werkzeugradiuskorrektur konstant halten"

Befehl zum Ausschalten der Funktion "Werkzeugradiuskorrektur konstant halten"

Programmcode

N10

N20 $TC_DP1[1,1]= 110

N30 $TC_DP6[1,1]= 10.

N40

N50 X0 Y0 Z0 G1 G17 T1 D1 F10000

N60

N70 X20 G42 NORM

N80 X30

N90 Y20

N100 X10 CUTCONON

Kommentar

; Definition des Werkzeugs d1.

; Typ

; Radius

; Einschalten der Korrekturunterdr-
ckung.

284

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:46)(cid:82)(cid:81)(cid:87)(cid:88)(cid:85)(cid:3)(cid:80)(cid:76)(cid:87)(cid:3)(cid:58)(cid:53)(cid:46)(cid:46)(cid:82)(cid:81)(cid:87)(cid:88)(cid:85)(cid:3)(cid:82)(cid:75)(cid:81)(cid:72)(cid:3)(cid:58)(cid:53)(cid:46)(cid:16)(cid:20)(cid:19)(cid:24)(cid:19)(cid:60)(cid:59)(cid:49)(cid:20)(cid:23)(cid:19)(cid:49)(cid:20)(cid:22)(cid:19)(cid:49)(cid:20)(cid:21)(cid:19)(cid:49)(cid:20)(cid:20)(cid:19)(cid:49)(cid:20)(cid:19)(cid:19)(cid:49)(cid:28)(cid:19)(cid:49)(cid:27)(cid:19)(cid:49)(cid:26)(cid:19) 
 
 
 
 
 
Grundlagen

2.10 Werkzeugradiuskorrekturen

Kommentar

; Beim Ausschalten der Konturunter-
drckung ggf. Umfahrungskreis einf-
gen.

; Kein Umfahrungskreis beim Ausschal-
ten der WRK.

Programmcode

N110 Y30 KONT

N120 X-10 CUTCONOF

N130 Y20 NORM

N140 X0 Y0 G40

N150 M30

Weitere Informationen

Im Normalfall ist vor der Aktivierung der Korrekturunterdrckung die Werkzeugradiuskorrektur 
bereits aktiv, und sie ist noch aktiv, wenn die Korrekturunterdrckung wieder deaktiviert wird. 
Im letzen Verfahrsatz vor CUTCONON wird auf den Offsetpunkt im Satzendpunkt gefahren. Alle 
folgenden Stze, in denen die Korrekturunterdrckung aktiv ist, werden ohne Korrektur 
verfahren. Sie werden dabei jedoch um den Vektor vom Endpunkt des letzten Korrektursatzes 
zu dessen Offsetpunkt verschoben. Der Interpolationstyp dieser Stze (linear, zirkular, 
polynomisch) ist beliebig.

Der Deaktivierungssatz der Korrekturunterdrckung, d. h. der Satz, der CUTCONOF enthlt, 
wird normal korrigiert. Er beginnt im Offsetpunkt des Startpunkts. Zwischen dem Endpunkt des 
Vorgngersatzes, d. h. des letzten programmierten Verfahrsatzes mit aktivem CUTCONON, und 
diesem Punkt wird ein linearer Satz eingefgt.

Kreisstze, bei denen die Kreisebene senkrecht auf der Korrekturebene steht (vertikale 
Kreise), werden so behandelt, als ob in ihnen CUTCONON programmiert wre. Diese implizite 
Aktivierung der Korrekturunterdrckung wird im ersten Verfahrsatz, der eine Verfahrbewegung 
in der Korrekturebene enthlt und der kein derartiger Kreis ist, automatisch rckgngig 
gemacht. Vertikale Kreise in diesem Sinne knnen nur beim Umfangsfrsen auftreten.

2.10.8

Werkzeuge mit relevanter Schneidenlage

Bei Werkzeugen mit relevanter Schneidenlage (Dreh- und Schleifwerkzeuge, Werkzeugtypen 
400-599; siehe Kapitel "Vorzeichenbewertung Verschlei" wird ein Wechsel von G40 nach 
G41/G42 bzw. umgekehrt wie ein Werkzeugwechsel betrachtet. Dies fhrt bei aktiver 
Transformation (z. B. TRANSMIT) zu einem Vorlaufstopp (Decodierungsstopp) und damit ggf. 
zu Abweichungen von der beabsichtigten Teilekontur.     

Diese ursprngliche Funktionalitt ndert sich hinsichtlich:

1. Vorlaufstopp bei TRANSMIT

2. Berechnung von Schnittpunkten beim An- bzw. Abfahren mit KONT

3. Wechsel eines Werkzeugs bei aktiver Werkzeugradiuskorrrektur

4. Werkzeugradiuskorrektur mit variabler Werkzeugorientierung bei Transformation

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

285

 
 
 
Grundlagen

2.10 Werkzeugradiuskorrekturen

Weitere Informationen

Die ursprngliche Funktionalitt wurde wie folgt gendert:

 Der Wechsel von G40 nach G41/G42 und umgekehrt wird nicht mehr als Werkzeugwechsel 

behandelt. Bei TRANSMIT kommt es deshalb nicht mehr zu einem Vorlaufstopp.

 Fr die Berechnung von Schnittpunkten mit dem An- bzw. Abfahrsatz wird die Gerade 

zwischen den Schneidenmittelpunkten am Satzanfang und am Satzende verwendet. Die 
Differenz zwischen Schneidenbezugspunkt und Schneidenmittelpunkt wird dieser 
Bewegung berlagert. 
Beim An- bzw. Abfahren mit KONT (Werkzeug umfhrt den Konturpunkt; siehe 
vorhergehenden Abschnitt "Kontur anfahren und verlassen") erfolgt die berlagerung im 
linearen Teilsatz der An- bzw. Abfahrbewegung. Die geometrischen Verhltnisse sind 
deshalb bei Werkzeugen mit und ohne relevante Schneidenlage identisch. Unterschiede 
zum bisherigen Verhalten ergeben sich nur in den relativ seltenen Fllen, dass der An- bzw. 
Abfahrsatz mit einem nicht benachbarten Verfahrsatz einen Schnittpunkt bildet, siehe 
folgendes Bild:

286

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:79)(cid:72)(cid:87)(cid:93)(cid:87)(cid:72)(cid:3)(cid:51)(cid:82)(cid:86)(cid:76)(cid:87)(cid:76)(cid:82)(cid:81)(cid:3)(cid:71)(cid:72)(cid:86)(cid:3)(cid:54)(cid:70)(cid:75)(cid:81)(cid:72)(cid:76)(cid:71)(cid:72)(cid:81)(cid:80)(cid:76)(cid:87)(cid:87)(cid:72)(cid:79)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:72)(cid:86)(cid:3)(cid:68)(cid:81)(cid:3)(cid:71)(cid:72)(cid:85)(cid:3)(cid:46)(cid:82)(cid:81)(cid:87)(cid:88)(cid:85)(cid:51)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)(cid:76)(cid:72)(cid:85)(cid:87)(cid:72)(cid:85)(cid:3)(cid:36)(cid:69)(cid:73)(cid:68)(cid:75)(cid:85)(cid:86)(cid:68)(cid:87)(cid:93)(cid:54)(cid:68)(cid:87)(cid:93)(cid:3)(cid:82)(cid:75)(cid:81)(cid:72)(cid:3)(cid:54)(cid:70)(cid:75)(cid:81)(cid:76)(cid:87)(cid:87)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:3)(cid:80)(cid:76)(cid:87)(cid:3)(cid:57)(cid:82)(cid:85)(cid:74)(cid:166)(cid:81)(cid:16)(cid:74)(cid:72)(cid:85)(cid:86)(cid:68)(cid:87)(cid:93)(cid:3)(cid:54)(cid:70)(cid:75)(cid:81)(cid:72)(cid:76)(cid:71)(cid:72)(cid:81)(cid:69)(cid:72)(cid:93)(cid:88)(cid:74)(cid:86)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:54)(cid:70)(cid:75)(cid:81)(cid:72)(cid:76)(cid:71)(cid:72)(cid:81)(cid:80)(cid:76)(cid:87)(cid:87)(cid:72)(cid:79)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:58)(cid:72)(cid:85)(cid:78)(cid:93)(cid:72)(cid:88)(cid:74)(cid:72)(cid:81)(cid:71)(cid:79)(cid:68)(cid:74)(cid:72)(cid:54)(cid:70)(cid:75)(cid:81)(cid:72)(cid:76)(cid:71)(cid:72)(cid:81)(cid:69)(cid:72)(cid:93)(cid:88)(cid:74)(cid:86)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:48)(cid:76)(cid:87)(cid:87)(cid:72)(cid:79)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:86)(cid:69)(cid:68)(cid:75)(cid:81)(cid:79)(cid:72)(cid:87)(cid:93)(cid:87)(cid:72)(cid:3)(cid:51)(cid:82)(cid:86)(cid:76)(cid:87)(cid:76)(cid:82)(cid:81)(cid:3)(cid:71)(cid:72)(cid:86)(cid:3)(cid:54)(cid:70)(cid:75)(cid:81)(cid:72)(cid:76)(cid:71)(cid:72)(cid:81)(cid:80)(cid:76)(cid:87)(cid:87)(cid:72)(cid:79)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:86)Grundlagen

2.10 Werkzeugradiuskorrekturen

 Der Wechsel eines Werkzeugs bei aktiver Werkzeugradiuskorrektur, bei dem sich der 
Abstand zwischen Schneidenmittelpunkt und Schneidenbezugspunkt ndert, ist in 
Kreisstzen und in Verfahrstzen mit rationalen Polynomen mit einem Nennergrad > 4 
verboten. Bei anderen Interpolationsarten ist ein Wechsel im Gegensatz zum bisherigen 
Zustand auch bei aktiver Transformation (z.B. TRANSMIT) zulssig.

 Bei der Werkzeugradiuskorrektur mit variabler Werkzeugorientierung ist die Transformation 
vom Schneidenbezugspunkt auf den Schneidenmittelpunkt nicht mehr durch eine einfache 
Nullpunktverschiebung realisierbar. Werkzeuge mit relevanter Schneidenlage werden 
deshalb beim 3D-Umfangsfrsen verboten (Alarm).

Hinweis

Fr das Stirnfrsen ist das Thema nicht relevant, da hier ohnehin auch bisher nur definierte 
Werkzeugtypen ohne relevante Schneidenlage zugelassen sind. (Werkzeuge mit einem 
nicht ausdrcklich zugelassenen Werkzeugtyp werden als Kugelkopffrser mit dem 
angegebenen Radius behandelt. Die Angabe einer Schneidenlage wird ignoriert.)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

287

Grundlagen

2.11 Bahnfahrverhalten

2.11

Bahnfahrverhalten

2.11.1

Genauhalt (G60, G9, G601, G602, G603)

Genauhalt ist ein Verfahrmodus, bei dem am Ende eines jeden Verfahrsatzes alle an der 
Verfahrbewegung beteiligten Bahnachsen und Zusatzachsen, die nicht satzbergreifend 
verfahren, bis zum Stillstand abgebremst werden. 

Genauhalt wird verwendet, wenn scharfe Auenecken hergestellt oder Innenecken auf Ma 
geschlichtet werden sollen.

Mit dem Genauhalt-Kriterium wird festgelegt, wie genau der Eckpunkt angefahren und wann 
zum nchsten Satz weitergeschaltet wird:

 "Genauhalt fein"

Der Satzwechsel erfolgt, sobald fr alle an der Verfahrbewegung beteiligten Achsen die 
achsspezifischen Toleranzgrenzen fr "Genauhalt fein" erreicht sind. 
"Genauhalt fein" wird eingestellt ber: MD36010 $MA_STOP_LIMIT_FINE[<Achse>]

 "Genauhalt grob"

Der Satzwechsel erfolgt, sobald fr alle an der Verfahrbewegung beteiligten Achsen die 
achsspezifischen Toleranzgrenzen fr "Genauhalt grob" erreicht sind.
"Genauhalt grob" wird eingestellt ber: MD36000 $MA_STOP_LIMIT_COARSE[<Achse>]

 "Interpolator-Ende"

Der Satzwechsel erfolgt, sobald die Steuerung fr alle an der Verfahrbewegung beteiligten 
Achsen die Sollgeschwindigkeit Null errechnet hat. Die Istposition bzw. der Schleppabstand 
der beteiligten Achsen werden nicht betrachtet.

Syntax

Bedeutung

G60 ...
G9 ...
G601/G602/G603 ...

Befehl zum Einschalten des modal wirksamen Genauhalts

Befehl zum Einschalten des satzweise wirksamen Genauhalts

Befehl zum Aktivieren von Genauhalt-Kriterium "Genauhalt fein"

Befehl zum Aktivieren von Genauhalt-Kriterium "Genauhalt grob"

Befehl zum Aktivieren von Genauhalt-Kriterium "Interpolator-Ende"

G60:

G9:

G601:

G602:

G603:

Hinweis

Die Befehle zum Aktivieren der Genauhalt-Kriterien (G601 / G602 / G603) sind nur wirksam bei 
aktivem G60 oder G9.

288

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Grundlagen

2.11 Bahnfahrverhalten

Beispiel

Programmcode

Kommentar

N5 G602

; Kriterium "Genauhalt grob" angewhlt.

N10 G0 G60 Z...

; Genauhalt modal aktiv.

N20 X... Z...

; G60 wirkt weiterhin.

...

N50 G1 G601

N80 G64 Z...

...

N100 G0 G9

N110 ...

; Kriterium "Genauhalt fein" angewhlt.

; Umschalten auf Bahnsteuerbetrieb.

; Genauhalt wirkt nur in diesen Satz.

; Bahnsteuerbetrieb wieder aktiv.

Weitere Informationen

G60, G9

G9 erzeugt im aktuellen Satz den Genauhalt, G60 im aktuellen Satz und in allen nachfolgenden 
Stzen.

Mit den Bahnsteuerbetrieb-Befehlen G64 oder G641 ... G645 wird G60 ausgeschaltet.

G601, G602

Die Bewegung wird abgebremst und am Eckpunkt kurz angehalten.

Hinweis

Die Grenzen fr die Genauhalt-Kriterien sollten nur so eng wie ntig gesetzt sein. Je enger die 
Grenzen gefasst sind, desto lnger dauern der Lageabgleich und das Anfahren der 
Zielposition.

G603

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

289

(cid:83)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)(cid:76)(cid:72)(cid:85)(cid:87)(cid:72)(cid:3)(cid:37)(cid:68)(cid:75)(cid:81)(cid:69)(cid:72)(cid:76)(cid:3)(cid:42)(cid:25)(cid:19)(cid:20)(cid:54)(cid:68)(cid:87)(cid:93)(cid:90)(cid:72)(cid:76)(cid:87)(cid:72)(cid:85)(cid:86)(cid:70)(cid:75)(cid:68)(cid:79)(cid:87)(cid:88)(cid:81)(cid:74)(cid:69)(cid:72)(cid:76)(cid:3)(cid:42)(cid:25)(cid:19)(cid:21) 
 
Grundlagen

2.11 Bahnfahrverhalten

Der Satzwechsel wird eingeleitet, wenn die Steuerung fr die beteiligten Achsen die 
Sollgeschwindigkeit Null errechnet hat. Zu diesem Zeitpunkt liegt der Istwert  abhngig von 
der Dynamik der Achsen und der Bahngeschwindigkeit  um einen Nachlaufanteil zurck. 
Hierdurch lassen sich Werkstckecken verschleifen.

Projektiertes Genauhalt-Kriterium

Fr G0 und die brigen Befehle der 1. G-Gruppe kann kanalspezifisch hinterlegt sein, dass 
abweichend vom programmierten Genauhalt-Kriterium automatisch ein voreingestelltes 
Kriterium verwendet wird (siehe Angaben des Maschinenherstellers!).

2.11.2

Bahnsteuerbetrieb (G64, G641, G642, G643, G644, G645, ADIS, ADISPOS)

Im Bahnsteuerbetrieb wird die Bahngeschwindigkeit am Satzende zum Satzwechsel nicht auf 
eine Geschwindigkeit abgebremst, die ein Erreichen des Genauhaltkriteriums ermglicht. Ziel 
ist dagegen, ein greres Abbremsen der Bahnachsen am Satzwechselpunkt zu vermeiden, 
um mit mglichst gleicher Bahngeschwindigkeit in den nchsten Satz zu wechseln. Um dieses 
Ziel zu erreichen, wird mit Anwahl des Bahnsteuerbetriebs zustzlich die Funktion 
"Vorausschauende Geschwindigkeitsfhrung (LookAhead)" aktiviert. 

Bahnsteuerbetrieb mit berschleifen bedeutet, dass knickfrmige Satzbergnge durch lokale 
nderungen des programmierten Verlaufs tangential gestaltet bzw. geglttet werden.

Bahnsteuerbetrieb bewirkt:

 eine Verrundung der Kontur

 krzere Bearbeitungszeiten durch fehlende Brems- und Beschleunigungsvorgnge, die fr 

das Erreichen des Genauhaltkriteriums bentigt werden.

 bessere Schnittbedingungen durch den gleichmigeren Geschwindigkeitsverlauf.

290

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:83)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)(cid:76)(cid:72)(cid:85)(cid:87)(cid:72)(cid:3)(cid:37)(cid:68)(cid:75)(cid:81)(cid:89)(cid:72)(cid:85)(cid:73)(cid:68)(cid:75)(cid:85)(cid:72)(cid:81)(cid:72)(cid:3)(cid:37)(cid:68)(cid:75)(cid:81)(cid:3)(cid:80)(cid:76)(cid:87)(cid:3)(cid:41)(cid:20)(cid:89)(cid:72)(cid:85)(cid:73)(cid:68)(cid:75)(cid:85)(cid:72)(cid:81)(cid:72)(cid:3)(cid:37)(cid:68)(cid:75)(cid:81)(cid:3)(cid:80)(cid:76)(cid:87)(cid:3)(cid:41)(cid:21)(cid:41)(cid:20)(cid:3)(cid:31)(cid:3)(cid:41)(cid:21)(cid:54)(cid:68)(cid:87)(cid:93)(cid:90)(cid:72)(cid:70)(cid:75)(cid:86)(cid:72)(cid:79)Grundlagen

2.11 Bahnfahrverhalten

Bahnsteuerbetrieb ist sinnvoll, wenn:

 eine Kontur mglichst zgig abgefahren werden soll (z. B. mit Eilgang).

 der exakte Verlauf im Rahmen eines Fehlerkriteriums vom programmierten abweichen darf, 

um einen durchgehend stetigen Verlauf zu erzeugen.

Bahnsteuerbetrieb ist nicht sinnvoll, wenn:

 eine Kontur exakt abgefahren werden soll.

 absolute Geschwindigkeitskonstanz erforderlich ist.

Hinweis

Der Bahnsteuerbetrieb wird durch Stze unterbrochen, die implizit Vorlaufstopp auslsen, z. B. 
durch:

 Zugriff auf bestimmte Zustandsdaten der Maschine ($A...)
 Hilfsfunktionsausgaben

Syntax

Bedeutung

G64 ...
G641 ADIS=
G641 ADISPOS=
G642 ...
G643 ...
G644 ...
G645 ...

G64:

G641:

Bahnsteuerbetrieb mit Geschwindigkeitsabsenkung gem berlastfaktor

Bahnsteuerbetrieb mit berschleifen nach Wegkriterium

ADIS=... :

Wegkriterium bei G641 fr die Bahnfunktionen G1, G2, G3, 

ADISPOS=... :

Wegkriterium bei G641 fr Eilgang G0

Das Wegkriterium (= berschleifabstand) ADIS bzw. ADISPOS beschreibt die 
Strecke, die der berschleifsatz vor dem Satzende frhestens beginnen darf, 
bzw. die Strecke nach Satzende, in der der berschleifsatz beendet sein muss.

Hinweis:
Wenn kein ADIS/ADISPOS programmiert wird, dann gilt der Wert "Null" und 
damit das Fahrverhalten wie bei G64. Bei kurzen Fahrwegen wird der ber
schleifabstand automatisch reduziert (bis max. 36 %).

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

291

 
Grundlagen

2.11 Bahnfahrverhalten

G642:

Bahnsteuerbetrieb mit berschleifen unter Einhaltung definierter Toleranzen

In diesem Modus erfolgt das berschleifen im Normalfall unter Einhaltung der 
maximal erlaubten Bahnabweichung. Anstelle dieser achsspezifischen Tole
ranz kann aber auch die Einhaltung der maximalen Konturabweichung (Kontur
toleranz) oder der maximalen Winkelabweichung der Werkzeugorientierung 
(Orientierungstoleranz) konfiguriert sein.

Hinweis:
Die Erweiterung um Kontur- und Orientierungstoleranz existiert nur in Systemen 
mit vorhandener Option "Polynominterpolation".

G643:

Bahnsteuerbetrieb mit berschleifen unter Einhaltung definierter Toleranzen 
(satzintern)

Mit G643 wird im Gegensatz zu G642 kein eigener berschleifsatz gebildet, 
sondern es werden achsspezifisch satzinterne berschleifbewegungen einge
fgt. Der berschleifweg kann fr jede Achse unterschiedlich sein.

G644:

Bahnsteuerbetrieb mit berschleifen mit maximal mglicher Dynamik

Hinweis:
G644 ist bei aktiver Kinematischer Transformation nicht mglich. Es wird intern 
auf G642 umgeschaltet.

Bahnsteuerbetrieb mit berschleifen von Ecken und tangentialer Satzbergn
ge unter Einhaltung definierter Toleranzen

G645 arbeitet an Ecken gleich wie G642. Mit G645 werden lediglich auch bei 
tangentialen Satzbergngen berschleifstze gebildet, wenn der Krmmungs
verlauf der Originalkontur in mindestens einer Achse einen Sprung aufweist.

G645:

Hinweis

berschleifen ist kein Ersatz fr Eckenrunden (RND). Der Anwender sollte keine Annahme 
darber treffen, wie die Kontur innerhalb des berschleifbereichs aussieht. Insbesondere kann 
die Art des berschleifens auch von dynamischen Gegebenheiten, z. B. der 
Bahngeschwindigkeit abhngen. berschleifen an der Kontur macht daher nur mit 
kleinen ADIS-Werten einen Sinn. Wenn an der Ecke eine definierte Kontur gefahren werden 
soll, muss RND verwendet werden.

Hinweis

Wird eine durch G641, G642, G643, G644 oder G645 erzeugte berschleifbewegung 
unterbrochen, wird beim nachfolgenden Repositionieren (REPOS) nicht der 
Unterbrechungspunkt angefahren, sondern der Anfangs- oder Endpunkt des originalen 
Verfahrsatzes (je nach REPOS-Modus).

292

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Beispiel

Grundlagen

2.11 Bahnfahrverhalten

Die beiden Auenecken an der Nut sollen exakt angefahren werden. Ansonsten soll im 
Bahnsteuerbetrieb gefertigt werden.

Programmcode

N05 DIAMOF

N10 G17 T1 G41 G0 X10 Y10 Z2 S300 M3

N20 G1 Z-7 F8000

N30 G641 ADIS=0.5

N40 Y40

N50 X60 Y70 G60 G601

N60 Y50

N70 X80

N80 Y70

Kommentar

; Radius als Maangabe.

; Startposition anfahren, Spindel 
einschalten, Bahnkorrektur.

; Werkzeug zustellen.

; Konturbergnge werden verschlif-
fen.

; Position exakt mit Genauhalt fein 
anfahren.

N90 G641 ADIS=0.5 X100 Y40

; Konturbergnge werden verschlif-
fen.

N100 X80 Y10

N110 X10

N120 G40 G0 X-20

N130 Z10 M30

Weitere Informationen

Bahnsteuerbetrieb G64

; Bahnkorrektur ausschalten.

; Werkzeug wegfahren, Programmende.

Im Bahnsteuerbetrieb fhrt das Werkzeug bei tangentialen Konturbergngen mit mglichst 
konstanter Bahngeschwindigkeit (kein Abbremsen an den Satzgrenzen). Vor Ecken und 
Stzen mit Genauhalt wird vorausschauend gebremst (LookAhead).

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

293

(cid:42)(cid:72)(cid:81)(cid:68)(cid:88)(cid:75)(cid:68)(cid:79)(cid:87)(cid:3)(cid:73)(cid:72)(cid:76)(cid:81)(cid:20)(cid:19)(cid:20)(cid:19)(cid:60)(cid:59)(cid:60)(cid:61)(cid:26)(cid:25)(cid:19)(cid:27)(cid:19)(cid:20)(cid:19)(cid:19)(cid:26)(cid:19)(cid:24)(cid:19)(cid:23)(cid:19) 
 
 
 
 
 
Grundlagen

2.11 Bahnfahrverhalten

Ecken werden ebenfalls stetig umfahren. Zur Verringerung des Konturfehlers wird die 
Geschwindigkeit unter Bercksichtigung einer Beschleunigungsgrenze und eines 
berlastfaktors entsprechend reduziert.

Hinweis

Wie stark die Konturbergnge verschliffen werden, hngt von der Vorschubgeschwindigkeit 
und dem berlastfaktor ab. Der berlastfaktor ist im 
MD32310 $MA_MAX_ACCEL_OVL_FACTOR einstellbar.

Durch Setzen von MD20490 $MC_IGNORE_OVL_FACTOR_FOR_ADIS werden 
Satzbergnge immer unabhngig vom eingestellten berlastfaktor berschliffen.

Um einen unerwnschten Stopp der Bahnbewegung zu vermeiden (Freischneiden!), sind 
folgende Punkte zu beachten:

 Hilfsfunktionen, die nach Bewegungsende oder vor der nchsten Bewegung geschaltet 
werden, unterbrechen den Bahnsteuerbetrieb (Ausnahme: Schnelle Hilfsfunktionen).

 Positionierachsen fahren immer nach dem Genauhaltprinzip, Positionierfenster fein (wie 
G601). Falls in einem NC-Satz auf Positionierachsen gewartet werden muss, wird der 
Bahnsteuerbetrieb der Bahnachsen unterbrochen.

Zwischenprogrammierte Stze nur mit Kommentaren, Rechenstzen oder 
Unterprogrammaufrufen stren den Bahnsteuerbetrieb dagegen nicht.

Hinweis

Sind nicht alle Bahnachsen in FGROUP enthalten, wird es an Satzbergngen fr die nicht 
enthaltenen Achsen hufig einen Geschwindigkeitssprung geben, den die Steuerung durch ein 
Absenken der Geschwindigkeit am Satzwechsel auf den durch 
MD32300 $MA_MAX_AX_ACCEL und MD32310 $MA_MAX_ACCEL_OVL_FACTOR 
erlaubten Wert begrenzt. Dieses Abbremsen lsst sich vermeiden, wenn man den 
vorgegebenen Positionszusammenhang der Bahnachsen durch ein berschleifen aufweicht.

294

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:42)(cid:72)(cid:86)(cid:70)(cid:75)(cid:90)(cid:76)(cid:81)(cid:71)(cid:76)(cid:74)(cid:78)(cid:72)(cid:76)(cid:87)(cid:3)(cid:78)(cid:82)(cid:81)(cid:86)(cid:87)(cid:68)(cid:81)(cid:87)Grundlagen

2.11 Bahnfahrverhalten

Vorausschauende Geschwindigkeitsfhrung LookAhead 

Im Bahnsteuerbetrieb ermittelt die Steuerung automatisch fr mehrere NC-Stze im voraus die 
Geschwindigkeitsfhrung. Hierdurch kann bei annhernd tangentialen bergngen ber 
mehrere Stze hinweg beschleunigt und gebremst werden.

Vor allem Bewegungsketten, die sich aus kurzen Fahrwegen zusammensetzen, lassen sich 
durch vorausschauende Geschwindigkeitsfhrung mit hohen Bahnvorschben herstellen.

Die Anzahl der NC-Stze, ber die maximal vorausgeschaut wird, lsst sich ber 
Maschinendatum einstellen.

Bahnsteuerbetrieb mit berschleifen nach Wegkriterium (G641)

Bei G641 fgt die Steuerung an Konturbergngen bergangselemente ein. Mit dem 
berschleifabstand ADIS (bzw. ADISPOS bei G0) wird angegeben, wie stark die Ecken 
maximal verschliffen werden drfen. Innerhalb des berschleifabstandes ist die Steuerung 
frei, den Bahnzusammenhang aufzulsen und durch einen dynamisch optimalen Weg zu 
ersetzen.

Nachteil: Fr alle Achsen steht nur ein ADIS-Wert zur Verfgung.

G641 wirkt hnlich wie RNDM, ist aber nicht auf die Achsen der Arbeitsebene beschrnkt.

Wie G64 arbeitet G641 mit vorausschauender Geschwindigkeitsfhrung LookAhead. 
berschleifstze mit hoher Krmmung werden mit verringerter Geschwindigkeit angefahren.

Beispiel:

Programmcode

Kommentar

N10 G641 ADIS=0.5 G1 X... Y...

; Der berschleifsatz darf frhestens 0,5 mm 
vor dem programmierten Satzende beginnen und 
muss 0,5 mm nach Satzende beendet sein. Diese 
Einstellung bleibt modal wirksam.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

295

(cid:57)(cid:82)(cid:85)(cid:86)(cid:70)(cid:75)(cid:88)(cid:69)(cid:83)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)(cid:76)(cid:72)(cid:85)(cid:87)(cid:54)(cid:68)(cid:87)(cid:93)(cid:90)(cid:72)(cid:74)(cid:42)(cid:25)(cid:23)(cid:29)(cid:3)(cid:57)(cid:82)(cid:85)(cid:68)(cid:88)(cid:86)(cid:86)(cid:70)(cid:75)(cid:68)(cid:88)(cid:72)(cid:81)(cid:71)(cid:72)(cid:3)(cid:42)(cid:72)(cid:86)(cid:70)(cid:75)(cid:90)(cid:76)(cid:81)(cid:71)(cid:76)(cid:74)(cid:78)(cid:72)(cid:76)(cid:87)(cid:86)(cid:73)(cid:190)(cid:75)(cid:85)(cid:88)(cid:81)(cid:74)(cid:42)(cid:25)(cid:19)(cid:29)(cid:3)(cid:51)(cid:75)(cid:68)(cid:86)(cid:72)(cid:3)(cid:78)(cid:82)(cid:81)(cid:86)(cid:87)(cid:68)(cid:81)(cid:87)(cid:72)(cid:85)(cid:3)(cid:42)(cid:72)(cid:86)(cid:70)(cid:75)(cid:90)(cid:76)(cid:81)(cid:71)(cid:76)(cid:74)(cid:78)(cid:72)(cid:76)(cid:87)(cid:3)(cid:78)(cid:68)(cid:81)(cid:81)(cid:3)(cid:81)(cid:76)(cid:70)(cid:75)(cid:87)(cid:3)(cid:72)(cid:85)(cid:85)(cid:72)(cid:76)(cid:70)(cid:75)(cid:87)(cid:3)(cid:90)(cid:72)(cid:85)(cid:71)(cid:72)(cid:81)(cid:49)(cid:20)(cid:21)(cid:49)(cid:20)(cid:20)(cid:49)(cid:20)(cid:19)(cid:49)(cid:28)(cid:49)(cid:27)(cid:49)(cid:26)(cid:49)(cid:25)(cid:49)(cid:24)(cid:49)(cid:23)(cid:49)(cid:22)(cid:49)(cid:21)(cid:49)(cid:20)(cid:41)Grundlagen

2.11 Bahnfahrverhalten

Hinweis

berschleifen kann und soll die Funktionen fr definiertes Gltten (RND, RNDM, ASPLINE, 
BSPLINE, CSPLINE) nicht ersetzen.

berschleifen mit axialer Genauigkeit bei G642

Bei G642 findet das berschleifen nicht innerhalb eines definierten ADIS-Bereichs statt, 
sondern es werden die mit MD33100 $MA_COMPRESS_POS_TOL definierten axialen 
Toleranzen eingehalten. Der berschleifweg wird aus dem krzesten berschleifweg aller 
Achsen bestimmt. Dieser Wert wird bei der Erzeugung eines berschleifsatzes bercksichtigt.

Satzinternes berschleifen bei G643

Die maximalen Abweichungen von der exakten Kontur werden beim berschleifen mit G643 
durch das Maschinendatum MD33100 $MA_COMPRESS_POS_TOL fr jede Achse 
festgelegt.

Mit G643 wird kein eigener berschleifsatz gebildet, sondern es werden achsspezifisch 
satzinterne berschleifbewegungen eingefgt. Bei G643 kann der berschleifweg jeder 
Achse unterschiedlich sein. 

berschleifen mit Kontur- und Orientierungstoleranz bei G642/G643

Mit MD20480 $MC_SMOOTHING_MODE kann das berschleifen mit G642 und G643 so 
konfiguriert werden, dass anstelle der achsspezifischen Toleranzen eine Konturtoleranz und 
eine Orientierungstoleranz wirksam sind.

Kontur- und Orientierungstoleranz werden eingestellt in den kanalspezifischen Settingdaten:

SD42465 $SC_SMOOTH_CONTUR_TOL (Maximale Konturabweichung)  

SD42466 $SC_SMOOTH_ORI_TOL (Maximale Winkelabweichung der 
Werkzeugorientierung)  

296

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:36)(cid:39)(cid:44)(cid:54)(cid:18)(cid:36)(cid:39)(cid:44)(cid:54)(cid:51)(cid:50)(cid:54)(cid:3)(cid:80)(cid:68)(cid:91)(cid:17)(cid:3)(cid:19)(cid:17)(cid:24)(cid:3)(cid:80)(cid:80)(cid:80)(cid:68)(cid:91)(cid:17)(cid:3)(cid:19)(cid:17)(cid:24)(cid:3)(cid:80)(cid:80)(cid:83)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)(cid:76)(cid:72)(cid:85)(cid:87)(cid:72)(cid:86)(cid:3)(cid:46)(cid:82)(cid:81)(cid:87)(cid:88)(cid:85)(cid:72)(cid:81)(cid:71)(cid:72)Grundlagen

2.11 Bahnfahrverhalten

Die Settingdaten knnen im NC-Programm programmiert und dadurch fr jeden Satzbergang 
anders vorgegeben werden. Sehr unterschiedliche Vorgaben fr die Konturtoleranz und die 
Orientierungstoleranz knnen sich nur bei G643 auswirken.

Hinweis

Die Erweiterung um Konturtoleranz und Orientierungstoleranz existiert nur in Systemen mit 
vorhandener Option "Polynominterpolation".

Hinweis

Fr das berschleifen unter Einhaltung der Orientierungstoleranz muss eine 
Orientierungstransformation aktiv sein.

berschleifen mit maximal mglicher Dynamik bei G644

Das berschleifen mit maximal mglicher Dynamik wird mit 
MD20480 $MC_SMOOTHING_MODE in der Tausenderstelle konfiguriert:

Wert

Bedeutung

0

1

2

3

Vorgabe der maximalen axialen Abweichungen mit:

MD33100 $MA_COMPRESS_POS_TOL

Vorgabe des maximalen berschleifwegs durch Programmierung von:

ADIS=... bzw. ADISPOS=...

Vorgabe der maximal auftretenden Frequenzen jeder Achse im berschleifbereich mit:

MD32440 $MA_LOOKAH_FREQUENCY

Der berschleifbereich wird so festgelegt, dass bei der berschleifbewegung keine Frequen
zen auftreten, die die vorgegebene maximale Frequenz berschreiten.

Beim berschleifen mit G644 werden weder die Toleranz noch der berschleifabstand ber
wacht. Jede Achse fhrt mit maximal mglicher Dynamik um eine Ecke. 
Bei SOFT wird hierbei sowohl die maximale Beschleunigung als auch der maximale Ruck 
jeder Achse eingehalten. 
Bei BRISK wird der Ruck nicht begrenzt, sondern jede Achse fhrt mit maximal mglicher 
Beschleunigung.

berschleifen tangentialer Satzbergnge bei G645

Die berschleifbewegung bei G645 wird so festgelegt, dass alle beteiligten Achsen keinen 
Sprung in der Beschleunigung erfahren und die parametrierten maximalen Abweichungen zur 
Originalkontur (MD33120 $MA_PATH_TRANS_POS_TOL) nicht berschritten werden.

Bei knickfrmigen, nicht-tangentialen Satzbergngen ist das berschleifverhalten wie bei 
G642.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

297

Grundlagen

2.11 Bahnfahrverhalten

Keine berschleifzwischenstze

In den folgenden Fllen wird kein berschleifzwischensatz eingefgt:

 Zwischen beiden Stzen wird angehalten.

Dies tritt auf, wenn:

 eine Hilfsfunktionsausgabe vor Bewegung im Folgesatz steht.

 der Folgesatz keine Bahnbewegung enthlt.

 fr den Folgesatz zum ersten Mal eine Achse als Bahnachse verfhrt, die zuvor 

Positionierachse war.

 fr den Folgesatz zum ersten Mal eine Achse als Positionierachse verfhrt, die zuvor 

Bahnachse war.

 der Vorgngersatz Geometrieachsen verfhrt und der Folgesatz nicht.

 der Folgesatz Geometrieachsen verfhrt und der Vorgngersatz nicht.

 vor Gewindeschneiden der Folgesatz G33 als Wegbedingung hat und der 

Vorgngersatz nicht.

 zwischen BRISK und SOFT gewechselt wird.

 transformationsbedeutsame Achsen nicht vollstndig der Bahnbewegung zugeordnet 

sind (z. B. bei Pendeln, Positionierachsen).

 Der berschleifsatz wrde die Teileprogrammbearbeitung verlangsamen.

Dies tritt auf:

 zwischen sehr kurzen Stzen.

Da jeder Satz mindestens einen Interpolatortakt bentigt, wrde der eingefgte 
Zwischensatz die Bearbeitungszeit verdoppeln.

 wenn ein Satzbergang mit G64 (Bahnsteuerbetrieb ohne berschleifen) ohne 

Geschwindigkeitsreduzierung berfahren werden darf.
berschleifen wrde die Bearbeitungszeit erhhen. D. h. der Wert des erlaubten 
berlastfaktors (MD32310 $MA_MAX_ACCEL_OVL_FACTOR) hat Einfluss darauf, ob 
ein Satzbergang berschliffen wird oder nicht. Der berlastfaktor wird nur beim 
berschleifen mit G641 / G642 bercksichtigt. Beim berschleifen mit G643 hat der 
berlastfaktor keinen Einfluss (dieses Verhalten kann auch fr G641 und G642 
eingestellt werden, indem 
MD20490 $MC_IGNORE_OVL_FACTOR_FOR_ADIS = TRUE gesetzt wird).

298

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Grundlagen

2.11 Bahnfahrverhalten

 Das berschleifen ist nicht parametriert.

Dies tritt auf, wenn:

 bei G641 in G0-Stzen ADISPOS=0 ist (Vorbelegung!).

 bei G641 in Nicht-G0-Stzen ADIS=0 ist (Vorbelegung!).

 bei G641 beim bergang zwischen G0 und Nicht-G0 bzw. Nicht-G0 und G0 der kleinere 

Wert aus ADISPOS und ADIS gilt.

 bei G642/G643 alle achsspezifischen Toleranzen gleich Null sind.

 Der Satz enthlt keine Verfahrbewegung (Nullsatz).

Dies tritt auf, wenn:

 Synchronaktionen aktiv sind.

Normalerweise werden Nullstze vom Interpreter eliminiert. Wenn aber 
Synchronaktionen aktiv sind, wird dieser Nullsatz eingekettet und ausgefhrt. Hierbei 
wird ein Genauhalt entsprechend aktiver Programmierung ausgelst. Damit soll die 
Synchronaktion die Mglichkeit bekommen, gegebenenfalls zu schalten.

 durch Programmsprnge Nullstze erzeugt werden.

Bahnsteuerbetrieb im Eilgang G0

Auch fr das Fahren im Eilgang muss eine der genannten Funktionen G60/G9 oder G64 bzw. 
G641 - G645 angegeben werden. Ansonsten wirkt die ber Maschinendatum eingegebene 
Voreinstellung.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

299

Grundlagen

2.12 Koordinatentransformationen (Frames)

2.12

Koordinatentransformationen (Frames)

2.12.1

Frames

Frame   

Der Frame ist eine in sich geschlossene Rechenvorschrift, die ein kartesisches 
Koordinatensystem in ein anderes kartesisches Koordinatensystem berfhrt.

Basisframe (Basisverschiebung)

Der Basisframe beschreibt die Koordinatentransformation vom Basiskoordinatensystem 
(BKS) in das Basis-Nullpunktsystem (BNS) und wirkt wie die einstellbaren Frames.

Siehe Basis-Koordinatensystem (BKS) (Seite 36) .

Einstellbare Frames

Einstellbare Frames sind die mit den Befehlen G54 bis G57 und G505 bis G599 aus jedem 
beliebigen NC-Programm abrufbaren einstellbaren Nullpunktverschiebungen. Die 
Verschiebewerte werden vom Bediener voreingestellt und im Nullpunktspeicher der Steuerung 
abgespeichert. Mit ihnen wird das einstellbare Nullpunktsystem (ENS) festgelegt.

Siehe:

 Einstellbares Nullpunktsystem (ENS) (Seite 38)

 Einstellbare Nullpunktverschiebung (G54 ... G57, G505 ... G599, G53, G500, SUPA, G153) 

(Seite 144)

300

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

2.12 Koordinatentransformationen (Frames)

Grundlagen

Programmierbare Frames

Manchmal erweist es sich als sinnvoll bzw. notwendig, innerhalb eines NC-Programms das 
ursprnglich gewhlte Werkstck-Koordinatensystem (bzw. das "Einstellbare 
Nullpunktsystem") an eine andere Stelle zu verschieben und ggf. zu drehen, zu spiegeln 
und / oder zu skalieren. Dies erfolgt ber programmierbare Frames.

Siehe Frame-Anweisungen (Seite 302) .

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

301

(cid:39)(cid:85)(cid:72)(cid:75)(cid:88)(cid:81)(cid:74)(cid:3)(cid:88)(cid:80)(cid:3)(cid:61)(cid:16)(cid:3)(cid:36)(cid:70)(cid:75)(cid:86)(cid:72)(cid:49)(cid:88)(cid:79)(cid:79)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:89)(cid:72)(cid:85)(cid:86)(cid:70)(cid:75)(cid:76)(cid:72)(cid:69)(cid:88)(cid:81)(cid:74)(cid:59)(cid:19)(cid:60)(cid:19)(cid:61)(cid:19)(cid:61)(cid:20)(cid:32)(cid:61)(cid:21)(cid:59)(cid:21)(cid:60)(cid:21)(cid:59)(cid:20)(cid:60)(cid:20)Grundlagen

2.12 Koordinatentransformationen (Frames)

2.12.2

Frame-Anweisungen

Funktion

Die Anweisungen fr die programmierbaren Frames gelten im aktuellen NC-Programm. Sie 
wirken entweder additiv oder ersetzend:

 Ersetzende Anweisung

Lscht alle zuvor programmierten Frame-Anweisungen. Als Bezug gilt die zuletzt 
aufgerufene einstellbare Nullpunktverschiebung (G54 ... G57, G505 ... G599).

 Additive Anweisung

Setzt auf bereits bestehenden Frames auf. Als Bezug dient der aktuell eingestellte oder 
ber eine Frame-Anweisung zuletzt programmierte Werkstck-Nullpunkt.

Anwendungsbeispiel

1. Verschieben des Nullpunkts des Werkstckkoordinatensystems (WKS).

2. Drehen des Werkstckkoordinatensystems (WKS) zum Ausrichten einer Ebene parallel zur 

gewnschten Arbeitsebene.

302

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:55)(cid:53)(cid:36)(cid:49)(cid:54)(cid:59)(cid:10)(cid:59)(cid:10)(cid:10)(cid:60)(cid:10)(cid:60)(cid:10)(cid:10)(cid:59)(cid:60)(cid:55)(cid:53)(cid:36)(cid:49)(cid:54)(cid:55)(cid:53)(cid:36)(cid:49)(cid:54)(cid:36)(cid:55)(cid:53)(cid:36)(cid:49)(cid:54)(cid:59)(cid:10)(cid:59)(cid:10)(cid:10)(cid:60)(cid:10)(cid:60)(cid:10)(cid:10)(cid:60)(cid:59)2.12 Koordinatentransformationen (Frames)

Grundlagen

Syntax

Bedeutung

Ersetzende Anweisungen

TRANS X Y Z

ROT X Y Z

ROT RPL=

ROTS/CROTS X... Y...

SCALE X Y Z

MIRROR X0/Y0/Z0

Additive Anweisungen

ATRANS X Y Z

AROT X Y Z

AROT RPL=

AROTS X... Y...

ASCALE X Y Z

AMIRROR X0/Y0/Z0

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

303

(cid:60)(cid:10)(cid:59)(cid:10)(cid:61)(cid:10)(cid:59)(cid:60)(cid:61)(cid:55)(cid:53)(cid:36)(cid:49)(cid:54)(cid:53)(cid:50)(cid:55)(cid:55)(cid:53)(cid:36)(cid:49)(cid:54)(cid:15)(cid:3)(cid:36)(cid:55)(cid:53)(cid:36)(cid:49)(cid:54)(cid:54)(cid:38)(cid:36)(cid:47)(cid:40)(cid:15)(cid:3)(cid:36)(cid:54)(cid:38)(cid:36)(cid:47)(cid:40)(cid:48)(cid:44)(cid:53)(cid:53)(cid:50)(cid:53)(cid:15)(cid:36)(cid:48)(cid:44)(cid:53)(cid:53)(cid:50)(cid:53)(cid:53)(cid:50)(cid:55)(cid:15)(cid:36)(cid:53)(cid:50)(cid:55)(cid:59)(cid:61)(cid:59)(cid:59)(cid:10)(cid:59)(cid:10)(cid:61)(cid:61)(cid:10)(cid:61)(cid:10)(cid:59)(cid:61)(cid:59)(cid:32)(cid:59)(cid:10)(cid:61)(cid:61)(cid:10)Grundlagen

2.12 Koordinatentransformationen (Frames)

TRANS/ATRANS:

ROT/AROT:

WKS-Verschiebung in Richtung der angegebenen Geometrieachse(n)

WKS-Drehung:

 durch die Verkettung von Einzeldrehungen um die angegebenen 

Geometrieachse(n)
oder

 um den Winkel RPL=... in der aktuellen Arbeitsebene 

(G17/G18/G19)

Drehrichtung:

Drehreihenfolge:

mit RPY-Notation:

mit Eulerwinkel:

Z, Y', X''

Z, X', Z''

Wertebereich:

Die Drehwinkel sind nur eindeutig in den fol
genden Bereichen definiert:

mit RPY-Notation:

-180  x  180

mit Eulerwinkel:

-90 < y < 90

-180  z  180

0  x < 180

-180  y  180

-180  z  180

ROTS/AROTS:

WKS-Drehung durch die Angabe von Raumwinkeln

CROTS:

SCALE/ASCALE:

MIRROR/AMIRROR:

Die Orientierung einer Ebene im Raum ist durch die Angabe zweier 
Raumwinkel eindeutig bestimmt. Es drfen deshalb maximal 2 Raum
winkel programmiert werden:
ROTS/AROTS X... Y... / Z... X... / Y... Z...

CROTS wirkt wie ROTS, bezieht sich aber auf das gltige Frame in der 
Datenhaltung.

Skalierung in Richtung der angegebenen Geometrieachse(n) zum Ver
grern/Verkleinern einer Kontur

WKS-Spiegelung durch Spiegelung (Richtungswechsel) der angegebe
nen Geometrieachse

Wert:

frei whlbar (hier: "0")

Randbedingungen

 Frame-Anweisungen mssen in einem eigenen NC-Satz programmiert werden.

 Frame-Anweisungen knnen einzeln angewendet oder beliebig kombiniert werden.

 Frame-Anweisungen werden in der programmierten Reihenfolge ausgefhrt.

 Additive Anweisungen werden hufig in Unterprogrammen eingesetzt. Die im 

Hauptprogramm definierten Basisanweisungen bleiben nach Unterprogrammende 
erhalten, wenn das Unterprogramm mit dem SAVE-Attribut programmiert wurde.

304

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:61)(cid:59)(cid:60)(cid:14)(cid:16)(cid:14)(cid:16)(cid:14)(cid:16) 
2.12 Koordinatentransformationen (Frames)

Grundlagen

2.12.3

Programmierbare Nullpunktverschiebung (TRANS, ATRANS)

Mit dem Befehl TRANS wird das WKS absolut, bezogen auf das mit einer einstellbaren 
Nullpunktverschiebung (G54 ... G57, G505 ... G599) erzeugte ENS, verschoben. 

Mit dem Befehl ATRANS wird das mit TRANS erzeugte WKS additiv verschoben. 

Frsen:

Drehen:

Syntax

Bedeutung

TRANS X Y Z
ATRANS X Y Z

TRANS:

ATRANS:

Absolute Verschiebung des WKS, bezogen auf den mit einer einstellbaren 
Nullpunktverschiebung (G54 ... G57, G505 ... G599) eingestellten Werkstck
nullpunkt (ENS)

Alleine im Satz:

ja

Additive Nullpunktverschiebung des WKS, bezogen auf den mit TRANS einge
stellten Werkstcknullpunkt

Alleine im Satz:

ja

X... Y... Z... :

Verschiebungswerte in Richtung der angegebenen Geometrieachsen

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

305

(cid:61)(cid:60)(cid:48)(cid:59)(cid:3)(cid:48)(cid:61)(cid:48)(cid:60)(cid:59)(cid:42)(cid:24)(cid:23)(cid:55)(cid:53)(cid:36)(cid:49)(cid:54)(cid:59)(cid:61)(cid:58)(cid:10)(cid:58)(cid:48)(cid:55)(cid:53)(cid:36)(cid:49)(cid:54)(cid:42)(cid:24)(cid:23)Grundlagen

2.12 Koordinatentransformationen (Frames)

Beispiele

Beispiel 1: Frsen

Bei diesem Werkstck kommen die 
gezeigten Formen in einem Pro
gramm mehrfach vor.

Die Bearbeitungsfolge fr diese 
Form ist im Unterprogramm abge
legt.

Durch Nullpunktverschiebung wer
den die jeweils bentigten Werk
stcknullpunkte gesetzt und dann 
das Unterprogramm aufgerufen.

Programmcode

Kommentar

N10 G1 G54

; Arbeitsebene X/Y, Werkstcknullpunkt

N20 G0 X0 Y0 Z2

; Startpunkt anfahren

N30 TRANS X10 Y10

; Absolute Verschiebung

N40 L10

; Unterprogramm-Aufruf

N50 TRANS X50 Y10

; Absolute Verschiebung

N60 L10

N70 M30

; Unterprogramm-Aufruf

; Programmende

306

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:60)(cid:59)(cid:60)(cid:48)(cid:59)(cid:48)(cid:60)(cid:59)(cid:60)(cid:59)(cid:42)(cid:24)(cid:23)(cid:20)(cid:19)(cid:24)(cid:19)(cid:20)(cid:19)(cid:24)(cid:19)2.12 Koordinatentransformationen (Frames)

Grundlagen

Beispiel 2: Drehen

Programmcode

...

N10 TRANS X0 Z150

N15 L20

Kommentar

; Absolute Verschiebung

; Unterprogramm-Aufruf

N20 TRANS X0 Z140 (oder ATRANS Z-10)

; Absolute Verschiebung

N25 L20

; Unterprogramm-Aufruf

N30 TRANS X0 Z130 (oder ATRANS Z-10)

; Absolute Verschiebung

N35 L20

...

; Unterprogramm-Aufruf

Weitere Informationen

TRANS X... Y... Z...

Nullpunktverschiebung um die in den jeweils angegebenen Achsrichtungen (Bahn-, Synchron- 
und Positionierachsen) programmierten Verschiebewerte. Als Bezug gilt die zuletzt 
angegebene einstellbare Nullpunktverschiebung (G54 ... G57, G505 ... G599).

ACHTUNG

Kein Ursprungs-Frame

Der Befehl TRANS setzt alle Frame-Komponenten des vorher gesetzten programmierbaren 
Frames zurck.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

307

(cid:59)(cid:61)(cid:48)(cid:58)(cid:20)(cid:23)(cid:19)(cid:20)(cid:22)(cid:19)(cid:20)(cid:24)(cid:19) 
 
 
Grundlagen

2.12 Koordinatentransformationen (Frames)

Hinweis

Eine Verschiebung, die auf bereits bestehenden Frames aufbauen soll, muss mit ATRANS 
programmiert werden.

ATRANS X... Y... Z...

Nullpunktverschiebung um die in den jeweils angegebenen Achsrichtungen programmierten 
Verschiebewerte. Als Bezug gilt der aktuell eingestellte oder zuletzt programmierte Nullpunkt.

308

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

TRANSTRANSTRANSATRANS2.12 Koordinatentransformationen (Frames)

Grundlagen

2.12.4

Programmierbare Nullpunktverschiebung (G58, G59)

Mit den Funktionen G58 und G59 knnen Translationsanteile der programmierbaren 
Nullpunktverschiebung (TRANS/ATRANS) (Seite 305) achsspezifisch ersetzt werden:

 G58: absoluter Translationsanteil (Grobverschiebung)

 G59: additiver Translationsanteil (Feinverschiebung)

Voraussetzungen

Die Funktionen G58 und G59 sind nur einsetzbar, wenn die Feinverschiebung projektiert ist 
(MD24000 $MC_FRAME_ADD_COMPONENTS = 1).

Syntax

Bedeutung

G58 <Achse_1><Wert_1> ... <Achse_3><Wert_3>
G59 <Achse_1><Wert_1> ... <Achse_3><Wert_3>

G58:

G59:

G58 ersetzt den absoluten Translationsanteil der programmierbaren Nullpunktver
schiebung fr die angegebene Achse, die additiv programmierte Verschiebung 
bleibt erhalten. Als Bezug gilt die zuletzt aufgerufene einstellbare Nullpunktver
schiebung (G54 ... G57, G505 ... G599).

Alleine im Satz: ja

G59 ersetzt den additiven Translationsanteil der programmierbaren Nullpunktver
schiebung fr die angegebene Achse, die absolut programmierte Verschiebung 
bleibt erhalten.

Alleine im Satz: ja

<Achse_n>:

Geometrieachse im Kanal

<Wert_n>:

Verschiebewerte in Richtung der angegebenen Geometrieachse

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

309

(cid:55)(cid:85)(cid:68)(cid:81)(cid:86)(cid:79)(cid:68)(cid:87)(cid:76)(cid:82)(cid:81)(cid:68)(cid:69)(cid:86)(cid:82)(cid:79)(cid:88)(cid:87)(cid:72)(cid:3)(cid:55)(cid:85)(cid:68)(cid:81)(cid:86)(cid:79)(cid:68)(cid:87)(cid:76)(cid:82)(cid:81)(cid:42)(cid:24)(cid:27)(cid:55)(cid:53)(cid:36)(cid:49)(cid:54)(cid:68)(cid:71)(cid:71)(cid:76)(cid:87)(cid:76)(cid:89)(cid:72)(cid:3)(cid:55)(cid:85)(cid:68)(cid:17)(cid:42)(cid:24)(cid:28)(cid:36)(cid:55)(cid:53)(cid:36)(cid:49)(cid:54)(cid:60)(cid:48)(cid:59)(cid:3)(cid:48)(cid:61)(cid:48)(cid:61)(cid:60)(cid:59)(cid:42)(cid:24)(cid:23)Grundlagen

2.12 Koordinatentransformationen (Frames)

Beispiel

Programmcode

Kommentar

...

N50 TRANS X10 Y10 Z10

; Absoluter Translationsanteil X10 Y10 Z10

N60 ATRANS X5 Y5

; Additiver Translationsanteil X5 Y5

N70 G58 X20

; Absoluter Translationsanteil X20

 Gesamtverschiebung: X15 Y15 Z10

N80 G59 X10 Y10

; Additiver Translationsanteil X10 Y10

 Gesamtverschiebung X25 Y15 Z10

 Gesamtverschiebung X30 Y20 Z10

...

Weitere Informationen

Der absolute Translationsanteil (Grob-Verschiebung) wird durch folgende Befehle modifiziert:

 TRANS

 G58

 CTRANS

 CFINE

 $P_PFRAME[X,TR]

Der additive Translationsanteil (Fein-Verschiebung) wird durch folgende Befehle modifiziert:

 ATRANS

 G59

 CTRANS

 CFINE

 $P_PFRAME[X,FI]

Beispiele

Befehl

TRANS X10

G58 X10

$P_PFRAME[X,TR]=10

ATRANS X10

G59 X10

$P_PFRAME[X,FI]=10

CTRANS(X,10)

CTRANS()

CFINE(X,10)

Grob-Verschiebung VC

Fein-Verschiebung VF

VC = 10
VC = 10
VC = 10
unverndert

unverndert

unverndert

VC = 10
VC = 0
VC = 0

unverndert

unverndert

unverndert

VF = VF  + 10
VF = 10
VF = 10
VF = 0
VF = 0
VF = 10

310

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
2.12 Koordinatentransformationen (Frames)

Grundlagen

2.12.5

Programmierbare Drehung (ROT, AROT, RPL)

Mit den Befehlen ROT / AROT kann das Werkstckkoordinatensystem im Raum gedreht 
werden. Die Befehle beziehen sich ausschlielich auf den Programmierbaren 
Frame $P_PFRAME. 

ROT <1. GeoAx><Winkel> <2. GeoAx><Winkel> <3. GeoAx><Winkel>
ROT RPL=<Winkel>
AROT <1. GeoAx><Winkel> <2. GeoAx><Winkel> <3. GeoAx><Winkel>
AROT RPL=<Winkel>

Hinweis

Die Drehungen des Werkstckkoordinatensystems erfolgen ber Euler-Winkel.

Syntax

Bedeutung

ROT:

Drehung absolut

Bezugsframe:

Programmierbarer Frame $P_PFRAME

Bezugspunkt:

Nullpunkt des aktuellen mit G54 ... G57, G505 ... G599 einge
stellten Werkstckkoordinatensystems

AROT:

Drehung additiv

Bezugsframe:

Programmierbarer Frame $P_PFRAME

Bezugspunkt:

Nullpunkt des aktuellen mit G54 ... G57, G505 ... G599 einge
stellten Werkstckkoordinatensystems

<n-te GeoAx>:

Bezeichner der n-ten Geometrieachse um die um den angegebenen Winkel ge
dreht werden soll.

Fr nicht programmierte Geometrieachse wird als Drehwinkel implizit der Wert 0 
gesetzt.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

311

(cid:59)(cid:59)(cid:10)(cid:60)(cid:3)(cid:32)(cid:3)(cid:60)(cid:10)(cid:61)(cid:61)(cid:10)Grundlagen

2.12 Koordinatentransformationen (Frames)

RPL:

Drehung um die zur aktiven Ebene (G17, G18, G19) senkrechte Geometrieachse 
um den angegebenen Winkel

Bezugsframe:

Programmierbarer Frame $P_PFRAME

Bezugspunkt:

Nullpunkt des aktuellen mit G54 ... G57, G505 ... G599 einge
stellten Werkstckkoordinatensystems

<Winkel>

Winkelangabe in Grad

Wertebereich:

-360  Winkel  360

Beispiele

Beispiel 1: Drehung in der G17-Ebene

Bei diesem Werkstck kommen die 
gezeigten Formen in einem Pro
gramm mehrfach vor. Zustzlich zur 
Nullpunktverschiebung mssen 
Drehungen durchgefhrt werden, da 
die Formen nicht achsparallel ange
ordnet sind.

Programmcode

N10 G17 G54

Kommentar

; Arbeitsebene X/Y, Werkstcknullpunkt

N20 TRANS X20 Y10

; Absolute Verschiebung

N30 L10

; Unterprogramm-Aufruf

N40 TRANS X55 Y35

; Absolute Verschiebung

N50 AROT RPL=45

; Additive Drehung um die zur G17-Ebene 

N60 L10

; Unterprogramm-Aufruf

; senkrechte Z-Achse um 45

N70 TRANS X20 Y40

; Absolute Verschiebung
; (setzt alle bisherigen Verschiebungen zurck)

N80 AROT RPL=60

; Additive Drehung um die zur G17-Ebene

; senkrechte Z-Achse um 60

N90 L10

; Unterprogramm-Aufruf

N100 G0 X100 Y100

; Wegfahren

N110 M30

; Programmende

312

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:27)(cid:20)(cid:21)(cid:53)(cid:26)(cid:23)(cid:19)(cid:22)(cid:24)(cid:20)(cid:19)(cid:24)(cid:24)(cid:21)(cid:19)(cid:26)(cid:23)(cid:24)(cid:114)(cid:25)(cid:19)(cid:114)(cid:22)(cid:19)(cid:60)(cid:59)(cid:21)(cid:19)Beispiel 2: Rumliche Drehung um die Y-Achse

2.12 Koordinatentransformationen (Frames)

Grundlagen

In diesem Beispiel sollen achsparal
lele und schrg liegende Werkstckf
lchen in einer Aufspannung bear
beitet werden.

Voraussetzung:
Das Werkzeug muss zur schrgen 
Flche senkrecht in der gedrehten Z-
Richtung ausgerichtet werden.

Programmcode

N10 G17 G54 

Kommentar

; Arbeitsebene X/Y, Werkstcknullpunkt

N20 TRANS X10 Y10

; Absolute Verschiebung

N30 L10

N40 ATRANS X35

N50 AROT Y30

N60 ATRANS X5

N70 L10

; Unterprogramm-Aufruf

; Additive Verschiebung

; Additive Drehung um die Y-Achse

; Additive Verschiebung

; Unterprogramm-Aufruf

N80 G0 X300 Y100 M30

; Wegfahren, Programmende

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

313

(cid:59)(cid:61)(cid:22)(cid:19)(cid:114)(cid:59)(cid:60)(cid:53)(cid:26)(cid:22)(cid:19)(cid:26)(cid:20)(cid:19)(cid:23)(cid:24)(cid:21)(cid:19)(cid:20)(cid:19)(cid:20)(cid:21)(cid:27)(cid:24)Grundlagen

2.12 Koordinatentransformationen (Frames)

Beispiel 3: Mehrseitenbearbeitung

In diesem Beispiel werden in zwei senkrecht 
zueinander stehenden Werkstckflchen 
identische Formen ber Unterprogramme her
gestellt. Im neuen Koordinatensystem auf der 
rechten Werkstckflche sind Zustellrichtung, 
Arbeitsebene und der Nullpunkt so eingerich
tet wie in der oberen Flche. Damit gelten wei
terhin die fr den Unterprogrammablauf not
wendigen Bedingungen: Arbeitsebene G17, 
Koordinatenebene X/Y, Zustellrichtung Z.

Programmcode

N10 G17 G54

N20 L10

Kommentar

; Arbeitsebene X/Y, Werkstcknullpunkt

; Unterprogramm-Aufruf

N30 TRANS X100 Z-100

; Absolute Verschiebung des WKS

N40 AROT Y90

; Additive Drehung des WKS um Y um 90

314

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:42)(cid:20)(cid:26)(cid:42)(cid:20)(cid:26)(cid:60)(cid:60)(cid:59)(cid:59)(cid:61)(cid:61)(cid:55)(cid:53)(cid:36)(cid:49)(cid:54)(cid:3)(cid:59)(cid:20)(cid:19)(cid:19)(cid:3)(cid:61)(cid:16)(cid:20)(cid:19)(cid:19)(cid:60)(cid:59)(cid:61)(cid:60)(cid:10)(cid:59)(cid:10)(cid:61)(cid:10)(cid:36)(cid:53)(cid:50)(cid:55)(cid:3)(cid:60)(cid:28)(cid:19)(cid:60)(cid:59)(cid:61)(cid:60)(cid:59)(cid:61)2.12 Koordinatentransformationen (Frames)

Grundlagen

Programmcode

N50 AROT Z90

Kommentar

; Additive Drehung des WKS um Z um 90

N60 L10

; Unterprogramm-Aufruf

N70 G0 X300 Y100 M30

; Wegfahren, Programmende

Weitere Informationen

Drehung in der aktiven Ebene

Bei Programmierung mittels RPL= wird das WKS wird um die zur aktiven Ebene senkrechte 
Achse gedreht.

Bild 2-19

Drehung um die Y-Achse bzw. in der G18-Ebene

WARNUNG

Ebenenwechsel

Wird nach einer Drehung ein Ebenenwechsel (G17, G18, G19) programmiert, bleiben die 
aktuellen Drehwinkel der jeweiligen Achsen erhalten und wirken auch in der neuen Ebene. Es 
wird daher dringend empfohlen, vor einem Ebenenwechsel die aktuellen Drehwinkel auf 0 
zurckzusetzen:
 N100 ROT X0 Y0 Z0 ; explizite Winkelprogrammierung
 N100 ROT ; implizite Winkelprogrammierung

Absolute Drehung mit ROT X... Y... Z...

Das WKS wird um die angegebenen Achsen auf die programmierten Drehwinkel gedreht.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

315

(cid:36)(cid:53)(cid:50)(cid:55)(cid:3)(cid:61)(cid:28)(cid:19)(cid:59)(cid:61)(cid:60)(cid:60)(cid:59)(cid:61)(cid:53)(cid:50)(cid:55)(cid:60)(cid:59)(cid:61)(cid:60)(cid:10)(cid:59)(cid:10)(cid:61)(cid:10)(cid:42)(cid:20)(cid:28)(cid:42)(cid:20)(cid:26)(cid:42)(cid:20)(cid:26)(cid:42)(cid:20)(cid:28)(cid:42)(cid:20)(cid:27)(cid:42)(cid:20)(cid:27)Grundlagen

2.12 Koordinatentransformationen (Frames)

 Drehwinkel
Bild 2-20

Absolute Drehung um die Z-Achse

Additive Drehung mit AROT X... Y... Z...

Das WKS wird um die angegebenen Achsen um die programmierten Drehwinkel weiter 
gedreht.

 Drehwinkel
Bild 2-21

Absolute und additive Drehung um die Z-Achse

Drehung der Arbeitsebene

Bei einer Drehung mittels ROT / AROT dreht sich die Arbeitsebene (G17, G18, G19) mit.

Beispiel: Arbeitsebene G17
Das WKS liegt auf der Deckflche des Werkstcks. Durch Verschiebung und Drehung wird das 
Koordinatensystem in eine der Seitenflchen verschoben. Die Arbeitsebene G17 dreht sich 
mit. Hierdurch knnen Verfahrbewegungen in der G17-Ebene weiterhin ber X und Y und 
Zustellungen ber Z programmiert werden. 

316

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:20)(cid:59)(cid:10)(cid:60)(cid:10)(cid:61)(cid:3)(cid:32)(cid:3)(cid:61)(cid:10)(cid:59)(cid:60)(cid:20)(cid:59)(cid:10)(cid:10)(cid:59)(cid:10)(cid:60)(cid:10)(cid:10)(cid:60)(cid:10)(cid:61)(cid:3)(cid:32)(cid:3)(cid:61)(cid:10)(cid:59)(cid:60)(cid:53)(cid:50)(cid:55)(cid:36)(cid:53)(cid:50)(cid:55)2.12 Koordinatentransformationen (Frames)

Grundlagen

Voraussetzung:
Das Werkzeug muss senkrecht zur Arbeitsebene stehen und die positive Richtung der 
Zustellachse zeigt in Richtung Werkzeugaufnahme. 
Durch Angabe von CUT2DF wirkt die Werkzeugradiuskorrektur in der gedrehten Ebene.

2.12.6

Programmierbare Framedrehungen mit Raumwinkeln (ROTS, AROTS, CROTS)

Mit den Befehlen ROTS, AROTS und CROTS knnen Drehungen des 
Werkstckkoordinatensystems in Raumwinkeln angegeben werden. Raumwinkel sind die 
Winkel, welche die Schnittgeraden der gewnschten, im Raum gedrehten Ebene, mit den 
Hauptebenen des noch nicht gedrehten WKS bilden. 

Hinweis

Geometrieachsbezeichner

Beispielhaft wird fr die weitere Beschreibung folgende Festlegung getroffen:

 1. Geometrieachse: X

 2. Geometrieachse: Y

 3. Geometrieachse: Z

Beispielhaft bewirkt, wie im folgenden Bild dargestellt, die Programmierung ROTS X Y ein 
Ausrichten der G17-Ebene des WKS parallel zur dargestellten schrgen Ebene. Die Lage des 
Nullpunkts des WKS bleibt dabei unverndert.

Die Orientierung des gedrehten WKS wird so festgelegt, dass die erste gedrehte Achse in der 
Ebene liegt, die durch diese und die 3. Achse des ursprnglichen Koordinatensystems 
aufgespannt wird. Im Beispiel: X' liegt in der ursprnglichen X/Z-Ebene.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

317

(cid:42)(cid:20)(cid:26)(cid:42)(cid:20)(cid:26)(cid:60)(cid:10)(cid:60)(cid:59)(cid:10)(cid:59)(cid:61)(cid:10)(cid:61)Grundlagen

2.12 Koordinatentransformationen (Frames)

 Schrge Ebene

, ,  Raumwinkel

A

Ausrichten der G17-Ebene parallel zur schrgen Ebene:

 1. Drehung

Drehung von x um y um Winkel  
x'-Achse parallel zur schrgen Ebene

 2. Drehung

Drehung von y' um x' um  
y'-Achse parallel zur schrgen Ebene 
 z'-Achse senkrecht zur schrgen Ebene
 G17 parallel zur schrgen Ebene 

B

Ausrichten der G18-Ebene parallel zur schrgen Ebene:

 1. Drehung

Drehung von z um x um den Winkel  
z'-Achse parallel zur schrgen Ebene

 2. Drehung

Drehung von x' um z' um Winkel  
x'-Achse parallel zur schrgen Ebene
 y'-Achse senkrecht zur schrgen Ebene
 G18 parallel zur schrgen Ebene 

C

Ausrichten der G19-Ebene parallel zur schrgen Ebene:

 1. Drehung

Drehung von y um z um den Winkel  
y'-Achse parallel zur schrgen Ebene

 2. Drehung

Drehung von z' um y' um Winkel  
z'-Achse parallel zur schrgen Ebene
 x'-Achse senkrecht zur schrgen Ebene
 G19 parallel zur schrgen Ebene 

318

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:91)(cid:91)(cid:10)(cid:92)(cid:92)(cid:10)(cid:93)(cid:93)(cid:10)(cid:20)(cid:91)(cid:91)(cid:10)(cid:92)(cid:92)(cid:10)(cid:93)(cid:93)(cid:10)(cid:20)(cid:91)(cid:91)(cid:10)(cid:92)(cid:92)(cid:10)(cid:93)(cid:93)(cid:10)(cid:20)(cid:36)(cid:37)(cid:38)2.12 Koordinatentransformationen (Frames)

Grundlagen

Syntax

Festlegungen

Die Lage einer Ebene im Raum ist durch zwei Raumwinkel eindeutig bestimmt. Durch Angabe 
eines dritten Raumwinkels wre die Ebene berbestimmt. Sie ist daher nicht zulssig. 

Bei Programmierung nur eines Raumwinkels erfolgt die Drehung des WKS identisch zu ROT, 
AROT (siehe Kapitel "Programmierbare Drehung (ROT, AROT, RPL) (Seite 311)").

Durch die beiden programmierten Achsen wird eine Ebene gem den Ebenendefinitionen fr 
G17, G18, G19 festgelegt. Dadurch ist die Reihenfolge der Koordinatenachsen (1. Achse / 2. 
Achse der Ebene) bzw. die Reihenfolge der Drehungen um die Raumwinkel festgelegt:

Ebene

G17

G18

G19

1. Achse

2. Achse

X

Z

Y

Y

X

Z

Ausrichtung der G17-Ebene  Raumwinkel fr X und Y 

 1. Drehung: X um Y um den Winkel 

 2. Drehung: Y um X' um den Winkel 

 Orientierung: X' liegt in der ursprnglichen Z/X-Ebene.

ROTS  X<> Y<>
AROTS X<> Y<>
CROTS X<> Y<>

Ausrichtung der G18-Ebene  Raumwinkel fr Z und X

 1. Drehung: Z um X um den Winkel 

 2. Drehung: X um Z' um den Winkel 

 Orientierung: Z' liegt in der ursprnglichen Y/Z-Ebene

ROTS  Z<> X<>
AROTS Z<> X<>
CROTS Z<> X<>

Ausrichtung der G19-Ebene  Raumwinkel fr Y und Z 

 1. Drehung: Y um Z um den Winkel 

 2. Drehung: Z um Y' um den Winkel 

 Orientierung: Y' liegt in der ursprnglichen X/Y-Ebene.

ROTS  Y<> Z<>
AROTS Y<> Z<>
CROTS Y<> Z<>

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

319

Grundlagen

2.12 Koordinatentransformationen (Frames)

Bedeutung

ROTS:

AROTS:

CROTS:

X, Y, Z:

, , :

Frame-Drehungen mit Raumwinkeln absolut,
Bezugsframe: Programmierbarer Frame $P_PFRAME

Frame-Drehungen mit Raumwinkeln additiv;
Bezugsframe: Programmierbarer Frame $P_PFRAME

Frame-Drehungen mit Raumwinkeln absolut,
Bezugsframe: programmierter Frame $P_...

Geometrieachsbezeichner (siehe oben Hinweis: Geometrieachsbezeichner)

Raumwinkel bezogen auf die entsprechende Geometrieachse:

   X

   Y

   Z

2.12.7

Programmierbarer Mastabsfaktor (SCALE, ASCALE)

Mit SCALE/ASCALE knnen fr alle Bahn-, Synchron- und Positionierachsen Mastabsfaktoren 
zum Vergrern oder Verkleinern in Richtung der jeweils angegebenen Achsen programmiert 
werden. Dadurch ist es mglich, geometrisch hnliche Formen oder unterschiedliche 
Schwundmae bei der Programmierung zu bercksichtigen. 

Syntax

SCALE X Y Z
ASCALE X Y Z

Hinweis

Frame-Anweisungen werden jeweils in einem eigenen NC-Satz programmiert.

Bedeutung

SCALE:

ASCALE:

Vergrern / Verkleinern absolut, bezogen auf das aktuell gltige, mit G54 ... G57, 
G505 ... G599 eingestellte Koordinatensystem

Vergrern/Verkleinern additiv, bezogen auf das aktuell gltige eingestellte oder 
programmierte Koordinatensystem

X Y Z :

Mastabsfaktoren in Richtung der angegebenen Geometrieachsen

320

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Beispiel

2.12 Koordinatentransformationen (Frames)

Grundlagen

Bei diesem Werkstck kommen die beiden 
Taschen zweimal vor, jedoch in unterschiedli
chen Gren und zueinander verdreht. Die 
Bearbeitungsfolge ist im Unterprogramm ab
gelegt.

Durch Nullpunktverschiebung und Rotation 
werden die jeweils bentigten Werkstcknull
punkte gesetzt, durch Skalierung wird die Kon
tur verkleinert und dann wieder das Unterpro
gramm aufgerufen.

Programmcode

N10 G17 G54

Kommentar

; Arbeitsebene X/Y, Werkstcknullpunkt

N20 TRANS X15 Y15

; Absolute Verschiebung

N30 L10

; Groe Tasche fertigen

N40 TRANS X40 Y20

; Absolute Verschiebung

N50 AROT RPL=35

; Drehung in der Ebene um 35

N60 ASCALE X0.7 Y0.7

; Mastabsfaktor fr die kleine Tasche

N70 L10

; Kleine Tasche fertigen

N80G0 X300 Y100 M30

; Wegfahren, Programmende

Weitere Informationen

SCALE X... Y... Z...

Fr jede Achse kann ein eigener Mastabsfaktor angegeben werden, um den vergrert oder 
verkleinert werden soll. Die Skalierung bezieht sich auf das mit G54 ... G57, G505 ... G599 
eingestellte Werkstckkoordinatensystem.

ACHTUNG

Kein Ursprungs-Frame

Der Befehl SCALE setzt alle Frame-Komponenten des vorher gesetzten programmierbaren 
Frames zurck.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

321

(cid:21)(cid:19)(cid:20)(cid:24)(cid:22)(cid:24)(cid:114)(cid:23)(cid:19)(cid:20)(cid:24)(cid:60)(cid:59)Grundlagen

2.12 Koordinatentransformationen (Frames)

ASCALE X... Y... Z...

Eine Mastabsvernderung, die auf bereits bestehenden Frames aufbauen soll, wird mit 
ASCALE programmiert. In diesem Fall wird der zuletzt gltige mit dem neuen Mastabsfaktor 
multipliziert.

Als Bezug fr die Mastabsvernderung gilt das aktuell eingestellte oder zuletzt programmierte 
Koordinatensystem.

Skalierung und Verschiebung

Hinweis

Wenn nach SCALE eine Verschiebung mit ATRANS programmiert wird, dann werden die 
Verschiebewerte ebenfalls skaliert.

322

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:59)(cid:61)(cid:60)(cid:36)(cid:54)(cid:38)(cid:36)(cid:47)(cid:40)(cid:55)(cid:53)(cid:36)(cid:49)(cid:54)(cid:36)(cid:53)(cid:50)(cid:55)2.12 Koordinatentransformationen (Frames)

Grundlagen

Unterschiedliche Mastabsfaktoren

ACHTUNG

Kollisionsgefahr

Vorsicht mit unterschiedlichen Mastabsfaktoren! Kreisinterpolationen knnen z. B. nur mit 
den gleichen Faktoren skaliert werden.

Hinweis

Fr die Programmierung verzerrter Kreise knnen unterschiedliche Mastabsfaktoren jedoch 
gezielt eingesetzt werden.

2.12.8

Programmierbare Spiegelung (MIRROR, AMIRROR)

Mit MIRROR/AMIRROR knnen Werkstckformen an Koordinatenachsen gespiegelt werden. 
Alle Fahrbewegungen, die danach z. B. im Unterprogramm programmiert sind, werden 
gespiegelt ausgefhrt. 

Syntax

MIRROR X... Y... Z...
AMIRROR X... Y... Z...

Hinweis

Frame-Anweisungen werden jeweils in einem eigenen NC-Satz programmiert.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

323

Grundlagen

2.12 Koordinatentransformationen (Frames)

Bedeutung

MIRROR:

AMIRROR:

Spiegeln absolut, bezogen auf das aktuell gltige, mit G54 ... G57, 
G505 ... G599 eingestellte Koordinatensystem

Spiegeln additiv, bezogen auf das aktuell gltige eingestellte oder program
mierte Koordinatensystem

X... Y... Z... :

Geometrieachse, deren Richtung getauscht werden soll. Der hier angege
bene Wert ist frei whlbar, z. B. X0 Y0 Z0.

Beispiele

Beispiel 1: Frsen

Die hier gezeigte Kontur wird einmal als Un
terprogramm programmiert. Die drei weiteren 
Konturen werden durch Spiegelung erzeugt. 
Der Werkstcknullpunkt wird zentral zu den 
Konturen angeordnet.

Programmcode

N10 G17 G54

N20 L10

N30 MIRROR X0

N40 L10

N50 AMIRROR Y0

N60 L10

N70 MIRROR Y0

N80 L10

N90 MIRROR

Kommentar

; Arbeitsebene X/Y, Werkstcknullpunkt

; Erste Kontur rechts oben fertigen

; Spiegeln der X-Achse (in X wird die Richtung ge-
tauscht)

; Zweite Kontur links oben fertigen

; Spiegeln der Y-Achse (in Y wird die Richtung ge-
tauscht)

; Dritte Kontur links unten fertigen

; MIRROR setzt vorherige Frames zurck. Spiegeln der Y-
Achse (in Y wird die Richtung getauscht)

; Vierte Kontur rechts unten fertigen

; Spiegeln ausschalten

N100 G0 X300 Y100 M30

; Wegfahren, Programmende

324

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:59)(cid:59)(cid:59)(cid:60)(cid:3)(cid:60)(cid:3)(cid:60)(cid:3)(cid:22)(cid:23)(cid:21)(cid:20)(cid:59)(cid:60)(cid:3)Beispiel 2: Drehen

2.12 Koordinatentransformationen (Frames)

Grundlagen

Die eigentliche Bearbeitung wird als Unterpro
gramm abgelegt, die Abarbeitung an der je
weiligen Spindel durch Spiegelungen und Ver
schiebungen realisiert.

Programmcode

Kommentar

N10 TRANS X0 Z140

; Nullpunktverschiebung auf W

...

; Bearbeitung der 1. Seite mit Spindel 1

N30 TRANS X0 Z600

; Nullpunktverschiebung auf Spindel 2

N40 AMIRROR Z0

N50 ATRANS Z120

...

; Spiegeln der Z-Achse

; Nullpunktverschiebung auf W1

; Bearbeitung der 2. Seite mit Spindel 2

Weitere Informationen

MIRROR X... Y... Z...

Die Spiegelung wird ber axiale Richtungswechsel in der gewhlten Arbeitsebene 
programmiert.

Beispiel: Arbeitsebene G17 X/Y

Die Spiegelung (an der Y-Achse) erfordert einen Richtungswechsel in X und wird demnach 
programmiert mit MIRROR X0. Die Kontur wird dann spiegelverkehrt auf der 
gegenberliegenden Seite der Spiegelachse Y bearbeitet.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

325

(cid:54)(cid:83)(cid:76)(cid:81)(cid:71)(cid:72)(cid:79)(cid:3)(cid:20)(cid:54)(cid:83)(cid:76)(cid:81)(cid:71)(cid:72)(cid:79)(cid:3)(cid:21)(cid:48)(cid:48)(cid:58)(cid:58)(cid:59)(cid:59)(cid:61)(cid:61)(cid:20)(cid:23)(cid:19)(cid:20)(cid:21)(cid:19)(cid:25)(cid:19)(cid:19)(cid:20)(cid:20)Grundlagen

2.12 Koordinatentransformationen (Frames)

Die Spiegelung bezieht sich auf das aktuell gltige, mit G54 ... G57, G505 ... G599 eingestellte 
Koordinatensystem.

ACHTUNG

Kein Ursprungs-Frame

Der Befehl MIRROR setzt alle Frame-Komponenten des vorher gesetzten programmierbaren 
Frames zurck.

AMIRROR X... Y... Z...

Eine Spiegelung, die auf bereits bestehenden Transformationen aufbauen soll, wird mit 
AMIRROR programmiert. Als Bezug gilt das aktuell eingestellte oder zuletzt programmierte 
Koordinatensystem.

Spiegelung ausschalten

Fr alle Achsen: MIRROR (ohne Achsangabe)

Hierbei werden alle Frame-Komponenten des vorher programmierten Frames zurckgesetzt.

326

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:48)(cid:44)(cid:53)(cid:53)(cid:50)(cid:53)(cid:3)(cid:60)(cid:48)(cid:44)(cid:53)(cid:53)(cid:50)(cid:53)(cid:3)(cid:59)(cid:60)(cid:59)(cid:36)(cid:48)(cid:44)(cid:53)(cid:53)(cid:50)(cid:53)(cid:55)(cid:53)(cid:36)(cid:49)(cid:54)2.12 Koordinatentransformationen (Frames)

Grundlagen

Werkzeugradiuskorrektur

Hinweis

Die Steuerung stellt mit dem Spiegelbefehl automatisch die Bahnkorrekturbefehle (G41/G42 
bzw. G42/G41) entsprechend der vernderten Bearbeitungsrichtung um.

Gleiches gilt fr den Kreisdrehsinn (G2/G3 bzw. G3/G2).

Hinweis

Wenn nach MIRROR eine additive Drehung mit AROT programmiert wird, muss fallweise mit 
umgekehrten Drehrichtungen (positiv/negativ bzw. negativ/positiv) gearbeitet werden. 
Spiegelungen in den Geometrieachsen werden von der Steuerung selbstttig in Rotationen 
und ggf. Spiegelungen der durch Maschinendatum einstellbaren Spiegelachse umgerechnet. 
Dies gilt auch fr einstellbare Nullpunktverschiebungen.

Spiegelachse

ber Maschinendatum kann eingestellt werden, um welche Achse gespiegelt wird:

MD10610 $MN_MIRROR_REF_AX = <Wert>

Wert

Bedeutung

0

1

2

3

Es wird um die programmierte Achse gespiegelt (Negieren der Werte).

X-Achse ist Bezugsachse.

Y-Achse ist Bezugsachse.

Z-Achse ist Bezugsachse.

Interpretation der programmierten Werte

ber Maschinendatum kann eingestellt werden, wie die programmierten Werte zu 
interpretieren sind:

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

327

(cid:59)(cid:60)(cid:42)(cid:23)(cid:21)(cid:48)(cid:44)(cid:53)(cid:53)(cid:50)(cid:53)(cid:3)(cid:59)(cid:42)(cid:23)(cid:20)(cid:42)(cid:19)(cid:21)(cid:42)(cid:19)(cid:22)Grundlagen

2.12 Koordinatentransformationen (Frames)

MD10612 $MN_MIRROR_TOGGLE = <Wert>

Wert

Bedeutung

0

1

Programmierte Achswerte werden nicht ausgewertet.

Programmierte Achswerte werden ausgewertet:

 Bei programmierten Achswerten  0 wird die Achse gespiegelt, wenn sie noch nicht 

gespiegelt ist.

 Bei einem programmierten Achswert = 0 wird eine Spiegelung ausgeschaltet.

2.12.9

Frame-Erzeugung nach Werkzeugausrichtung (TOFRAME, TOROT, PAROT)

TOFRAME erzeugt ein rechtwinkliges Koordinatensystem, dessen Z-Achse mit der aktuellen 
Werkzeugausrichtung bereinstimmt. Dadurch hat der Anwender die Mglichkeit, das 
Werkzeug in Z-Richtung kollisionsfrei freizufahren (z. B. nach einem Werkzeugbruch bei einem 
5-Achs-Programm).  

Die Lage der beiden Achsen X und Y ist dabei abhngig von der Einstellung im 
Maschinendatum MD21110 $MC_X_AXES_IN_OLD_X_Z_PLANE (Koordinatensystem bei 
automatischer Frame-Definition). Das neue Koordinatensystem wird entweder so belassen, 
wie es sich aus der Kinematik der Maschine ergibt, oder es wird zustzlich so um die neue Z-
Achse gedreht, dass die neue X-Achse in der alten Z-X-Ebene liegt (siehe Angaben des 
Maschinenherstellers).

Der resultierende Frame, der die Orientierung beschreibt, steht in der Systemvariablen fr den 
programmierbaren Frame ($P_PFRAME).

Mit TOROT wird im programmierten Frame nur der Rotationsanteil berschrieben. Alle brigen 
Komponenten bleiben unverndert.

TOFRAME und TOROT sind auf Frsbearbeitungen zugeschnitten, bei denen typischerweise 
G17 (Arbeitsebene X/Y) aktiv ist. Bei Drehbearbeitungen oder allgemein bei aktiven G18 oder 
G19 werden dagegen Frames bentigt, bei denen die X- oder Y-Achse mit der Ausrichtung des 
Werkzeugs bereinstimmt. Diese Frames werden mit den Befehlen TOFRAMEX/TOROTX oder 
TOFRAMEY/TOROTY programmiert.

Mit PAROT wird das Werkstckkoordinatensystem (WKS) am Werkstck ausgerichtet.   

328

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

2.12 Koordinatentransformationen (Frames)

Grundlagen

Syntax

Bedeutung

TOFRAME/TOFRAMEZ/TOFRAMEY/TOFRAMEX

...

TOROTOF

TOROT/TOROTZ/TOROTY/TOROTX

...

TOROTOF

PAROT

...

PAROTOF

TOFRAME:

TOFRAMEZ:

TOFRAMEY:

TOFRAMEX:

TOROT:

Z-Achse des WKS durch Frame-Drehung parallel zur Werkzeugorientierung aus
richten

wie TOFRAME

Y-Achse des WKS durch Frame-Drehung parallel zur Werkzeugorientierung aus
richten

X-Achse des WKS durch Frame-Drehung parallel zur Werkzeugorientierung aus
richten

Z-Achse des WKS durch Frame-Drehung parallel zur Werkzeugorientierung aus
richten

Die durch TOROT definierte Drehung ist die gleiche wie bei TOFRAME.

TOROTZ:

wie TOROT

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

329

(cid:37)(cid:68)(cid:86)(cid:76)(cid:86)(cid:37)(cid:68)(cid:86)(cid:76)(cid:86)(cid:37)(cid:68)(cid:86)(cid:76)(cid:86)(cid:61)(cid:10)(cid:59)(cid:10)(cid:60)(cid:10)(cid:61)(cid:59)(cid:60)(cid:23)(cid:24)(cid:114)(cid:61)(cid:10)(cid:59)(cid:10)(cid:10)(cid:60)(cid:10)(cid:10)Grundlagen

2.12 Koordinatentransformationen (Frames)

Y-Achse des WKS durch Frame-Drehung parallel zur Werkzeugorientierung aus
richten

X-Achse des WKS durch Frame-Drehung parallel zur Werkzeugorientierung aus
richten

Ausrichtung parallel zur Werkzeugorientierung ausschalten

WKS durch Frame-Drehung am Werkstck ausrichten

Translationen, Skalierungen und Spiegelungen im aktiven Frame bleiben erhalten.

Die mit PAROT aktivierte werkstckbezogene Frame-Drehung wird mit PAROTOF 
ausgeschaltet.

TOROTY:

TOROTX:

TOROTOF:

PAROT:

PAROTOF:

Hinweis

Mit dem Befehl TOROT wird eine konsistente Programmierung bei aktiven orientierbaren 
Werkzeugtrgern fr jeden Kinematiktyp erreicht.

Analog zur Situation bei drehbarem Werkzeugtrger kann mit PAROT eine Drehung des 
Werkzeugtisches aktiviert werden. Damit wird ein Frame definiert, welches die Lage des 
Werkstckkoordinatensystems so verndert, dass es zu keiner Ausgleichsbewegung der 
Maschine kommt. Der Sprachbefehl PAROT wird nicht abgelehnt, wenn kein orientierbarer 
Werkzeugtrger aktiv ist.

Beispiel

Programmcode

Kommentar

N100 G0 G53 X100 Z100 D0

N120 TOFRAME

N140 G91 Z20

N160 X50

...

Weitere Informationen

Zuordnung Achsrichtung

; TOFRAME wird eingerechnet, alle programmierten Geo-
metrieachsbewegungen
beziehen sich auf das neue Koordinatensystem.

Wird an Stelle von TOFRAME / TOFRAMEZ oder TOROT / TOROTZ einer der Befehle 
TOFRAMEX, TOFRAMEY, TOROTX, TOROTY programmiert, dann gelten die Zuordnungen 
der Achsrichtungen entsprechend dieser Tabelle:

Befehl

TOFRAME / TOFRAMEZ /
TOROT / TOROTZ

TOFRAMEY / TOROTY

TOFRAMEX / TOROTX

Werkzeugrichtung 
(Applikate)

Nebenachse
(Abszisse)

Nebenachse
(Ordinate)

Z

Y

X

X

Z

Y

Y

X

Z

330

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
2.12 Koordinatentransformationen (Frames)

Grundlagen

Eigener Systemframe fr TOFRAME oder TOROT

Die durch TOFRAME oder TOROT entstehenden Frames knnen in einen eigenen 
Systemframe $P_TOOLFRAME geschrieben werden. Dazu muss das Bit 3 im 
Maschinendatum MD28082 $MC_MM_SYSTEM_FRAME_MASK gesetzt werden. Der 
programmierbare Frame bleibt hierbei unverndert erhalten. Unterschiede ergeben sich, wenn 
der programmierbare Frame weiter bearbeitet wird.

2.12.10

Frame abwhlen (G53, G153, SUPA, G500)

Beim Abarbeiten bestimmter Vorgnge, wie z. B. dem Anfahren des Werkzeugwechselpunkts, 
mssen verschiedene Frame-Komponenten definiert und zeitlich bestimmt unterdrckt 
werden. 

Einstellbare Frames knnen entweder modal ausgeschaltet oder satzweise unterdrckt 
werden.

Programmierbare Frames knnen satzweise unterdrckt oder gelscht werden.

Syntax

Bedeutung

G53
G153
SUPA
G500
TRANS
ROT
SCALE
MIRROR

G53:

G153:

SUPA:

G500:

TRANS ROT SCALE MIRROR:

Satzweise wirksames Unterdrcken aller programmierbaren 
und einstellbaren Frames

G153 wirkt wie G53 und unterdrckt darber hinaus den Ge
samt-Basisframe ($P_ACTBFRAME)

SUPA wirkt wie G153 und unterdrckt darber hinaus:

 Handradverschiebungen (DRF)

 berlagerte Bewegungen

 externe Nullpunktverschiebung

 PRESET-Verschiebung

Modal wirksames Ausschalten aller einstellbaren Frames 
(G54 ... G57, G505 ... G599), wenn in G500 kein Wert steht.

ohne Achsangabe bewirkt ein Lschen der programmierba
ren Frames.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

331

Grundlagen

2.12 Koordinatentransformationen (Frames)

2.12.11

Programmierung: berlagerungen achsspezifisch abwhlen (CORROF)

Mit der Prozedur CORROF werden folgende achsspezifischen berlagerungen gelscht:

 ber Handradverfahren eingestellte additive Nullpunktverschiebunge (DRF-

Verschiebungen) 

 ber die Systemvariable $AA_OFF programmierte Positionsoffsets 

Durch das Lschen eines berlagerungswertes wird ein Vorlaufstopp ausgelst und der 
Positionsanteil der abgewhlten berlagerten Bewegung in die Position im 
Basiskoordinatensystem bernommen. Dabei wird keine Achse verfahren. 

Der ber die Systemvariable $AA_IM (Aktueller MKS-Sollwert der Achse) lesbare 
Positionswert im Maschinenkoordinatensysstem ndert sich nicht. 

Der ber die Systemvariable $AA_IW (Aktueller WKS-Sollwert der Achse) lesbare 
Positionswert im Werkstckkoordinatensysstem ndert sich, da er nun den abgewhlten Anteil 
der berlagerten Bewegung enthlt.

Hinweis

In einem NC-Programm darf CORROF  programmiert werden.

In einer Synchronaktion darf CORROF  nicht programmiert werden.

Syntax

Bedeutung

CORROF(<Axis>,"<String>"[,<Axis>,"<String>"])

CORROF:

Prozedur zur Abwahl folgender Verschiebungen bzw. berlagerungen einer Achse:

 DRF-Verschiebung

 Positionsoffsets ($AA_OFF)

Wirksamkeit: modal

<Axis>:

Achsbezeichner (Kanal-, Geometrie- oder Maschinenachsbezeichner)

Datentyp:

AXIS

<String>:

Zeichenkette zur Definition der berlagerungsart

Datentyp:

BOOL

Wert

DRF

Bedeutung

DRF-Verschiebung

AA_OFF

Positionsoffset ($AA_OFF)

332

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Beispiele

2.12 Koordinatentransformationen (Frames)

Grundlagen

Beispiel 1: Achsspezifische Abwahl einer DRF-Verschiebung (1)

ber DRF-Handradverfahren wird eine DRF-Verschiebung in der X-Achse erzeugt. Fr alle 
anderen Achsen des Kanals sind keine DRF-Verschiebungen wirksam.

Programmcode

Kommentar

N10 CORROF(X,"DRF")

; CORROF wirkt hier wie DRFOF.

...

Beispiel 2: Achsspezifische Abwahl einer DRF-Verschiebung (2)

ber DRF-Handradverfahren wird eine DRF-Verschiebung in der X-und in der Y-Achse 
erzeugt. Fr alle anderen Achsen des Kanals sind keine DRF-Verschiebungen wirksam.

Programmcode

Kommentar

; Nur die DRF-Verschiebung der X-Achse wird abgewhlt, die DRF-Verschiebung der Y-
Achse bleibt erhalten.

; Bei DRFOF wren beide Verschiebungen abgewhlt worden.

N10 CORROF(X,"DRF")

...

Beispiel 3: Achsspezifische Abwahl eines $AA_OFF-Positionsoffsets

Programmcode

Kommentar

; Fr die X-Achse wird ein Positionsoffset == 10 interpoliert.

N10 WHEN TRUE DO $AA_OFF[X]=10 G4 F5

...

; Der Positionsoffset der X-Achse wird abgewhlt: $AA_OFF[X]=0

; Die X-Achse wird nicht verfahren.

; Zur aktuellen Position der X-Achse wird der Positionsoffset hinzugerechnet.

N80 CORROF(X,"AA_OFF")

...

Beispiel 4: Achsspezifische Abwahl einer DRF-Verschiebung und eines $AA_OFF-
Positionsoffsets (1)

ber DRF-Handradverfahren wird eine DRF-Verschiebung in der X-Achse erzeugt. Fr alle 
anderen Achsen des Kanals sind keine DRF-Verschiebungen wirksam.

Programmcode

Kommentar

; Fr die X-Achse wird ein Positionsoffset von 10 interpoliert.

N10 WHEN TRUE DO $AA_OFF[X]=10 G4 F5

...

; Nur die DRF-Verschiebung und der Positionsoffset der XAchse wird abgewhlt.

; Die DRF-Verschiebung der Y-Achse bleibt erhalten. 

N70 CORROF(X,"DRF",X,"AA_OFF")

...

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

333

 
 
 
 
 
 
 
Grundlagen

2.12 Koordinatentransformationen (Frames)

Beispiel 5: Achsspezifische Abwahl einer DRF-Verschiebung und eines $AA_OFF-
Positionsoffsets (2)

ber DRF-Handradverfahren wird eine DRF-Verschiebung in der X-Achse und in der Y-Achse 
erzeugt. Fr alle anderen Achsen des Kanals sind keine DRF-Verschiebungen wirksam.

Programmcode

Kommentar

; Fr die X-Achse wird ein Positionsoffset == 10 interpoliert.

N10 WHEN TRUE DO $AA_OFF[X]=10 G4 F5

...

; Die DRF-Verschiebung der YAchse und der Positionsoffset der XAchse werden abge-
whlt.

; Die DRF-Verschiebung der X-Achse bleibt erhalten.

N70 CORROF(Y,"DRF",X,"AA_OFF")

...

Weitere Informationen

$AA_OFF_VAL

Nach der Abwahl des Positionsoffsets aufgrund von $AA_OFF ist die Systemvariable 
$AA_OFF_VAL (Integrierter Weg der Achsberlagerung) der entsprechenden Achse gleich 
Null.

$AA_OFF in der Betriebsart JOG

Auch in der Betriebsart JOG findet bei einer nderung von $AA_OFF eine Interpolation des 
Positionsoffsets als berlagerte Bewegung statt, wenn die Freischaltung dieser Funktion ber 
das Maschinendatum MD36750 $MA_AA_OFF_MODE erfolgt ist.

$AA_OFF in Synchronaktion

Ist bei der Abwahl des Positionsoffsets ber CORROF(<Achse>,"AA_OFF") eine 
Synchronaktion aktiv, die $AA_OFF sofort wieder setzt (DO $AA_OFF[<Achse>]=<Wert>), 
dann wird $AA_OFF abgewhlt und nicht wieder gesetzt und der Alarm 21660 angezeigt. Wird 
die Synchronaktion jedoch spter aktiv, z. B. im Satz nach CORROF, dann wird $AA_OFF 
gesetzt und ein Positionsoffset interpoliert.

Automatischer Kanalachstausch

Falls eine Achse, fr die ein CORROF programmiert wurde, in einem anderen Kanal aktiv ist, 
dann wird sie mit Achstausch in den Kanal geholt (Voraussetzung: 
MD30552 $MA_AUTO_GET_TYPE > 0) und dann der Positionsoffset und/oder die DRF-
Verschiebung abgewhlt.

2.12.12

Additive Nullpunktverschiebungen abwhlen (DRFOF)

Die ber Handradverfahren eingestellten additiven Nullpunktverschiebungen (DRF-
Verschiebungen) werden ber die Prozedur DRFOF abgewhlt. 

Durch die Abwahl wird ein Vorlaufstopp ausgelst und der Positionsanteil der abgewhlten 
DRF-Verschiebung in die Position im Basiskoordinatensystem bernommen, dabei wird keine 

334

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
2.12 Koordinatentransformationen (Frames)

Grundlagen

Achse verfahren. Der Wert der Systemvariablen $AA_IM (Aktueller MKS-Sollwert einer Achse) 
ndert sich nicht, der Wert der Systemvariablen $AA_IW (Aktueller WKS-Sollwert einer Achse) 
verndert sich, da er nun den abgewhlten Anteil aus der berlagerten Bewegung enthlt.

Syntax

DRFOF

Bedeutung

Beispiele

DRFOF:

Prozedur zur Abwahl der DRF-Verschiebungen fr alle aktiven Achsen des Kanals

Wirksamkeit: modal

Beispiel 1: Achsspezifische Abwahl einer DRF-Verschiebung (1)

ber DRF-Handradverfahren wird eine DRF-Verschiebung in der X-Achse erzeugt. Fr alle 
anderen Achsen des Kanals sind keine DRF-Verschiebungen wirksam.

Programmcode

Kommentar

N10 CORROF(X,"DRF")

; CORROF wirkt hier wie DRFOF.

...

Beispiel 2: Achsspezifische Abwahl einer DRF-Verschiebung (2)

ber DRF-Handradverfahren wird eine DRF-Verschiebung in der X-und in der Y-Achse 
erzeugt. Fr alle anderen Achsen des Kanals sind keine DRF-Verschiebungen wirksam.

Programmcode

Kommentar

N10 CORROF(X,"DRF")

; Nur die DRF-Verschiebung der X-Achse wird abgewhlt, die 
DRF-Verschiebung der Y-Achse bleibt erhalten (bei DRFOF w-
ren beide Verschiebungen abgewhlt worden).

...

Beispiel 3: Achsspezifische Abwahl einer DRF-Verschiebung und eines $AA_OFF-
Positionsoffsets (1)

ber DRF-Handradverfahren wird eine DRF-Verschiebung in der X-Achse erzeugt. Fr alle 
anderen Achsen des Kanals sind keine DRF-Verschiebungen wirksam.

Programmcode

Kommentar

N10 WHEN TRUE DO $AA_OFF[X]=10 G4 F5

; Fr die X-Achse wird ein Positions-
offset == 10 interpoliert.

...

N70 CORROF(X,"DRF",X,"AA_OFF")

...

; Nur die DRF-Verschiebung und der 
Positionsoffset der XAchse wird ab-
gewhlt, die DRF-Verschiebung der Y-
Achse bleibt erhalten. 

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

335

 
 
 
 
Grundlagen

2.12 Koordinatentransformationen (Frames)

Beispiel 4: Achsspezifische Abwahl einer DRF-Verschiebung und eines $AA_OFF-
Positionsoffsets (2)

ber DRF-Handradverfahren wird eine DRF-Verschiebung in der X-Achse und in der Y-Achse 
erzeugt. Fr alle anderen Achsen des Kanals sind keine DRF-Verschiebungen wirksam.

Programmcode

Kommentar

N10 WHEN TRUE DO $AA_OFF[X]=10 G4 F5

; Fr die X-Achse wird ein Positions-
offset == 10 interpoliert.

...

N70 CORROF(Y,"DRF",X,"AA_OFF")

...

; Die DRF-Verschiebung der YAchse 
und der Positionsoffset der XAchse 
werden abgewhlt, die DRF-Verschie-
bung der X-Achse bleibt erhalten.

2.12.13

Schleifspezifische Nullpunktverschiebungen (GFRAME0, GFRAME1 ... 
GFRAME100)

Befehl zur Aktivierung eines Schleifframes im Kanal

Durch Programmierung des Befehles GFRAME<n> wird der entsprechende Schleifframe der 
Datenhaltung $P_GFR[<n>] im Kanal aktiv. Dazu wird der aktive Schleifframe $P_GFRAME 
gleich dem Schleifframe der Datenhaltung $P_GFR[<n>] gesetzt: 

GFRAME<n>  $P_GFRAME = $P_GFR[<n>]

Befehl

Im Kanal aktivierter Schleifframe

GFRAME0

GFRAME1

...

$P_GFR[ 0 ] (Nullframe)

$P_GFR[ 1 ]

...

GFRAME100

$P_GFR[ 100 ]

Syntax

GFRAME<n>

Bedeutung

GFRAME<n>:

Aktivierung des Schleifframes <n> der Datenhaltung

G-Gruppe:

64

Grundstellung:

MD20150 $MC_GCODE_RESET_VALUES[ 63 ]

<n>:

Wirksamkeit:

Modal

Nummer des Schleifframes

Wertebereich:

0, 1, 2, ... 100

336

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
2.13

Hilfsfunktionsausgaben

Grundlagen

2.13 Hilfsfunktionsausgaben

Funktion 

Hilfsfunktionen

Mit der Hilfsfunktionsausgabe wird der PLC zeitgerecht mitgeteilt, wann das Teileprogramm 
bestimmte Schalthandlungen der Werkzeugmaschine durch die PLC vornehmen lassen will. 
Dies geschieht durch bergabe der entsprechenden Hilfsfunktionen mit ihren Parametern an 
die PLC-Schnittstelle. Die Verarbeitung der bergebenen Werte und Signale muss durch das 
PLC-Anwenderprogramm erfolgen.

Folgende Hilfsfunktionen knnen an die PLC bertragen werden:

Hilfsfunktion

Werkzeugwahl

Werkzeugkorrektur

Vorschub

Spindeldrehzahl

M-Funktionen

H-Funktionen

Adresse

T

D, DL

F / FA

S

M

H

Fr jede Funktionsgruppe oder Einzelfunktion wird mit Maschinendaten festgelegt, ob die 
Ausgabe vor, mit oder nach der Verfahrbewegung ausgelst wird.

Die PLC kann zu verschiedenem Quittungsverhalten fr Hilfsfunktionsausgaben veranlasst 
werden.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

337

Grundlagen

2.13 Hilfsfunktionsausgaben

Eigenschaften

Wichtige Eigenschaften der Hilfsfunktionen sind in folgender bersichtstabelle 
zusammengefasst:

Funktion

Adresserweiterung

Wert

Erluterungen

Bedeutung

Bereich

Bereich

Typ

Bedeutung

Maximale 
Anzahl pro 
Satz

M

-

0

0 ... 99

INT

Funktion

(implizit)

Spindel-Nr.

1 - 12

1 ... 99

INT

Funktion

Fr den Wertebereich zwi
schen 0 und 99 ist die Ad
resserweiterung 0.

5

Zwingend ohne Adresser
weiterung:
M0, M1, M2, M17, M30

M3, M4, M5, M19, M70 mit 
Adresserweiterung Spindel-
Nr. (z. B. M2=5 ; Spindel-
Halt fr Spindel 2).

Ohne Spindel-Nr. gilt die 
Funktion fr die Masterspin
del.

S

H

T

D

DL

F

FA

Beliebig

0 - 99

100 ... 
2147483647

INT

Funktion

Anwender-M-Funktion*

Spindel-Nr.

1 - 12

0 ...  1,8*10308

REAL

Drehzahl

Beliebig

0 - 99

0 ...

Beliebig

1 - 12

Spindel-Nr
(bei aktiver 
WZV)

INT

REAL

INT

 2147483647
 1,8*10308

0 - 32000 (auch 
Werkzeugna
men bei aktiver 
WZV)

Werkzeug-
wahl

Ohne Spindel-Nr. gilt die 
Funktion fr die Masterspin
del.

Funktionen haben im NC 
keine Wirkungen, aus
schlielich durch PLC zu re
alisieren.*

Werkzeugnamen gehen 
nicht an die PLC-Schnittstel
le.

-

-

0 - 12

INT

Werkzeug-
korrektur-
wahl

D0: Abwahl

Vorbesetzung: D1

1 - 6

0 ...  1,8*10308

Ortsabhn
gige Korrek
tur

-

-

Achs-Nr.

1 - 31

0.001 - 
999 999,999

0.001 - 
999 999,999

REAL Werkzeug-
feinkorrek
turwahl

REAL

REAL

Bahnvor
schub

Achsvor
schub

Bezieht sich auf zuvor ge
whlte D-Nummer.

3

3

1

1

1

6

* Die Bedeutung der Funktionen wird vom Maschinenhersteller festgelegt (siehe Angaben des Maschinenherstellers!).

Weitere Informationen

Anzahl an Funktionsausgaben pro NC-Satz

In einem NC-Satz knnen maximal 10 Funktionsausgaben programmiert werden. 
Hilfsfunktionen knnen auch aus dem Aktionsteil von Synchronaktionen ausgegeben werden.

338

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
Grundlagen

2.13 Hilfsfunktionsausgaben

Gruppierung

Die genannten Funktionen knnen zu Gruppen zusammengefasst werden. Fr einige M-
Befehle ist die Gruppeneinteilung bereits vorgegeben. Mit der Gruppierung kann das 
Quittungsverhalten festgelegt werden.

Schnelle Funktionsausgaben (QU)  

Funktionen, die nicht als schnelle Ausgaben projektiert wurden, knnen fr einzelne Ausgaben 
mit dem Schlsselwort QU als schnelle Ausgabe definiert werden. Der Programmablauf wird 
fortgesetzt, ohne auf die Quittung fr die Ausfhrung der Zusatzfunktion zu warten 
(Transportquittung wird abgewartet). Hierdurch lassen sich unntige Haltepunkte und 
Unterbrechungen der Fahrbewegungen vermeiden.

Hinweis

Fr die Funktion "Schnelle Funktionsausgaben" mssen entsprechende Maschinendaten 
gesetzt sein ( Maschinenhersteller!).

Funktionsausgaben bei Fahrbewegungen

Die bertragung von Informationen sowie das Warten auf entsprechende Reaktionen kosten 
Zeit und beeinflussen daher auch die Fahrbewegungen.

Schnelle Quittung ohne Satzwechselverzgerung

Das Satzwechselverhalten kann durch Maschinendatum beeinflusst werden. Mit der 
Einstellung "ohne Satzwechselverzgerung" ergibt sich fr schnelle Hilfsfunktionen folgendes 
Verhalten:

Hilfsfunktionsausgabe

Verhalten

vor Bewegung

whrend Bewegung

nach Bewegung

Der Satzbergang zwischen Stzen mit schnellen Hilfsfunktionen 
erfolgt ohne Unterbrechung und ohne Geschwindigkeitsreduzierung. Die 
Ausgabe der Hilfsfunktionen erfolgt im ersten Interpolatortakt des Satzes. 
Der Folgesatz wird ohne Quittungsverzgerung abgefahren.

Der Satzbergang zwischen Stzen mit schnellen Hilfsfunktionen 
erfolgt ohne Unterbrechung und ohne Geschwindigkeitsreduzierung. Die 
Ausgabe der Hilfsfunktionen erfolgt whrend des Satzes. Der Folgesatz 
wird ohne Quittungsverzgerung abgefahren.

Die Bewegung kommt am Ende des Satzes zum Stillstand. Die Ausgabe 
der Hilfsfunktionen erfolgt am Satzende. Der Folgesatz wird ohne Quit
tungsverzgerung abgefahren.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

339

Grundlagen

2.13 Hilfsfunktionsausgaben

VORSICHT

Funktionsausgaben im Bahnsteuerbetrieb 

Funktionsausgaben vor den Verfahrbewegungen unterbrechen den Bahnsteuerbetrieb 
(G64 / G641) und erzeugen fr den vorherigen Satz einen Genauhalt.

Funktionsausgaben nach den Verfahrbewegungen unterbrechen den Bahnsteuerbetrieb 
(G64 / G641) und erzeugen fr den aktuellen Satz einen Genauhalt.

Wichtig: Das Warten auf ein ausstehendes Quittungssignal von der PLC kann ebenfalls zur 
Unterbrechung des Bahnsteuerbetriebs fhren, z. B. bei M-Befehlsfolgen in Stzen mit 
extrem kurzen Bahnweglngen.

2.13.1

M-Funktionen

Mit den M-Funktionen knnen z. B. Schalthandlungen wie "Khlmittel EIN/AUS" und sonstige 
Funktionalitten an der Maschine ausgelst werden.

Syntax

Bedeutung

M<Wert>
M[<Adresserweiterung>]=<Wert>

M:

Adresse zur Programmierung der M-Funktionen

<Adresserweiterung>:

<Wert>:

Fr einige M-Funktionen gilt die erweiterte Adressschreibweise 
(z. B. Angabe der Spindelnummer bei Spindelfunktionen).

Durch die Wertzuweisung (M-Funktionsnummer) erfolgt die Zuord
nung zu einer bestimmten Maschinenfunktion.

Typ:

INT

Wertebereich:

0 ... 2147483647 (max. INT-Wert)

Vordefinierte M-Funktionen

Einige fr den Programmablauf wichtige M-Funktionen sind im Standardumfang der Steuerung 
bereits vorbelegt:

M-Funktion

Bedeutung

M0*

M1*

M2*

M3

M4

M5

Programmierter Halt

Wahlweiser Halt

Programmende Hauptprogramm (wie M30)

Spindel Rechtslauf

Spindel Linkslauf

Spindel Halt

340

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Grundlagen

2.13 Hilfsfunktionsausgaben

M-Funktion

Bedeutung

M6

M17*

M19

M30*

M40

M41

M42

M43

M44

M45

M70

Hinweis

Werkzeugwechsel (Standardeinstellung)

Programmende Unterprogramm

Spindel positionieren

Programmende Hauptprogramm (wie M2)

Automatische Getriebeschaltung

Getriebestufe 1

Getriebestufe 2

Getriebestufe 3

Getriebestufe 4

Getriebestufe 5

Spindel wird in den Achsbetrieb geschaltet

Fr die mit * gekennzeichneten Funktionen ist die erweiterte Adressschreibweise nicht 
zulssig.

Die Funktionen M0, M1, M2, M17 und M30 werden immer nach der Verfahrbewegung 
ausgelst.

Vom Maschinenhersteller definierte M-Funktionen

Alle freien M-Funktionsnummern knnen vom Maschinenhersteller belegt werden, z. B. mit 
Schaltfunktionen zur Steuerung von Spannvorrichtungen oder zum Ein- / Ausschalten weiterer 
Maschinenfunktionen.

Hinweis

Die den freien M-Funktionsnummern zugeordneten Funktionalitten sind Maschinen-
spezifisch. Eine bestimmte M-Funktion kann daher an unterschiedlichen Maschinen eine 
unterschiedliche Funktionalitt besitzen.

Die an einer Maschine zur Verfgung stehenden M-Funktionen und deren Funktionalitten 
sind den Angaben des Maschinenherstellers zu entnehmen.

Beispiele

Beispiel 1: Maximale Anzahl an M-Funktionen im Satz

Programmcode

N10 S...

N20 X... M3

N180 M789 M1767 M100 M102 
M376

Kommentar

; M-Funktion im Satz mit Achsbewegung,

; Spindel luft vor der X-Achsbewegung hoch.

; Maximal 5 M-Funktionen im Satz.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

341

 
Grundlagen

2.13 Hilfsfunktionsausgaben

Beispiel 2: M-Funktion als schnelle Ausgabe

Programmcode

N10 H=QU(735)

Kommentar

; Schnelle Ausgabe fr H735.

N10 G1 F300 X10 Y20 G64

N20 X8 Y90 M=QU(7)

; Schnelle Ausgabe fr M7.

M7 wurde als schnelle Ausgabe programmiert, so dass der Bahnsteuerbetrieb (G64) nicht 
unterbrochen wird.

Hinweis

Setzen Sie diese Funktion nur in Einzelfllen ein, da z. B. im Zusammenwirken mit anderen 
Funktionsausgaben die zeitliche Abstimmung verndert wird.

Weitere Informationen zu den vordefinierten M-Befehlen

Programmierter Halt: M0

Im NC-Satz mit M0 wird die Bearbeitung angehalten. Jetzt knnen Sie z. B. Spne entfernen, 
nachmessen usw. 

Programmierter Halt 1 - Wahlweiser Halt: M1

M1 ist einstellbar ber:

 HMI/Dialog "Programmbeeinflussung"

oder

 NC/PLC-Schnittstelle

Die Programmbearbeitung der NC wird jeweils bei den programmierten Stzen angehalten.

Programmierter Halt 2 - Eine zu M1 assoziierte Hilfsfunktion mit Halt im Programmablauf

Der Programmierte Halt 2 ist ber HMI/Dialog "Programmbeeinflussung" einstellbar und 
erlaubt jederzeit eine Unterbrechung von technologischen Ablufen am Ende des zu 
bearbeitenden Teils. Damit kann der Bediener in die laufende Produktion eingreifen um z. B. 
Fliespne zu beseitigen. 

Programmende: M2, M17, M30

Ein Programm wird mit M2, M17 oder M30 beendet. Wird das Hauptprogramm aus einem 
anderen Programm (als Unterprogramm) aufgerufen, wirkt M2 / M30 wie M17 und umgekehrt, 
d. h. M17 wirkt im Hauptprogramm wie M2 / M30. 

Spindelfunktionen: M3, M4, M5, M19, M70

Fr alle Spindelfunktionen gilt die erweiterte Adressschreibweise mit Angabe der 
Spindelnummer.

Beispiel:

Programmcode

Kommentar

M2=3

; Spindeldrehung rechts fr die zweite Spindel

342

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
Ist keine Adresserweiterung programmiert, gilt die Funktion fr die Masterspindel.

Grundlagen

2.13 Hilfsfunktionsausgaben

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

343

Grundlagen

2.14 Ergnzende Befehle

2.14

Ergnzende Befehle

2.14.1

Meldung ausgeben (MSG)

Mit der Anweisung MSG() kann eine beliebige Zeichenkette vom Teileprogramm aus als 
Meldung an den Bediener ausgegeben werden.

Syntax

Bedeutung

MSG("<Meldungstext>"[,<Ausfhrung>])

...

MSG()

MSG:

Vordefinierter Unterprogrammaufruf zur Ausgabe einer Meldung

<Meldungstext>:

Beliebige Zeichenkette zur Anzeige als Meldung 

Typ:

STRING

Maximale Lnge:

124 Zeichen; die Anzeige erfolgt in zwei Zeilen (2*62 
Zeichen)

Im Meldungstext knnen durch Verwendung des Verkettungsoperators "<<" 
auch Variablen ausgegeben werden.

<Ausfhrung>:

Parameter zum Festlegen des Zeitpunkts, zu dem das Schreiben der Mel
dung ausgefhrt wird (optional)

Typ:

Wert:

INT

0 (Grund-ein
stellung)

1

Fr das Schreiben der Meldung wird kein eigener 
Hauptlaufsatz erzeugt. Es erfolgt im nchsten 
ausfhrbaren NC-Satz. Keine Unterbrechung ei
nes aktiven Bahnsteuerbetriebs.

Fr das Schreiben der Meldung wird ein eigener 
Hauptlaufsatz erzeugt. Ein aktiver Bahnsteuer
betrieb wird unterbrochen.

MSG():

Durch Programmierung von MSG() ohne Meldungstext wird die aktuelle Mel
dung wieder gelscht. Ohne Lschen bleibt die Anzeige solange bestehen, 
bis die nchste Meldung ansteht.

Beispiele

Beispiel 1: Meldung ausgeben / lschen

Programmcode

N10 G91 G64 F100 

N20 X1 Y1

N... X... Y...

Kommentar

; Bahnsteuerbetrieb

344

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
Programmcode

Kommentar

Grundlagen

2.14 Ergnzende Befehle

N20 MSG ("Bearbeitung Teil 1")

N30 X... Y...

N... X... Y...

N400 X1 Y1

N410 MSG ("Bearbeitung Teil 2",1)

N420 X1 Y1

N... X... Y...

N900 MSG ()

Beispiel 2: Meldungstext mit Variable

Programmcode

N10 R12=$AA_IW[X]

; Die Meldung wird erst mit N30 aus-
gegeben.

; Der Bahnsteuerbetrieb bleibt erhal-
ten.

; Die Meldung wird mit N410 ausgege-
ben.

; Der Bahnsteuerbetrieb wird unter-
brochen.

; Meldung lschen.

Kommentar

; Aktuelle Position der X-Achse in 
R12.

N20 MSG("Position der X-Achse"<<R12<<"prfen") ; Meldung mit Variable R12 ausgeben.

...

N90 MSG ()

; Meldung aus N20 lschen.

2.14.2

Zeichenkette in BTSS-Variable schreiben (WRTPR)

Mit der Funktion WRTPR() ist es mglich, eine beliebige Zeichenkette vom Teileprogramm aus 
in die BTSS-Variable progProtText zu schreiben.   

Syntax

Bedeutung

WRTPR(<String>[,<ExecTime>])

WRTPR:

<String>:

Funktionsaufruf zur Ausgabe einer Zeichenkette.

Beliebige Zeichenkette, die in die BTSS-Variable progProtText geschrieben 
wird. 

Typ:

STRING

Maximale Lnge:

128 Zeichen

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

345

 
 
 
 
 
 
 
 
Grundlagen

2.14 Ergnzende Befehle

<ExecTime>:

Optionaler Parameter zum Festlegen des Zeitpunkts, zu dem das Schreiben 
der Zeichenkette ausgefhrt wird.

Typ:

Wertebereich:

INT

0, 1

0 (Default)

1

Fr das Schreiben der Zeichenkette wird 
kein eigener Hauptlaufsatz erzeugt. Es 
erfolgt im nchsten ausfhrbaren NC-
Satz. Keine Unterbrechung eines aktiven 
Bahnsteuerbetriebs.

Fr das Schreiben der Zeichenkette wird 
ein eigener Hauptlaufsatz erzeugt. Ein 
aktiver Bahnsteuerbetrieb wird unterbro
chen.

Beispiele

Programmcode

Kommentar

N10 G91 G64 F100 

; Bahnsteuerbetrieb

N20 X1 Y1

N30 WRTPR("N30")

; Die Zeichenkette "N30" wird erst in N40 geschrieben.

; Der Bahnsteuerbetrieb bleibt erhalten.

N40 X1 Y1

N50 WRTPR("N50",1)

; Die Zeichenkette "N50" wird in N50 geschrieben.

; Der Bahnsteuerbetrieb wird unterbrochen.

N60 X1 Y1

346

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
Grundlagen

2.14 Ergnzende Befehle

2.14.3

Arbeitsfeldbegrenzung

2.14.3.1

Arbeitsfeldbegrenzung im BKS (G25/G26, WALIMON, WALIMOF)

Mit G25/G26 lsst sich der Arbeitsbereich (Arbeitsfeld, Arbeitsraum), in dem das Werkzeug 
verfahren soll, in allen Kanalachsen begrenzen. Die Bereiche auerhalb der mit G25/G26 
definierten Arbeitsfeldgrenzen sind fr Werkzeugbewegungen gesperrt.  

Die Koordinatenangaben fr die einzelnen Achsen gelten im Basiskoordinatensystem:

Die Arbeitsfeldbegrenzung fr alle gltig gesetzten Achsen muss mit dem Befehl WALIMON 
programmiert sein. Mit WALIMOF ist die Arbeitsfeldbegrenzung unwirksam. WALIMON ist 
Standardeinstellung und muss nur programmiert werden, wenn zuvor die 
Arbeitsfeldbegrenzung ausgeschaltet wurde.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

347

(cid:54)(cid:70)(cid:75)(cid:88)(cid:87)(cid:93)(cid:93)(cid:82)(cid:81)(cid:72)(cid:36)(cid:85)(cid:69)(cid:72)(cid:76)(cid:87)(cid:86)(cid:85)(cid:68)(cid:88)(cid:80)(cid:59)(cid:61)(cid:58)(cid:48)(cid:37)(cid:68)(cid:86)(cid:76)(cid:86)(cid:16)(cid:46)(cid:82)(cid:82)(cid:85)(cid:71)(cid:76)(cid:81)(cid:68)(cid:87)(cid:72)(cid:81)(cid:16)(cid:54)(cid:92)(cid:86)(cid:87)(cid:72)(cid:80)(cid:61)(cid:60)(cid:42)(cid:21)(cid:24)(cid:60)(cid:42)(cid:21)(cid:24)(cid:60)(cid:42)(cid:21)(cid:25)(cid:60)(cid:42)(cid:21)(cid:25)(cid:59)(cid:42)(cid:21)(cid:24)(cid:59)(cid:42)(cid:21)(cid:24)(cid:61)(cid:42)(cid:21)(cid:25)(cid:61)(cid:59)Grundlagen

2.14 Ergnzende Befehle

Syntax

G25 XYZ

G26 XYZ

WALIMON

...

WALIMOF

Bedeutung

G25:

G26:

Untere Arbeitsfeldbegrenzung

Wertzuweisung in Kanalachsen im Basiskoordinatensystem

Obere Arbeitsfeldbegrenzung

Wertzuweisung in Kanalachsen im Basiskoordinatensystem

XYZ :

Untere bzw. obere Arbeitsfeldgrenzen fr die einzelnen Kanalachsen

Die Angaben beziehen sich auf das Basiskoordinatensystem.

WALIMON:

WALIMOF:

Arbeitsfeldbegrenzung fr alle Achsen einschalten

Arbeitsfeldbegrenzung fr alle Achsen ausschalten

Neben der programmierbaren Eingabe der Werte ber G25/G26 ist auch eine Eingabe ber 
achsspezifische Settingdaten mglich:

SD43420 $SA_WORKAREA_LIMIT_PLUS (Arbeitsfeldbegrenzung plus)

SD43430 $SA_WORKAREA_LIMIT_MINUS (Arbeitsfeldbegrenzung minus)

Aktivierung und Deaktivierung der ber SD43420 und SD43430 parametrierten 
Arbeitsfeldbegrenzung erfolgen richtungsspezifisch ber die sofort wirksamen 
achsspezifischen Settingdaten:

SD43400 $SA_WORKAREA_PLUS_ENABLE (Arbeitsfeldbegrenzung in positiver Richtung 
aktiv)

SD43410 $SA_WORKAREA_MINUS_ENABLE (Arbeitsfeldbegrenzung in negativer Richtung 
aktiv)

Durch die richtungsspezifische Aktivierung/Deaktivierung ist es mglich, den Arbeitsbereich 
fr eine Achse nur in einer Richtung zu begrenzen.

Hinweis

Die mit G25/G26 programmierte Arbeitsfeldbegrenzung hat Vorrang und berschreibt die in 
SD43420 und SD43430 eingetragenen Werte.

Hinweis

Mit G25/G26 knnen unter der Adresse S auch Grenzwerte fr Spindeldrehzahlen 
programmiert werden. Mehr Informationen hierzu siehe " Programmierbare 
Spindeldrehzahlbegrenzung (G25, G26) (Seite 103) ".

348

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
Beispiel

Grundlagen

2.14 Ergnzende Befehle

Durch die Arbeitsfeldbegrenzung 
mit G25/26 wird der Arbeitsraum einer 
Drehmaschine so begrenzt, dass die 
umliegenden Einrichtungen wie Revol
ver, Messstation usw. vor Beschdigung 
geschtzt sind.
Grundeinstellung: WALIMON

Programmcode

Kommentar

N10 G0 G90 F0.5 T1

N20 G25 X-80 Z30

; Festlegung der unteren Begrenzung fr die einzelnen Ko-
ordinatenachsen

N30 G26 X80 Z330

; Festlegung der oberen Begrenzung

N40 L22

; Abspanprogramm

N50 G0 G90 Z102 T2

; zum Werkzeugwechselpunkt

N60 X0

N70 WALIMOF

N80 G1 Z-2 F0.5

N90 G0 Z200

N100 WALIMON

N110 X70 M30

; Arbeitsfeldbegrenzung ausschalten

; Bohren

; zurck

; Arbeitsfeldbegrenzung einschalten

; Programmende

Weitere Informationen

Bezugspunkt am Werkzeug

Bei aktiver Werkzeuglngenkorrektur wird als Bezugspunkt die Werkzeugspitze berwacht, 
ansonsten der Werkzeugtrgerbezugspunkt.

Die Bercksichtigung des Werkzeugradius muss separat aktiviert werden. Dies erfolgt ber 
das kanalspezifische Maschinendatum:

MD21020 $MC_WORKAREA_WITH_TOOL_RADIUS

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

349

(cid:54)(cid:70)(cid:75)(cid:88)(cid:87)(cid:93)(cid:93)(cid:82)(cid:81)(cid:72)(cid:36)(cid:85)(cid:69)(cid:72)(cid:76)(cid:87)(cid:86)(cid:85)(cid:68)(cid:88)(cid:80)(cid:59)(cid:37)(cid:59)(cid:14)(cid:59)(cid:16)(cid:61)(cid:37)(cid:22)(cid:19)(cid:19)(cid:22)(cid:19)(cid:27)(cid:19)(cid:27)(cid:19)(cid:58)(cid:48) 
 
Grundlagen

2.14 Ergnzende Befehle

Falls der Werkzeug-Bezugspunkt auerhalb des durch die Arbeitsfeldbegrenzung definierten 
Arbeitsraums steht oder diesen Bereich verlsst, wird der Programmablauf gestoppt.

Hinweis

Wenn Transformationen aktiv sind, kann die Bercksichtigung der Werkzeugdaten 
(Werkzeuglnge und Werkzeugradius) vom beschriebenen Verhalten abweichen.

Programmierbare Arbeitsfeldbegrenzung, G25/G26

Fr jede Achse lassen sich eine obere (G26) und eine untere (G25) Arbeitsfeldbegrenzung 
festlegen. Diese Werte gelten sofort und bleiben bei entsprechender MD-Einstellung 
( MD10710 $MN_PROG_SD_RESET_SAVE_TAB) nach RESET und Wiedereinschalten 
erhalten.

Hinweis

Mit der vordefinierten Funktion CALCPOSI (Seite 577) lsst sich vor Verfahrbewegungen 
prfen, ob der vorgesehene Weg unter Bercksichtigung von Arbeitsfeldbegrenzungen und/
oder Schutzbereichen abgefahren wird.

2.14.3.2

Arbeitsfeldbegrenzung im WKS/ENS (WALCS0 ... WALCS10)

Die "Arbeitsfeldbegrenzung im WKS/ENS" ermglicht eine flexible werkstckspezifische 
Begrenzung des Verfahrbereichs der Kanalachsen im Werkstckkoordinatensystem (WKS) 
oder Einstellbaren Nullpunktsystem (ENS). Sie ist hauptschlich fr den Einsatz im Bereich 
konventioneller Drehmaschinen gedacht.

Voraussetzung

Die Kanalachsen mssen referenziert sein.

Arbeitsfeldbegrenzungsgruppe

Damit beim Umschalten von Achszuordnungen, z. B. beim Ein/Ausschalten von 
Transformationen oder des aktiven Frames, die achsspezifischen Arbeitsfeldgrenzen nicht fr 
alle Kanalachsen neu geschrieben werden mssen, stehen Arbeitsfeldbegrenzungsgruppen 
zur Verfgung.

Eine Arbeitsfeldbegrenzungsgruppe umfasst folgende Daten:

 Arbeitsfeldgrenzen fr alle Kanalachsen

 Bezugssystem der Arbeitsfeldbegrenzung

Syntax

...

$P_WORKAREA_CS_COORD_SYSTEM[<WALimNo>]=<Value>

$P_WORKAREA_CS_PLUS_ENABLE[<WALimNo>,<Ax>]=<Value>

350

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
Grundlagen

2.14 Ergnzende Befehle

$P_WORKAREA_CS_LIMIT_PLUS[<WALimNo>,<Ax>]=<Value>

$P_WORKAREA_CS_MINUS_ENABLE[<WALimNo>,<Ax>]=<Value>

$P_WORKAREA_CS_LIMIT_MINUS[<WALimNo>,<Ax>]=<Value>

...

WALCS<n>

...

WALCS0

Bedeutung

$P_WORKAREA_CS_COORD_SYSTEM[<WALimNo>]=<Value> 

Koordinatensystem, auf das sich die Arbeitsfeldbegrenzung einer Gruppe bezieht

<WALimNo>:

Arbeitsfeldbegrenzungsgruppe

Typ:

INT

Wertebereich:

0 (Gruppe 1) ... 9 (Gruppe 10)

<Value>:

Wert vom Typ INT

1

3

Werkstck-Koordinatensystem (WKS)

Einstellbares Nullpunktsystem (ENS)

$$P_WORKAREA_CS_PLUS_ENABLE[<WALimNo>,<Ax>]=<Value> 

Arbeitsfeldbegrenzung in positiver Achsrichtung fr die angegebene Kanalachse freigeben

<WALimNo>:

Arbeitsfeldbegrenzungsgruppe

Typ:

INT

Wertebereich:

0 (Gruppe 1) ... 9 (Gruppe 10)

<Ax>:

Kanalachsname

<Value>:

Wert vom Typ BOOL

0 (FALSE)

1 (TRUE)

keine Freigabe

Freigabe

$P_WORKAREA_CS_MINUS_ENABLE[<WALimNo>,<Ax>]=<Value> 

Arbeitsfeldbegrenzung in negativer Achsrichtung fr die angegebene Kanalachse freigeben

<WALimNo>:

Arbeitsfeldbegrenzungsgruppe

Typ:

INT

Wertebereich:

0 (Gruppe 1) ... 9 (Gruppe 10)

<Ax>:

Kanalachsname

<Value>:

Wert vom Typ BOOL

0 (FALSE)

1 (TRUE)

keine Freigabe

Freigabe

$P_WORKAREA_CS_LIMIT_PLUS[<WALimNo>,<Ax>]=<Value>  

Arbeitsfeldbegrenzung in positiver Richtung der angegebenen Kanalachse

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

351

 
 
 
 
 
 
 
Grundlagen

2.14 Ergnzende Befehle

<WALimNo>:

Arbeitsfeldbegrenzungsgruppe

Typ:

INT

Wertebereich:

0 (Gruppe 1) ... 9 (Gruppe 10)

<Ax>:

Kanalachsname

<Value>:

Wert vom Typ REAL

$P_WORKAREA_CS_LIMIT_MINUS[<WALimNo>,<Ax>]=<Value> 

Arbeitsfeldbegrenzung in negativer Richtung der angegebenen Kanalachse

<WALimNo>:

Arbeitsfeldbegrenzungsgruppe

Typ:

INT

Wertebereich: 0 (Gruppe 1) ... 9 (Gruppe 10)

<Ax>:

Kanalachsname

<Value>:

Wert vom Typ REAL

WALCS<n>:

Einschalten der Arbeitsfeldbegrenzungen einer Arbeitsfelbegrenzungsgruppe

<n>:

Nummer der Arbeitsfeldbegrenzungsgruppe

Wertebereich: 1 ... 10

WALCS0:

Ausschalten der im Kanal aktiven Arbeitsfeldbegrenzungen

Hinweis

Die tatschlich verfgbare Anzahl an Arbeitsfeldbegrenzungsgruppen ist abhngig von der 
Projektierung ( siehe Angaben des Maschinenherstellers).

Beispiel

Im Kanal sind 3 Achsen definiert: X, Y und Z

Es soll eine Arbeitsfeldbegrenzungsgruppe Nr. 2 definiert und anschlieend aktiviert werden, 
in der die Achsen im WKS nach folgenden Vorgaben begrenzt werden:

 X-Achse in Plus-Richtung: 10 mm

 X-Achse in Minus-Richtung: keine Begrenzung

 Y-Achse in Plus-Richtung: 34 mm

 Y-Achse in Minus-Richtung: -25 mm

 Z-Achse in Plus-Richtung: keine Begrenzung

 Z-Achse in Minus-Richtung: -600 mm

Programmcode

...

Kommentar

352

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
Programmcode

Kommentar

Grundlagen

2.14 Ergnzende Befehle

N51 $P_WORKAREA_CS_COORD_SYSTEM[1]=1

N60 $P_WORKAREA_CS_PLUS_ENABLE[1,X]=TRUE

N61 $P_WORKAREA_CS_LIMIT_PLUS[1,X]=10

N62 $P_WORKAREA_CS_MINUS_ENABLE[1,X]=FALSE

N70 $P_WORKAREA_CS_PLUS_ENABLE[1,Y]=TRUE

N73 $P_WORKAREA_CS_LIMIT_PLUS[1,Y]=34

N72 $P_WORKAREA_CS_MINUS_ENABLE[1,Y]=TRUE

N73 $P_WORKAREA_CS_LIMIT_MINUS[1,Y]=25

N80 $P_WORKAREA_CS_PLUS_ENABLE[1,Z]=FALSE

N82 $P_WORKAREA_CS_MINUS_ENABLE[1,Z]=TRUE

N83 $P_WORKAREA_CS_LIMIT_PLUS[1,Z]=600

...

N90 WALCS2

...

Weitere Informationen

Wirksamkeit

; Die Arbeitsfeldbegrenzung der 
Arbeitsfeldbegrenzungsgruppe 2 
gilt im WKS.

; Arbeitsfeldbegrenzungsgruppe 2 
einschalten.

Die Arbeitsfeldbegrenzung mit WALCS1 - WALCS10 wirkt unabhngig von der 
Arbeitsfeldbegrenzung mit WALIMON. Wenn beide Funktionen aktiv sind, wirkt diejenige 
Begrenzung, auf die die Achsbewegung als erstes trifft.

Bezugspunkt am Werkzeug

Die Bercksichtigung der Werkzeugdaten (Werkzeuglnge und Werkzeugradius) und damit 
der Bezugspunkt am Werkzeug bei der berwachung der Arbeitsfeldbegrenzung entspricht 
dem Verhalten bei der Arbeitsfeldbegrenzung mit WALIMON.

2.14.4

Referenzpunktfahren (G74)

Nach dem Einschalten der Maschine mssen (bei Verwendung von inkrementellen 
Wegmesssystemen) alle Achsschlitten auf ihre Referenzmarke gefahren werden. Erst dann 
knnen Fahrbewegungen programmiert werden. 

Mit G74 kann das Referenzpunktfahren im NC-Programm durchgefhrt werden.

Syntax

G74 X1=0 Y1=0 Z1=0 A1=0  ; Programmierung im eigenen NC-Satz

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

353

 
 
 
 
 
 
 
 
 
 
 
 
Grundlagen

2.14 Ergnzende Befehle

Bedeutung

G74:

G-Befehlsaufruf Referenzpunktfahren

X1=0 Y1=0 Z1=0  :

A1=0 B1=0 C1=0  :

Die angegebene Maschinenachsadresse X1, Y1, Z1  fr Linearachsen 
wird in den Referenzpunkt gefahren

Die angegebene Maschinenachsadresse A1, B1, C1  fr Rundachsen 
wird in den Referenzpunkt gefahren

Hinweis

Vor der Referenzpunktfahrt darf keine Transformation fr eine Achse programmiert sein, die 
mit G74 auf die Referenzmarke gefahren werden soll.

Die Transformation wird mit dem Befehl TRAFOOF ausgeschaltet.

Beispiel

Beim Wechsel des Messsystems wird der Referenzpunkt angefahren und der 
Werkstcknullpunkt eingerichtet.

Programmcode

N10 SPOS=0

N20 G74 X1=0 Y1=0 Z1=0 C1=0

Kommentar

; Spindel in Lageregelung

; Referenzpunktfahrt fr Linearachsen und 
Rundachsen

N30 G54

N40 L47

N50 M30

; Nullpunktverschiebung

; Abspanprogramm

; Programmende

2.14.5

Festpunkt anfahren (G75)

Mit dem satzweise wirksamen Befehl G75 knnen Achsen einzeln und unabhngig 
voneinander auf feste Punkte im Maschinenraum gefahren werden, z. B. auf 
Werkzeugwechselpunkte, Beladepunkte, Palettenwechselpunkte etc.

Die Festpunkte sind Positionen im Maschinenkoordinatensystem, die in Maschinendaten 
(MD30600 $MA_FIX_POINT_POS[n]) abgelegt sind. Pro Achse knnen maximal 4 Festpunkte 
definiert sein.

Die Festpunkte knnen aus jedem NC-Programm unabhngig von aktuellen Werkzeug- oder 
Werkstckpositionen angefahren werden. Vor der Bewegung der Achsen wird ein interner 
Vorlaufstopp durchgefhrt.

354

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Grundlagen

2.14 Ergnzende Befehle

Voraussetzungen

Fr das Anfahren von Festpunkten mit G75 mssen folgende Voraussetzungen erfllt sein:

 Die Festpunktkoordinaten mssen exakt ermittelt und in Maschinendaten hinterlegt sein.

 Die Festpunkte mssen innerhalb des gltigen Verfahrbereichs liegen ( Software-

Endschalter-Grenzen beachten!)

 Die zu verfahrenden Achsen mssen referenziert sein.

 Es darf keine Werkzeugradiuskorrektur aktiv sein.

 Es darf keine kinematische Transformation aktiv sein.

 Die zu verfahrenden Achsen drfen an keiner aktiven Transformation beteiligt sein.

 Keine der zu verfahrenden Achsen darf Folgeachse einer aktiven Kopplung sein.

 Keine der zu verfahrenden Achsen darf Achse eines Gantry-Verbundes sein.

 CompileZyklen drfen keinen Bewegungsanteil aufschalten.

Syntax

Bedeutung

G75 <Achsname><Achsposition> ... FP=<n>

G75:

Festpunkt anfahren

<Achsname>:

Name der Maschinenachse, die zum Festpunkt verfahren werden soll

Es sind alle Achsbezeichner zulssig.

<Achsposition>:

Der Positionswert ist ohne Bedeutung. Es wird daher in der Regel der Wert 
"0" angegeben.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

355

(cid:41)(cid:72)(cid:86)(cid:87)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:42)(cid:26)(cid:24)(cid:59)(cid:61)Grundlagen

2.14 Ergnzende Befehle

FP=:

Festpunkt, der angefahren werden soll

<n>:

Festpunktnummer

Wertebereich:

1, 2, 3, 4

Hinweis:
Wenn kein FP=<n> oder keine Festpunktnummer oder wenn FP=0 pro
grammiert ist, wird dies wie FP=1 interpretiert und es wird Festpunkt 1 
angefahren.

Hinweis

In einem G75-Satz knnen auch mehrere Achsen programmiert werden. Die Achsen werden 
dann gleichzeitig auf den angegebenen Festpunkt verfahren.

Hinweis

Der Wert der Adresse FP darf nicht grer sein als die Anzahl der festgelegten Festpunkte fr 
jede programmierte Achse (MD30610 $MA_NUM_FIX_POINT_POS).

Beispiel

Fr einen Werkzeugwechsel sollen die Achsen X (= AX1) und Z (= AX3) auf die feste 
Maschinenachsposition 1 mit X = 151,6 und Z = -17,3 fahren.

Maschinendaten:

 MD30600 $MA_FIX_POINT_POS[AX1,0] = 151.6

 MD30600 $MA_FIX_POINT[AX3,0] = 17.3

NCProgramm:

Programmcode

Kommentar



N100 G55

; Einstellbare Nullpunktverschiebung aktivieren.

N110 X10 Y30 Z40

; Positionen im WKS anfahren.

N120 G75 X0 Z0 FP=1 M0

; Die XAchse fhrt auf 151,6

; und die ZAchse fhrt auf 17,3 (im MKS).

; Jede Achse fhrt fr sich mit maximaler Geschwindig-
keit.

; In diesem Satz drfen keine zustzlichen Bewegungen ak-
tiv sein.

; Damit nach dem Erreichen der Endpositionen

; weiterhin keine Zusatzbewegungen durchgefhrt werden,

; ist hier ein Stopp eingefgt.

N130 X10 Y30 Z40

; Es wird wieder die Position von N110 angefahren.

; Die Nullpunktverschiebung ist wieder aktiv.



356

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
Grundlagen

2.14 Ergnzende Befehle

Hinweis

Ist die Funktion "Werkzeugverwaltung mit Magazinen" aktiv, reicht die Hilfsfunktion T 
bzw. M... (typischerweise M6) zum Auslsen der Satzwechselsperre am Ende der G75
Bewegung nicht aus.

Grund: Bei der Einstellung "Werkzeugverwaltung mit Magazinen ist aktiv" werden die 
Hilfsfunktionen fr den Werkzeugwechsel nicht an die PLC ausgegeben.

Weitere Informationen

G75

Die Achsen werden als Maschinenachsen im Eilgang verfahren. Die Bewegung wird intern 
durch die Funktionen "SUPA" (Unterdrckung aller Frames) und "G0 RTLIOF" 
(Eilgangbewegung mit Einzelachsinterpolation) abgebildet.

Wenn die Bedingungen fr "RTLIOF" (Einzelachsinterpolation) nicht erfllt sind, wird der 
Festpunkt als Bahn angefahren.

Bei Erreichen des Festpunkts kommen die Achsen innerhalb des Toleranzfensters "Genauhalt 
fein" zum Stehen.

Parametrierbare Dynamik fr G75

Fr Positionierbewegungen auf Festpunktpositionen (G75) kann ber nachfolgendes 
Maschinendatum der gewnschte Dynamikmodus eingestellt werden: 

MD18960 $MN_POS_DYN_MODE (Art der Positionierachsdynamik)

Axiale Zusatzbewegungen

Die folgenden axialen Zusatzbewegungen werden zum Zeitpunkt der Interpretation des G75-
Satzes bercksichtigt:

 externe Nullpunktverschiebung

 DRF

 Synchronisationsoffset ($AA_OFF)

Danach drfen sich die Zusatzbewegungen der Achsen nicht ndern, bis das Ende der 
Verfahrbewegung durch den G75-Satz erreicht ist.

Zusatzbewegungen nach der Interpretation des G75-Satzes fhren zu einer entsprechenden 
Verschiebung des angefahrenen Festpunkts.

Folgende Zusatzbewegungen werden unabhngig vom Interpretationszeitpunkt nicht 
bercksichtigt und fhren zu einer entsprechenden Verschiebung der Zielposition:

 Online-Werkzeugkorrektur

 Zusatzbewegungen aus CompileZyklen im BKS wie MKS

Aktive Frames

Alle aktiven Frames werden ignoriert. Es wird im Maschinenkoordinatensystem verfahren.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

357

Grundlagen

2.14 Ergnzende Befehle

Arbeitsfeldbegrenzung im WKS/ENS

Die Koordinatensystem-spezifische Arbeitsfeldbegrenzung (WALCS0 ... WALCS10) wirkt in 
dem Satz mit G75 nicht. Der Zielpunkt wird als Startpunkt des nachfolgenden Satzes 
berwacht.

Achs-/Spindelbewegungen mit POSA/SPOSA

Wenn programmierte Achsen/Spindeln vorher mit POSA bzw. SPOSA verfahren wurden, 
werden diese Bewegungen vor dem Anfahren des Festpunkts erst zu Ende gefahren.

Spindelfunktionen im G75-Satz

Wenn die Spindel vom "Festpunkt anfahren" ausgenommen ist, dann knnen im G75-Satz 
zustzlich Spindelfunktionen programmiert werden (z. B. Positionierung mit SPOS/SPOSA).

Modulo-Achsen

Bei Modulo-Achsen wird der Festpunkt auf krzestem Weg angefahren.

2.14.6

Fahren auf Festanschlag (FXS, FXST, FXSW)

Funktion

Mit Hilfe der Funktion "Fahren auf Festanschlag" ist es mglich, definierte Krfte fr das 
Klemmen von Werkstcken aufzubauen, wie sie z. B. bei Reitstcken, Pinolen und Greifern 
notwendig sind. Auerdem knnen mit der Funktion mechanische Referenzpunkte angefahren 
werden.

Bei hinreichend reduziertem Moment sind auch einfache Messvorgnge mglich, ohne dass 
ein Taster angeschlossen werden muss. Die Funktion "Fahren auf Festanschlag" kann fr 
Achsen und als Achsen fahrbare Spindeln eingesetzt werden.

358

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:51)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)(cid:76)(cid:72)(cid:85)(cid:87)(cid:72)(cid:40)(cid:81)(cid:71)(cid:83)(cid:82)(cid:86)(cid:76)(cid:87)(cid:76)(cid:82)(cid:81)(cid:41)(cid:72)(cid:86)(cid:87)(cid:68)(cid:81)(cid:86)(cid:70)(cid:75)(cid:79)(cid:68)(cid:74)(cid:86)(cid:16)(cid:158)(cid:69)(cid:72)(cid:85)(cid:90)(cid:68)(cid:70)(cid:75)(cid:88)(cid:81)(cid:74)(cid:86)(cid:73)(cid:72)(cid:81)(cid:86)(cid:87)(cid:72)(cid:85)(cid:54)(cid:87)(cid:68)(cid:85)(cid:87)(cid:83)(cid:82)(cid:86)(cid:76)(cid:87)(cid:76)(cid:82)(cid:81)(cid:44)(cid:86)(cid:87)(cid:83)(cid:82)(cid:86)(cid:76)(cid:87)(cid:76)(cid:82)(cid:81)(cid:3)(cid:81)(cid:68)(cid:70)(cid:75)(cid:5)(cid:41)(cid:68)(cid:75)(cid:85)(cid:72)(cid:81)(cid:3)(cid:68)(cid:88)(cid:73)(cid:3)(cid:41)(cid:72)(cid:86)(cid:87)(cid:68)(cid:81)(cid:86)(cid:70)(cid:75)(cid:79)(cid:68)(cid:74)(cid:5)Grundlagen

2.14 Ergnzende Befehle

Syntax

Bedeutung

FXS[<Achse>]=
FXST[<Achse>]=
FXSW[<Achse>]=
FXS[<Achse>]= FXST[<Achse>]=
FXS[<Achse>]= FXST[<Achse>]= FXSW[<Achse>]=

FXS:

FXST:

FXSW:

Befehl zum Ein- und Ausschalten der Funktion "Fahren auf Festanschlag"
FXS[<Achse>]=1:
FXS=[<Achse>]=0:
Optionaler Befehl zum Einstellen des Klemmmoments

Funktion einschalten
Funktion ausschalten

Angabe in % vom maximalen Moment des Antriebs.
Optionaler Befehl zum Einstellen der Fensterbreite fr die Festanschlag-
berwachung

<Achse>:

Angabe in mm, inch oder Grad.
Maschinenachsnamen

Programmiert werden Maschinenachsen (X1, Y1, Z1 usw.)

Hinweis

Die Befehle FXS, FXST und FXSW sind modal wirksam.

Die Programmierung von FXST und FXSW ist optional: Erfolgt keine Angabe, gilt jeweils der 
zuletzt programmierte Wert bzw. der im entsprechenden Maschinendatum eingestellte Wert.

Fahren auf Festanschlag aktivieren: FXS[<Achse>] = 1

Die Bewegung zum Zielpunkt kann als Bahn- oder Positionierachsbewegung beschrieben 
werden. Bei Positionierachsen ist die Funktion auch ber Satzgrenzen hinaus mglich.

Fahren auf Festanschlag kann auch fr mehrere Achsen gleichzeitig und parallel zur 
Bewegung anderer Achsen stattfinden. Der Festanschlag muss zwischen Start- und 
Zielposition liegen.

ACHTUNG

Kollisionsgefahr

Sobald die Funktion "Fahren auf Festanschlag" fr eine Achse / Spindel aktiviert wurde, darf 
fr diese Achse keine neue Position programmiert werden.

Spindeln mssen vor Anwahl der Funktion in den lagegeregelten Betrieb geschaltet werden.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

359

Grundlagen

2.14 Ergnzende Befehle

Beispiel:

Programmcode

X250 Y100 F100 FXS[X1]=1 FXST[X1]=12.3 FXSW[X1]=2

Kommentar

; Achse X1 wird mit Vorschub 
F100 (Angabe optional) auf Ziel-
position X=250 mm gefahren.

Das Klemmmoment betrgt 12.3% 
vom maximalen Antriebsmoment, 
die berwachung erfolgt in ei-
nem Fenster der Breite 2 mm.

...

Fahren auf Festanschlag deaktivieren: FXS[<Achse>] = 0

Die Abwahl der Funktion lst einen Vorlaufstopp aus.

Im Satz mit FXS[<Achse>]=0 drfen und sollen Verfahrbewegungen stehen.

ACHTUNG

Kollisionsgefahr

Die Verfahrbewegung auf Rckzugsposition muss vom Festanschlag wegfhren, sonst sind 
Anschlag- oder Maschinenbeschdigung mglich.

Der Satzwechsel erfolgt nach Erreichen der Rckzugsposition. Wird keine Rckzugsposition 
angegeben, findet der Satzwechsel sofort nach dem Abschalten der Momentenbegrenzung 
statt.

Beispiel:

Programmcode

X200 Y400 G01 G94 F2000 FXS[X1]=0

...

Kommentar

; Achse X1 wird von Festanschlag auf Po-
sition X=200mm zurckgezogen. Alle weite-
ren Angaben sind optional.

360

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
Grundlagen

2.14 Ergnzende Befehle

Klemmmoment (FXST) und berwachungsfenster (FXSW)

Eine programmierte Momentenbegrenzung FXST wirkt ab Satzbeginn, d. h. auch das Anfahren 
des Anschlags erfolgt mit reduziertem Moment. FXST und FXSW knnen zu einem beliebigen 
Zeitpunkt im Teileprogramm programmiert bzw. gendert werden. Die nderungen werden vor 
Verfahrbewegungen, die im gleichen Satz stehen, wirksam.

ACHTUNG

Kollisionsgefahr

Wenn ein neues Festanschlags-berwachungsfenster programmiert wird, ndert sich nicht 
nur die Fensterbreite, sondern auch der Bezugspunkt fr die Fenstermitte, wenn sich die 
Achse vorher bewegt hat. Die Istposition der Maschinenachse bei nderung des Fensters ist 
die neue Fenstermitte.

Das Fenster muss so gewhlt werden, dass nur ein Wegbrechen des Anschlags zum 
Ansprechen der Festanschlagsberwachung fhrt.

Weitere Informationen

Anstiegsrampe

ber Maschinendatum kann eine Anstiegsrampe fr die neue Momentgrenze definiert werden, 
um ein sprunghaftes Einstellen der Momentgrenze zu vermeiden (z. B. beim Eindrcken einer 
Pinole).

Alarmunterdrckung

Bei Anwendungen kann der Anschlagsalarm vom Teileprogramm her unterdrckt werden, 
indem in einem Maschinendatum der Alarm maskiert und die neue MD-Einstellung mit 
NEW_CONF wirksam gesetzt wird.

Aktivierung

Die Befehle zum Fahren auf Festanschlag knnen aus Synchronaktionen / Technologiezyklen 
heraus aufgerufen werden. Die Aktivierung kann auch ohne Bewegung erfolgen, das Moment 
wird sofort begrenzt. Sobald die Achse sollwertseitig bewegt wird, wird auf Anschlag 
berwacht.

Aktivieren aus Synchronaktionen

Beispiel:

Wenn das erwartete Ereignis ($R1) eintrifft und Fahren auf Festanschlag nicht schon luft, soll 
FXS fr Achse Y aktiviert werden. Das Moment soll 10 % des Nennmomentes betragen. Fr die 
Breite des berwachungsfensters gilt der Vorbesetzungswert.

Programmcode

N10 IDS=1 WHENEVER (($R1=1) AND ($AA_FXS[Y]==0)) DO $R1=0 FXS[Y]=1 
FXST[Y]=10

Das normale Teileprogramm muss dafr sorgen, dass $R1 zum gewnschten Zeitpunkt 
gesetzt wird.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

361

 
 
Grundlagen

2.14 Ergnzende Befehle

Deaktivieren aus Synchronaktionen

Beispiel:

Wenn ein erwartetes Ereignis vorliegt ($R3) und der Zustand "Anschlag angefahren" 
(Systemvariable $AA_FXS) besteht, soll FXS abgewhlt werden.

Programmcode

IDS=4 WHENEVER (($R3==1) AND ($AA_FXS[Y]==1)) DO FXS[Y]=0 
FA[Y]=1000 POS[Y]=0

Festanschlag wurde erreicht

Nachdem der Festanschlag erreicht ist:

 Wird der Restweg gelscht und der Lagesollwert nachgefhrt.

 Steigt das Antriebsmoment bis zum programmierten Grenzwert FXSW an und bleibt dann 

konstant.

 Wird die berwachung des Festanschlags innerhalb der gegebenen Fensterbreite aktiv.

Randbedingungen

 Messen mit Restweglschen

"Messen mit Restweglschen" (Befehl MEAS) und "Fahren auf Festanschlag" knnen nicht 
gleichzeitig in einem Satz programmiert werden.
Ausnahme: Eine Funktion wirkt auf eine Bahnachse und die andere auf eine 
Positionierachse, oder beide wirken auf Positionierachsen.

 Konturberwachung

Whrend "Fahren auf Festanschlag" aktiv ist, erfolgt keine Konturberwachung.

 Positionierachsen

Bei "Fahren auf Festanschlag" mit Positionierachsen wird der Satzwechsel unabhngig von 
der Festanschlagsbewegung durchgefhrt.

 Fahren auf Festanschlag ist nicht mglich:

 Bei Gantry-Achsen

 Fr konkurrierende Positionierachsen, die ausschlielich von der PLC gesteuert werden 

(die Anwahl von FXS muss aus dem NC-Programm erfolgen).

 Wird die Momentengrenze zu weit abgesenkt, kann die Achse der Sollwertvorgabe nicht 

mehr folgen, der Lageregler geht in die Begrenzung und die Konturabweichung steigt an. In 
diesem Betriebszustand kann es bei einer Erhhung der Momentengrenze zu ruckartigen 
Bewegungen kommen. Um sicherzustellen, dass die Achse noch folgen kann, ist zu 
kontrollieren, dass die Konturabweichung nicht grer ist als bei unbegrenztem Moment.

362

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
Grundlagen

2.14 Ergnzende Befehle

2.14.7

Verweilzeit (G4)

Mit dem Befehl G4 wird in einem Satz eine Zeit (Verweilzeit) programmiert, die abluft, sobald 
der Satz im Hauptlauf in Bearbeitung ist. Der Satzwechsel in den nachfolgenden Satz erfolgt, 
sobald die Zeit vollstndig abgelaufen ist. 

Hinweis

G4 unterbricht den Bahnsteuerbetrieb.

Syntax

Bedeutung

G4 F<Time> 
G4 S<NumSpi>
G4 S<n> = <NumSpi>

G4:

F<Time>:

S<NumSpi>:

Verweilzeit aktivieren

alleine im Satz:

ja

Unter der Adresse F wird die Verweilzeit <Time> in Sekunden angegeben.

Unter der Adresse S wird die Verweilzeit in Spindelumdrehungen <NumSpi> ge
zogen auf die aktuelle Hauptspindel angegeben.

S<n>=NumSpi>: Unter der Adresse S wird die Verweilzeit in Spindelumdrehungen <NumSpi> be

zogen auf die mit der Adresserweiterung <n> adressierte Spindel angegeben.

Hinweis

Die im Verweilzeitsatz G4 fr die Zeitangabe verwendeten Adressen F und S beeinflussen die 
Vorschbe  F... und die Spindeldrehzahlen S... des Programms nicht.

Randbedingungen

Synchronaktionen

In einem Programm sind zwei Synchronaktionen so programmiert, dass der nachfolgende Satz 
mit Verweilzeit zum Aktionssatz wird, in dem die Synchronaktionen ausgefhrt werden. Die 
eine Synchronaktion ist eine modale Synchronaktion. Die andere Synchronaktion ist eine 
satzweise Synchronaktion. Soll die satzweise Synchronaktion die modale Synchronaktion 
beeinflussen z.B. durch UNLOCK zur Bearbeitung freigeben, mssen als wirksame Verweilzeit 
mindestens zwei Interpolatortakte z.B. G4 F<Interpolatortakt * 2> zur Verfgung 
stehen.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

363

Grundlagen

2.14 Ergnzende Befehle

Die wirksame Verweilzeit ist abhngig von der Einstellung im Maschinendatum MD10280 
$MN_PROG_FUNCTION_MASK, Bit 4 = <Wert>

Wert

Bedeutung

0

1

Die wirksame Verweilzeit ist gleich der programmierten Verweilzeit

Die wirksame Verweilzeit ist gleich der programmierten Verweilzeit gerundet auf das nchst
grere Vielfache des Interpolatortaktes (MD10071 $MN_IPO_CYCLE_TIME)

Programmbeispiel:

 MD10071 $MN_IPO_CYCLE_TIME == 8 ms

 MD10280 $MN_PROG_FUNCTION_MASK, Bit 4 = 1

Programmcode

Kommentar

N10 WHEN TRUE DO LOCK(1)

; Satzweise SynAct: LOCK der 

N20 G4 F2

; modalen SynAct. ID=1

; Aktionssatz fr SynAct aus N10

N30 WHEN TRUE DO UNLOCK(1)

; Satzweise SynAct: UNLOCK 

; der modalen SynAct. ID=1

N40 ID=1 WHENEVER TRUE DO $R0=1 RDISABLE

; Modale SynAct ID=1

; R-Parameter R0=1

; Setzen der Einlesesperre

N50 G4 F0.012

; Aktionssatz fr SynAct aus N40 und N50

; siehe unten Absatz "Beschreibung"

N60 G4 F10

Beschreibung

Das gewnschte Verhalten ist, dass die satzweise Synchronaktion aus N30 die aktive Sperre 
(LOCK) der modalen Synchronaktion mit ID=1 aus N40 aufhebt und dadurch in N50 der R-
Parameter geschrieben und die Einlesesperre wirksam wird. Dieses Verhalten wird aber nur 
erreicht, wenn die wirksame Verweilzeit mindestens zwei Interpolatortakte lang ist.

Die wirksame Verweilzeit ergibt sich aus der programmierten Verweilzeit, dem Interpolatortakt 
und der Einstellung in MD10280 $MN_PROG_FUNCTION_MASK, Bit 4. Damit die wirksame 
Verweilzeit mindestens zwei Interpolatortakt lang ist, muss folgende Verweilzeit programmiert 
werden:

 Bit 4 == 0: Programmierte Verweilzeit  2 * Interpolatortakt

 Bit 4 == 1: Programmierte Verweilzeit  1,5 * Interpolatortakt

Ist die wirksame Verweilzeit kleiner als zwei Interpolatortakte, wird das Schreiben des R-
Parameters und die Einlesesperre erst im Satz N60 ausgefhrt.

Beispiel

364

Programmcode

Kommentar

N10 G1 F200 Z-5 S300 M3

; Vorschub F, Spindeldrehzahl S

N20 G4 F3

N30 X40 Y10

; Verweilzeit: 3s

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
Grundlagen

2.14 Ergnzende Befehle

Programmcode

N40 G4 S30

N50 X...

Kommentar

; 30 Umdrehungen der Spindel verweilen (entspricht 
bei S = 300 U/min und 100% Drehzahloverride: 
t = 0,1 min).

; In N10 programmierter Vorschub und Spindeldrehzahl 
wirken weiterhin.

2.14.8

Interner Vorlaufstopp

Funktion  

Beispiel

Beim Zugriff auf Zustandsdaten der Maschine ($A) erzeugt die Steuerung internen 
Vorlaufstopp. Der nachfolgende Satz wird erst dann ausgefhrt, wenn alle vorher aufbereiteten 
und gespeicherten Stze vollstndig abgearbeitet sind. Der vorherige Satz wird im Genauhalt 
(wie G9) angehalten.

Programmcode

...

N40 POSA[X]=100

N50 IF $AA_IM[X]==R100 GOTOF MARKE1

Kommentar

; Zugriff auf Zustandsdaten der Maschine 
($A), die Steuerung erzeugt internen 
Vorlaufstopp.

N60 G0 Y100

N70 WAITP(X)

N80 MARKE1:

...

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

365

   
   
   
   
   
   
Grundlagen

2.15 Sonstige Informationen

2.15

Sonstige Informationen

2.15.1

Achsen

2.15.1.1

Achsen (bersicht)

Achstypen

Im Rahmen der Programmierung werden folgende Achstypen unterschieden:

 Hauptachsen / Geometrieachsen

 Zusatzachsen

 Hauptspindel, Masterspindel

 Maschinenachsen

 Kanalachsen

 Bahnachsen

 Positionierachsen

 Synchronachsen

 Kommandoachsen

 PLC-Achsen / Konkurrierende Positionierachsen

2.15.1.2

Hauptachsen/Geometrieachsen

Die Hauptachsen bestimmen ein rechtwinkliges, rechtsdrehendes Koordinatensystem. In 
diesem Koordinatensystem werden Werkzeugbewegungen programmiert.    

In der NC-Technik werden die Hauptachsen als Geometrieachsen bezeichnet. Dieser Begriff 
wird in dieser Programmieranleitung ebenfalls verwendet.

366

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:61)(cid:88)(cid:86)(cid:68)(cid:87)(cid:93)(cid:68)(cid:70)(cid:75)(cid:86)(cid:72)(cid:81)(cid:42)(cid:72)(cid:82)(cid:80)(cid:72)(cid:87)(cid:85)(cid:76)(cid:72)(cid:68)(cid:70)(cid:75)(cid:86)(cid:72)(cid:81)(cid:37)(cid:68)(cid:75)(cid:81)(cid:68)(cid:70)(cid:75)(cid:86)(cid:72)(cid:81)(cid:51)(cid:82)(cid:86)(cid:76)(cid:87)(cid:76)(cid:82)(cid:81)(cid:76)(cid:72)(cid:85)(cid:68)(cid:70)(cid:75)(cid:86)(cid:72)(cid:81)(cid:46)(cid:76)(cid:81)(cid:72)(cid:80)(cid:68)(cid:87)(cid:76)(cid:86)(cid:70)(cid:75)(cid:72)(cid:3)(cid:55)(cid:85)(cid:68)(cid:81)(cid:86)(cid:73)(cid:82)(cid:85)(cid:80)(cid:68)(cid:87)(cid:76)(cid:82)(cid:81)(cid:48)(cid:68)(cid:86)(cid:70)(cid:75)(cid:76)(cid:81)(cid:72)(cid:81)(cid:68)(cid:70)(cid:75)(cid:86)(cid:72)(cid:81)(cid:46)(cid:68)(cid:81)(cid:68)(cid:79)(cid:68)(cid:70)(cid:75)(cid:86)(cid:72)(cid:81)(cid:46)(cid:82)(cid:80)(cid:80)(cid:68)(cid:81)(cid:71)(cid:82)(cid:68)(cid:70)(cid:75)(cid:86)(cid:72)(cid:81)(cid:51)(cid:47)(cid:38)(cid:16)(cid:36)(cid:70)(cid:75)(cid:86)(cid:72)(cid:81)(cid:54)(cid:92)(cid:81)(cid:70)(cid:75)(cid:85)(cid:82)(cid:81)(cid:68)(cid:70)(cid:75)(cid:86)(cid:72)(cid:81)Grundlagen

2.15 Sonstige Informationen

Umschaltbare Geometrieachsen

Mit der Funktion "Umschaltbare Geometrieachsen" (siehe Funktionshandbuch 
Arbeitsvorbereitung) lsst sich der ber Maschinendatum konfigurierte 
Geometrieachsverbund vom Teileprogramm aus verndern. Dabei kann eine als synchrone 
Zusatzachse definierte Kanalachse eine beliebige Geometrieachse ersetzen.

Achsbezeichner

Der Name/Bezeichner einer Geometrieachse kann ber das folgende Maschinendatum 
festgelegt werden:

MD20060 $MC_AXCONF_GEOAX_NAME_TAB (Geometrieachsname im Kanal)

Standardbezeichnung bei Drehmaschinen:

1. Geometrieachse: X

2. Geometrieachse:  Z

Standardbezeichnung bei Frsmaschinen:

1. Geometrieachse: X

2. Geometrieachse: Y

3. Geometrieachse: Z

Weitere Informationen

Maximal drei Geometrieachsen werden zur Programmierung der Frames und der 
Werkstckgeometrie (Kontur) verwendet.

Die Bezeichner fr Geometrie- und Kanalachsen drfen gleich sein, sofern eine Abbildung 
mglich ist.

Geometrie- und Kanalachsnamen knnen in allen Kanlen gleich sein. So kann ein Programm 
in jedem beliebigen Kanal abgearbeitet werden.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

367

(cid:58)(cid:72)(cid:85)(cid:78)(cid:93)(cid:72)(cid:88)(cid:74)(cid:72)(cid:53)(cid:72)(cid:89)(cid:82)(cid:79)(cid:89)(cid:72)(cid:85)(cid:86)(cid:70)(cid:75)(cid:90)(cid:72)(cid:81)(cid:78)(cid:68)(cid:70)(cid:75)(cid:86)(cid:72)(cid:61)(cid:88)(cid:86)(cid:68)(cid:87)(cid:93)(cid:86)(cid:83)(cid:76)(cid:81)(cid:71)(cid:72)(cid:79)(cid:61)(cid:88)(cid:86)(cid:68)(cid:87)(cid:93)(cid:68)(cid:70)(cid:75)(cid:86)(cid:72)(cid:53)(cid:72)(cid:76)(cid:87)(cid:86)(cid:87)(cid:82)(cid:70)(cid:78)(cid:42)(cid:72)(cid:82)(cid:80)(cid:72)(cid:87)(cid:85)(cid:76)(cid:72)(cid:68)(cid:70)(cid:75)(cid:86)(cid:72)(cid:81)(cid:43)(cid:68)(cid:88)(cid:83)(cid:87)(cid:86)(cid:83)(cid:76)(cid:81)(cid:71)(cid:72)(cid:79)(cid:11)(cid:48)(cid:68)(cid:86)(cid:87)(cid:72)(cid:85)(cid:86)(cid:83)(cid:76)(cid:81)(cid:71)(cid:72)(cid:79)(cid:12)(cid:38)(cid:16)(cid:36)(cid:70)(cid:75)(cid:86)(cid:72)(cid:59)(cid:61)Grundlagen

2.15 Sonstige Informationen

2.15.1.3

Zusatzachsen

Im Gegensatz zu den Geometrieachsen ist bei den Zusatzachsen kein geometrischer 
Zusammenhang zwischen den Achsen definiert.    

Typische Zusatzachsen sind:

 Werkzeugrevolverachsen

 Schwenktischachsen

 Schwenkkopfachsen

 Laderachsen 

Achsbezeichner

Bei einer Drehmaschine mit Revolvermagazin z. B.:

 Revolverposition U

 Reitstock V

Programmierbeispiel

Programmcode

Kommentar

N10 G1 X100 Y20 Z30 A40 F300

; Bahnachsbewegungen.

N20 POS[U]=10POS[X]=20 FA[U]=200 FA[X]=350

; Positionierachsbewegungen.

N30 G1 X500 Y80 POS[U]=150FA[U]=300 F550

; Bahn- und Positionierachse.

N40 G74 X1=0 Z1=0

; Referenzpunkt anfahren.

2.15.1.4

Hauptspindel, Masterspindel

Welche Spindel Hauptspindel ist, wird durch die Maschinenkinematik bestimmt. Diese Spindel 
wird in der Regel per Maschinendatum als Masterspindel deklariert.   

Diese Zuordnung kann durch den Programmbefehl SETMS(<Spindelnummer>) gendert 
werden. Mit SETMS ohne Angabe der Spindelnummer kann auf die im Maschinendatum 
festgelegte Masterspindel zurckgeschaltet werden.

Fr die Masterspindel gelten spezielle Funktionen, wie z. B. Gewindeschneiden.

Spindelbezeichner

S oder S0

2.15.1.5

Maschinenachsen

Maschinenachsen sind die physikalisch an der Maschine vorhandenen Achsen.     

Die programmierte Bewegung einer Bahn- oder Zusatzachse kann durch eine im Kanal aktive 
Transformation (TRANSMIT, TRACYL oder TRAORI) auf mehrere Maschinenachsen wirken.

Maschinenachsen werden nur Sonderfllen direkt im Programm angesprochen (z. B. beim 
Referenzpunkt- oder Festpunktfahren).

368

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Grundlagen

2.15 Sonstige Informationen

Achsbezeichner

Der Name/Bezeichner einer Maschinenachse kann ber das folgende NC-spez. 
Maschinendatum festgelegt werden:

MD10000 $MN_AXCONF_MACHAX_NAME_TAB (Maschinenachsname)

Standardeinstellung: X1, Y1, Z1, A1, B1, C1, U1, V1

Die Maschinenachsen haben darber hinaus feste Achsbezeichner, die unabhngig vom im 
Maschinendatum eingestellten Namen immer verwendet werden knnen:

AX1, AX2, , AX<n>

2.15.1.6

Kanalachsen

Als Kanalachsen werden alle Geometrie-, Zusatz- und Maschinenachsen bezeichnet, die 
einem Kanal zugeordnet sind.   

Achsbezeichner

Der kanalspezifische Name/Bezeichner einer Geometrie- und Zusatzachsen kann ber das 
folgende Maschinendatum festgelegt werden:

MD20080 $MC_AXCONF_CHANAX_NAME_TAB (Kanalachsname)

Standardeinstellung: X, Y, Z, A, B, C, U, V

Die Zuordnung, auf welche Maschinenachse eine Geometrie- oder Zusatzachsen im Kanal 
abgebildet wird, wird in folgendem Maschinendatum festgelegt:

MD20070 $MC_AXCONF_MACHAX_USED (verwendete Maschinenachsen)

2.15.1.7

Bahnachsen

Bahnachsen beschreiben den Bahnweg und somit die Werkzeugbewegung im Raum.     

Der programmierte Vorschub wirkt entlang dieser Bahn. Die an dieser Bahn beteiligten Achsen 
erreichen ihre Position gleichzeitig. In der Regel sind das die Geometrieachsen.

Welche Achsen Bahnachsen und damit geschwindigkeitsbestimmend sind, wird jedoch per 
Voreinstellungen festgelegt.

Im NC-Programm knnen Bahnachsen mit FGROUP angegeben werden.

Mehr Informationen zu FGROUP siehe "Vorschub (G93, G94, G95, F, FGROUP, FL, FGREF) 
(Seite 105)".

2.15.1.8

Positionierachsen

Positionierachsen werden getrennt interpoliert, d. h. jede Positionierachse hat einen eigenen 
Achsinterpolator und einen eigenen Vorschub. Positionierachsen interpolieren nicht mit den 
Bahnachsen.   

Positionierachsen werden aus dem NC-Programm oder von der PLC verfahren. Falls eine 
Achse gleichzeitig vom NC-Programm und der PLC verfahren werden soll, erscheint eine 
Fehlermeldung.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

369

Grundlagen

2.15 Sonstige Informationen

Typische Positionierachsen sind:

 Lader fr Werkstckantransport

 Lader fr Werkstckabtransport

 Werkzeugmagazin/Revolver

Typen

Zu unterscheiden ist zwischen Positionierachsen mit Synchronisation zum Satzende oder ber 
mehrere Stze hinweg.

POS-Achsen

Der Satzwechsel erfolgt zum Satzende, wenn alle in diesem Satz programmierten Bahn- und 
Positionierachsen ihren programmierten Endpunkt erreicht haben.

POSA-Achsen

Die Bewegungen dieser Positionierachsen knnen ber mehrere Stze ablaufen.

POSP-Achsen

Die Bewegung dieser Positionierachsen zum Anfahren der Endposition erfolgt in Teilstcken.

Hinweis

Positionierachsen werden zu Synchronachsen, wenn sie ohne die besondere Kennung POS/
POSA verfahren werden.

Ein Bahnsteuerbetrieb (G64) fr Bahnachsen ist nur dann mglich, wenn die Positionierachsen 
(POS) vor den Bahnachsen ihre Endposition erreicht haben.

Bahnachsen, die mit POS/POSA programmiert werden, werden fr diesen Satz aus dem 
Bahnachsverbund herausgenommen.

Mehr Informationen zu POS, POSA und POSP siehe "Positionierachsen verfahren (POS, POSA, 
POSP, FA, WAITP, WAITMC) (Seite 113)".

2.15.1.9

Synchronachsen

Synchronachsen fahren synchron zum Bahnweg von der Anfangsposition in die 
programmierte Endposition.   

Der unter F programmierte Vorschub gilt fr alle im Satz programmierten Bahnachsen, jedoch 
nicht fr die Synchronachsen. Synchronachsen bentigen fr ihren Weg die gleiche Zeit wie 
die Bahnachsen.

Eine Synchronachse kann zum Beispiel eine Rundachse sein, die synchron zur 
Bahninterpolation verfahren wird.

370

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Grundlagen

2.15 Sonstige Informationen

2.15.1.10

Kommandoachsen

Kommandoachsen werden aus Synchronaktionen auf Grund eines Ereignisses (Kommandos) 
gestartet. Sie knnen vollkommen asynchron zum Teileprogramm positioniert, gestartet und 
gestoppt werden. Eine Achse kann nicht gleichzeitig aus dem Teileprogramm und aus 
Synchronaktionen bewegt werden.   

Kommandoachsen werden getrennt interpoliert, d. h. jede Kommandoachse hat einen eigenen 
Achsinterpolator und einen eigenen Vorschub.

2.15.1.11

PLC-Achsen

PLC-Achsen werden von der PLC ber spezielle Funktionsbausteine im Grundprogramm 
verfahren und knnen sich asynchron zu allen brigen Achsen bewegen. Die 
Fahrbewegungen laufen losgelst von Bahn- und Synchronbewegungen ab.    

2.15.2

Vom Fahrbefehl zur Maschinenbewegung

Den Zusammenhang zwischen den programmierten Achsbewegungen (Fahrbefehlen) und 
den daraus resultierenden Maschinenbewegungen soll das folgende Bild veranschaulichen:

2.15.3

Wegberechnung

Die Wegberechnung ermittelt die in einem Satz zu verfahrende Wegstrecke unter 
Bercksichtigung aller Verschiebungen und Korrekturen.

Allgemein gilt:

Weg = Sollwert - Istwert + Nullpunktverschiebung (NV) + Werkzeugkorrektur (WK)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

371

(cid:36)(cid:70)(cid:75)(cid:86)(cid:69)(cid:72)(cid:90)(cid:72)(cid:74)(cid:88)(cid:81)(cid:74)(cid:3)(cid:83)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)(cid:76)(cid:72)(cid:85)(cid:87)(cid:3)(cid:76)(cid:80)(cid:3)(cid:58)(cid:72)(cid:85)(cid:78)(cid:86)(cid:87)(cid:190)(cid:70)(cid:78)(cid:78)(cid:82)(cid:82)(cid:85)(cid:71)(cid:76)(cid:81)(cid:68)(cid:87)(cid:72)(cid:81)(cid:86)(cid:92)(cid:86)(cid:87)(cid:72)(cid:80)(cid:37)(cid:72)(cid:86)(cid:70)(cid:75)(cid:85)(cid:72)(cid:76)(cid:69)(cid:88)(cid:81)(cid:74)(cid:3)(cid:71)(cid:72)(cid:85)(cid:3)(cid:58)(cid:72)(cid:85)(cid:78)(cid:86)(cid:87)(cid:190)(cid:70)(cid:78)(cid:74)(cid:72)(cid:82)(cid:80)(cid:72)(cid:87)(cid:85)(cid:76)(cid:72)(cid:3)(cid:190)(cid:69)(cid:72)(cid:85)(cid:3)(cid:42)(cid:72)(cid:82)(cid:80)(cid:72)(cid:87)(cid:85)(cid:76)(cid:72)(cid:68)(cid:70)(cid:75)(cid:86)(cid:72)(cid:81)(cid:3)(cid:11)(cid:93)(cid:17)(cid:3)(cid:37)(cid:17)(cid:3)(cid:59)(cid:15)(cid:3)(cid:60)(cid:15)(cid:3)(cid:61)(cid:12)(cid:46)(cid:82)(cid:81)(cid:87)(cid:88)(cid:85)(cid:3)(cid:76)(cid:80)(cid:3)(cid:78)(cid:68)(cid:85)(cid:87)(cid:72)(cid:86)(cid:76)(cid:86)(cid:70)(cid:75)(cid:72)(cid:81)(cid:3)(cid:46)(cid:82)(cid:82)(cid:85)(cid:71)(cid:76)(cid:81)(cid:68)(cid:87)(cid:72)(cid:81)(cid:86)(cid:92)(cid:86)(cid:87)(cid:72)(cid:80)(cid:3)(cid:71)(cid:72)(cid:86)(cid:3)(cid:46)(cid:68)(cid:81)(cid:68)(cid:79)(cid:86)(cid:3)(cid:11)(cid:37)(cid:38)(cid:54)(cid:12)(cid:58)(cid:72)(cid:85)(cid:78)(cid:93)(cid:72)(cid:88)(cid:74)(cid:85)(cid:68)(cid:71)(cid:76)(cid:88)(cid:86)(cid:78)(cid:82)(cid:85)(cid:85)(cid:72)(cid:78)(cid:87)(cid:88)(cid:85)(cid:37)(cid:72)(cid:90)(cid:72)(cid:74)(cid:88)(cid:81)(cid:74)(cid:3)(cid:71)(cid:72)(cid:86)(cid:3)(cid:58)(cid:72)(cid:85)(cid:78)(cid:93)(cid:72)(cid:88)(cid:74)(cid:81)(cid:88)(cid:79)(cid:79)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:86)(cid:3)(cid:76)(cid:80)(cid:3)(cid:37)(cid:38)(cid:54)(cid:3)(cid:58)(cid:72)(cid:85)(cid:78)(cid:93)(cid:72)(cid:88)(cid:74)(cid:79)(cid:166)(cid:81)(cid:74)(cid:72)(cid:81)(cid:78)(cid:82)(cid:85)(cid:85)(cid:72)(cid:78)(cid:87)(cid:88)(cid:85)(cid:3)(cid:78)(cid:76)(cid:81)(cid:72)(cid:80)(cid:68)(cid:87)(cid:76)(cid:86)(cid:70)(cid:75)(cid:72)(cid:3)(cid:55)(cid:85)(cid:68)(cid:81)(cid:86)(cid:73)(cid:82)(cid:85)(cid:80)(cid:68)(cid:87)(cid:76)(cid:82)(cid:81)(cid:3)(cid:11)(cid:73)(cid:68)(cid:79)(cid:79)(cid:86)(cid:3)(cid:68)(cid:78)(cid:87)(cid:76)(cid:89)(cid:12)(cid:37)(cid:72)(cid:90)(cid:72)(cid:74)(cid:88)(cid:81)(cid:74)(cid:3)(cid:71)(cid:72)(cid:85)(cid:3)(cid:48)(cid:68)(cid:86)(cid:70)(cid:75)(cid:76)(cid:81)(cid:72)(cid:81)(cid:68)(cid:70)(cid:75)(cid:86)(cid:72)(cid:81)(cid:3)(cid:71)(cid:72)(cid:86)(cid:3)(cid:46)(cid:68)(cid:81)(cid:68)(cid:79)(cid:86)(cid:3)(cid:68)(cid:69)(cid:70)(cid:53)(cid:88)(cid:81)(cid:71)(cid:68)(cid:70)(cid:75)(cid:86)(cid:72)(cid:81)(cid:3)(cid:69)(cid:72)(cid:76)(cid:3)(cid:24)(cid:16)(cid:36)(cid:70)(cid:75)(cid:86)(cid:3)(cid:55)(cid:85)(cid:68)(cid:73)(cid:82)(cid:53)(cid:72)(cid:86)(cid:87)(cid:79)(cid:76)(cid:70)(cid:75)(cid:72)(cid:3)(cid:57)(cid:72)(cid:85)(cid:73)(cid:68)(cid:75)(cid:85)(cid:68)(cid:81)(cid:90)(cid:72)(cid:76)(cid:16)(cid:86)(cid:88)(cid:81)(cid:74)(cid:72)(cid:81)(cid:3)(cid:190)(cid:69)(cid:72)(cid:85)(cid:3)(cid:86)(cid:82)(cid:74)(cid:72)(cid:81)(cid:68)(cid:81)(cid:81)(cid:87)(cid:72)(cid:3)(cid:61)(cid:88)(cid:86)(cid:68)(cid:87)(cid:93)(cid:68)(cid:70)(cid:75)(cid:86)(cid:72)(cid:81)(cid:3)(cid:11)(cid:93)(cid:17)(cid:3)(cid:37)(cid:17)(cid:3)(cid:38)(cid:15)(cid:3)(cid:56)(cid:15)(cid:3)(cid:57)(cid:12)(cid:37)(cid:72)(cid:86)(cid:70)(cid:75)(cid:85)(cid:72)(cid:76)(cid:69)(cid:88)(cid:81)(cid:74)(cid:3)(cid:71)(cid:72)(cid:85)(cid:3)(cid:58)(cid:72)(cid:85)(cid:78)(cid:93)(cid:72)(cid:88)(cid:74)(cid:16)(cid:82)(cid:85)(cid:76)(cid:72)(cid:81)(cid:87)(cid:76)(cid:72)(cid:85)(cid:88)(cid:81)(cid:74)(cid:3)(cid:190)(cid:69)(cid:72)(cid:85)(cid:3)(cid:50)(cid:85)(cid:76)(cid:72)(cid:81)(cid:16)(cid:87)(cid:76)(cid:72)(cid:85)(cid:88)(cid:81)(cid:74)(cid:86)(cid:89)(cid:72)(cid:78)(cid:87)(cid:82)(cid:85)(cid:18)(cid:40)(cid:88)(cid:79)(cid:72)(cid:85)(cid:90)(cid:76)(cid:81)(cid:78)(cid:72)(cid:79)(cid:41)(cid:85)(cid:68)(cid:80)(cid:72)(cid:85)(cid:72)(cid:70)(cid:75)(cid:81)(cid:88)(cid:81)(cid:74)(cid:29)(cid:16)(cid:3)(cid:57)(cid:72)(cid:85)(cid:86)(cid:70)(cid:75)(cid:76)(cid:72)(cid:69)(cid:88)(cid:81)(cid:74)(cid:3)(cid:11)(cid:55)(cid:53)(cid:36)(cid:49)(cid:54)(cid:12)(cid:16)(cid:3)(cid:39)(cid:85)(cid:72)(cid:75)(cid:88)(cid:81)(cid:74)(cid:3)(cid:11)(cid:53)(cid:50)(cid:55)(cid:12)(cid:16)(cid:3)(cid:54)(cid:78)(cid:68)(cid:79)(cid:76)(cid:72)(cid:85)(cid:88)(cid:81)(cid:74)(cid:3)(cid:11)(cid:54)(cid:38)(cid:36)(cid:47)(cid:40)(cid:12)(cid:41)(cid:85)(cid:68)(cid:80)(cid:72)(cid:85)(cid:72)(cid:70)(cid:75)(cid:81)(cid:88)(cid:81)(cid:74)(cid:29)(cid:16)(cid:3)(cid:57)(cid:72)(cid:85)(cid:86)(cid:70)(cid:75)(cid:76)(cid:72)(cid:69)(cid:88)(cid:81)(cid:74)(cid:16)(cid:3)(cid:54)(cid:78)(cid:68)(cid:79)(cid:76)(cid:72)(cid:85)(cid:88)(cid:81)(cid:74)Grundlagen

2.15 Sonstige Informationen

Wird in einem neuen Programmsatz eine neue Nullpunktverschiebung und eine neue 
Werkzeugkorrektur programmiert, so gilt:

 bei Bezugsmaeingabe:

Weg = (Bezugsma P2 - Bezugsma P1) + (NV P2 - NV P1) + (WK P2 - WK P1).

 bei Kettenmaeingabe:

Weg = Kettenma + (NV P2 - NV P1) + (WK P2 - WK P1).

2.15.4

Adressen

Feste Adressen

Diese Adressen sind fest eingerichtet, d. h., die Adresszeichen knnen nicht gendert werden.  

Eine Auflistung findet sich in der Tabelle "Feste Adressen (Seite 1156)".

372

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:68)(cid:69)(cid:86)(cid:82)(cid:79)(cid:88)(cid:87)(cid:72)(cid:3)(cid:51)(cid:82)(cid:86)(cid:76)(cid:87)(cid:76)(cid:82)(cid:81)(cid:54)(cid:82)(cid:79)(cid:79)(cid:16)(cid:90)(cid:72)(cid:85)(cid:87)(cid:54)(cid:82)(cid:79)(cid:79)(cid:90)(cid:72)(cid:85)(cid:87)(cid:68)(cid:69)(cid:86)(cid:82)(cid:79)(cid:88)(cid:87)(cid:72)(cid:3)(cid:51)(cid:82)(cid:86)(cid:76)(cid:87)(cid:76)(cid:82)(cid:81)(cid:59)(cid:61)(cid:48)(cid:58)(cid:49)(cid:57)(cid:58)(cid:46)(cid:58)(cid:46)(cid:55)(cid:37)(cid:72)(cid:93)(cid:88)(cid:74)(cid:86)(cid:80)(cid:68)(cid:161)(cid:3)(cid:11)(cid:54)(cid:82)(cid:79)(cid:79)(cid:90)(cid:72)(cid:85)(cid:87)(cid:12)(cid:3)(cid:73)(cid:190)(cid:85)(cid:3)(cid:51)(cid:21)(cid:58)(cid:72)(cid:74)(cid:37)(cid:72)(cid:93)(cid:88)(cid:74)(cid:86)(cid:80)(cid:68)(cid:161)(cid:11)(cid:54)(cid:82)(cid:79)(cid:79)(cid:90)(cid:72)(cid:85)(cid:87)(cid:12)(cid:73)(cid:190)(cid:85)(cid:3)(cid:51)(cid:20)(cid:37)(cid:72)(cid:90)(cid:72)(cid:74)(cid:88)(cid:81)(cid:74)(cid:44)(cid:86)(cid:87)(cid:90)(cid:72)(cid:85)(cid:87)(cid:3)(cid:20)(cid:44)(cid:86)(cid:87)(cid:90)(cid:72)(cid:85)(cid:87)(cid:3)(cid:21)(cid:49)(cid:57)(cid:3)(cid:51)(cid:21)(cid:49)(cid:57)(cid:3)(cid:51)(cid:20)(cid:58)(cid:46)(cid:3)(cid:51)(cid:21)(cid:58)(cid:46)(cid:3)(cid:51)(cid:20)(cid:48)(cid:58)(cid:51)(cid:20)(cid:51)(cid:21)Grundlagen

2.15 Sonstige Informationen

Einstellbare Adressen

Diesen Adressen kann vom Maschinenhersteller ber Maschinendatum ein anderer Name 
zugeordnet werden.

Hinweis

Einstellbare Adressen mssen innerhalb der Steuerung eindeutig sein, d. h., derselbe 
Adressname darf nicht fr unterschiedliche Adresstypen (Achswerte und Endpunkte, 
Werkzeugorientierung, Interpolationsparameter, ...) verwendet werden.

Eine Auflistung findet sich in der Tabelle "Einstellbare Adressen (Seite 1160)".

Modal / satzweise wirksame Adressen

Modal wirksame Adressen behalten mit dem programmierten Wert so lange ihre Gltigkeit (in 
allen Folgestzen), bis unter der gleichen Adresse ein neuer Wert programmiert wird.

Satzweise wirksame Adressen gelten nur in dem Satz, in dem sie programmiert wurden.

Beispiel:

Programmcode

Kommentar

N10 G01 F500 X10

N20 X10

; Vorschub F aus N10 wirkt so lange, bis ein neuer eingege-
ben wird.

Adressen mit axialer Erweiterung

Bei Adressen mit axialer Erweiterung steht ein Achsname in eckigen Klammern nach der 
Adresse, der die Zuordnung zu Achsen festlegt.

Beispiel:

Programmcode

FA[U]=400

Kommentar

; Achsspezifischer Vorschub fr Achse U.

Siehe auch Tabelle "Feste Adressen (Seite 1156)".

Erweiterte Adressschreibweise    

Die erweiterte Adressschreibweise bietet die Mglichkeit, eine grere Anzahl von Achsen und 
Spindeln in eine Systematik einzuordnen.

Eine erweiterte Adresse besteht aus einer numerischen Erweiterung und einem mit "="-
Zeichen zugewiesenen arithmetischen Ausdruck. Die numerische Erweiterung ist ein- oder 
zweistellig und immer positiv.

Die erweiterte Adressschreibweise ist nur fr folgende einfache Adressen zulssig:

Adresse

X, Y, Z, 

I, J, K

Bedeutung

Achsadressen

Interpolationsparameter

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

373

 
Grundlagen

2.15 Sonstige Informationen

S

Spindeldrehzahl

SPOS, SPOSA

Spindelposition

M

H

T

F

Zusatzfunktionen

Hilfsfunktionen

Werkzeugnummer

Vorschub

Beispiele:

Programmcode

Kommentar

X7

X4=20

CR=7.3

S1=470

M3=5

; kein "=" erforderlich; 7 ist Wert; das Zeichen "=" ist aber auch 
hier mglich

; Achse X4; "=" ist erforderlich

; 2 Buchstaben ; "=" ist erforderlich

; Drehzahl fr 1. Spindel: 470 U/min

; Spindel-Halt fr 3. Spindel

Bei den Adressen M, H, S sowie bei SPOS und SPOSA ist die numerische Erweiterung durch 
eine Variable ersetzbar. Der Variablenbezeichner steht dabei in eckigen Klammern.

Beispiele:

Programmcode

Kommentar

S[SPINU]=470

; Drehzahl fr die Spindel, deren Nummer in der Variablen SPINU 
hinterlegt ist.

M[SPINU]=3

T[SPINU]=7

; Rechtslauf fr die Spindel, deren Nummer in der Variablen SPINU 
hinterlegt ist.

; Vorwahl des Werkzeugs fr die Spindel, deren Nummer in der Va-
riablen SPINU hinterlegt ist.

2.15.5

Namen

Die Befehle nach DIN 66025 werden durch die NC-Hochsprache unter anderem mit benannten 
Objekten ergnzt.

Benannte Objekte knnen z. B. sein:

 Systemvariablen

 Anwenderdefinierte Variablen

 Achsen / Spindeln

 Unterprogramme

 Schlsselwrter

 Sprungmarken

 Makros

374

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Grundlagen

2.15 Sonstige Informationen

Hinweis

Bezeichner mssen eindeutig sein. Derselbe Bezeichner darf nicht fr verschiedene Objekte 
verwendet werden.

Namensregeln

Ein Name kann unter Einhaltung folgender Regeln frei gewhlt werden:

 Erlaubte Zeichen:

 Buchstaben: A ... Z, a ... z

 Ziffern: 0 ... 9

 Unterstrich: _

 Die ersten beiden Zeichen sollten Buchstaben oder Unterstriche sein.

 Maximale Lnge: :

 Programmnamen (Seite 41): 24 Zeichen

 Achsnamen: 8 Zeichen

 Variablennamen: 31 Zeichen

Hinweis

Reservierte Schlsselwrter drfen nicht als Bezeichner verwendet werden.

Zyklen

Zur Vermeidung von Namenskonflikten wird empfohlen folgende Festlegung bei der Vergabe 
von Namen fr Anwender-Zyklen zu beachten:

Zeichenfolge

 CYCLE

 CUST_

 GROUP_

 _

 S_

 E_

 F_

 CCS_

 CC_

Anwender-Zyklen

reserviert fr Namen von

SIEMENS-Zyklen

SIEMENS-Compile-Zyklen

Anwender-Compile-Zyklen

Fr Namen von Anwender-Zyklen wird empfohlen diesen mit "U_" zu beginnen.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

375

Grundlagen

2.15 Sonstige Informationen

Variablen

Informationen zur Namensgebung von Variablen finden sich in folgenden Kapiteln:

 Systemdaten (Seite 382)

 Definition von Anwendervariablen (DEF) (Seite 387)

2.15.6

Konstanten

Konstante (allg.)   

Eine Konstante ist ein Datenelement, dessen Wert sich bei der Ausfhrung eines Programms 
nicht ndert, z. B. eine Wertzuweisung an eine Adresse.

Dezimal-Konstante   

Der Zahlenwert einer Dezimal-Konstanten wird im Dezimalsystem dargestellt.

INTEGER-Konstante   

Eine INTEGER-Konstante ist ein ganzzahliger Wert, d. h. eine Ziffernfolge ohne Dezimalpunkt 
mit oder ohne Vorzeichen.

Beispiele:

X10

X-35

X0

Zuweisung des Werts +10 an die Adresse X

Zuweisung des Werts -35 an die Adresse X

Zuweisung des Werts 0 an die Adresse X
Hinweis:
X0 kann nicht durch X ersetzt werden.

REAL-Konstante   

Eine REAL-Konstante ist eine Ziffernfolge mit Dezimalpunkt mit oder ohne Vorzeichen sowie 
mit oder ohne Exponent.

Beispiele:

X10.25

X-10.25

X0.25

X.25

Zuweisung des Werts +10.25 an die Adresse X

Zuweisung des Werts -10.25 an die Adresse X

Zuweisung des Werts +0.25 an die Adresse X

Zuweisung des Werts +0.25 an die Adresse X, ohne fhrende "0"

X=-.1EX-3

Zuweisung des Werts -0.1*10-3 an die Adresse X

376

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Grundlagen

2.15 Sonstige Informationen

Hinweis

Werden bei einer Adresse mit zulssiger Dezimalpunkteingabe nach dem Dezimalpunkt mehr 
Stellen geschrieben, als fr diese Adresse vorgesehen sind, so wird sie auf die vorgesehene 
Stellenanzahl gerundet.

Hexadezimal-Konstante   

Mglich sind auch Konstanten, die hexadezimal, d. h. in der Basis 16, interpretiert werden. 
Dabei gelten die Buchstaben A bis F als hexadezimale Ziffern mit den dezimalen Werten 10 bis 
15.

Hexadezimale Konstanten werden zwischen Hochkommata gesetzt und beginnen mit dem 
Buchstaben "H", gefolgt von dem hexadezimal geschriebenen Wert. Trennzeichen zwischen 
den Buchstaben und Ziffern sind erlaubt.

Beispiel:

Programmcode

$MC_TOOL_MANAGEMENT_MASK='H7F'

Kommentar

; Durch Zuweisung der Hexadezimal-Konstan-
te werden in dem Maschinendatum Bit 0-7 ge-
setzt.

Hinweis

Die maximale Zeichenzahl ist durch den Wertebereich des ganzzahligen Datentyps begrenzt.

Binr-Konstante   

Mglich sind auch Konstanten, die binr interpretiert werden. Dabei werden nur die Ziffern "0" 
und "1" verwendet.

Binre Konstanten werden zwischen Hochkommata gesetzt und beginnen mit dem 
Buchstaben "B", gefolgt von dem binr geschriebenen Wert. Trennzeichen zwischen den 
Ziffern sind erlaubt.

Beispiel:

Programmcode

$MN_AUXFU_GROUP_SPEC='B10000001'

Kommentar

; Durch Zuweisung der Binrkonstante wer-
den in dem Maschinendatum Bit 0 und Bit 7 
gesetzt.

Hinweis

Die maximale Zeichenzahl ist durch den Wertebereich des ganzzahligen Datentyps begrenzt.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

377

Grundlagen

2.15 Sonstige Informationen

2.15.7

Operatoren und Rechenfunktionen 

Operatoren

Rechenoperatoren

Systemvariable vom Typ REAL oder INT knnen durch folgende Operatoren miteinander 
verknpft werden:

Operator

Bedeutung

Addition

Subtraktion

Multiplikation

 Division in Synchronaktionen: INT / INT  INT

 Division in Synchronaktionen mit REAL-Ergebnis durch Verwendung der Funktion 

ITOR():
ITOR( INT ) / ITOR( INT )  REAL

 Division in NC-Programmen: INT / INT  REAL

Integer-Division: INT / INT  INT

Modulo-Division, (nur fr Typ INT) liefert Rest einer INT-Division

Beispiel: 3 MOD 4 = 3

+

-

*

/

DIV

MOD

Hinweis

Es knnen nur Variablen gleichen Typs verknpft werden.

Vergleichsoperatoren

Operator

Bedeutung

==

>

<

>

<=

>=

gleich

ungleich

kleiner

grer

kleiner oder gleich

grer oder gleich

Boole'sche Operatoren

Operator

Bedeutung

NOT

AND

OR

XOR

NICHT

UND

ODER

Exclusiv-ODER

378

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Grundlagen

2.15 Sonstige Informationen

Bitweise logische Operatoren

Operator

Bedeutung

B_OR

B_AND

B_XOR

B_NOT

bitweise ODER

bitweise UND

bitweise exklusives ODER

bitweise Negierung

Prioritt der Operatoren

Die Operatoren haben bei der Abarbeitung in der Synchronaktion folgende Prioritten (hchste 
Prioritt: 1):

Prio. Operatoren

Bedeutung

NOT, B_NOT

Verneinung, bitweise Verneinung

*, /, DIV, MOD

Multiplikation, Division

+, -

B_AND

B_XOR

B_OR

AND

XOR

OR

<<

Addition, Subtraktion

bitweise UND

bitweise exklusives ODER

bitweise ODER

UND

exklusives ODER

ODER

Verkettung von Strings, Ergebnistyp STRING

==, <>, <, >, >=, <=

Vergleichsoperatoren

1

2

3

4

5

6

7

8

9

10

11

Hinweis

Es wird dringend empfohlen, bei der Verwendung von mehreren Operatoren in einem 
Ausdruck, die einzelnen Operatoren durch das Setzen von Klammern "(  )" eindeutig zu 
priorisieren.

Beispiel einer Bedingung mit einem Ausdruck mit mehreren Operatoren:

Programmcode

... WHEN ($AA_IM[X] > WERT) AND ($AA_IM[Y] > WERT1) DO ...

Rechenfunktionen

Operator

Bedeutung

SIN() 

COS() 

TAN() 

ASIN() 

Sinus

Cosinus

Tangens

Arcussinus

ACOS() 

Arcuscosinus

ATAN2(,) 

Arcustangens2

SQRT() 

Quadratwurzel

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

379

 
Grundlagen

2.15 Sonstige Informationen

Operator

Bedeutung

ABS() 

POT() 

Betrag

2. Potenz (Quadrat)

TRUNC() 

ganzzahliger Teil

Genauigkeiten bei Vergleichsbefehlen einstellbar mit TRUNC

ROUND() 

Runden auf eine ganze Zahl

LN() 

EXP() 

natrlicher Logarithmus

Exponentialfunktion

Indizierung

Der Index einer Systemvariablen vom Typ "Feld von " kann wiederum eine Systemvariable 
sein. Der Index wird dabei ebenfalls im Hauptlauf im Interpolatortakt ausgewertet.

Beispiel

Programmcode

... WHEN ... DO $AC_PARAM[ $AC_MARKER[1] ] = 3

Einschrnkungen

 Eine Schachtelung der Indizierung mit weiteren Systemvariablen ist nicht erlaubt.

 Der Index darf nicht ber Vorlaufvariablen gebildet werden. Das folgende Beispiel ist 

somit nicht erlaubt, da $P_EP eine Vorlaufvariable ist:
$AC_PARAM[ 1 ] = $P_EP[ $AC_MARKER[ 0 ] ]

Siehe auch

Rechenfunktionen (Seite 431)

Operationen (Seite 431)

380

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
Arbeitsvorbereitung

3.1

Flexible NC-Programmierung

3.1.1

Variablen

3

Durch die Verwendung von Variablen aus den Bereichen Systemdaten und Anwenderdaten, 
insbesondere in Verbindung mit Rechenfunktionen und Kontrollstrukturen, knnen NC-
Programme und Zyklen flexibel gestaltet werden.

WARNUNG

Sach- und Personenschden durch vernderte Variablen

Bei der Verwendung von Variablen im NC-Programm ist zu bercksichtigen, dass 
Maschinenbediener oder Unbefugte bei entsprechendem Zugriffsrecht die Variablen 
verndern und dadurch den Programmablauf beeinflussen knnen. Sach- und 
Personenschden knnen die Folge sein.

 Um negative Auswirkungen auf den Programmablauf durch die Vernderung von 

Variablen zu vermeiden, sind im NC-Programm entsprechende Datenberprfungen 
("Input validation") vorzusehen.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

381

Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

 Systemdaten

In den Systemdaten liegen die im System vordefinierten Variablen. Diese Variablen haben 
eine definierte Bedeutung. Sie werden in erster Linie von der Systemsoftware verwendet. 
Vom Anwender knnen diese Variablen in NC-Programmen und Zyklen gelesen und 
geschrieben werden. Beispiel: Maschinendaten, Settingdaten, Systemvariablen.
Obwohl die Bedeutung eines Systemdatums fest vorgegeben ist, knnen die Eigenschaften 
vom Anwender durch Redefinition in gewissem Umfang verndert werden. 
Siehe "Redefinition von Systemdaten, Anwenderdaten und NC-Sprachbefehlen (REDEF) 
(Seite 393)"

 Anwenderdaten

In den Anwenderdaten liegen die vom Anwender definierten Variablen, deren Bedeutung 
ausschlielich durch den Anwender festgelegt wird. Sie werden vom System nicht 
ausgewertet.  
Die Anwenderdaten sind unterteilt in:

 Vordefinierte Anwendervariablen

Vordefinierte Anwendervariablen sind im System bereits definierte Variablen, deren 
Anzahl ber Maschinendaten parametriert wird. Die Eigenschaften dieser Variablen 
knnen vom Anwender angepasst werden. 
Siehe "Redefinition von Systemdaten, Anwenderdaten und NC-Sprachbefehlen 
(REDEF) (Seite 393)".

 Anwenderdefinierte Variablen

Anwenderdefinierte Variablen sind Variablen, die vom Anwender definiert und vom 
System zur Laufzeit angelegt werden. Ihre Anzahl, Datentyp, Sichtbarkeit und alle 
weiteren Eigenschaften werden ausschlielich durch den Anwender festgelegt.
Siehe "Definition von Anwendervariablen (DEF) (Seite 387)"

3.1.1.1

Systemdaten

Die Systemdaten enthalten die im System vordefinierten Variablen, die in NC_Programmen 
und Zyklen Zugriff auf die aktuelle Parametrierung der Steuerung sowie auf Maschinen-, 
Steuerungs- und Prozesszustnde ermglichen.

Vorlaufvariablen

Vorlaufvariablen sind Systemdaten, die im Kontext des Vorlaufs, d. h. zum Zeitpunkt der 
Interpretation des Satzes, in dem die Variable programmiert ist, gelesen und geschrieben 
werden. Vorlaufvariable lsen keinen Vorlaufstopp aus.

Hauptlaufvariablen

Hauptlaufvariablen sind Systemdaten, die im Kontext des Hauptlaufs, d. h. zum Zeitpunkt der 
Ausfhrung des Satzes, in dem die Variable programmiert ist, gelesen oder geschrieben 
werden. Hauptlaufvariablen sind:

 Variable, die in Synchronaktionen programmiert werden knnen (Lesen/Schreiben)

 Variable, die im NC_Programm programmiert werden knnen und Vorlaufstopp auslsen 

(Lesen/Schreiben)

 Variable, die im NC_Programm programmiert werden knnen und deren Wert im Vorlauf 
ermittelt, aber erst im Hauptlauf geschrieben wird (Hauptlauf-synchron: nur Schreiben)

382

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Prfix-Systematik

Zur besonderen Kennzeichnung von Systemdaten ist dem Namen im Normalfall ein Prfix 
vorangestellt, der sich aus dem $-Zeichen, gefolgt von einem oder zwei Buchstaben und einem 
Unterstrich, zusammensetzt:

$ + 1. Buchstabe

Bedeutung: Datenart

Vorlaufdaten (Systemdaten, die im Vorlauf gelesen / geschrieben werden)

$M

$S

$T

$P

$C

$O

R

Maschinendaten 1)

Settingdaten, Schutzbereiche 1)

Werkzeugverwaltungsdaten

Programmierte Werte

Zyklenvariablen der ISO-Hllzyklen

Optionsdaten

R-Parameter (Rechenparameter) 2)

Hauptlaufdaten (Systemdaten, die im Hauptlauf gelesen / geschrieben werden)

$$M

$$S

$A

$V

$R

Maschinendaten 1)

Settingdaten 1)

Aktuelle Hauptlaufdaten

Lageregler-Daten

R-Parameter (Rechenparameter) 2)

1) Ob Maschinen- und Settingdaten als Vor- oder Hauptlaufvariablen behandelt werden, hngt davon 
ab, ob sie mit einem oder zwei $-Zeichen geschrieben werden. Die Schreibweise ist anwendungsspe
zifisch frei whlbar.
2) Bei der Verwendung eines R-Parameters im Teileprogramm / Zyklus als Vorlaufvariable wird kein 
Prfix geschrieben, z. B. R10. Bei der Verwendung in einer Synchronaktion als Hauptlaufvariable wird 
als Prfix ein $-Zeichen geschrieben, z. B. $R10.

2. Buchstabe

Bedeutung: Sichtbarkeit

N

C

A

NC-globale Variable (NC)

kanalspezifische Variable (Channel)

achsspezifische Variable (Axis)

Randbedingungen

Ausnahmen in der Prfix-Systematik

Folgende Systemvariablen weichen von der oben genannten Prfix-Systematik ab:

 $TC_...: Der 2. Buchstabe C verweist hier nicht auf kanalspezifische, sondern auf 

Werkzeughalter-spezifische Systemvariablen (TC = Tool Carrier)

 $P_ ...: Kanalspezifische Systemvariablen

Verwendung von Maschinen- und Settingdaten in Synchronaktionen

Bei der Verwendung von Maschinen- und Settingdaten in Synchronaktionen kann durch den 
Prfix bestimmt werden, ob das Maschinen- oder Settingdatum vorlauf- oder 
hauptlaufsynchron gelesen/geschrieben wird. 

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

383

Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Bleibt das Datum whrend der Bearbeitung unverndert, kann vorlaufsynchron gelesen 
werden. Der Prfix des Maschinen- oder Settingdatums wird dazu mit einem $-Zeichen 
geschrieben:

ID=1 WHENEVER $AA_IM[z] < $SA_OSCILL_REVERSE_POS2[Z]6 DO $AA_OVR[X]=0

Wird das Datum whrend der Bearbeitung verndert, muss hauptlaufsynchron gelesen / 
geschrieben werden. Der Prfix des Maschinen- oder Settingdatums wird dazu mit zwei $-
Zeichen geschrieben:

ID=1 WHENEVER $AA_IM[z] < $$SA_OSCILL_REVERSE_POS2[Z]6 DO $AA_OVR[X]=0

Hinweis

Schreiben von Maschinen- und Settingdaten

Beim Schreiben eines Maschinen- oder Settingdatums ist darauf zu achten, dass die aktive 
Zugriffsstufe beim Ausfhren des Teileprogramms / Zyklus den Schreibzugriff erlaubt und die 
Wirksamkeit des Datums "IMMEDIATE" ist.

Siehe auch

Variablen (Seite 381)

3.1.1.2

Vordefinierte Anwendervariablen: Kanalspezifische Rechenparameter (R)

Kanalspezifische Rechenparameter oder R-Parameter sind vordefinierte Anwendervariablen 
mit der Bezeichnung R, definiert als Feld vom Datentyp REAL. Aus historischen Grnden ist fr 
R-Parameter neben der Schreibweise mit Feldindex, z. B. R[10], auch die Schreibweise ohne 
Feldindex, z. B. R10, erlaubt.

Bei der Verwendung in Synchronaktionen muss der Buchstabe $ vorangestellt werden, z. B. 
$R10.

Syntax

Bedeutung

Bei Verwendung als Vorlaufvariable:
R<n>
R[<Ausdruck>]

Bei Verwendung als Hauptlaufvariable:
$R<n>
$R[<Ausdruck>]

R:

$R:

Bezeichner bei Verwendung als Vorlaufvariable, z. B. im Teileprogramm

Bezeichner bei Verwendung als Hauptlaufvariable, z. B. in Synchronaktionen

384

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Typ:

REAL

Wertebereich:

Bei nicht-exponentieller Schreibweise:

 (0.000 0001 ... 9999 9999)

Hinweis:
Es sind maximal 8 Dezimalstellen erlaubt

Bei exponentieller Schreibweise:
 (1*10-300 ... 1*10+300)

Hinweis:

 Schreibweise: <Mantisse>EX<Exponent> z. B. 8.2EX-3

 Es sind maximal 10 Zeichen einschlielich Vorzeichen und 

Dezimalpunkt erlaubt.

<n>:

Nummer des R-Parameters

Typ:

INT

Wertebereich:

0 - MAX_INDEX

Hinweis
MAX_INDEX ergibt sich aus der parametrierten Anzahl an R-
Parametern: 
MAX_INDEX = (MD28050 $MN_MM_NUM_R_PARAM) - 1

<Ausdruck>:

Feldindex

Als Feldindex kann ein beliebiger Ausdruck angegeben werden, solange das Er
gebnis des Ausdrucks in den Datentyp INT gewandelt werden kann (INT, REAL, 
BOOL, CHAR)

Beispiel

Zuweisungen an R-Parameter und Verwendung von R-Parametern in mathematischen 
Funktionen:

Programmcode

Kommentar

R0=3.5678

R[1]=-37.3

R3=-7

; Zuweisung im Vorlauf

; Zuweisung im Vorlauf

; Zuweisung im Vorlauf

$R4=-0.1EX-5

; Zuweisung im Hauptlauf: R4 = -0.1 * 10^-5

$R[6]=1.874EX8

; Zuweisung im Hauptlauf: R6 = 1.874 * 10^8

R7=SIN(25.3)

; Zuweisung im Vorlauf

R[R2]=R10

; Indirekte Adressierung ber R-Parameter

R[(R1+R2)*R3]=5

; Indirekte Adressierung ber math. Ausdruck

X=(R1+R2)

; Verfahre Achse X auf die Position die sich aus der Summe 
von R1 und R2 ergibt

Z=SQRT(R1*R1+R2*R2)

; Verfahre Achse Z auf Position Quadratwurzel(R1^2 + R2^2)

Siehe auch

Variablen (Seite 381)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

385

 
 
 
 
Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

3.1.1.3

Vordefinierte Anwendervariablen: Globale Rechenparameter (RG)

Funktion

Neben den kanalspezifischen R-Parametern stehen dem Anwender auch globale R-
Parameter zur Verfgung. Sie existieren innerhalb der Steuerung einmal und knnen von allen 
Kanlen aus gelesen/geschrieben werden.

Globale R-Parameter werden z. B. verwendet, um Informationen von einem Kanal in den 
nchsten zu bekommen. Ein anderes Beispiel sind globale Einstellungen, die fr alle Kanle 
ausgewertet werden sollen, wie z. B. die Auskragung des Rohteils aus der Spindel.

Lesen und Schreiben der globalen R-Parameter erfolgt ber die Bedienoberfche oder im NC-
Programm im Vorlauf. Eine Verwendung in Synchronaktionen oder Technologiezyklen ist nicht 
mglich.

Hinweis

Beim Lesen und Schreiben von globalen R-Parametern erfolgt keine Synchronisation 
zwischen den Kanlen.

Da das Lesen und Schreiben im Vorlauf erfolgt, ist der Zeitpunkt, zu dem ein geschriebener 
Wert von einem Kanal aus in einem anderen Kanal wirksam wird, nicht definiert.

Beispiel:

Im Kanal1 luft eine Schleife mit einem globalen R-Parameter als Schleifenzhler. Kanal 2 
schreibt einen Wert in diesen globalen R-Parameter, der zu einem Schleifenabbruch in Kanal 
1 fhrt. Alle bis zu diesem Zeitpunkt im Kanal1 im Vorlauf interpretierten Schleifen werden 
jedoch noch ausgefhrt. Wie viele Schleifen das sind ist nicht definiert und hngt unter 
anderem von der Auslastung des Kanals ab.

Eine Synchronisation zwischen den Kanlen muss der Anwender applikativ, z. B. mit WAIT-
Marken, selbst realisieren!

Syntax

Schreiben im NC-Programm 
RG[<n>]=<Wert>
RG[<Ausdruck>]=<Wert>   

Lesen im NC-Programm
R...=RG[<n>]
R...=RG[<Ausdruck>]

386

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Bedeutung

Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

RG:

Default-Name der NC-Adresse fr globale R-Parameter

Hinweis:
Der Name der NC-Adresse ist einstellbar ber MD15800 $MN_R_PA
RAM_NCK_NAME

<n>:

Nummer des globalen R-Parameters

Typ:

INT

Wertebereich:

0 ... MAX_INDEX

Hinweis
MAX_INDEX ergibt sich aus der parametrierten Anzahl an 
globalen R-Parametern: 
MAX_INDEX = (MD18156 $MN_MM_NUM_R_PA
RAM_NCK) - 1

<Ausdruck>:

Als Feldindex kann ein beliebiger Ausdruck angegeben werden, solange das 
Ergebnis des Ausdrucks in den Datentyp INT gewandelt werden kann (INT, RE
AL, BOOL, CHAR)

<Wert>:

Wert des globalen R-Parameters

Typ:

REAL

Wertebereich:

Bei nicht-exponentieller Schreibweise:

 (0.000 0001 ... 9999 9999)

Hinweis:
Es sind maximal 8 Dezimalstellen erlaubt

Bei exponentieller Schreibweise:
 (1*10-300 ... 1*10+300)

Hinweis:

 Schreibweise: <Mantisse>EX<exponent> z.B. 8.2EX-3

 Es sind maximal 10 Zeichen einschlielich Vorzeichen 

und Dezimalpunkt erlaubt.

3.1.1.4

Definition von Anwendervariablen (DEF)

Mit dem Befehl DEF knnen anwenderspezifische Variablen, oder Anwendervariablen (User 
Data), definiert und mit Werten belegt werden.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

387

Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Entsprechend dem Gltigkeitsbereich, d. h. dem Bereich in dem die Variable sichtbar ist, gibt 
es folgende Kategorien von Anwendervariablen:

 Lokale Anwendervariablen (LUD) 

Lokale Anwendervariablen (LUD) sind Variablen, die in einem NC-Programm definiert sind, 
das zum Zeitpunkt der Abarbeitung nicht das Hauptprogramm ist. Sie werden beim Aufruf 
des NC-Programms angelegt und mit Programmende-Reset bzw. dem nchsten 
Steuerungshochlauf gelscht. Auf LUD kann nur innerhalb des NC-Programms zugegriffen 
werden, in dem sie definiert sind.

 Programmglobale Anwendervariablen (PUD) 

Programmglobale Anwendervariablen (PUD) sind Variablen, die in einem als 
Hauptprogramm verwendeten NC-Programm definiert sind. Sie werden beim Aufruf des 
NC-Programms angelegt und mit Programmende-Reset bzw. dem nchsten 
Steuerungshochlauf gelscht. Auf PUD kann im Hauptprogramm und in allen 
Unterprogrammen zugegriffen werden.

Hinweis

Verfgbarkeit von programmglobalen Anwendervariablen (PUD)

Im Hauptprogramm definierte programmglobale Anwendervariablen (PUD) sind nur dann 
auch in den Unterprogrammen verfgbar, wenn folgendes Maschinendatum gesetzt ist:

MD11120 $MN_LUD_EXTENDED_SCOPE = 1

Mit MD11120 = 0 sind die im Hauptprogramm definierten programmglobalen 
Anwendervariablen nur im Hauptprogramm verfgbar.

 Globale Anwendervariablen (GUD) 

Globale Anwendervariablen (GUD) sind NC- bzw. Kanal-globale Variablen, die in einem 
Datenbaustein (SGUD, MGUD, UGUD, GUD4 ... GUD9) definiert sind und auch nach 
Programmende-Reset bzw. dem nchsten Steuerungshochlauf erhalten bleiben. Auf GUD 
kann in allen NC-Programmen zugegriffen werden.

Anwendervariablen mssen vor ihrer Verwendung (Lesen / Schreiben) definiert worden sein. 
Folgende Regeln sind dabei zu beachten:

 GUD mssen in einer Definitionsdatei, z. B. _N_DEF_DIR/_N_UGUD_DEF, definiert 

werden.

 PUD und LUD mssen im Definitionsteil eines NC-Programms definiert werden.

 Die Datendefinition muss in einem eigenen Satz erfolgen.

 Pro Datendefinition darf nur ein Datentyp verwendet werden.

 Pro Datendefinition knnen mehrere Variable des gleichen Datentyps definiert werden.

LUD und PUD
DEF <Typ> <Phys_Einheit> <Grenzwerte> <Name>[<Wert_1>, <Wert_2>, 
<Wert_3>]=<Init_Wert>

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Syntax

388

Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

GUD
DEF <Bereich> <VL_Stop> <Zugriffsrechte> <Datenklasse> <Typ> 
<Phys_Einheit> <Grenzwerte> <Name>[<Wert_1>, <Wert_2>, 
<Wert_3>]=<Init_Wert>

Bedeutung

DEF:

<Bereich>:

Befehl zur Definition von Anwendervariablen GUD, PUD, LUD

Gltigkeitsbereich, nur relevant fr GUD: 

NC:

CHAN:

NC-globale Anwendervariable

Kanal-globale Anwendervariable

<VL_Stop>:

Vorlaufstop, nur relevant fr GUD (optional)

SYNR:

SYNW:

SYNRW:

Vorlaufstop beim Lesen

Vorlaufstop beim Schreiben

Vorlaufstop beim Lesen/Schreiben

<Zugriffsrechte>:

Schutzstufe fr das Lesen / Schreiben von GUD ber NC-Programm 
oder BTSS (optional)

APRP <Schutzstufe>:

Lesen: NC-Programm

APWP <Schutzstufe>:

Schreiben: NC-Programm

APRB <Schutzstufe>:

Lesen: BTSS

APWB <Schutzstufe>:

Schreiben: BTSS

<Schutzstufe>:

Wertebereich: 0 ... 7

Siehe "Attribut: Zugriffsrechte (APR, APW, APRP, APWP, APRB, 
APWB) (Seite 403)"

<Datenklasse>:

Datenklassenzuordnung (nur SINUMERIK 828D!)

DCM:

DCI:

DCU:

Datenklasse M (= Manufacturer)

Datenklasse I (= Individual)

Datenklasse U (= User)

<Typ>:

Datentyp:

INT:

REAL:

BOOL:

CHAR:

Ganzzahliger Wert mit Vorzeichen

Real-Zahl (LONG REAL nach IEEE)

Wahrheitswert TRUE (1) / FALSE (0)

ASCII-Zeichen

STRING[<MaxLnge>]:

Zeichenkette definierter Lnge

AXIS:

FRAME:

Achs-/Spindelbezeichner

Geometrische Angaben fr eine statische 
Koordinatentransformation

<Phys_Einheit>:

Physikalische Einheit (optional) 

Siehe "Datentypen (Seite 414)"

PHU <Einheit>: physikalische Einheit

Siehe "Attribut: Physikalische Einheit (PHU) (Seite 401)"

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

389

Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

<Grenzwerte>:

unterer / oberer Grenzwert (optional) 

LLI <Grenz
wert>:

ULI <Grenz
wert>:

unterer Grenzwert (lower limit)

oberer Grenzwert (upper limit)

Siehe "Attribut: Grenzwerte (LLI, ULI) (Seite 399)"

<Name>: 

Name der Variablen

Hinweis

 Maximal 31 Zeichen

 Die beiden ersten Zeichen mssen ein Buchstabe und/oder ein Un

terstrich sein.

 Das "$"-Zeichen ist fr Systemvariablen reserviert und darf nicht ver

wendet werden.

Angabe der Feldgren fr 1- bis max. 3-dimensionale Feldvariablen 
(optional)

Zur Initialisierung von Feldvariablen siehe" Definition und Initialisierung 
von Feldvariablen (DEF, SET, REP) (Seite 408)"

[<Wert_1>,
 <Wert_2>,
 <Wert_3>]:

<Init_Wert>:

Initialisierungswert (optional)

siehe "Attribut: Initialisierungswert (Seite 396)"

Zur Initialisierung von Feldvariablen siehe "Definition und Initialisierung 
von Feldvariablen (DEF, SET, REP) (Seite 408)"

Beispiele

Beispiel 1: Definitionen von Anwendervariablen im Datenbaustein fr Maschinenhersteller

Programmcode 

%_N_MGUD_DEF

$PATH=/_N_DEF_DIR

Kommentar

; GUD-Baustein: Maschinenhersteller

DEF CHAN REAL PHU 24 LLI 0 ULI 10 STROM_1, STROM_2

; Beschreibung

; Definition zweier GUD: STROM_1, STROM_2

; Gltigkeitsbereich: Kanalweit

; Datentyp: REAL

; VL-Stop: nicht programmiert => Defaultwert = kein VL-Stop

; Phys. Einheit: 24 = [A]

; Grenzwerte: Low = 0.0, High = 10.0

; Zugriffsrechte: nicht programmiert => Defaultwert = 7 = Schlsselschalterstellung 0

; Initialisierungswert: nicht programmiert => Defaultwert = 0.0

DEF NCK REAL PHU 13 LLI 10 APWP 3 APRP 3 APWB 0 APRB 2 ZEIT_1=12, ZEIT_2=45

; Beschreibung

; Definition zweier GUD: ZEIT_1, ZEIT_2

; Gltigkeitsbereich: NC-weit

; Datentyp: REAL

; VL-Stop: nicht programmiert => Defaultwert = kein VL-Stop

390

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Programmcode 

; Phys. Einheit: 13 = [s] 

Kommentar

; Grenzwerte: Low = 10.0, High = nicht programmiert => obere Definitionsbereichsgrenze

; Zugriffsrechte: 

; NC-Programm: Schreiben/Lesen = 3 = Endanwender

; BTSS: Schreiben = 0 = Siemens, Lesen = 3 = Endanwender

; Initialisierungswert: ZEIT_1 = 12.0, ZEIT_2 = 45.0

DEF NCK APWP 3 APRP 3 APWB 0 APRB 3 STRING[5] GUD5_NAME = "COUNTER"

; Beschreibung

; Definition eines GUD: GUD5_NAME

; Gltigkeitsbereich: NC-weit

; Datentyp: STRING, max. 5 Zeichen

; VL-Stop: nicht programmiert => Defaultwert = kein VL-Stop

; Phys. Einheit: nicht programmiert => Defaultwert = 0 = keine phys. Einheit

; Grenzwerte: nicht programmiert => Definitionsbereichsgrenzen: Low = 0, High = 255

; Zugriffsrechte: 

; NC-Programm: Schreiben/Lesen = 3 = Endanwender

; BTSS: Schreiben = 0 = Siemens, Lesen = 3 = Endanwender

; Initialisierungswert: "COUNTER"

M30

Beispiel 2: Programm-globale und -lokale Anwendervariablen (PUD / LUD)

Programmcode

PROC MAIN

DEF INT VAR1

...

SUB2

...

M30

Programmcode

PROC SUB2

DEF INT VAR2

...

IF (VAR1==1)

 VAR1=VAR1+1

 VAR2=1

ENDIF

SUB3

...

M17

Kommentar

; Hauptprogramm

; PUD-Definition

; Unterprogrammaufruf

Kommentar

; Unterprogramm SUB2

; LUD-DEFINITION

; PUD lesen

; PUD lesen und schreiben

; LUD schreiben

; Unterprogrammaufruf

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

391

 
Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Programmcode

PROC SUB3

...

IF (VAR1==1)

 VAR1=VAR1+1

 VAR2=1

ENDIF

...

M17

Kommentar

; Unterprogramm SUB3

; PUD lesen

; PUD lesen und schreiben

; Fehler: LUD aus SUB2 nicht bekannt

Beispiel 3: Definition und Verwendung von Anwendervariablen vom Datentyp AXIS

Programmcode

DEF AXIS ABSZISSE

DEF AXIS SPINDLE

...

IF ISAXIS(1) == FALSE GOTOF WEITER

Kommentar

; 1. Geometrieachse

; Spindel

 ABSZISSE = $P_AXN1

WEITER:

...

SPINDLE=(S1)

OVRA[SPINDLE]=80

SPINDLE=(S3)

Randbedingungen

; 1. Spindel

; Spindeloverride = 80%

; 3. Spindel

Globale Anwendervariablen (GUD)

Im Rahmen der Definition von globalen Anwendervariablen (GUD) sind folgende 
Maschinendaten zu bercksichtigen:

Nr.

Bezeichner: $MN_

Bedeutung

11140

GUD_AREA_ SAVE_TAB

zustzliche Sicherung fr GUD-Bausteine

18118 1) MM_NUM_GUD_MODULES

Anzahl GUD-Dateien im aktiven Filesystem

18120 1) MM_NUM_GUD_NAMES_NCK

Anzahl der globalen GUD-Namen

18130 1) MM_NUM_GUD_NAMES_CHAN

Anzahl der kanalspez. GUD-Namen

18150 1) MM_GUD_VALUES_MEM

Speicherplatz fr globale GUD-Werte

18660 1) MM_NUM_SYNACT_GUD_REAL

Anzahl projektierbare GUD Datentyp REAL

18661 1) MM_NUM_SYNACT_GUD_INT

Anzahl projektierbare GUD Datentyp INT

18662 1) MM_NUM_SYNACT_GUD_BOOL

Anzahl projektierbare GUD Datentyp BOOL

18663 1) MM_NUM_SYNACT_GUD_AXIS

Anzahl projektierbare GUD Datentyp AXIS

18664 1) MM_NUM_SYNACT_GUD_CHAR

Anzahl projektierbare GUD Datentyp CHAR

18665 1) MM_NUM_SYNACT_GUD_STRING

Anzahl projektierbare GUD Datentyp STRING

1) MD bei SINUMERIK 828D nur lesbar!

392

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Kanalbergreifende Verwendung einer NC-globalen Anwendervariablen vom Datentyp AXIS

Eine NC-globale Anwendervariable vom Datentyp AXIS, die bei der Definition im 
Datenbaustein mit einem Achsbezeichner initialisiert wurde, kann nur dann in 
unterschiedlichen Kanlen der NC verwendet werden, wenn die Achse in diesen Kanlen die 
gleiche Kanalachsnummer hat.

Ist dies nicht der Fall, muss die Variable am NC-Programmanfang geladen oder, wie im 
folgenden Beispiel, die Funktion AXNAME(...) (siehe "Achsfunktionen (AXNAME, AX, SPI, 
AXTOSPI, ISAXIS, AXSTRING, MODAXVAL) (Seite 861)") verwendet werden.

Programmcode

Kommentar

DEF NCK STRING[5] ACHSE="X"

; Definition im Datenbaustein

...

N100 AX[AXNAME(ACHSE)]=111 G00

; Verwendung im NC-Programm

3.1.1.5

Redefinition von Systemdaten, Anwenderdaten und NC-Sprachbefehlen (REDEF)

Mit dem Befehl REDEF knnen die Attribute von Systemdaten, Anwenderdaten und NC-
Sprachbefehle gendert werden. Grundvoraussetzung fr eine Redefinition ist, dass sie 
zeitlich nach der entsprechenden Definition ausgefhrt wird.

Bei einer Redefinition knnen nicht mehrere Attribute gleichzeitig gendert werden. Fr jedes 
zu ndernde Attribut muss eine eigene REDEF-Anweisung programmiert werden. 

Werden mehrere konkurrierende Attributnderungen programmiert, wird immer die letzte 
nderung aktiv.

Attributwerte zurcksetzen

Die mit REDEF genderten Attribute fr Zugriffsrechte und Initialisierungszeitpunkt knnen 
durch erneute Programmierung von REDEF, gefolgt von dem Namen der Variablen oder des 
NC-Sprachbefehls, auf ihren Defaultwert zurckgesetzt werden:

 Zugriffsrechte: Schutzstufe 7

 Initialisierungszeitpunkt: keine Initialisierung bzw. Beibehalten des aktuellen Werts

Redefinierbare Attribute

Siehe "bersicht definierbarer und redefinierbarer Attribute (Seite 407)".

Lokale Anwendervariablen (PUD / LUD)

Fr lokale Anwendervariablen (PUD / LUD) drfen keine Redefinitionen vorgenommen werden.

Syntax

REDEF <Name> <VL_Stop>

REDEF <Name> <Phys_Einheit>

REDEF <Name> <Grenzwerte>

REDEF <Name> <Zugriffsrechte>

REDEF <Name> <Init_Zeitpunkt>

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

393

Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

REDEF <Name> <Init_Zeitpunkt> <Init_Wert> 

REDEF <Name> <Datenklasse>

REDEF <Name>

Bedeutung

REDEF:

<Name>:

<VL-Stop>:

Befehl zur Redefinition eines bestimmten Attributs bzw. zum 
Zurcksetzen der Attribute "Zugriffsrechte" und/oder "Initial
isierungszeitpunkt" von Systemvariablen, Anwendervariablen 
und NC-Sprachbefehlen

Name einer bereits definierten Variablen oder eines NC-
Sprachbefehls

Vorlaufstop

SYNR:

SYNW:

SYNRW:

Vorlaufstop beim Lesen

Vorlaufstop beim Schreiben

Vorlaufstop beim Lesen/Schreiben

<Phys_Einheit>:

Physikalische Einheit

<Grenzwerte>:

<Zugriffsrechte>:

PHU <Einheit>:

physikalische Einheit

Siehe "Attribut: Physikalische Einheit (PHU) (Seite 401)".

Hinweis
Nicht redefinierbar fr: 

 Systemvariablen

 Globale Anwenderdaten (GUD) der Datentypen: BOOL, 

AXIS, STRING, FRAME

unterer / oberer Grenzwert

LLI <Grenzwert>:

ULI <Grenzwert>:

unterer Grenzwert (lower li
mit)

oberer Grenzwert (upper li
mit)

Siehe "Attribut: Grenzwerte (LLI, ULI) (Seite 399)".

Hinweis
Nicht redefinierbar fr: 

 Systemvariablen

 Globale Anwenderdaten (GUD) der Datentypen: BOOL, 

AXIS, STRING, FRAME

Zugriffsrechte fr das Lesen / Schreiben ber Teileprogramm 
oder BTSS

APX <Schutzstufe>:

Ausfhren: NC-Sprachele
ment

APRP <Schutzstufe>:

Lesen: Teileprogramm

APWP <Schutzstufe>:

Schreiben: Teileprogramm

APRB <Schutzstufe>:

Lesen: BTSS

APWB <Schutzstufe>:

Schreiben: BTSS

<Schutzstufe>:

Wertebereich: 0 ... 7

Siehe "Attribut: Zugriffsrechte (APR, APW, APRP, APWP, 
APRB, APWB) (Seite 403)".

394

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

<Init_Zeitpunkt>:

Zeitpunkt zu dem die Variable reinitialisiert wird

Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

INIPO:

INIRE:

INICF:

PRLOC:

Power On

Hauptprogrammende, NC-Reset oder 
Power On

NEWCONF oder Hauptprogrammende, NC-
Reset oder Power On

Hauptprogrammende, NC-Reset nach loka
ler nderung oder Power On

Siehe "Attribut: Initialisierungswert (Seite 396)".

<Init_Wert>:

Initialisierungswert 

Bei Redefinition des Initialisierungswerts muss immer auch ein 
Initialisierungszeitpunkt (siehe <Init_Zeitpunkt>) angegeben 
werden.

Siehe "Attribut: Initialisierungswert (Seite 396)".

Zur Initialisierung von Feldvariablen siehe "Definition und Initi
alisierung von Feldvariablen (DEF, SET, REP) (Seite 408)".

Hinweis
Nicht redefinierbar fr Systemvariablen, auer Settingdaten.

<Datenklasse>:

Datenklassenzuordnung (nur SINUMERIK 828D!)

DCM:

DCI:

DCU:

Datenklasse M (= Manufacturer)

Datenklasse I (= Individual)

Datenklasse U (= User)

Beispiel

Redefinitionen der Systemvariable $TC_DPCx im Datenbaustein fr Maschinenhersteller

Programmcode

%_N_MGUD_DEF

N100 REDEF $TC_DPC1 APWB 2 APWP 3

N200 REDEF $TC_DPC2 PHU 21

N300 REDEF $TC_DPC3 LLI 0 ULI 200

; GUD-Baustein: Maschinenhersteller

N400 REDEF $TC_DPC4 INIPO (100, 101, 102, 103)

N800 REDEF $TC_DPC1

N900 REDEF $TC_DPC4

M30

zu 
N100:
zu 
N200:
zu 
N300:

Zugriffsrecht Schreiben: BTSS = Schutzstufe 2, Teileprogramm = Schutzstufe 3

Physikalische Einheit [ % ]

unterer Grenzwert = 0, oberer Grenzwert = 200

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

395

Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Die Feldvariable wird bei PowerOn mit den vier Werten initialisiert.

Zurcksetzen der Attributwerte "Zugriffsrechte" und/oder "Initialisierungszeitpunkt"

zu 
N400:
zu 
N800 / 
N900

Hinweis

Verwendung von ACCESS-Dateien 

Bei Verwendung von ACCESS-Dateien muss die Redefinition der Zugriffsrechte von 
_N_MGUD_DEF nach _N_MACCESS_DEF verlagert werden.

Randbedingungen

Granularitt

Eine Redefinition bezieht sich immer auf die gesamte, durch ihren Namen eindeutig 
gekennzeichnete Variable. Es ist nicht mglich z. B. bei Feldvariablen fr einzelne 
Feldelemente unterschiedliche Attributwerte zuzuweisen.

3.1.1.6

Attribut: Initialisierungswert

Definition (DEF) von Anwendervariablen

Bei der Definition kann fr folgende Anwendervariablen ein Initialisierungswert vorgegeben 
werden:

 globale Anwendervariablen (GUD)

 programmglobale Anwendervariablen (PUD)

 lokale Anwendervariablen (LUD)

396

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Redefinition (REDEF) von System- und Anwendervariablen

Bei der Redefinition kann fr folgende Variablen ein Initialisierungswert vorgegeben werden:

Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

 Systemdaten

 Settingdaten

 Anwenderdaten

 R-Parameter

 Synchronaktionsvariable ($AC_MARKER, $AC_PARAM, $AC_TIMER)

 Synchronaktions-GUD (SYG_xy[ ], mit x=R, I, B, A, C, S und y=S, M, U, 4, ..., 9)

 EPSParameter

 Werkzeugdaten-OEM

 Magazindaten-OEM

 globale Anwendervariablen (GUD)

Reinitialisierungszeitpunkt

Bei der Redefinition kann der Zeitpunkt angegeben werden, zu dem die Variable reinitialisiert, 
d. h. wieder auf den Initialisierungswert gesetzt werden soll:

 INIPO (Power On)

Die Variable wird bei Power On reinitialisiert.

 INIRE (Reset)

Die Variable wird bei NC-Reset, BAG-Reset, Teileprogrammende (M02 / M30) oder 
Power On reinitialisiert.

 INICF (NEWCONF)

Die Variable wird bei der Funktion "Maschinendaten wirksam setzen" ber HMI, 
Teileprogramm-Befehl NEWCONF oder NC-Reset, BAG-Reset, Teileprogrammende (M02 / 
M30) oder Power On reinitialisiert.

 PRLOC (programmlokale nderung)

Die Variable wird nur dann bei NC-Reset, BAG-Reset oder Teileprogrammende (M02 / 
M30) reinitialisiert, wenn sie im Rahmen des aktuellen Teileprogramms verndert worden 
ist.
Das Attribut PRLOC darf nur in Zusammenhang mit programmierbaren Settingdaten (siehe 
folgende Tabelle) verwendet werden.

Tabelle 3-1 Programmierbare Settingdaten

Nummer

Bezeichner

42000

42010

42400

42800

43210

43220

43230

43300

$SC_THREAD_START_ANGLE

$SC_THREAD_RAMP_DISP

$SA_PUNCH_DWELLTIME

$SA_SPIND_ASSIGN_TAB

$SA_SPIND_MIN_VELO_G25

$SA_SPIND_MAX_VELO_G26

$SA_SPIND_MAX_VELO_LIMS

$SA_ASSIGN_FEED_PER_REV_SOURCE

G-Befehl 1)

SF

DITS / DITE

PDELAYON

SETMS

G25

G26

LIMS

FPRAON

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

397

Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Nummer

Bezeichner

G-Befehl 1)

43420

43430

43510

43520

43700

43710

43720

43730

43740

43750

43760

43770

43780

43790

$SA_WORKAREA_LIMIT_PLUS

$SA_WORKAREA_LIMIT_MINUS

$SA_FIXED_STOP_TORQUE

$SA_FIXED_STOP_WINDOW

$SA_OSCILL_REVERSE_POS1

$SA_OSCILL_REVERSE_POS2

$SA_OSCILL_DWELL_TIME1

$SA_OSCILL_DWELL_TIME2

$SA_OSCILL_VELO

$SA_OSCILL_NUM_SPARK_CYCLES

$SA_OSCILL_END_POS

$SA_OSCILL_CTRL_MASK

$SA_OSCILL_IS_ACTIVE

$SA_OSCILL_START_POS

1) mit diesem G-Befehl wird das Settingdatum angesprochen

G26

G25

FXST

FXSW

OSP1

OSP2

OST1

OST2

FA

OSNSC

OSE

OSCTRL

OS

OSB

Randbedingungen

Initialisierungswert: globale Anwendervariablen (GUD)

 Fr globale Anwendervariable (GUD) mit dem Gltigkeitsbereich NC kann als 

Initialisierungszeitpunkt nur INIPO (Power On) vorgegeben werden.

 Fr globale Anwendervariablen (GUD) mit dem Gltigkeitsbereich CHAN kann als 

Initialisierungszeitpunkt neben INIPO (Power On) auch INIRE (Reset) oder INICF 
(NEWCONF) vorgegeben werden.

 Bei globalen Anwendervariablen (GUD) mit dem Gltigkeitsbereich CHAN und 

Initialisierungszeitpunkt INIRE (Reset) oder INICF (NEWCONF) werden bei NC-Reset, 
BAG-Reset und "Maschinendaten wirksam setzen" die Variablen nur in den Kanlen neu 
initialisiert, in denen die genannten Ereignisse ausgelst wurden.

Initialisierungswert: Datentyp FRAME

Fr Variablen vom Datentyp FRAME darf kein Initialisierungswert angegeben werden. 
Variablen vom Datentyp FRAME werden implizit immer mit dem Defaultframe initialisiert.

Initialisierungswert: Datentyp CHAR

Fr Variablen vom Datentyp CHAR kann statt des ASCII-Codes (0...255) auch das 
entsprechende ASCII-Zeichen in Anfhrungszeichen programmiert werden, z.B. "A"

Initialisierungswert: Datentyp STRING

Bei Variablen vom Datentyp STRING muss die Zeichenkette in Anfhrungszeichen gesetzt 
werden z.B.: ...= "MASCHINE_1"

Initialisierungswert: Datentyp AXIS

Fr Variablen vom Datentyp AXIS muss bei erweiterter Adressschreibweise der 
Achsbezeichner in Klammern gesetzt werden, z.B.: ...=(X3)

398

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Initialisierungswert: Systemvariable

Fr Systemvariable knnen durch Redefinition keine anwenderspezifischen 
Initialisierungswerte vorgegeben werden. Die Initialisierungswerte der Systemvariablen sind 
vom System fest vorgegeben. Durch Redefinition kann aber der Zeitpunkt (INIRE, INICF) zu 
dem die Systemvariable reinitialisiert wird gendert werden.

Impliziter Initialisierungswert: Datentyp AXIS

Fr Variablen vom Datentyp AXIS wird folgender implizite Initialisierungswert verwendet:

 Systemdaten: "erste Geometrieachse"

 Synchronaktions-GUD (Bezeichnung: SYG_A*), PUD, LUD:

Achsbezeichner aus Maschinendatum: MD20082 
$MC_AXCONF_CHANAX_DEFAULT_NAME

Impliziter Initialisierungswert: Werkzeug- und Magazindaten

Fr Werkzeug- und Magazindaten knnen Initialisierungswerte ber folgendes 
Maschinendatum vorgegeben werden: MD17520 $MN_TOOL_DEFAULT_DATA_MASK

Hinweis

Synchronisation

Die Synchronisation von Ereignissen die eine Reinitialisierung einer globalen Variable 
auslsen mit dem Lesen dieser Variable an anderer Stelle, liegt ausschlielich in der 
Verantwortung des Anwenders / Maschinenherstellers.

Siehe auch

Variablen (Seite 381)

3.1.1.7

Attribut: Grenzwerte (LLI, ULI)

Ein oberer und unterer Grenzwert des Definitionsbereichs kann nur fr folgende Datentypen 
vorgegeben werden:

 INT

 REAL

 CHAR

Definition (DEF) von Anwendervariablen: Grenzwerte und implizite Initialisierungswerte    

Wird bei der Definition einer Anwendervariablen von einem der oben genannten Datentypen 
kein expliziter Initialisierungswert definiert, wird die Variable auf den impliziten 
Initialisierungswert des Datentyps gesetzt:

 INT: 0

 REAL: 0.0

 CHAR: 0

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

399

Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Liegt der implizite Initialisierungswert auerhalb des durch die programmierten Grenzwerte 
festgelegten Definitionsbereichs, wird die Variable mit dem Grenzwert initialisiert, der dem 
impliziten Initialisierungswert am nchsten liegt:

 impliziter Initialisierungswert < unterer Grenzwert (LLI)  

Initialisierungswert = unterer Grenzwert

 impliziter Initialisierungswert > oberer Grenzwert (ULI)  

Initialisierungswert = oberer Grenzwert

Beispiele: 

Programmcode

DEF REAL GUD1

DEF REAL LLI 5.0 GUD2

DEF REAL ULI 5 GUD3

Kommentar

; unterer Grenzwert = Definitionsbereichsgrenze
; oberer Grenzwert = Definitionsbereichsgrenze
; kein Initialisierungswert programmiert
; => impliziter Initialisierungswert = 0.0

; unterer Grenzwert = 5.0
; oberer Grenzwert = Definitionsbereichsgrenze
; => Initialisierungswert = 5.0

; unterer Grenzwert = Definitionsbereichsgrenze
; oberer Grenzwert = -5.0
; => Initialisierungswert = -5.0

Redefinition (REDEF) von Anwendervariablen: Grenzwerte und aktuelle Istwerte

Werden bei der Redefinition der Grenzwerte einer Anwendervariablen diese so gendert, dass 
der aktuelle Istwert auerhalb des neuen Definitionsbereichs liegt, erfolgt ein Alarm und die 
Grenzwerte werden nicht bernommen.

Hinweis

Redefinition (REDEF) von Anwendervariablen

Bei der Redefinition der Grenzwerte einer Anwendervariablen ist auf das konsistente ndern 
der folgenden Werte zu achten:

 Grenzwerte

 Istwert

 Initialisierungswert beim Redefinieren und beim automatischen Reinitialisieren aufgrund 

von INIPO, INIRE oder INICF

Siehe auch

Variablen (Seite 381)

400

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

3.1.1.8

Attribut: Physikalische Einheit (PHU)

Eine physikalische Einheit kann nur fr Variablen von folgende Datentypen vorgegeben 
werden:

 INT

 REAL

Programmierbare physikalische Einheiten (PHU)   

Die Angabe der physikalische Einheit erfolgt als Festkommazahl: PHU <Einheit>

Folgende physikalische Einheiten knnen programmiert werden:

<Einheit>

Bedeutung

Physikalische Einheit

0

1

2

3

4

5

6

7

8

9

10

11

12

13

14

15

16

18

19

20

21

22

23

24

25

26

27

28

29

30

31

keine physikalische Einheit

-

Linear- oder WinkelPosition 1)2)

[ mm ], [ inch ], [ Grad ]

Linear-Position 2)

Winkel-Position 

[ mm ], [ inch ]

[ Grad ]

Linear- oder Winkel-Geschwindigkeit 1)2)

[ mm/min ], [ inch/min ], [ U/min ]

Linear-Geschwindigkeit 2)

Winkel-Geschwindigkeit 

[ mm/min ]

[ U/min ]

Linear- oder Winkel-Beschleunigung 1)2)

[ m/s2 ], [ inch/s2 ], [ U/s2 ]

Linear-Beschleunigung 2)

Winkel-Beschleunigung

Linear- oder Winkel-Ruck 1)2)

Linear-Ruck 2)

Winkel-Ruck

Zeit

Lageregler-Verstrkung

Umdrehungsvorschub 2)

Temperaturkompensation 1)2)

Kraft 

Masse 

Trgheitsmoment 3)

Prozent

Frequenz 

Spannung 

Strom 

Temperatur

Winkel 

KV 

Linear- oder Winkel-Position 3)

Schnittgeschwindigkeit 2)

Umfangsgeschwindigkeit 2)

Widerstand 

[ m/s2 ], [ inch/s2 ]

[ U/s2 ]

[ m/s3 ], [ inch/s3 ], [ U/s3 ]

[ m/s3 ], [ inch/s3 ]

[ U/s3 ]

[ s ]

[ 16.667/s ]

[ mm/U ], [ inch/U ]

[ mm ], [ inch ]

[ N ]

[ kg ]

[ kgm2 ]

[ % ]

[ Hz ]

[ V ]

[ A ]

[ C ]

[ Grad ]

[ 1000/min ]

[ mm ], [ inch ], [ Grad ]

[ m/min ], [ feet/min ]

[ m/s], [ feet/s ]

[ Ohm ]

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

401

Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

<Einheit>

Bedeutung

Physikalische Einheit

32

33

34

35

36

37

42

43

46

48

49

65

66

67

68

69

155

156

Induktivitt 

Drehmoment 3)

Drehmomentkonstante 3)

Stromreglerverstrkung 

[ mH ]

[ Nm ]

[ Nm/A ]

[ V/A ]

Drehzahlreglerverstrkung 3)

[ Nm/(rad*s) ]

Drehzahl 

Leistung 

Strom, klein 

Drehmoment, klein 3)

Promille

-

Durchfluss 

Druck 

Volumen 3)

[ U/min ]

[ kW ]

[ A ]

[ Nm ]

-

[ Hz/s ]

[ l/min ]

[ bar ]

[ cm3 ]

Streckenverstrkung 3)

Streckenverstrkung Kraftregler 

Gewindesteigung 3)

[ mm/(V*min) ]

[ N/V ]

[ mm/U ], [ inch/U]

Gewindesteigungsnderung 3)

[ mm/U / U ], [ inch/U / U]

1) Die physikalische Einheit ist abhngig vom Achstyp: Linear- oder Rundachse

2) Masystem-Umschaltung 

G70/G71(inch/metrisch)
Nach einer Umschaltung des Grundsystems (MD10240 $MN_SCALING_SYSTEM_IS_METRIC) mit 
G70/G71 erfolgt bei Schreib/Lesezugriffen auf lngenbehaftete System- und Anwendervariablen keine 
Umrechnung der Werte (Istwert, Defaultwert und Grenzwerte)

G700/G710(inch/metrisch)
Nach einer Umschaltung des Grundsystems (MD10240 $MN_SCALING_SYSTEM_IS_METRIC) mit 
G700/G710 erfolgt bei Schreib/Lesezugriffen auf lngenbehaftete System- und 
Anwendervariablen eine Umrechnung der Werte (Istwert, Defaultwert und Grenzwerte)

3) Die Variable wird nicht automatische in das aktuelle Masystem der NC (inch/metrisch) umgerech
net. Die Umrechnung liegt ausschlielich in der Verantwortung des Anwenders / Maschinenherstellers.

Hinweis

Ebenenberlauf durch Formatumrechnung

Das interne Ablageformat fr alle Anwendervariablen (GUD / PUD / LUD) mit lngenbehafteten 
physikalischen Einheiten ist metrisch. Eine exzessive Verwendung derartiger Variablen im 
Hauptlauf des NCK, z. B. in Synchronaktionen, kann bei einer Masystemumschaltung zu 
einem Rechenzeitberlauf der Interpolatorebene, Alarm 4240, fhren.

Hinweis

Kompatibilitt von Einheiten

Bei der Verwendung von Variablen (Zuweisung, Vergleich, Berechnung etc.) erfolgt keine 
Prfung auf Kompatibilitt der beteiligten Einheiten. Eine gegebenenfalls erforderliche 
Umrechnung liegt ausschlielich in der Verantwortung des Anwenders / Maschinenherstellers. 

402

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Siehe auch

Variablen (Seite 381)

3.1.1.9

Attribut: Zugriffsrechte (APR, APW, APRP, APWP, APRB, APWB)

Bezeichnung

Die Bezeichnung der Zugriffsattribute AP... setzt sich zusammen aus:

1. A: Access

2. P: Protection

3. R / W: Read / Write

4. P / B: Program / BTSS

Zugriffsrechte / Schutzstufen

Den Zugriffsrechten entsprechen folgende bei der Programmierung anzugebende 
Schutzstufen:

Zugriffsrecht

Kennwort System

Kennwort Maschinenhersteller

Kennwort Service

Kennwort Endanwender

Schlsselschalter Stellung 3

Schlsselschalter Stellung 2

Schlsselschalter Stellung 1

Schlsselschalter Stellung 0

Schutzstufe

0

1

2

3

4

5

6

7

Definition (DEF) von Anwenderdaten

Zugriffsrechte (APR... / APW...) knnen fr folgende Daten definiert werden:

 globale Anwenderdaten (GUD)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

403

Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Redefinition (REDEF) von System- und Anwenderdaten

Zugriffsrechte (APR... / APW...) knnen fr folgende Daten redefiniert werden:

 Systemdaten

 Maschinendaten

Hinweis

Redefinition der Leserechte von Maschinendaten

Die Schutzstufe fr das Lesen von Maschinendaten kann nur mit dem Schlsselwort 
APR gemeinsam fr Teileprogramm und BTSS gesetzt werden.

Die Schlsselwrter APRP und APRB werden bei der Redefinition der Leserechte nicht 
untersttzt und fhren zur Meldung von Alarm 12490 "Zugriffsrecht APRP/APRB 
<Schutzstufe> wurde nicht eingestellt".

 Settingdaten

 Systemvariable

 Prozessdaten

 Magazindaten

 Werkzeugdaten

 Anwenderdaten

 R-Parameter

 Synchronaktionsvariable ($AC_MARKER, $AC_PARAM, $AC_TIMER)

 Synchronaktions-GUD (SYG_xy[ ], mit x=R, I, B, A, C, S und y=S, M, U, 4, ..., 9)

 EPSParameter

 Werkzeugdaten-OEM

 Magazindaten-OEM

 globale Anwendervariablen (GUD)

Hinweis

Bei der Redefinition kann das Zugriffsrecht auf eine Variable zwischen der niedrigsten 
Schutzstufe 7 und der eigenen Schutzstufe, z. B. 1 (Maschinenhersteller), frei vergeben 
werden.

Redefinition (REDEF) von NC-Sprachbefehlen

Das Zugriffs- bzw. Ausfhrungsrecht (APX) kann fr folgende NC-Sprachbefehle redefiniert 
werden:

 G-Befehle / Wegbedingungen (Seite 170)

 Vordefinierte Funktionen (Seite 1210)

 Vordefinierte Unterprogrammaufrufe

404

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

 Anweisung DO bei Synchronaktionen

 Programmbezeichner von Zyklen

Der Zyklus muss in einem Zyklenverzeichnis abgelegt sein und eine PROC-Anweisung 
enthalten.

Zugriffsrechte bezglich NC-Programmen und Zyklen (APRP, APWP)

Die unterschiedlichen Zugriffsrechte haben fr den Zugriff aus einem NC-Programm bzw. 
Zyklus folgende Auswirkungen:

 APRP 0 / APWP 0

 Beim Abarbeiten des NC-Programms muss das System-Kennwort gesetzt sein

 Der Zyklus muss im Verzeichnis _N_CST_DIR (System) abgelegt sein

 Fr das Verzeichnis _N_CST_DIR muss im MD11160 $MN_ACCESS_EXEC_CST das 

Ausfhrungsrecht auf System eingestellt sein

 APRP 1 / APWP 1 bzw. APRP 2 / APWP 2

 Beim Abarbeiten des NC-Programms muss das Maschinenhersteller- bzw. Service-

Kennwort gesetzt sein

 Der Zyklus muss im Verzeichnis _N_CMA_DIR (Maschinenhersteller) oder 

_N_CST_DIR abgelegt sein

 Fr die Verzeichnisse _N_CMA_DIR bzw. _N_CST_DIR mssen in den 
Maschinendaten MD11161 $MN_ACCESS_EXEC_CMA bzw. MD11160 
$MN_ACCESS_EXEC_CST die Ausfhrungsrechte mindestens auf 
Maschinenhersteller eingestellt sein

 APRP 3 / APWP 3

 Beim Abarbeiten des NC-Programms muss das Endanwender-Kennwort gesetzt sein

 Der Zyklus muss im Verzeichnis _N_CUS_DIR (Anwender), _N_CMA_DIR oder 

_N_CST_DIR abgelegt sein

 Fr die Verzeichnisse _N_CUS_DIR, _N_CMA_DIR bzw. _N_CST_DIR mssen in den 

Maschinendaten MD11162 $MN_ACCESS_EXEC_CUS, MD11161 
$MN_ACCESS_EXEC_CMA bzw. MD11160 $MN_ACCESS_EXEC_CST die 
Ausfhrungsrechte mindestens auf Endanwender eingestellt sein

 APRP 4...7 / APWP 4...7

 Beim Abarbeiten des NC-Programms muss Schlsselschalterstellung 3 ... 0 eingestellt 

sein

 Der Zyklus muss im Verzeichnis _N_CUS_DIR, _N_CMA_DIR oder _N_CST_DIR 

abgelegt sein

 Fr die Verzeichnisse _N_CUS_DIR, _N_CMA_DIR bzw. _N_CST_DIR mssen in den 

Maschinendaten MD11162 $MN_ACCESS_EXEC_CUS, MD11161 
$MN_ACCESS_EXEC_CMA bzw. MD11160 $MN_ACCESS_EXEC_CST die 
Ausfhrungsrechte mindestens auf die entsprechende Schlsselschalterstellung 
eingestellt sein

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

405

Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Zugriffsrechte bezglich BTSS (APRB, APWB)

Die Zugriffsrechte (APRB, APWB) beschrnken den Zugriff auf System- und 
Anwendervariablen ber BTSS fr alle Systemkomponenten (HMI, PLC, externe Rechner, 
EPS-Dienste, etc.) gleichermaen.

Hinweis

HMI-lokale Zugriffsrechte

Bei nderungen von Zugriffsrechten von Systemdaten muss darauf geachtet werden, dass 
diese konsistent zu den ber HMI-Mechanismen festgelegten Zugriffsrechten erfolgt.

Zugriffsattribute APR / APW

Aus Kombatibilittsgrnden werden die Attribute APR und APW implizit auf die Attribute 
APRP / APRB und APWP / APWB abgebildet:

 APR x  APRP x APRB x

 APW y  APWP y APWB y

Zugriffsrechte ber ACCESS-Dateien

Bei der Verwendung von ACCESS-Dateien fr die Vergabe von Zugriffsrechten, drfen 
Redefinitionen von Zugriffsrechten fr Systemdaten, Anwenderdaten und NC-Sprachbefehlen 
ausschlielich in ACCESS-Dateien erfolgen. Eine Ausnahme bilden globale Anwenderdaten 
(GUD). Fr diese muss eine Redefinition der Zugriffsrechte weiterhin in den entsprechenden 
Definitionsdateien *_DEF erfolgen.

Fr einen durchgehenden Zugriffsschutz mssen die Maschinendaten fr die 
Ausfhrungsrechte und den Zugriffsschutz der entsprechenden Verzeichnisse konsistenten 
angepasst werden.

Daraus ergibt sich folgende prinzipielle Vorgehensweise: 

1. Erstellen der bentigten Definitionsdateien:

 _N_DEF_DIR/_N_SACCESS_DEF

 _N_DEF_DIR/_N_MACCESS_DEF

 _N_DEF_DIR/_N_UACCESS_DEF

2. Parametrieren des Schreibrechts fr die Definitionsdateien auf den fr die Redefinition 

erforderlichen Wert:

 MD11170 $MN_ACCESS_WRITE_SACCESS = <Schutzstufe>

 MD11171 $MN_ACCESS_WRITE_MACCESS = <Schutzstufe>

 MD11172 $MN_ACCESS_WRITE_UACCESS = <Schutzstufe>

406

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

3. Fr Zugriffe auf geschtzte Elemente aus Zyklen heraus mssen die Ausfhrungs- und 
Schreibrechte der Zyklenverzeichnisse _N_CST_DIR, _N_CMA_DIR und _N_CST_DIR 
angepasst werden:
Ausfhrungsrechte

 MD11160 $MN_ACCESS_EXEC_CST = <Schutzstufe>

 MD11161 $MN_ACCESS_EXEC_CMA = <Schutzstufe>

 MD11162 $MN_ACCESS_EXEC_CUS = <Schutzstufe>

Schreibrechte

 MD11165 $MN_ACCESS_WRITE_CST = <Schutzstufe>

 MD11166 $MN_ACCESS_WRITE_CMA = <Schutzstufe>

 MD11167 MN_ACCESS_WRITE_CUS = <Schutzstufe>

Das Ausfhrungsrecht muss mindestens auf die gleiche Schutzstufe wie die hchste 
Schutzstufe des verwendeten Elements gesetzt werden. 
Das Schreibrecht muss mindestens auf die gleiche Schutzstufe wie das Ausfhrungsrecht 
gesetzt werden.

4. Die Schreibrechte der HMI-lokalen Zyklenverzeichnisse mssen auf die gleiche 

Schutzstufe wie die der NC-lokalen Zyklenverzeichnisse gesetzt werden.

Unterprogrammaufrufe in ACCESS-Dateien

Fr die weitere Strukturierung des Zugriffsschutzes knnen in den ACCESS-Dateien auch 
Unterprogramme (Kennung SPF oder MPF) aufgerufen werden. Die Unterprogramme erben 
dabei die Ausfhrungsrechte der aufrufenden ACCESS-Datei.

Hinweis

In den ACCESS-Dateien knnen nur die Zugriffsrechte redefiniert werden. Alle anderen 
Attribute mssen weiterhin in den entsprechenden Definitionsdateien programmiert bzw. 
redefiniert werden.

Siehe auch

Variablen (Seite 381)

3.1.1.10

bersicht definierbarer und redefinierbarer Attribute

Die folgenden Tabellen zeigen bei welchen Datenarten welche Attribute definiert (DEF) und/
oder redefiniert (REDEF) werden knnen.

Systemdaten

Datenart

Maschinendaten

Settingdaten

Init.Wert

Grenzwerte

phys. Einheit

Zugriffsrechte

---

REDEF

---

---

---

---

REDEF

REDEF

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Datenklasse
(nur 828D)

REDEF

---

407

Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Datenart

Init.Wert

Grenzwerte

phys. Einheit

Zugriffsrechte

Datenklasse
(nur 828D)

FRAME-Daten

Prozessdaten

Spindelsteigungsfehlerkomp. (EEC)

Durchhangkompensation (CEC)

Quadrantenfehlerkompensation 
(QEC)

Magazindaten

Werkzeugdaten

Schutzbereiche

orientierbare Werkzeugtrger

kinematische Ketten

3D-Schutzbereiche

Arbeitsfeldbegrenzung

Anwenderdaten

Datenart

RParameter

Synchronaktionsvariable ($AC_...)

SynchronaktionsGUD (SYG_...)

EPSParameter

WerkzeugdatenOEM

MagazindatenOEM

---

---

---

---

---

---

---

---

---

---

---

---

---

---

---

---

---

---

---

---

---

---

---

---

---

---

---

---

---

---

---

---

---

---

---

---

REDEF

REDEF

REDEF

REDEF

REDEF

REDEF

REDEF

REDEF

REDEF

REDEF

REDEF

REDEF

---

---

---

---

---

---

---

---

---

---

---

---

Init.Wert

Grenzwerte

phys. Einheit

Zugriffsrechte

Datenklasse

REDEF

REDEF

REDEF

REDEF

REDEF

REDEF

REDEF

REDEF

REDEF

REDEF

REDEF

REDEF

DEF

DEF

REDEF

REDEF

REDEF

REDEF

REDEF

REDEF

DEF

DEF

REDEF

REDEF

REDEF

REDEF

REDEF

REDEF

---

---

---

---

---

---

DEF / REDEF DEF / REDEF

---

---

globale Anwendervariablen (GUD)

DEF / REDEF

lokale Anwendervariablen (PUD / 
LUD)

DEF

Siehe auch

Variablen (Seite 381)

3.1.1.11

Definition und Initialisierung von Feldvariablen (DEF, SET, REP)

Eine Anwendervariable kann als 1- bis maximal 3-dimensionales Feld (Array) definiert werden:

 1-dimensional: DEF <Datentyp> <Variablenname>[<n>]

 2-dimensional: DEF <Datentyp> <Variablenname>[<n>,<m>]

 3-dimensional: DEF <Datentyp> <Variablenname>[<n>,<m>,<o>]

Hinweis

Anwendervariable vom Datentyp STRING knnen maximal als 2-dimensionales Feld 
definiert werden.

408

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Datentypen

Anwendervariable knnen als Felder fr folgende Datentypen definiert werden: BOOL, CHAR, 
INT, REAL, STRING, AXIS, FRAME

Wertzuweisung an Feldelemente     

Wertzuweisungen an Feldelemente knnen zu folgenden Zeitpunkten vorgenommen werden:

 bei der Felddefinition (Initialisierungswerte)

 whrend des Programmablaufs

Wertzuweisung knnen dabei erfolgen ber:

 explizite Angabe eines Feldelements

 explizite Angabe eines Feldelements als Startelement und Angabe einer Werteliste (SET)

 explizite Angabe eines Feldelements als Startelement und Angabe eines Wertes und der 

Hufigkeit seiner Wiederholung (REP)

Hinweis

Anwendervariablen vom Datentyp FRAME knnen keine Initialisierungswerte zugewiesen 
werden.

Syntax (DEF)

DEF <Datentyp> <Variablenname>[<n>,<m>,<o>]
DEF  STRING[<Stringlnge>] <Variablenname>[<n>,<m>]

Syntax (DEF...=SET...)

Verwendung einer Werteliste:

 bei der Definition:

DEF <Datentyp> <Variablenname>[<n>,<m>,<o>] = 
SET(<Wert1>,<Wert2>,...)
gleichbedeutend mit:
DEF <Datentyp> <Variablenname>[<n>,<m>,<o>] = 
(<Wert1>,<Wert2>,...)

Hinweis

Bei der Initialisierung ber eine Werteliste ist die Angabe von SET optional.

 bei einer Wertzuweisung:

<Variablenname>[<n>,<m>,<o>] = SET(<WERT1>,<Wert2>,...)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

409

Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Syntax (DEF...=REP...)

Verwendung eines Werte mit Wiederholung

 bei der Definition:

DEF <Datentyp> <Variablenname>[<n>,<m>,<o>] = REP(<Wert>)
DEF <Datentyp> <Variablenname>[<n>,<m>,<o>] = 
REP(<Wert>,<Anzahl_Feldelemente>)

 bei einer Wertzuweisung:

<Variablenname>[<n>,<m>,<o>] = REP(<Wert>)
<Variablenname>[<n>,<m>,<o>] = REP(<Wert>,<Anzahl_Feldelemente>)

Bedeutung

DEF:

<Datentyp>:

<Stringlnge>:

<Variablenname>:

[<n>,<m>,<o>]:

<n>:

<m>:

<o>:

SET:

Befehl zur Definition von Variablen

Datentyp der Variablen

Wertebereich:

 bei Systemvariablen:

BOOL, CHAR, INT, REAL, STRING, AXIS

 bei GUD- oder LUD-Variablen:

BOOL, CHAR, INT, REAL, STRING, AXIS, FRAME

Maximale Anzahl der Zeichen beim Datentyp STRING

Variablenname

Feldgren bzw. Feldindizes

Feldgre bzw. Feldindex fr 1. Dimension

Typ:

INT (bei Systemvariablen auch AXIS)

Wertebereich:

Max. Feldgre: 65535
Feldindex: 0  n  65534

Feldgre bzw. Feldindex fr 2. Dimension

Typ:

INT (bei Systemvariablen auch AXIS)

Wertebereich:

Max. Feldgre: 65535
Feldindex: 0  m  65534

Feldgre bzw. Feldindex fr 3. Dimension

Typ:

INT (bei Systemvariablen auch AXIS)

Wertebereich:

Max. Feldgre: 65535
Feldindex: 0  o  65534

Wertzuweisung ber die angegebenen Werteliste

(<Wert1>,<Wert2>,...):

Werteliste

REP:

Wertzuweisung ber den angegebenen <Wert>

410

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

<Wert>:

<Anzahl_Feldelemente>:

Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Wert, mit dem die Feldelemente bei der Initialisierung 
mit REP beschrieben werden sollen.

Anzahl der Feldelemente, die mit dem 
angegebenen <Wert> beschrieben werden sollen. Fr die 
restlichen Feldelemente gilt abhngig vom Zeitpunkt:

 Initialisierung bei der Felddefinition:

 Die restlichen Feldelemente werden mit Null beschrie
ben

 Zuweisung whrend des Programmlaufs:

 Die aktuellen Werte der Feldelemente bleiben unver
ndert.

Ist der Parameter nicht programmiert, werden alle Feldele
mente mit <Wert> beschrieben.

Ist der Parameter gleich Null, gilt abhngig vom Zeitpunkt:

 Initialisierung bei der Felddefinition:

 Alle Elemente werden mit Null vorbelegt

 Zuweisung whrend des Programmlaufs:

 Die aktuellen Werte der Feldelemente bleiben unver
ndert.

Feldindex   

Die implizite Reihenfolge der Feldelemente z. B. bei einer Wertzuweisung ber SET oder REP 
erfolgt durch Iteration der Feldindizes von rechts nach links.

Beispiel: Initialisierung eines 3-dimensionalen Feldes mit 24 Feldelementen:

1. Feldelement
2. Feldelement
3. Feldelement
4. Feldelement

DEF INT FELD[2,3,4] = REP(1,24)
  FELD[0,0,0] = 1
  FELD[0,0,1] = 1
  FELD[0,0,2] = 1
  FELD[0,0,3] = 1
  ...
  FELD[0,1,0] = 1
  FELD[0,1,1] = 1
  ...
  FELD[0,2,3] = 1
  FELD[1,0,0] = 1
  FELD[1,0,1] = 1
  ...
  FELD[1,2,3] = 1

12. Feldelement
13. Feldelement
14. Feldelement

5. Feldelement
6. Feldelement

24. Feldelement

entsprechend:

FOR n=0 TO 1
  FOR m=0 TO 2

FOR o=0 TO 3

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

411

 
 
 
 
 
Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

  FELD[n,m,o] = 1
ENDFOR

  ENDFOR
ENDFOR

Beispiel: Initialisierung kompletter Variablenfelder

Aktuelle Belegung siehe Abbildung.

Programmcode

N10 DEF REAL FELD1[10,3]=SET(0,0,0,10,11,12,20,20,20,30,30,30,40,40,40,)

N20 FELD1[0,0]=REP(100)

N30 FELD1[5,0]=REP(-100)

N40 FELD1[0,0]=SET(0,1,2,-10,-11,-12,-20,-20,-20,-30, , , ,-40,-40,-50,-60,-70)

N50 FELD1[8,1]=SET(8.1,8.2,9.0,9.1,9.2)

Siehe auch

412

Definition und Initialisierung von Feldvariablen (DEF, SET, REP) (Seite 408)

Variablen (Seite 381)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:3)(cid:21)(cid:20)(cid:49)(cid:20)(cid:19)(cid:29)(cid:3)(cid:28)(cid:17)(cid:21)(cid:27)(cid:17)(cid:21)(cid:16)(cid:20)(cid:19)(cid:19)(cid:16)(cid:20)(cid:19)(cid:19)(cid:16)(cid:26)(cid:19)(cid:16)(cid:23)(cid:19)(cid:19)(cid:16)(cid:21)(cid:19)(cid:16)(cid:20)(cid:21)(cid:21)(cid:21)(cid:28)(cid:17)(cid:20)(cid:27)(cid:17)(cid:20)(cid:16)(cid:20)(cid:19)(cid:19)(cid:16)(cid:20)(cid:19)(cid:19)(cid:16)(cid:25)(cid:19)(cid:16)(cid:23)(cid:19)(cid:19)(cid:16)(cid:21)(cid:19)(cid:16)(cid:20)(cid:20)(cid:20)(cid:20)(cid:28)(cid:17)(cid:19)(cid:16)(cid:20)(cid:19)(cid:19)(cid:16)(cid:20)(cid:19)(cid:19)(cid:16)(cid:20)(cid:19)(cid:19)(cid:16)(cid:24)(cid:19)(cid:19)(cid:16)(cid:22)(cid:19)(cid:16)(cid:21)(cid:19)(cid:16)(cid:20)(cid:19)(cid:19)(cid:19)(cid:16)(cid:20)(cid:19)(cid:19)(cid:16)(cid:20)(cid:19)(cid:19)(cid:16)(cid:20)(cid:19)(cid:19)(cid:16)(cid:20)(cid:19)(cid:19)(cid:16)(cid:20)(cid:19)(cid:19)(cid:20)(cid:19)(cid:19)(cid:20)(cid:19)(cid:19)(cid:20)(cid:19)(cid:19)(cid:20)(cid:19)(cid:19)(cid:20)(cid:19)(cid:19)(cid:21)(cid:16)(cid:20)(cid:19)(cid:19)(cid:16)(cid:20)(cid:19)(cid:19)(cid:16)(cid:20)(cid:19)(cid:19)(cid:16)(cid:20)(cid:19)(cid:19)(cid:16)(cid:20)(cid:19)(cid:19)(cid:20)(cid:19)(cid:19)(cid:20)(cid:19)(cid:19)(cid:20)(cid:19)(cid:19)(cid:20)(cid:19)(cid:19)(cid:20)(cid:19)(cid:19)(cid:20)(cid:16)(cid:20)(cid:19)(cid:19)(cid:16)(cid:20)(cid:19)(cid:19)(cid:16)(cid:20)(cid:19)(cid:19)(cid:16)(cid:20)(cid:19)(cid:19)(cid:16)(cid:20)(cid:19)(cid:19)(cid:20)(cid:19)(cid:19)(cid:20)(cid:19)(cid:19)(cid:20)(cid:19)(cid:19)(cid:20)(cid:19)(cid:19)(cid:20)(cid:19)(cid:19)(cid:19)(cid:19)(cid:19)(cid:19)(cid:19)(cid:19)(cid:23)(cid:19)(cid:22)(cid:19)(cid:21)(cid:19)(cid:20)(cid:21)(cid:19)(cid:21)(cid:19)(cid:19)(cid:19)(cid:19)(cid:19)(cid:23)(cid:19)(cid:22)(cid:19)(cid:21)(cid:19)(cid:20)(cid:20)(cid:19)(cid:20)(cid:19)(cid:19)(cid:19)(cid:19)(cid:19)(cid:23)(cid:19)(cid:22)(cid:19)(cid:21)(cid:19)(cid:20)(cid:19)(cid:19)(cid:19)(cid:28)(cid:27)(cid:26)(cid:25)(cid:24)(cid:23)(cid:22)(cid:21)(cid:20)(cid:19)(cid:49)(cid:21)(cid:19)(cid:18)(cid:49)(cid:22)(cid:19)(cid:29)(cid:3)(cid:41)(cid:72)(cid:79)(cid:71)(cid:76)(cid:81)(cid:71)(cid:72)(cid:91)(cid:39)(cid:76)(cid:72)(cid:3)(cid:41)(cid:72)(cid:79)(cid:71)(cid:72)(cid:79)(cid:72)(cid:80)(cid:72)(cid:81)(cid:87)(cid:72)(cid:3)(cid:62)(cid:22)(cid:15)(cid:20)(cid:64)(cid:3)(cid:69)(cid:76)(cid:86)(cid:3)(cid:62)(cid:23)(cid:15)(cid:19)(cid:64)(cid:3)(cid:90)(cid:88)(cid:85)(cid:71)(cid:72)(cid:81)(cid:3)(cid:80)(cid:76)(cid:87)(cid:3)(cid:71)(cid:72)(cid:80)(cid:3)(cid:39)(cid:72)(cid:73)(cid:68)(cid:88)(cid:79)(cid:87)(cid:90)(cid:72)(cid:85)(cid:87)(cid:3)(cid:11)(cid:19)(cid:17)(cid:19)(cid:12)(cid:3)(cid:76)(cid:81)(cid:76)(cid:87)(cid:76)(cid:68)(cid:79)(cid:76)(cid:86)(cid:76)(cid:72)(cid:85)(cid:87)(cid:17)(cid:3)(cid:39)(cid:76)(cid:72)(cid:3)(cid:41)(cid:72)(cid:79)(cid:71)(cid:72)(cid:79)(cid:72)(cid:80)(cid:72)(cid:81)(cid:87)(cid:72)(cid:3)(cid:62)(cid:25)(cid:15)(cid:19)(cid:64)(cid:3)(cid:69)(cid:76)(cid:86)(cid:3)(cid:62)(cid:27)(cid:15)(cid:19)(cid:64)(cid:3)(cid:90)(cid:88)(cid:85)(cid:71)(cid:72)(cid:81)(cid:3)(cid:81)(cid:76)(cid:70)(cid:75)(cid:87)(cid:3)(cid:89)(cid:72)(cid:85)(cid:166)(cid:81)(cid:71)(cid:72)(cid:85)(cid:87)(cid:17)(cid:39)(cid:76)(cid:72)(cid:3)(cid:41)(cid:72)(cid:79)(cid:71)(cid:72)(cid:79)(cid:72)(cid:80)(cid:72)(cid:81)(cid:87)(cid:72)(cid:3)(cid:62)(cid:24)(cid:15)(cid:19)(cid:64)(cid:3)(cid:69)(cid:76)(cid:86)(cid:3)(cid:62)(cid:28)(cid:15)(cid:21)(cid:64)(cid:3)(cid:90)(cid:88)(cid:85)(cid:71)(cid:72)(cid:81)(cid:3)(cid:80)(cid:76)(cid:87)(cid:3)(cid:71)(cid:72)(cid:80)(cid:3)(cid:39)(cid:72)(cid:73)(cid:68)(cid:88)(cid:79)(cid:87)(cid:90)(cid:72)(cid:85)(cid:87)(cid:3)(cid:11)(cid:19)(cid:17)(cid:19)(cid:12)(cid:3)(cid:76)(cid:81)(cid:76)(cid:87)(cid:76)(cid:68)(cid:79)(cid:76)(cid:86)(cid:76)(cid:72)(cid:85)(cid:87)(cid:17)(cid:44)(cid:81)(cid:76)(cid:87)(cid:76)(cid:68)(cid:79)(cid:76)(cid:86)(cid:76)(cid:72)(cid:85)(cid:88)(cid:81)(cid:74)(cid:3)(cid:69)(cid:72)(cid:76)(cid:3)(cid:39)(cid:72)(cid:73)(cid:76)(cid:81)(cid:76)(cid:87)(cid:76)(cid:82)(cid:81)(cid:20)(cid:15)(cid:21)(cid:44)(cid:81)(cid:76)(cid:87)(cid:76)(cid:68)(cid:79)(cid:76)(cid:86)(cid:76)(cid:72)(cid:85)(cid:88)(cid:81)(cid:74)(cid:3)(cid:80)(cid:76)(cid:87)(cid:3)(cid:76)(cid:71)(cid:72)(cid:81)(cid:87)(cid:76)(cid:86)(cid:70)(cid:75)(cid:72)(cid:80)(cid:3)(cid:58)(cid:72)(cid:85)(cid:87)(cid:3)(cid:49)(cid:23)(cid:19)(cid:18)(cid:49)(cid:24)(cid:19)(cid:29)(cid:3)(cid:44)(cid:81)(cid:76)(cid:87)(cid:76)(cid:68)(cid:79)(cid:76)(cid:86)(cid:76)(cid:72)(cid:85)(cid:88)(cid:81)(cid:74)(cid:3)(cid:80)(cid:76)(cid:87)(cid:3)(cid:89)(cid:72)(cid:85)(cid:86)(cid:70)(cid:75)(cid:76)(cid:72)(cid:71)(cid:72)(cid:81)(cid:72)(cid:81)(cid:3)(cid:58)(cid:72)(cid:85)(cid:87)(cid:72)(cid:81)(cid:3) 
 
 
 
 
 
 
 
 
 
Weitere Informationen (SET)

Initialisierung bei der Definition

Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

 Es werden, beginnend beim 1. Feldelement, so viele Feldelemente mit den Werten aus der 

Werteliste initialisiert, wie Elemente in der Werteliste programmiert sind.

 Feldelemente ohne explizit angegebene Werte in der Werteliste (Lcken in der Werteliste) 

werden mit 0 belegt.

 Bei Variablen vom Datentyp AXIS sind Lcken in der Werteliste nicht zugelassen.

 Enthlt die Werteliste mehr Werte als Feldelemente definiert sind, wird ein Alarm angezeigt.

Wertzuweisung im Programmablauf 

Bei der Wertzuweisung im Programmablauf gelten die oben bei der Definition beschriebenen 
Regeln. Zustzlich gibt es folgende Mglichkeiten: 

 Als Elemente in der Werteliste sind auch Ausdrcke erlaubt.

 Die Wertzuweisung beginnt bei dem programmierten Feldindex. Hierdurch lassen sich 

gezielt Teilfelder mit Werten belegen.

Beispiel:

Programmcode

DEF INT FELD[5,5]

FELD[0,0]=SET(1,2,3,4,5)

FELD[0,0]=SET(1,2, , ,5)

FELD[2,3]=SET(VARIABLE,4*5.6)

Kommentar

; Felddefinition

; Wertzuweisung an die ersten 5 Feldelemente 
[0,0] - [0,4]

; Wertzuweisung mit Lcke an die ersten 5 Feld-
elemente [0,0] - [0,4], Feldelemente [0,2] und 
[0,3] = 0

; Wertzuweisung mit Variable und Ausdruck ab 
Feldindex [2,3]:
[2,3] = VARIABLE
[2,4] = 4 * 5.6 = 22.4

Weitere Informationen (REP)

Initialisierung bei der Definition

 Alle oder die optional angegebene Anzahl an Feldelementen werden mit dem angegebenen 

Wert (Konstante) initialisiert.

 Variablen vom Datentyp FRAME knnen nicht initialisiert werden.

Beispiel:

Programmcode

Kommentar

DEF REAL varName[10]=REP(3.5,4)

; Felddefinition und Feldelemente [0] bis [3] 
mit Wert 3,5 initialisieren

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

413

Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Wertzuweisung im Programmablauf 

Bei der Wertzuweisung im Programmablauf gelten die oben bei der Definition beschriebenen 
Regeln. Zustzlich gibt es folgende Mglichkeiten: 

 Als Elemente in der Werteliste sind auch Ausdrcke erlaubt.

 Die Wertzuweisung beginnt bei dem programmierten Feldindex. Hierdurch lassen sich 

gezielt Teilfelder mit Werten belegen.

Beispiele:

Programmcode

Kommentar

DEF REAL varName[10]

; Felddefinition

varName[5]=REP(4.5,3)

; Feldelemente [5] bis [7] = 4,5

R10=REP(2.4,3)

DEF FRAME FRM[10]

; R-Parameter R10 bis R12 = 2,4

; Felddefinition

FRM[5]=REP(CTRANS(X,5))

; Feldelemente [5] bis [9] = CTRANS(X,5)

Siehe auch

Definition und Initialisierung von Feldvariablen (DEF, SET, REP) (Seite 408)

3.1.1.12

Datentypen

Folgende Datentypen stehen in der NC zur Verfgung:

Datentyp

Bedeutung

Wertebereich

INT

REAL

BOOL

CHAR

ganzzahliger Wert mit Vorzeichen

-2147483648 ... +2147483647

Real-Zahl (LONG REAL nach IEEE)

(2,2*10-308  1,8*10+308)

Wahrheitswert TRUE (1) und FALSE (0)

1, 0

ASCII-Zeichen

ASCII-Code 0 ... 255

STRING

Zeichenkette definierter Lnge

maximal 200 Zeichen (keine Sonderzei
chen)

AXIS

FRAME

Achs-/Spindelbezeichner

Kanalachsbezeichner

Geometrische Angaben fr eine statische 
Koordinatentransformation (Verschieben, 
Drehen, Skalieren, Spiegeln)

---

Implizite Datentypwandlungen

Folgende Datentypwandlungen sind mglich und werden bei Zuweisungen und 
Parameterbergaben implizit vorgenommen:

von / nach 

REAL

REAL

INT

x

x

INT

o

x

BOOL

&

&

414

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

von / nach 

BOOL

REAL

x

x: ohne Einschrnkungen mglich

INT

x

BOOL

x

o: Datenverlust durch berschreitung des Wertebereichs mglich  Alarm;
 Rundung: Nachkommawert  0,5  aufrunden, Nachkommawert < 0,5  abrunden

&: Wert  0  TRUE, Wert == 0  FALSE

Siehe auch

Variablen (Seite 381)

3.1.1.13

Minimum, Maximum und Bereich von Variablen (MINVAL, MAXVAL, BOUND)

Mit den Befehlen MINVAL und MAXVAL knnen die Werte zweier Variablen miteinander 
verglichen werden. Als Ergebnis wird der kleinere Wert (bei MINVAL) bzw. grere Wert 
(bei MAXVAL) zurckgeliefert.

Mit dem Befehl BOUND kann geprft werden, ob der Wert einer Prfvariablen innerhalb eines 
definierten Wertebereichs liegt. 

Syntax

Bedeutung

<Kleinerer Wert>=MINVAL(<Variable1>,<Variable2>)
<Grerer Wert>=MAXVAL(<Variable1>,<Variable2>)
<Rckgabewert>=<BOUND>(<Minimum>,<Maximum>,<Prfvariable>)

MINVAL:

Ermittelt den kleineren Wert zweier Variablen 
(<Variable1>, <Variable2>)

<Kleinerer Wert>:

Ergebnisvariable fr den Befehl MINVAL

MAXVAL:

Wird auf den kleineren Variablenwert gesetzt.

Ermittelt den greren Wert zweier Variablen 
(<Variable1>, <Variable2>)

<Grerer Wert>:

Ergebnisvariable fr den Befehl MAXVAL

Wird auf den greren Variablenwert gesetzt.

BOUND:

Prft, ob eine Variable (<Prfvariable>) innerhalb eines definierten 
Wertebereichs liegt.

<Minimum>:

Variable, die den Minimalwert des Wertebereichs definiert

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

415

Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

<Maximum>:

Variable, die den Maximalwert des Wertebereichs definiert

<Rckgabewert>:

Ergebnisvariable fr den Befehl BOUND

Wenn der Wert der Prfvariablen innerhalb des definierten Wertebereichs 
liegt, dann wird die Ergebnisvariable auf den Wert der Prfvariablen ge
setzt.

Wenn der Wert der Prfvariablen grer als der Maximalwert ist, dann 
wird die Ergebnisvariable auf den Maximalwert des Definitionsbereichs 
gesetzt.

Wenn der Wert der Prfvariablen kleiner als der Minimalwert ist, dann wird 
die Ergebnisvariable auf den Minimalwert des Definitionsbereichs gesetzt.

Hinweis

MINVAL, MAXVAL und BOUND knnen auch in Synchronaktionen programmiert werden.

Hinweis

Verhalten bei Gleichheit

Bei Gleichheit wird bei MINVAL/MAXVAL dieser gleiche Wert geliefert. Bei BOUND wird der Wert 
der zu prfenden Variablen wieder zurckgegeben.

Beispiel

Programmcode

Kommentar

DEF REAL rVar1=10.5, rVar2=33.7, rVar3, rVar4, rVar5, rValMin, rValMax, rRetVar

rValMin=MINVAL(rVar1,rVar2)

rValMax=MAXVAL(rVar1,rVar2)

rVar3=19.7

rRetVar=BOUND(rVar1,rVar2,rVar3)

rVar3=1.8

rRetVar=BOUND(rVar1,rVar2,rVar3)

rVar3=45.2

rRetVar=BOUND(rVar1,rVar2,rVar3)

; rValMin wird auf den Wert 10.5 gesetzt.

; rValMax wird auf den Wert 33.7 gesetzt.

; rVar3 liegt innerhalb der Grenzen, rRetVar wird auf 
19.7 gesetzt.

; rVar3 liegt unterhalb der Minimumgrenze, rRetVar wird 
auf 10.5 gesetzt.

; rVar3 liegt oberhalb der Maximumgrenze, rRetVar wird 
auf 33.7 gesetzt.

3.1.1.14

Vorhandensein einer Variablen prfen (ISVAR)

Mit der vordefinierten Funktion ISVAR kann geprft werden, ob eine System-/
Anwendervariable (z. B. Maschinendatum, Settingdatum, Systemvariable, allgemeine 
Variable wie GUD) in der NC bekannt ist. 

416

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Variable

Die abzufragende Variable folgendermaen aufgebaut sein:

Dimensionslose Variable:
Eindimensionale Variable ohne Feldindex:
Eindimensionale Variable mit Feldindex n: 
Zweidimensionale Variable ohne Feldindex:
Zweidimensionale Variable mit Feldindizes n 
und m:

<Variable>
<Variable>[ ]
<Variable>[<n>]
<Variable>[ , ]
<Variable>[<n>,<m>]

<Ergebnis>=ISVAR(<Variable>[<n>,<m>])

Syntax

Bedeutung

<Ergebnis>:

Rckgabewert

Datentyp:

Wertebereich:

BOOL

1

0

Variable vorhanden 

Variable unbekannt

ISVAR:

Prft, ob die angegebene System-/Anwendervariable in der NC bekannt ist.

<Variable>:

Name der System- / Anwendervariablen

<n>:

<m>:

Datentyp:

STRING

Feldindex der ersten Dimension (optional)

Datentyp:

INT

Feldindex der zweiten Dimension (optional)

Datentyp:

INT

Entsprechend dem bergabeparameter werden folgende Prfungen durchgefhrt:

 Ist der Name bekannt

 Ist die Variable ein Feld

 Ist es ein ein- oder zweidimensionales Feld

 Ist der jeweilige Feldindex im erlaubten Bereich

Wenn alle Prfungen positiv sind, wird TRUE (1) zurckgeliefert. 

Ist eine Prfung negativ oder ist ein Syntaxfehler aufgetreten, wird FALSE (0) zurckgeliefert.

Beispiele

Programmcode

DEF INT VAR1

DEF BOOL IS_VAR=FALSE

Kommentar

N10 IS_VAR=ISVAR("VAR1")

; IS_VAR ist in diesem Fall TRUE.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

417

 
 
Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

 Programmcode

Kommentar

DEF REAL VARARRAY[10,10]

DEF BOOL IS_VAR=FALSE

N10 IS_VAR=ISVAR("VARARRAY[,]")

; IS_VAR ist in diesem Fall TRUE, ist ein 
zweidimensionales Feld.

N20 IS_VAR=ISVAR("VARARRAY")

; IS_VAR ist TRUE, Variable existiert.

N30 IS_VAR=ISVAR("VARARRAY[8,11]")

N40 IS_VAR=ISVAR("VARARRAY[8,8")

; IS_VAR ist FALSE, Feldindex ist nicht er-
laubt.

; IS_VAR ist FALSE, "]" fehlt (Syntaxfeh-
ler).

N50 IS_VAR=ISVAR("VARARRAY[,8]")

; IS_VAR ist TRUE, Feldindex ist erlaubt.

N60 IS_VAR=ISVAR("VARARRAY[8,]")

; IS_VAR ist TRUE, Feldindex ist erlaubt.

 Programmcode

DEF BOOL IS_VAR=FALSE

Kommentar

N100 IS_VAR=ISVAR("$MC_GCODE_RESET_VALUES[1]"

; bergabeparameter ist ein Maschi-
nendatum, IS_VAR ist TRUE.

 Programmcode

DEF BOOL IS_VAR=FALSE

Kommentar

N10 IS_VAR=ISVAR("$P_EP")

; IS_VAR ist in diesem Fall TRUE.

N20 IS_VAR=ISVAR("$P_EP[X]")

; IS_VAR ist in diesem Fall TRUE.

3.1.1.15

Attributwerte/Datentyp lesen (GETVARPHU, GETVARAP, GETVARLIM, GETVARDIM, 
GETVARDFT, GETVARTYP)

Mit den vordefinierten Funktionen GETVARPHU, GETVARAP, GETVARLIM, GETVARDIM 
und GETVARDFT knnen die Attributwerte von System-/Anwendervariablen gelesen werden, 
mit GETVARTYP der Datentyp einer System-/Anwendervariablen.

Physikalische Einheit lesen   

Syntax:
<Ergebnis>=GETVARPHU(<Name>)

Bedeutung:

<Ergebnis>:

Zahlenwert der physikalischen Einheit

Datentyp:

INT

Wertebereich:

siehe Tabelle in "Attribut: Physikalische Einheit (PHU) (Sei
te 401)"

Im Fehlerfall:

- 2

Der angegebene Variablenname ist keinem Systempa
rameter und keiner Anwendervariablen zugeordnet.

GETVARPHU:

Lesen der physikalischen Einheit einer System- /Anwendervariablen

418

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

<Name>:

Name der System- /Anwendervariablen

Datentyp:

STRING

Beispiel:

Der NC enthalte folgende GUD-Variable:

DEF CHAN REAL PHU 42 LLI 0 ULI 10000 electric

Programmcode

DEF INT result=0

result=GETVARPHU("electric")

IF (result < 0) GOTOF error

Kommentar

; Ermittle die physikalische Einheit der GUD-
Variablen.

Als Ergebnis wird der Wert 42 zurckgeliefert. Dies entspricht der physikalischen Einheit [kW].

Hinweis

Mit GETVARPHU lsst sich z. B. prfen, ob bei einer Variablenzuweisung a = b beide Variablen 
die erwarteten physikalischen Einheiten haben.

Zugriffsrecht lesen   

Syntax:
<Ergebnis>=GETVARAP(<Name>,<Zugriff>)

Bedeutung:

<Ergebnis>:

Schutzstufe fr den angegebenen <Zugriff>

Datentyp:

INT

Wertebereich:

0 ... 7 Siehe "Attribut: Zugriffsrechte (APR, APW, APRP, 

APWP, APRB, APWB) (Seite 403)".

Im Fehlerfall:

- 1

- 2

nicht schreibbar (nur bei den Zugriffsarten "WP" und "WB" 
relevant)

Der angegebene Variablenname ist keinem Systempara
meter und keiner Anwendervariablen zugeordnet.

- 3

falscher Wert fr den Parameter <Zugriff>

GETVARAP:

<Name>:

Lesen des Zugriffsrechts auf eine System- /Anwendervariable

Name der System- /Anwendervariablen

Datentyp:

STRING

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

419

 
 
Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

<Zugriff>:

Art des Zugriffs

Datentyp:

STRING

Wertebereich:

"RP" Lesen ber Teileprogramm

"WP" Schreiben ber Teileprogramm

"RB" Lesen ber BTSS

"WB" Schreiben ber BTSS

Beispiel:

Programmcode

DEF INT result=0

Kommentar

result=GETVARAP("$TC_MAP8","WB")

; Ermittle den Zugriffschutz fr den Systempa-
rameter "Magazinposition" bezglich Schreiben 
ber BTSS.

IF (result < 0) GOTOF error

Als Ergebnis wird der Wert 7 zurckgeliefert. Dies entspricht der Schlsselschalter-Stellung 0 
(= kein Zugriffsschutz).

Hinweis

Mit GETVARAP kann z. B. ein Prfprogramm realisiert werden, das die von der Applikation 
erwarteten Zugriffsrechte prft.

Grenzwerte lesen   

Syntax:
<Status>=GETVARLIM(<Name>,<Grenzwert>,<Ergebnis>)

Bedeutung:

<Status>:

Funktionsstatus 

Datentyp:

Wertebereich:

INT

1

-1 

-2

-3

o. k.

kein Grenzwert definiert
(bei Variablen vom Typ AXIS, STRING, FRAME)

Der angegebene Variablenname ist keinem Systempara
meter und keiner Anwendervariablen zugeordnet.

falscher Wert fr den Parameter <Grenzwert>

GETVARLIM:

Lesen des unteren/oberen Grenzwerts einer System- /Anwendervariablen

<Name>:

Name der System- /Anwendervariablen

Datentyp:

STRING

<Grenzwert>: Gibt an, welcher Grenzwert ausgelesen werden soll

Datentyp:

CHAR

Wertebereich:

"L"  unterer Grenzwert

"U"  oberer Grenzwert

420

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

<Ergebnis>:

Rckgabe des Grenzwerts

Datentyp:

VAR REAL

Beispiel:

Programmcode

DEF INT state=0

DEF REAL result=0

Kommentar

state=GETVARLIM("$MA_MAX_AX_VELO","L",result)

; Ermittle den unteren Grenzwert 
fr MD32000 $MA_MAX_AX_VELO.

IF (result < 0) GOTOF error

Dimensionswert lesen   

Syntax:
<Ergebnis>=GETVARDIM(<Name>,<Index>)

Bedeutung:

<Ergebnis>:

Gre der durch den Parameter <Index> angegebenen Dimension 

Datentyp:

INT

GETVARDIM:

Lesen der Gre der 1., 2. oder 3. Dimension des Feldes einer System- /Anwen
dervariablen

<Name>:

Name der System- /Anwendervariablen 

<Index>:

Datentyp:

Feldindex

Datentyp:

STRING

INT

Wertebereich:

1 ... 3

1

2

3

Index fr 1. Dimension des Feldes

Index fr 2. Dimension des Feldes

Index fr 3. Dimension des Feldes

Beispiel:

Programmcode

Kommentar

N5 DEF REAL myReal[5,4]

N10 R1=GETVARDIM("myReal",1)

; Ermittle die Gre der 1. Dimension des Feldes.

N15 R2=GETVARDIM("myReal",2)

; Ermittle die Gre der 2. Dimension des Feldes.

; Ergebnis: R1 = 5

; Ergebnis: R2 = 4

Standardwert lesen   

Syntax:
<Status>=GETVARDFT(<Name>,<Ergebnis>[,<Index_1>,<Index_2>, 
<Index_3>])

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

421

 
 
 
 
Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Bedeutung:

<Status>:

Funktionsstatus 

Datentyp:

Wertebereich:

INT

1

-1 

-2

-3

-4

-5

o. k.

kein Standardwert verfgbar
(z. B. weil die Datentyp-Definition der Ergebnisvariablen 
nicht zum Datentyp der System-/Anwendervariablen passt)

Der angegebene Variablenname ist keinem Systempara
meter und keiner Anwendervariablen zugeordnet.

falscher Wert fr Parameter <Index_1>, Dimension kleiner 
eins ( kein Feld, sondern skalare Variable)

falscher Wert fr Parameter <Index_2>

falscher Wert fr Parameter <Index_3>

GETVARDFT:

Lesen des Standardwerts einer System- /Anwendervariablen

<Name>:

Name der System-/Anwendervariablen

Datentyp:

STRING

<Ergebnis>:

Rckgabe des Standardwerts

Datentyp:

VAR REAL
(beim Lesen des Standardwerts von Variablen der Typen INT, 
REAL, BOOL, AXIS)

VAR STRING
(beim Lesen des Standardwerts von Variablen der Typen STRING 
und CHAR)

VAR FRAME
(beim Lesen des Standardwerts von Variablen des Typs FRAME)

<Index_1>:

Index fr 1. Dimension des Feldes (optional)

Datentyp:

INT

Nicht programmiert bedeutet = 0

<Index_2>:

Index fr 2. Dimension des Feldes (optional)

Datentyp:

INT

Nicht programmiert bedeutet = 0

<Index_3>:

Index fr 3. Dimension des Feldes (optional)

Datentyp:

INT

Nicht programmiert bedeutet = 0

Beispiel:

Programmcode

DEF INT state=0

DEF REAL resultR=0

DEF FRAME resultF=0

Kommentar

; Variable zur Aufnahme der Standardwerte 
der Typen INT, REAL, BOOL, AXIS.

; Variable zur Aufnahme der Standardwerte 
des Typs FRAME

IF (GETVARTYP("$MA_MAX_AX_VELO") <> 4) GOTOF error

state=GETVARDFT("$MA_MAX_AX_VELO",resultR, AXTOINT(X))

; Ermittle den Standardwert der "X"-Achse.

422

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Programmcode

IF (resultR < 0) GOTOF error

Kommentar

IF (GETVARTYP("$TC_TP8") <> 3) GOTOF error

state=GETVARDFT("$TC_TP8", resultR)

IF (GETVARTYP("$P_UBFR")  <> 7) GOTOF error

state=GETVARDFT("$P_UBFR", resultF )

Datentyp lesen   

Syntax:
<Ergebnis>=GETVARTYP(<Name>)

Bedeutung:

<Ergebnis>:

Datentyp der angegebenen System- /Anwendervariablen

Datentyp:

INT

Wertebereich:

1

2

3

4

5

6

7

= BOOL

= CHAR

= INT

= REAL

= STRING

= AXIS

= FRAME

Im Fehlerfall:

< 0 Der angegebene Variablenname ist keinem Systemparame

ter und keiner Anwendervariablen zugeordnet.

GETVARTYP:

Lesen des Datentyps einer System- /Anwendervariablen

<Name>:

Name der System- /Anwendervariablen

Datentyp:

STRING

Beispiel:

Programmcode

DEF INT result=0

DEF STRING name="R"

Kommentar

result=GETVARTYP(name)

; Ermittle den Typ des R-Parameters.

IF (result < 0) GOTOF error

Als Ergebnis wird der Wert 4 zurckgeliefert. Dies entspricht dem Datentyp REAL.

3.1.1.16

Mgliche Typenkonvertierungen

Der konstante Zahlenwert, die Variable oder der Ausdruck, der einer Variablen zugewiesen 
wird, muss mit dem Typ dieser Variablen vertrglich sein. Ist dies gegeben, so wird bei der 
Zuweisung der Typ automatisch umgewandelt. 

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

423

 
 
 
 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Mgliche Typkonvertierungen

nach

REAL

INT

BOOL

CHAR

STRING

AXIS

FRAME

von

REAL

INT

BOOL

CHAR

STRING

AXIS

FRAME 

Erklrungen

ja

ja

ja

ja







ja*

ja

ja

ja







ja1)

ja1)

ja

ja1)

ja4)





ja*

ja2)

ja

ja

ja3)









ja

ja

ja















ja















ja

*

1)

2)

3)

4)

Bei Typumwandlung von REAL nach INT wird bei gebrochenem Wert >= 0.5 aufgerun
det, ansonsten wird abgerundet (vgl. Funktion ROUND)
Wert <> 0 entspricht TRUE, Wert == 0 entspricht FALSE
Wenn der Wert im zulssigen Zahlenbereich liegt
Wenn nur 1 Zeichen
Stringlnge 0 = >FALSE, ansonsten TRUE

Hinweis

Ist beim Konvertieren ein Wert grer als der Zielbereich, erfolgt eine Fehlermeldung.

Treten in einem Ausdruck gemischte Typen auf, so wird eine Typanpassung automatisch 
durchgefhrt. Typumwandlungen sind auch in Synchronaktionen mglich, siehe Kapitel 
Bewegungssynchronaktionen, Implizite Typwandlung".

3.1.2

Indirekte Programmierung

3.1.2.1

Indirekte Programmierung von Adressen

Bei der indirekten Programmierung von Adressen (Seite 1155) wird die erweiterte Adresse 
(<Index>) durch eine Variable geeigneten Typs ersetzt. 

Hinweis

Die indirekte Programmierung von Adressen ist nicht mglich bei:

 N (Satznummer)

 L (Unterprogramm)

 Einstellbaren Adressen

(z. B. X[1] anstelle von X1 ist nicht zulssig)

424

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Syntax

Bedeutung

Beispiele

<ADRESSE>[<Index>]

<ADRESSE>[...]:

Feste Adresse mit Erweiterung (Index)

<Index>:

Variable z. B. fr Spindelnummer, Achse, ...

Beispiel 1: Indirekte Programmierung einer Spindelnummer

Direkte Programmierung:

Programmcode

Kommentar

S1=300

; Drehzahl 300 U/min fr die Spindel mit Nummer 1.

Indirekte Programmierung:

Programmcode

Kommentar

DEF INT SPINU=1

; Definition der Variablen vom Typ INT und Wertzuweisung.

S[SPINU]=300

; Drehzahl 300 U/min fr die Spindel, deren Nummer in der 
Variablen SPINU abgelegt ist (in diesem Beispiel die Spin-
del mit Nummer 1).

Beispiel 2: Indirekte Programmierung einer Achse

Direkte Programmierung:

Programmcode

FA[U]=300

Kommentar

; Vorschub 300 fr die Achse "U".

Indirekte Programmierung:

Programmcode

Kommentar

DEF AXIS AXVAR2=U

FA[AXVAR2]=300

; Definition einer Variablen vom Typ AXIS und Wertzuwei-
sung.

; Vorschub 300 fr die Achse, deren Adressname in der Vari-
ablen mit dem Namen AXVAR2 abgelegt ist.

Beispiel 3: Indirekte Programmierung einer Achse

Direkte Programmierung:

Programmcode

$AA_MM[X]

Indirekte Programmierung:

Kommentar

; Messtaster-Messwert (MKS) der Achse "X" lesen.

Programmcode

Kommentar

DEF AXIS AXVAR3=X

; Definition einer Variablen vom Typ AXIS und Wertzuwei-
sung.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

425

Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Programmcode

$AA_MM[AXVAR3]

Kommentar

; Messtaster-Messwert (MKS) lesen fr die Achse, deren Name 
in der Variablen AXVAR3 abgelegt ist.

Beispiel 4: Indirekte Programmierung einer Achse

Direkte Programmierung:

Programmcode

X1=100 X2=200

Indirekte Programmierung:

Programmcode

Kommentar

DEF AXIS AXVAR1 AXVAR2

; Definition zweier Variablen vom Typ AXIS.

AXVAR1=(X1) AXVAR2=(X2)

; Zuweisung der Achsnamen.

AX[AXVAR1]=100 AX[AXVAR2]=200

; Verfahren der Achsen, deren Adressnamen in 
den Variablen mit den Namen AXVAR1 und AXVAR2 
abgelegt sind.

Beispiel 5: Indirekte Programmierung einer Achse

Direkte Programmierung:

Programmcode

G2 X100 I20

Indirekte Programmierung:

Programmcode

Kommentar

DEF AXIS AXVAR1=X

; Definition einer Variablen vom Typ AXIS und Wertzuwei-
sung.

G2 X100 IP[AXVAR1]=20

; Indirekte Programmierung der Mittelpunktsangabe fr die 
Achse, deren Adressname in der Variablen mit dem Namen AX-
VAR1 abgelegt ist

Beispiel 6: Indirekte Programmierung von Feldelementen

Direkte Programmierung:

Programmcode

Kommentar

DEF INT FELD1[4,5]

; Definition von Feld 1.

Indirekte Programmierung:

Programmcode

Kommentar

DEFINE DIM1 AS 4

; Bei Felddimensionen mssen Feldgren als feste Werte an-
gegeben werden.

DEFINE DIM2 AS 5

DEF INT FELD[DIM1,DIM2]

FELD[DIM1-1,DIM2-1]=5

426

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Beispiel 7: Indirekter Unterprogrammaufruf

Programmcode

Kommentar

CALL "L" << R10

; Aufruf des Programms, dessen Nummer in R10 steht (String-
verkettung).

3.1.2.2

Indirekte Programmierung von G-Befehlen

Die indirekte Programmierung von G-Befehlen (Seite 1167) ermglicht eine effektive 
Zyklenprogrammierung. 

Syntax

Bedeutung

G[<Gruppe>]=<Nummer>

G[...]:

G-Befehl mit Erweiterung (Index)

<Gruppe>:

Index-Parameter: G-Gruppe

Typ:

INT

<Nummer>:

Variable fr die G-Befehl-Nummer

Typ:

INT oder REAL

Hinweis

Es knnen i. d. R. nur nicht-syntaxbestimmende G-Befehle indirekt programmiert werden.

Von den syntaxbestimmenden G-Befehlen sind nur die der G-Gruppe 1 mglich. 
Die syntaxbestimmenden G-Befehle der G-Gruppen 2, 3 und 4 sind nicht mglich.

Hinweis

In der indirekten G-Befehl-Programmierung sind keine Arithmetik-Funktionen erlaubt. Eine 
notwendige Berechnung der G-Befehls-Nummer muss in einer eigenen Teileprogrammzeile 
vor der indirekten G-Befehl-Programmierung erfolgen.

Beispiele

Beispiel 1: Einstellbare Nullpunktverschiebung (G-Gruppe 8)

Programmcode

N1010 DEF INT INT_VAR

N1020 INT_VAR=2

...

Kommentar

N1090 G[8]=INT_VAR G1 X0 Y0

; G54

N1100 INT_VAR=INT_VAR+1

; G-Befehl-Berechnung

N1110 G[8]=INT_VAR G1 X0 Y0

; G55

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

427

 
 
 
Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Beispiel 2: Ebenenanwahl (G-Gruppe 6)

Programmcode

N2010 R10=$P_GG[6]

...

N2090 G[6]=R10

Kommentar

; Aktiver G-Befehl der G-Gruppe 6 lesen

3.1.2.3

Indirekte Programmierung von Positionsattributen (GP)

Positionsattribute, wie z. B. die inkrementelle oder absolute Programmierung der Achsposition, 
knnen in Verbindung mit dem Schlsselwort GP indirekt als Variablen programmiert werden. 

Anwendung

Syntax

Bedeutung

Die indirekte Programmierung von Positionsattributen findet Verwendung 
in Ersetzungszyklen, da hier folgender Vorteil gegenber der Programmierung von 
Positionsattributen als Schlsselwort (z. B. IC, AC, ...) besteht:

Durch die indirekte Programmierung als Variablen wird keine CASE-Anweisung bentigt, die 
ber alle mglichen Positionsattribute verzweigt.

<POSITIONIERBEFEHL>[<Achse/Spindel>]=
GP(<Position>,<Positionsattribut)
<Achse/Spindel>=GP(<Position>,<Positionsattribut)

<POSITIONIERBEFEHL>[]:

Folgende Positionierbefehle knnen zusammen mit dem 
Schlsselwort GP programmiert werden:

POS, POSA,SPOS, SPOSA

Auerdem mglich:

 alle im Kanal vorhandenen Achs-/Spindelbezeichner:

<Achse/Spindel>

 variabler Achs-/Spindelbezeichner AX

<Achse/Spindel>:

Achse/Spindel, die positioniert werden soll

GP():

<Position>:

Schlsselwort zur Positionierung

Parameter 1

Achs-/Spindelposition als Konstante oder Variable 

<Positionsattribut>:

Parameter 2

Positionsattribut (z. B. Positionsanfahrmodus) als Variable 
(z. B. $P_SUB_SPOSMODE) oder als Schlsselwort (IC, 
AC, ...)

428

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Die von den Variablen gelieferten Werte haben folgende Bedeutung:

Wert

Bedeutung

Zulssig bei:

0

1

2

3

4

5

6

7

8

9

10

11

12

13

14

15

16

Beispiel

Keine nderung des Positionsattributs

AC

IC

DC

ACP

ACN

OC

PC

DAC

DIC

RAC

RIC

CAC

CIC

CDC

CACP

CACN

POS, POSA,SPOS, SPOSA,AX, Achsadresse

POS, POSA,SPOS, SPOSA,AX, Achsadresse

POS, POSA,SPOS, SPOSA,AX, Achsadresse

POS, POSA,SPOS, SPOSA,AX, Achsadresse

POS, POSA,SPOS, SPOSA,AX, Achsadresse

-

-

POS, POSA,AX, Achsadresse

POS, POSA,AX, Achsadresse

POS, POSA,AX, Achsadresse

POS, POSA,AX, Achsadresse

POS, POSA

POS, POSA

POS, POSA

POS, POSA

POS, POSA

Bei einer aktiven Synchronspindelkopplung zwischen der Leitspindel S1 und der Folgespindel 
S2 wird durch den SPOS-Befehl im Hauptprogramm der folgende Ersetzungszyklus zur 
Positionierung der Spindeln aufgerufen.

Die Positionierung erfolgt ber die Anweisung in N2230:
SPOS[1]=GP($P_SUB_SPOSIT,$P_SUB_SPOSMODE) 
SPOS[2]=GP($P_SUB_SPOSIT,$P_SUB_SPOSMODE)

Die anzufahrende Position wird aus der Systemvariablen $P_SUB_SPOSIT, der 
Positionsanfahrmodus wird aus der Systemvariablen $P_SUB_SPOSMODE gelesen.

Programmcode

Kommentar

N1000 PROC LANG_SUB DISPLOF SBLOF

...

N2100 IF($P_SUB_AXFCT==2)

N2110

N2185 DELAYFSTON

N2190 COUPOF(S2,S1)

N2200

N2210 IF($P_SUB_SPOS==TRUE) OR 
($P_SUB_SPOSA==TRUE)

; Ersetzung des SPOS / SPOSA / M19-Be-
fehls bei aktiver Synchronspindelkopplung

; Beginn Stopp-Delay-Bereich

; Synchronspindelkopplung deaktivieren

; Leit- und Folgespindel positionieren

N2220

; Spindel mit SPOS positionieren:

N2230    SPOS[1]=GP($P_SUB_SPOSIT,
$P_SUB_SPOSMODE)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

429

 
 
 
 
 
 
Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Programmcode

Kommentar

         SPOS[2]=GP($P_SUB_SPOSIT,
$P_SUB_SPOSMODE)

N2250 ELSE

N2260

N2270 M1=19 M2=19

N2280 ENDIF

N2285 DELAYFSTOF

N2290 COUPON(S2,S1)

N2410 ELSE

N2420

...

N3300 ENDIF

...

N9999 RET

; Spindel mit M19 positionieren:

; Leit- und Folgespindel positionieren

; Ende Stopp-Delay-Bereich

; Synchronspindelkopplung aktivieren

; Abfrage auf weitere Ersetzungen

Randbedingungen

In Synchronaktionen ist die indirekte Programmierung von Positionsattributen nicht mglich.

3.1.2.4

Indirekte Programmierung von Teileprogrammzeilen (EXECSTRING)

Mit dem Teileprogrammbefehl EXECSTRING ist es mglich, eine zuvor erzeugte String-
Variable als Teileprogrammzeile auszufhren.

Syntax

Bedeutung

EXECSTRING wird in einer eigenen Teileprogrammzeile programmiert:
EXECSTRING(<String-Variable>)

EXECSTRING:

Befehl zur Ausfhrung einer String-Variablen als Teileprogrammzeile

<String-Variable>:

Variable vom Typ STRING, die die eigentlich auszufhrende Teilepro
grammzeile enthlt

Hinweis

Mit EXECSTRING knnen mit Ausnahme von Kontrollstrukturen (Seite 466) alle 
Teileprogramm-Konstrukte abgesetzt werden, die im Programmteil eines Teileprogramms 
programmiert werden knnen. Ausgeschlossen sind damit PROC- und DEF-Anweisungen 
sowie generell die Verwendung in INI- und DEF-Dateien.

430

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Beispiel

Programmcode

Kommentar

N100 DEF STRING[100] MY_BLOCK

; Definition der String-Variablen zur Aufnahme der 
auszufhrenden Teileprogrammzeile.

; Teileprogrammzeile "M7 M4711" ausfhren.

N110 DEF STRING[10] MFCT1="M7"

...

N200 EXECSTRING(MFCT1 << 
"M4711")

...

N300 R10=1

N310 MY_BLOCK="M3"

N320 IF(R10)

N330 MY_BLOCK = MY_BLOCK << 
MFCT1

N340 ENDIF

N350 EXECSTRING(MY_BLOCK)

; Teileprogrammzeile "M3 M7" ausfhren.

3.1.3

Operationen

3.1.3.1

Rechenfunktionen

Operator / Rechenfunktion

Bedeutung

+

-

*
/ 1)
DIV 1)
MOD 1)

:

SIN()

COS()

TAN()

ASIN()

ACOS()
ATAN2(,) 1)

SQRT()

ABS()

POT()

TRUNC()

Addition

Subtraktion

Multiplikation

Division 1)

Ganzzahl-Division 1)

Modulo-Division (Liefert den Rest der Ganzzahl-Division) 1)

Kettungsoperator fr FRAME-Variablen

Sinus

Cosinus

Tangens

Arcussinus

Arcuscosinus

Arcustangens2 1)

Quadratwurzel

Betrag

2. Potenz (Quadrat)

ganzzahliger Teil

ROUND()

Runden auf ein Ganzzahliges

Genauigkeiten bei Vergleichsbefehlen einstellbar mit TRUNC (siehe 
"Genauigkeitskorrektur bei Vergleichsfehlern (TRUNC) (Seite 436)")

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

431

 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

LN()

EXP()

MINVAL()

natrlicher Logarithmus

Exponentialfunktion

kleinerer Wert zweier Variablen

(siehe "Minimum, Maximum und Bereich von Variablen (MINVAL, 
MAXVAL, BOUND) (Seite 415)" )

MAXVAL()

grerer Wert zweier Variablen

(siehe "Minimum, Maximum und Bereich von Variablen (MINVAL, 
MAXVAL, BOUND) (Seite 415)")

BOUND()

Variablenwert, der im definierten Wertebereich liegt

(siehe "Minimum, Maximum und Bereich von Variablen (MINVAL, 
MAXVAL, BOUND) (Seite 415)")

CTRANS()

CROT()

CSCALE()

CMIRROR()

1) Siehe Absatz "Beispiele"

Verschiebung

Drehung

Mastabsvernderung

Spiegeln

Programmierung

Bei den Rechenfunktionen gilt die bliche mathematische Schreibweise. Prioritten in der 
Abarbeitung werden durch runde Klammern gesetzt. Fr die trigonometrischen und deren 
inverse Funktionen gilt die Gradangabe (rechter Winkel = 90).

Beispiele

Division: /

(Typ REAL) = Typ INT oder Typ REAL) / (Typ INT oder Typ REAL);

Beispiel: 3 / 4 = 0.75

Ganzzahl-Division: DIV

(Typ INT) = (Typ INT oder REAL) / (Typ INT oder REAL);

Beispiel: 7 DIV 4.1 = 1

Modulo-Division (Liefert den Rest der Ganzzahl-Division): MOD

(Typ REAL) = (Typ INT oder REAL) MOD (Typ INT oder REAL);

Beispiel: 7 MOD 4.1 = 2.9

Arcustangens2: ATAN2

Die Rechenfunktion ATAN2 berechnet aus zwei aufeinander senkrecht stehenden Vektoren 
den Winkel des Summenvektors.

Das Ergebnis liegt im Bereich von vier Quadranten (-180 < 0 < +180).

Basis fr den Winkelbezug ist immer der 2. Wert in positiver Richtung.

432

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Programmierbeispiele

Programmcode

R1=R1+1

R1=R2+R3 R4=R5-R6 R7=R8*R9

R10=R11/R12 R13=SIN(25.3)

R14=R1*R2+R3

R14=(R1+R2)*R3

Kommentar

; Neues R1 = altes R1 + 1

; Punktrechnung geht vor Strichrechnung.

; Geklammerte Ausdrcke werden zuerst berechnet.

R15=SQRT(POT(R1)+POT(R2))

; Innere Klammern werden zuerst aufgelst: 

RESFRAME=FRAME1:FRAME2

; FRAME-Verknpfung mit Kettungsoperator 

FRAME3=CTRANS():CROT()

Wertzuweisung an eine FRAME-Komponente

R15 = Quadratwurzel( (R1^2 + R2^2) )

3.1.3.2

Vergleichs- und logische Operationen

Vergleichsoperationen knnen z. B. zur Formulierung einer Sprungbedingung benutzt werden. 
Vergleichbar sind dabei auch komplexe Ausdrcke.

Die Vergleichsoperationen sind fr Variable vom Typ CHAR, INT, REAL und BOOL 
anwendbar. Beim Typ CHAR wird der Codewert verglichen. 
Bei den Typen STRING, AXIS und FRAME sind mglich: == und <>, die fr Operationen vom 
Typ STRING auch in Synchronaktionen angewendet werden knnen.

Das Ergebnis von vergleichenden Operationen ist immer vom Typ BOOL.

Logische Operatoren dienen zur Verknpfung von Wahrheitswerten.

Die logischen Operationen sind nur auf Variable vom Typ BOOL anwendbar. ber interne 
Typenkonvertierung sind sie auch auf die Datentypen CHAR, INT, und REAL anwendbar.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

433

2. Vektor2. VektorWinkel=20.8455Winkel=159.444R3=ATAN2(30,-80)R3=ATAN2(30.5,80.1)30-8030.580.11. Vektor1. Vektor 
 
Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Bei den logischen (boolschen) Operationen gilt fr die Datentypen BOOL, CHAR,INT und REAL:

 0 entspricht: FALSE

 ungleich 0 entspricht: TRUE

Bitweise logische Operatoren

Mit den Variablen vom Typ CHAR und INT knnen auch bitweise logische Operationen 
vorgenommen werden. Gegebenenfalls erfolgt eine Typkonvertierung automatisch. 

Programmierung

Vergleichsoperator

Bedeutung

==

<>

>

<

>=

<=

Logischer Operator
AND

OR

NOT

XOR

Bitweise logischer Operator
B_AND

B_OR

B_NOT

B_XOR

Hinweis

gleich

ungleich

grer

kleiner

grer oder gleich

kleiner oder gleich

Bedeutung

UND

ODER

Negation

Exklusiv-ODER

Bedeutung

bitweises UND

bitweises ODER

bitweise Negation

bitweises Exklusiv-ODER

In arithmetischen Ausdrcken kann durch runde Klammern die Abarbeitungsreihenfolge aller 
Operatoren festgelegt und damit von den normalen Priorittsregeln abgewichen werden.

Hinweis

Zwischen BOOLSCHEN Operanden und Operatoren mssen Zwischenrume geschrieben 
werden.

Hinweis

Der Operator B_NOT bezieht sich auf nur einen Operanden. Dieser steht nach dem Operator.

434

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Beispiele

Beispiel 1: Vergleichsoperatoren
IF R10>=100 GOTOF ZIEL

oder
R11=R10>=100
IF R11 GOTOF ZIEL

Das Ergebnis des Vergleichs R10>=100 wird zunchst in R11 zwischengespeichert.

Beispiel 2: Logische Operatoren
IF (R10<50) AND ($AA_IM[X]>=17.5) GOTOF ZIEL

oder
IF NOT R10 GOTOB START

NOT bezieht sich nur auf einen Operanden.

Beispiel 3: Bitweise logische Operatoren
IF $MC_RESET_MODE_MASK B_AND 'B10000' GOTOF ACT_PLANE

3.1.3.3

Prioritt der Operationen

Jedem Operator ist eine Prioritt zugeordnet. Bei der Auswertung eines Ausdrucks werden 
stets die Operatoren hherer Prioritt zuerst angewandt. Bei gleichrangigen Operatoren erfolgt 
die Auswertung von links nach rechts.

In arithmetischen Ausdrcken kann durch runde Klammern die Abarbeitungsreihenfolge aller 
Operatoren festgelegt und damit von den normalen Priorittsregeln abgewichen werden.

Reihenfolge der Operatoren

Von der hchsten zur niedrigsten Prioritt

NOT, B_NOT

*, /, DIV, MOD

+, 

B_AND

B_XOR

B_OR

AND

XOR

OR

<<

Verneinung, bitweise Verneinung

Multiplikation, Division

Addition, Subtraktion

bitweises UND

bitweises exklusives ODER

bitweises ODER

UND

exklusives ODER

ODER

Verkettung von Strings, Ergebnistyp STRING

==, <>, >, <, >=, <=

Vergleichsoperatoren

1.

2.

3.

4.

5.

6.

7.

8.

9.

10.

11.

Hinweis

Der Kettungsoperator ":" fr Frames darf nicht mit anderen Operatoren in einem Ausdruck 
vorkommen. Eine Priorittseinstufung fr diesen Operator ist deshalb nicht erforderlich.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

435

Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Beispiel If-Anweisung

If (otto==10) and (anna==20) gotof end

3.1.3.4

Genauigkeitskorrektur bei Vergleichsfehlern (TRUNC)

Der TRUNC-Befehl schneidet den mit einem Genauigkeitsfaktor multiplizierten Operanden ab.

Einstellbare Genauigkeit bei Vergleichsbefehlen

Teileprogrammdaten vom Typ REAL werden intern im IEEE-Format mit 64 Bit dargestellt. 
Aufgrund dieser Darstellungsform knnen Dezimalzahlen ungenau abgebildet werden, die bei 
einem Vergleich mit ideal gerechneten Werten zu unerwarteten Ergebnissen fhren knnen.

Relative Gleichheit

Damit die durch die Darstellungsform hervorgerufenen Ungenauigkeiten den Programmflu 
nicht verflschen, wird bei den Vergleichsbefehlen nicht auf absolute Gleichheit, sondern auf 
eine relative Gleichheit geprft.

Syntax

Bedeutung

Genauigkeitskorrektur bei Vergleichsfehlern

TRUNC (R1*1000)

TRUNC:

Abschneiden der Nachkommastellen

Bercksichtigte relative Gleichheit von 10-12 bei

 Gleichheit: (==)

 Ungleichheit: (<>)

 Grer-Gleich: (>=)

 Kleiner-Gleich: (<=)

 Grer/Kleiner: (><) mit absoluter Gleichheit

 Grer: (>)

 Kleiner: (<)

436

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Kompatibilitt

Aus Kompatibilittsgrnden kann die Prfung auf relative Gleichheit bei (>) und (<) durch 
Setzen von Maschinendatum MD10280 $MN_ PROG_FUNCTION_MASK Bit0 = 1 deaktiviert 
werden.

Hinweis

Vergleiche mit Daten vom Typ REAL sind aus den genannten Grnden generell mit einer 
gewissen Ungenauigkeit behaftet. Bei nicht akzeptablen Abweichungen muss auf INTEGER-
Rechnung ausgewichen werden, indem die Operanden mit einem Genauigkeitsfaktor 
multipliziert und danach mit TRUNC abgeschnitten werden.

Synchronaktionen

Das beschriebene Verhalten der Vergleichsbefehle gilt auch bei Synchronaktionen.

Beispiele

Beispiel 1: Genauigkeitsbetrachtungen

Programmcode

Kommentar

N40 R1=61.01 R2=61.02 R3=0.01

; Zuweisung der Anfangswerte

N41 IF ABS(R2-R1) > R3 GOTOF FEHLER

N42 M30

N43 FEHLER: SETAL(66000)

R1=61.01 R2=61.02 R3=0.01

R11=TRUNC(R1*1000) R12=TRUNC(R2*1000)
R13=TRUNC(R3*1000)

; Sprung wrde bisher ausgefhrt 
werden

; Programmende

; Zuweisung der Anfangswerte

; Genauigkeitskorrektur

IF ABS(R12-R11) > R13 GOTOF FEHLER

; Sprung wird nicht mehr ausgefhrt

M30

FEHLER: SETAL(66000)

; Programmende

Beispiel 2: Quotient beider Operanden bilden und auswerten

Programmcode

Kommentar

R1=61.01 R2=61.02 R3=0.01

; Zuweisung der Anfangswerte

IF ABS((R2-R1)/R3)-1) > 10EX-5 GOTOF FEHLER

; Sprung wird nicht ausgefhrt

M30

FEHLER: SETAL(66000)

; Programmende

3.1.3.5

Aufrunden (ROUNDUP)

Mit der Funktion "ROUNDUP" knnen Eingabewerte vom Typ REAL (gebrochene Zahlen mit 
Dezimalpunkt) auf die nchste grere ganze Zahl aufgerundet werden. 

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

437

 
 
 
Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Syntax

Bedeutung

ROUNDUP(<Wert>)

Befehl zum Aufrunden eines Eingabewerts

Eingabewert vom Typ REAL

ROUNDUP:

<Wert>:

Hinweis

Eingabewerte vom Typ INTEGER (eine ganze Zahl) werden unverndert zurckgeliefert.

Beispiele

Beispiel 1: Verschiedene Eingabewerte und deren Rundungsergebnisse

Beispiel

ROUNDUP(3.1)
ROUNDUP(3.6)
ROUNDUP(-3.1)
ROUNDUP(-3.6)
ROUNDUP(3.0)
ROUNDUP(3)

Rundungsergebnis
4.0
4.0
-3.0
-3.0
3.0
3.0

Beispiel 2: ROUNDUP im NC-Programm

Programmcode

N10 X=ROUNDUP(3.5) Y=ROUNDUP(R2+2)

N15 R2=ROUNDUP($AA_IM[Y])

N20 WHEN X=100 DO Y=ROUNDUP($AA_IM[X])

...

3.1.4

Stringoperationen

Stringoperationen 

Neben den klassischen Operationen "Zuweisung" und "Vergleich" sind folgende 
Stringoperationen mglich: 

 Typenkonvertierung nach STRING (AXSTRING) (Seite 439) 

 Typenkonvertierung von STRING (NUMBER, ISNUMBER, AXNAME) (Seite 440) 

 Verkettung von Strings (<<) (Seite 441) 

438

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

 Wandlung in Klein-/Grobuchstaben (TOLOWER, TOUPPER) (Seite 442) 

 Lnge eines Strings bestimmen (STRLEN) (Seite 443) 

 Zeichen/String in String suchen (INDEX, RINDEX, MINDEX, MATCH) (Seite 443) 

 Auswahl eines Teilstrings (SUBSTR) (Seite 444) 

 Lesen und Schreiben von einzelnen Zeichen (Seite 445) 

 String formatieren (SPRINT) (Seite 447) 

Sonderbedeutung des 0-Zeichens 

Das 0-Zeichen wird intern als Enderkennung eines Strings interpretiert. Wird ein Zeichen durch 
das 0-Zeichen ersetzt, wird der String damit verkrzt.

Beispiel:

Programmcode

DEF STRING[20] STRG="Achse . steht"

Kommentar

STRG[6]="X"

MSG(STRG)

STRG[6]=0

MSG(STRG)

; Liefert die Meldung "Achse X steht".

; Liefert die Meldung "Achse".

3.1.4.1

Typenkonvertierung nach STRING (AXSTRING)

Durch die Funktion "Typkonvertierung nach STRING" lassen sich Variablen unterschiedlichen 
Typs als Bestandteil einer Meldung (MSG) nutzen.

Erfolgt bei Verwendung des Operators << implizit fr die Datentypen INT, REAL, CHAR und 
BOOL (siehe " Verkettung von Strings (<<) (Seite 441) ").

Ein INT-Wert wird in die normal lesbare Form umgewandelt. Bei REAL-Werten werden bis zu 
10 Nachkommastellen angegeben.

Mit dem Befehl AXSTRING knnen Variable vom Typ AXIS nach STRING gewandelt werden.

Syntax

Bedeutung

<STRING_ERG> = << <bel._Typ>
<STRING_ERG> = AXSTRING(<Achsbezeichner>)

<STRING_ERG>:

Variable fr das Ergebnis der Typkonvertierung

Typ:

STRING

<bel._Typ>:

AXSTRING:

Variablen-Typen INT, REAL, CHAR, STRING und BOOL

Der Befehl AXSTRING liefert den angegebenen Achsbezeichner als 
String.

<Achsbezeichner>:

Variable fr Achsbezeichner

Typ:

AXIS

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

439

 
 
 
Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Hinweis

FRAME-Variablen knnen nicht konvertiert werden.

3.1.4.2

Typenkonvertierung von STRING (NUMBER, ISNUMBER, AXNAME)

Mit dem Befehl NUMBER wird von STRING nach REAL konvertiert. Die Konvertierbarkeit kann 
mit dem Befehl ISNUMBER berprft werden.

Mit dem Befehl AXNAME wird ein String in den Datentyp AXIS konvertiert.

Syntax

Bedeutung

<REAL_ERG>=NUMBER("<String>")
<BOOL_ERG>=ISNUMBER("<String>")
<AXIS_ERG>=AXNAME("<String>")

NUMBER:

Der Befehl NUMBER liefert die durch den <String> dargestellte Zahl als REAL-
Wert zurck.

<String>:

Zu konvertierende Variable vom Typ STRING

<REAL_ERG>:

Variable fr das Ergebnis der Typkonvertierung mit NUMBER

Typ:

REAL

ISNUMBER:

Mit dem Befehl ISNUMBER kann berprft werden, ob der <String> in eine gl
tige Zahl gewandelt werden kann.

<BOOL_ERG>:

Variable fr das Ergebnis der Abfrage mit ISNUMBER

Typ:

Wert:

BOOL

TRUE

FALSE

ISNUMBER liefert den Wert TRUE, wenn 
der <String> eine nach den Regeln der Sprache 
gltige REAL-Zahl darstellt.

Liefert ISNUMBER den Wert FALSE, wird bei Aufruf 
von NUMBER mit dem gleichen <String> Alarm aus
gelst.

AXNAME:

Der Befehl AXNAME wandelt den angegebenen <String> in einen Achsbezeich
ner.

Hinweis:
Kann der <String> keinem projektierten Achsbezeichner zugeordnet werden, 
wird ein Alarm ausgelst.

<AXIS_ERG>:

Variable fr das Ergebnis der Typkonvertierung mit AXNAME

Typ:

AXIS

Beispiel

440

Programmcode

DEF BOOL BOOL_ERG

Kommentar

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Programmcode

DEF REAL REAL_ERG

DEF AXIS AXIS_ERG

Kommentar

BOOL_ERG=ISNUMBER("1234.9876Ex-7")

; BOOL_ERG == TRUE

BOOL_ERG=ISNUMBER("1234XYZ")

; BOOL_ERG == FALSE

REAL_ERG=NUMBER("1234.9876Ex-7")

; REAL_ERG == 1234.9876Ex-7

AXIS_ERG=AXNAME("X")

; AXIS_ERG == X

3.1.4.3

Verkettung von Strings (<<)

Die Funktion "Verkettung von Strings" schafft die Mglichkeit, einen String aus einzelnen 
Bestandteilen zusammensetzen zu knnen. 

Realisiert wird die Verkettung ber den Operator "<<". Dieser Operator hat fr alle 
Kombinationen der Basistypen CHAR, BOOL, INT, REAL und STRING als Zieltyp STRING. 
Eine eventuell notwendige Konvertierung wird nach den bestehenden Regeln vorgenommen. 

Syntax

Bedeutung

<bel._Typ> << <bel._Typ>

<bel._Typ>:

Variable vom Typ CHAR, BOOL, INT, REAL oder STRING

<< :

Operator fr die Verkettung von Variablen (<bel._Typ>) zu einer zusammengesetz
ten Zeichenkette (Typ STRING). 

Dieser Operator ist auch alleinig als sog. "unre" Variante verfgbar. So ist es mg
lich, eine explizite Typwandlung nach STRING auszufhren (nicht fr FRAME und 
AXIS):

<< <bel._Typ>

Beispielsweise lsst sich so eine Meldung oder ein Kommando aus Textlisten 
zusammensetzen und Parameter (etwa ein Bausteinname) einfgen:
MSG(STRG_TAB[LOAD_IDX]<<BAUSTEIN_NAME)

Hinweis

Die Zwischenergebnisse bei der Stringverkettung drfen die maximale Stringlnge nicht 
berschreiten.

Hinweis

Die Typen FRAME und AXIS knnen nicht zusammen mit dem Operator "<<" verwendet 
werden.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

441

 
 
Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Beispiele

Beispiel 1: Verkettung von Strings

Programmcode

DEF INT IDX=2

DEF REAL VALUE=9.654

DEF STRING[20] STRG="INDEX:2"

IF STRG=="Index:"<<IDX GOTOF NO_MSG

MSG("Index:"<<IDX<<"/Wert:"<<VALUE)

NO_MSG:

Beispiel 2: Explizite Typkonvertierung mit <<

Programmcode

Kommentar

Kommentar

; Anzeige:
"Index:2/Wert:9.654"

DEF REAL VALUE=3.5

<<VALUE

; Die angegebene Variable vom Typ REAL wird in den Typ 
STRING konvertiert.

3.1.4.4

Wandlung in Klein-/Grobuchstaben (TOLOWER, TOUPPER)

Die Funktion "Wandlung in Klein-/Grobuchstaben" erlaubt es, alle Buchstaben einer 
Zeichenkette in eine einheitliche Darstellung zu wandeln. 

Syntax

Bedeutung

Beispiel

442

<STRING_ERG>=TOUPPER("<String>")
<STRING_ERG>=TOLOWER("<String>")

TOUPPER:

TOLOWER:

Mit dem Befehl TOUPPER werden alle Buchstaben einer Zeichenkette 
in Grobuchstaben umgewandelt.

Mit dem Befehl TOLOWER werden alle Buchstaben einer Zeichenkette 
in Kleinbuchstaben umgewandelt.

<String>:

Zeichenkette, die umgewandelt werden soll

Typ:

STRING

<STRING_ERG>:

Variable fr das Ergebnis der Umwandlung

Typ:

STRING

Da es auch mglich ist, Benutzereingaben an der Bedienoberflche anzustoen, kann eine 
einheitliche Darstellung mit Klein- oder Grobuchstaben erreicht werden:

Programmcode

DEF STRING [29] STRG

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Programmcode

...

IF "LEARN.CNC"==TOUPPER(STRG) GOTOF LOAD_LEARN

3.1.4.5

Lnge eines Strings bestimmen (STRLEN)

Mit dem Befehl STRLEN ist es mglich, die Lnge einer Zeichenkette zu bestimmen. 

Syntax

Bedeutung

Beispiel

<INT_ERG>=STRLEN("<STRING>")

STRLEN:

Mit dem Befehl STRLEN wird die Lnge der angegebenen Zeichenkette bestimmt.

Es wird die Anzahl der Zeichen zurckgegeben, die - vom Anfang der Zeichenkette 
an gezhlt - keine 0-Zeichen sind.

<String>:

Zeichenkette, deren Lnge bestimmt werden soll

Typ:

STRING

<INT_ERG>:

Variable fr das Ergebnis der Bestimmung

Typ:

INT

Die Funktion im Zusammenhang mit dem Einzelzeichenzugriff ermglicht es, das Ende einer 
Zeichenkette zu bestimmen:

Programmcode

IF (STRLEN(BAUSTEIN_NAME)>10) GOTOF FEHLER

3.1.4.6

Zeichen/String in String suchen (INDEX, RINDEX, MINDEX, MATCH)

Diese Funktionalitt erlaubt es, einzelne Zeichen bzw. einen String in einem weiteren String zu 
suchen. Die Funktionsergebnisse geben an, an welcher Position des Strings das Zeichen/der 
String im zu untersuchenden String gefunden wurde. 

Syntax

INT_ERG=INDEX(STRING,CHAR) ; Ergebnistyp: INT

INT_ERG=RINDEX(STRING,CHAR) ; Ergebnistyp: INT

INT_ERG=MINDEX(STRING,STRING) ; Ergebnistyp: INT

INT_ERG=MATCH(STRING,STRING) ; Ergebnistyp: INT

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

443

Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Semantik

Bedeutung

Beispiel

Suchfunktionen: Sie liefern die Position im String (erster Parameter) zurck, wo die Suche 
erfolgreich war. Kann das Zeichen/der String nicht gefunden werden, wird der Wert -1 
zurckgegeben. Das erste Zeichen hat dabei die Position 0.

INDEX:

RINDEX:

MINDEX:

sucht das als zweiten Parameter angegebene Zeichen (von vorne) im ersten Parame
ter.

sucht das als zweiten Parameter angegebene Zeichen (von hinten) im ersten Parame
ter.

entspricht der Funktion INDEX, auer, dass eine Liste von Zeichen (als String) ber
geben wird, von denen der Index des ersten gefundenen Zeichens zurckgegeben wird.

MATCH:

sucht einen String in einem String.

So lassen sich Strings nach bestimmten Kriterien zerlegen, etwa an Positionen mit 
Leerzeichen oder Pfadtrennzeichen ("/").

Zerlegen einer Eingabe in Pfad- und Bausteinnamen

Programmcode

Kommentar

DEF INT PFADIDX, PROGIDX

DEF STRING[26] EINGABE

DEF INT LISTIDX

EINGABE = "/_N_MPF_DIR/_N_EXECU-
TE_MPF"

LISTIDX = MINDEX (EINGABE, 
"M,N,O,P") + 1

; Als Wert in LISTIDX wird 3 zurckgeliefert; 
da "N" das erste Zeichen im Parameter EINGABE, 
aus der Auswahlliste von vorne, ist.

PFADIDX = INDEX (EINGABE, "/") +1

; damit gilt: PFADIDX = 1

PROGIDX = RINDEX (EINGABE, "/") +1

; damit gilt: PROGIDX = 12

VARIABLE = SUBSTR (EINGABE, 
PFADIDX, PROGIDX-PFADIDX-1)

; mit Hilfe der im nchsten Abschnitt eingefhr-
ten Funktion SUBSTR lt sich 
die Variable EINGABE in die Komponen-
ten ;"Pfad";und "Baustein" zerlegen:

; liefert dann "_N_MPF_DIR"

VARIABLE = SUBSTR (EINGABE, PROGIDX) ; liefert dann "_N_EXECUTE_MPF"

3.1.4.7

Auswahl eines Teilstrings (SUBSTR)

Mit der Funktion SUBSTRING knnen beliebige Teile innerhalb eines Strings gelesen werden. 

Syntax

444

<STRING_ERG>=SUBSTR(<String>,<Index>,<Lnge>)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
<STRING_ERG>=SUBSTR(<String>,<Index>)

Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

SUBSTR:

Die Funktion liefert aus <String> einen Teilstring, ausgehend von <Index> mit der 
angegebenen <Lnge>.

Ist der Parameter <Lnge> nicht angegeben, liefert die Funktion einen Teilstring 
ausgehend von <Index> bis zum Stringende.

<Index>:

Anfangsposition des Teilstrings innerhalb des Strings. Liegt die Anfangsposition hin
ter dem Stringende, wird ein Leerstring ( "") zurckgegeben. Erstes Zeichen des 
Strings: Index = 0

Wertebereich: 0 ... (Stringlnge - 1)

<Lnge>:

Lnge des Teilstrings. Wird eine zu groe Lnge angegeben, wird nur der Teilstring 
bis Stringende zurckgegeben.

Wertebereich: 1 ... (Stringlnge - 1)

Bedeutung

Beispiel

Programmcode

DEF STRING[29] ERG

;                       1

;             0123456789012345678

Kommentar

ERG = SUBSTR("QUITTUNG: 10 bis 99", 10, 2)

; ERG == "10"

ERG = SUBSTR("QUITTUNG: 10 bis 99", 10)

; ERG == "10 bis 99"

3.1.4.8

Lesen und Schreiben von einzelnen Zeichen

Innerhalb eines Strings knnen einzelne Zeichen gelesen und geschrieben werden.

Dabei sind folgende Randbedingungen zu beachten:

 nur bei anwenderdefinierten Variablen mglich, nicht bei Systemvariablen

 einzelne Zeichen eines String werden bei Unterprogrammaufrufen nur "call by value" 

bergeben

Syntax

<Zeichen>=<String>[<Index>]
<Zeichen>=<String_Array>[<Array_Index>,<Index>]
<String>[<Index>]=<Zeichen>
<String_Array>[<Array_Index>,<Index>]=<Zeichen>

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

445

 
 
 
Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Bedeutung

<String>:

Beliebiger String

<Zeichen>:

Variable vom Typ CHAR

<Index>:

Position des Zeichens innerhalb des Strings. 
Erstes Zeichen des Strings: Index = 0

Wertebereich: 0 ... (Stringlnge - 1)

Beispiele

Beispiel 1: Variable Meldung

Programmcode

Kommentar

;                         0123456789

DEF STRING[50] MELDUNG = "Achse n hat Position erreicht"

MELDUNG[6] = "X"

MSG(MELDUNG)

; "Achse X hat Position erreicht"

Beispiel 2: Auswerten einer Systemvariablen

Programmcode

Kommentar

DEF STRING[50] STRG

; Zwischenspeicher fr Systemvariable

...

STRG = $P_MMCA

; Systemvariable laden

IF STRG[0] == "E" GOTO ...

; Auswerten der Systemvariable

Beispiel 3: Parameterbergabe "call by value" und "call by reference"

Programmcode

Kommentar

;                      0123456

DEF STRING[50] STRG = "Achse X"

DEF CHAR CHR

...

EXTERN UP_VAL(ACHSE)

EXTERN UP_REF(VAR ACHSE)

...

UP_VAL(STRG[6])

...

CHR = STRG[6]

UP_REF(CHR)

; Definition Unterprogramm mit "call 
by value" Parameter

; Definition Unterprogramm mit "call 
by ref." Parameter

; Parameterbergabe "by value"

; Zwischenspeichern

; Parameterbergabe "by reference"

446

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

3.1.4.9

String formatieren (SPRINT)

Mit der vordefinierten Funktion SPRINT knnen Zeichenketten formatiert und z. B. fr die 
Ausgabe an externe Gerte aufbereitet werden (siehe auch "Process DataShare - Ausgabe auf 
ein externes Gert/Datei (EXTOPEN, WRITE, EXTCLOSE) (Seite 958)"). 

Syntax

Bedeutung

"<Ergebnis_String>"=SPRINT("<Format_String>",<Wert_1>,<Wert_2>,..., 
<Wert_n>)

SPRINT:

"<Format_String>":

< Wert_1>,< Wert_2>,,< Wert_n>:

Bezeichner fr eine vordefinierte Funktion, die einen 
Wert vom Typ STRING liefert.

Zeichenkette, die feste und variable Teile enthlt. Die 
variablen Teile werden durch das Formatsteuerzei
chen % und einer nachfolgenden Formatbeschrei
bung festgelegt.

Wert in Form einer Konstanten oder NC-Variablen, 
der an der Stelle, an der das n-te Formatsteuerzei
chen % steht, entsprechend der Formatbeschreibung 
in den <Format_String> eingefgt wird.

"<Ergebnis_String>":

Formatierte Zeichenkette (maximal 400 Bytes)

Verfgbare Formatbeschreibungen

%B:

Wandlung in den String "TRUE", wenn der zu wandelnde Wert:

 ungleich 0 ist.

 kein Leerstring ist (bei String-Werten).

Wandlung in den String "FALSE", wenn der zu wandelnde Wert:

 gleich 0 ist.

 ein Leerstring ist.

Beispiel:
N10 DEF BOOL BOOL_VAR=1
N20 DEF STRING[80] RESULT
N30 RESULT=SPRINT("CONTENT OF BOOL_VAR:%B", BOOL_VAR) 

Ergebnis: Die String-Variable RESULT wird mit der Zeichenkette "CONTENT OF 
BOOL_VAR:TRUE" beschrieben.

%C:

Wandlung in ein ASCII-Zeichen.

Beispiel:
N10 DEF CHAR CHAR_VAR="X"
N20 DEF STRING[80] RESULT
N30 RESULT=SPRINT("CONTENT OF CHAR_VAR:%C",CHAR_VAR) 

Ergebnis: Die String-Variable RESULT wird mit der Zeichenkette "CONTENT OF 
CHAR_VAR:X" beschrieben.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

447

Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

%D:

Wandlung in einen String mit einem ganzzahligen Wert (INTEGER).

Beispiel:
N10 DEF INT INT_VAR=123
N20 DEF STRING[80] RESULT
N30 RESULT=SPRINT("CONTENT OF INT_VAR:%D",INT_VAR) 

%<m>D:

Ergebnis: Die String-Variable RESULT wird mit der Zeichenkette "CONTENT OF 
INT_VAR:123" beschrieben.

Wandlung in einen String mit einem ganzzahligen Wert (INTEGER). Der String hat 
eine Mindestlnge von <m> Zeichen. Fehlende Stellen werden linksbndig mit Leer
zeichen aufgefllt.

Beispiel:
N10 DEF INT INT_VAR=-123
N20 DEF STRING[80] RESULT
N30 RESULT=SPRINT("CONTENT OF INT_VAR:%6D",INT_VAR) 

Ergebnis: Die String-Variable RESULT wird mit der Zeichenkette "CONTENT OF 
INT_VAR:xx-123" beschrieben ("x" steht im Beispiel stellvertretend fr Leerzeichen).

%F:

Wandlung in einen String mit einer Dezimalzahl mit 6 Nachkommastellen. Die Nach
kommstellen werden ggf. gerundet oder mit 0 aufgefllt.

%<m>F:

Beispiel:
N10 DEF REAL REAL_VAR=-1.2341234EX+03
N20 DEF STRING[80] RESULT
N30 RESULT=SPRINT("CONTENT OF REAL_VAR:%F",REAL_VAR) 

Ergebnis: Die String-Variable RESULT wird mit der Zeichenkette "CONTENT OF 
REAL_VAR: -1234.123400" beschrieben.

Wandlung in einen String mit einer Dezimalzahl mit 6 Nachkommastellen und einer 
Gesamtlnge von mindestens <m> Zeichen. Die Nachkommstellen werden ggf. ge
rundet oder mit 0 aufgefllt. Fehlende Zeichen auf die Gesamtlnge <m> werden 
linksbndig mit Leerzeichen aufgefllt.

Beispiel:
N10 DEF REAL REAL_VAR=-1.23412345678EX+03
N20 DEF STRING[80] RESULT
N30 RESULT=SPRINT("CONTENT OF REAL_VAR:%15F",REAL_VAR) 

Ergebnis: Die String-Variable RESULT wird mit der Zeichenkette "CONTENT OF 
REAL_VAR: xxx-1234.123457" beschrieben ("x" steht im Beispiel stellvertretend fr 
Leerzeichen).

%.<n>F:

Wandlung in einen String mit einer Dezimalzahl mit <n> Nachkommastellen. Die 
Nachkommastellen werden ggf. gerundet oder mit 0 aufgefllt.

Beispiel:
N10 DEF REAL REAL_VAR=-1.2345678EX+03
N20 DEF STRING[80] RESULT
N30 RESULT=SPRINT("CONTENT OF REAL_VAR:%.3F",REAL_VAR) 

Ergebnis: Die String-Variable RESULT wird mit der Zeichenkette "CONTENT OF 
REAL_VAR:-1234.568" beschrieben.

448

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

%<m>.<n>F:

%E:

%<m>E:

%.<n>E:

Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Wandlung in einen String mit einer Dezimalzahl mit <n> Nachkommastellen und 
einer Gesamtlnge von mindestens <m> Zeichen. Die Nachkommstellen werden 
ggf. gerundet oder mit 0 aufgefllt. Fehlende Zeichen auf die Gesamtlnge <m> 
werden linksbndig mit Leerzeichen aufgefllt.

Beispiel:
N10 DEF REAL REAL_VAR=-1.2341234567890EX+03
N20 DEF STRING[80] RESULT
N30 RESULT=SPRINT("CONTENT OF REAL_VAR:%10.2F",REAL_VAR)

Ergebnis: Die String-Variable RESULT wird mit der Zeichenkette "CONTENT OF 
REAL_VAR:xx-1234.12" beschrieben ("x" steht im Beispiel stellvertretend fr Leer
zeichen).

Wandlung in einen String mit einer Dezimalzahl in Exponentialdarstellung. Die Man
tisse wird normalisiert mit einer Vorkommastelle und 6 Nachkommastellen abgelegt. 
Die Nachkommastellen werden ggf. gerundet oder mit 0 aufgefllt. Der Exponent 
beginnt mit dem Schlsselwort "EX". Es folgt das Vorzeichen ("+" oder "-") und eine 
zwei- oder dreistellige Zahl.

Beispiel:
N10 DEF REAL REAL_VAR=-1234.567890
N20 DEF STRING[80] RESULT
N30 RESULT=SPRINT("CONTENT OF REAL_VAR:%E",REAL_VAR)

Ergebnis: Die String-Variable RESULT wird mit der Zeichenkette "CONTENT OF 
REAL_VAR:-1.234568EX+03" beschrieben.

Wandlung in einen String mit einer Dezimalzahl in Exponentialdarstellung mit einer 
Gesamtlnge von mindestens <m> Zeichen. Fehlende Zeichen werden linksbndig 
mit Leerzeichen aufgefllt. Die Mantisse wird normalisiert mit einer Vorkommastelle 
und 6 Nachkommastellen abgelegt. Die Nachkommastellen werden ggf. gerundet 
oder mit 0 aufgefllt. Der Exponent beginnt mit dem Schlsselwort "EX". Es folgt das 
Vorzeichen ("+" oder "-") und eine zwei- oder dreistellige Zahl.

Beispiel:
N10 DEF REAL REAL_VAR=-1234.5
N20 DEF STRING[80] RESULT
N30 RESULT=SPRINT("CONTENT OF REAL_VAR:%20E",REAL_VAR)

Ergebnis: Die String-Variable RESULT wird mit der Zeichenkette "CONTENT OF 
REAL_VAR:xxxxxx-1.234500EX+03" beschrieben ("x" steht im Beispiel stellvertre
tend fr Leerzeichen)

Wandlung in einen String mit einer Dezimalzahl in Exponentialdarstellung. Die Man
tisse wird normalisiert mit einer Vorkommastelle und <n> Nachkommastellen abge
legt. Die Nachkommastellen werden ggf. gerundet oder mit 0 aufgefllt. Der Expo
nent beginnt mit dem Schlsselwort "EX". Es folgt das Vorzeichen ("+" oder "-") und 
eine zwei- oder dreistellige Zahl.

Beispiel:
N10 DEF REAL REAL_VAR=-1234.5678
N20 DEF STRING[80] RESULT
N30 RESULT=SPRINT("CONTENT OF REAL_VAR:%.2E",REAL_VAR)

Ergebnis: Die String-Variable RESULT wird mit der Zeichenkette "CONTENT OF 
REAL_VAR:-1.23EX+03" beschrieben.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

449

Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

%<m>.<n>E:

%G:

%<m>G:

Wandlung in einen String mit einer Dezimalzahl in Exponentialdarstellung mit einer 
Gesamtlnge von mindestens <m> Zeichen. Fehlende Zeichen werden linksbndig 
mit Leerzeichen aufgefllt. Die Mantisse wird normalisiert mit einer Vorkommastelle 
und <n> Nachkommastellen abgelegt. Die Nachkommastellen werden ggf. gerundet 
oder mit 0 aufgefllt. Der Exponent beginnt mit dem Schlsselwort "EX". Es folgt das 
Vorzeichen ("+" oder "-") und eine zwei- oder dreistellige Zahl.

Beispiel:
N10 DEF REAL REAL_VAR=-1234.5678
N20 DEF STRING[80] RESULT
N30 RESULT=SPRINT("CONTENT OF REAL_VAR:%12.2E", REAL_VAR)

Ergebnis: Die String-Variable RESULT wird mit der Zeichenkette "CONTENT OF 
REAL_VAR:xx-1.23EX+03" beschrieben ("x" steht im Beispiel stellvertretend fr 
Leerzeichen).

Wandlung in einen String mit einer Dezimalzahl je nach Wertebereich in Dezimal- 
oder Exponentialdarstellung: ist der darzustellende Wert betragsmig kleiner als 
1.0EX-04 oder grer/gleich 1.0EX+06 wird die Exponentialdarstellung gewhlt, 
sonst die Dezimaldarstellung. Es werden maximal sechs signifikante Stellen ange
zeigt, ggf. wird gerundet.

Beispiel mit Dezimaldarstellung:
N10 DEF REAL REAL_VAR=1.234567890123456EX-04
N20 DEF STRING[80] RESULT
N30 RESULT=SPRINT("CONTENT OF REAL_VAR:%G",REAL_VAR)

Ergebnis: Die String-Variable RESULT wird mit der Zeichenkette "CONTENT OF 
REAL_VAR:0.000123457" beschrieben.

Beispiel mit Exponentialdarstellung:
N10 DEF REAL REAL_VAR=1.234567890123456EX+06
N20 DEF STRING[80] RESULT
N30 RESULT=SPRINT("CONTENT OF REAL_VAR:%G",REAL_VAR)

Ergebnis: Die String-Variable RESULT wird mit der Zeichenkette "CONTENT OF 
REAL_VAR:1.23457EX+06" beschrieben.

Wandlung in einen String mit einer Dezimalzahl je nach Wertebereich in Dezimal- 
oder Exponentialdarstellung (wie %G). Der String hat eine Gesamtlnge von mindes
tens <m> Zeichen. Fehlende Zeichen werden linksbndig mit Leerzeichen aufgefllt.

Beispiel mit Dezimaldarstellung:
N10 DEF REAL REAL_VAR=1.234567890123456EX-04
N20 DEF STRING[80] RESULT
N30 RESULT=SPRINT("CONTENT OF REAL_VAR:%15G",REAL_VAR)

Ergebnis: Die String-Variable RESULT wird mit der Zeichenkette "CONTENT OF 
REAL_VAR:xxxx0.000123457" beschrieben ("x" steht im Beispiel stellvertretend fr 
Leerzeichen).

Beispiel mit Exponentialdarstellung:
N10 DEF REAL REAL_VAR=1.234567890123456EX+06
N20 DEF STRING[80] RESULT
N30 RESULT=SPRINT("CONTENT OF REAL_VAR:%15G",REAL_VAR)

Ergebnis: Die String-Variable RESULT wird mit der Zeichenkette "CONTENT OF 
REAL_VAR:xxx1.23457EX+06" beschrieben ("x" steht im Beispiel stellvertretend fr 
Leerzeichen).

450

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

%.<n>G:

%<m>.<n>G:

Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Wandlung in einen String mit einer Dezimalzahl je nach Wertebereich in Dezimal- 
oder Exponentialdarstellung. Es werden maximal <n> signifikante Stellen angezeigt, 
ggf. wird gerundet. Ist der darzustellende Wert betragsmig kleiner als 1.0EX-04 
oder grer/gleich 1.0EX(+<n>) wird die Exponentialdarstellung gewhlt, sonst die 
Dezimaldarstellung.

Beispiel mit Dezimaldarstellung:
N10 DEF REAL REAL_VAR=1.234567890123456EX-04
N20 DEF STRING[80] RESULT
N30 RESULT=SPRINT("CONTENT OF REAL_VAR:%.3G",REAL_VAR)

Ergebnis: Die String-Variable RESULT wird mit der Zeichenkette "CONTENT OF 
REAL_VAR:0.000123" beschrieben.

Beispiel mit Exponentialdarstellung:
N10 DEF REAL REAL_VAR=1.234567890123456EX+03
N20 DEF STRING[80] RESULT
N30 RESULT = SPRINT("CONTENT OF REAL_VAR:%.3G",REAL_VAR)

Ergebnis: Die String-Variable RESULT wird mit der Zeichenkette "CONTENT OF 
REAL_VAR:1.23EX+03" beschrieben.

Wandlung in einen String mit einer Dezimalzahl je nach Wertebereich in Dezimal- 
oder Exponentialdarstellung (wie %.<n>G). Der String hat eine Gesamtlnge von 
mindestens <m> Zeichen. Fehlende Zeichen werden linksbndig mit Leerzeichen 
aufgefllt.

Beispiel mit Dezimaldarstellung:
N10 DEF REAL REAL_VAR=1.234567890123456EX-04
N20 DEF STRING[80] RESULT
N30 RESULT=SPRINT("CONTENT OF REAL_VAR:%12.4G",REAL_VAR)

Ergebnis: Die Stringvariable RESULT wird mit der Zeichenkette "CONTENT OF RE
AL_VAR:xxx0.0001235" beschrieben ("x" steht im Beispiel stellvertretend fr Leer
zeichen).

Beispiel mit Exponentialdarstellung:
N10 DEF REAL REAL_VAR=1.234567890123456EX+04
N20 DEF STRING[80] RESULT
N30 RESULT=SPRINT("CONTENT OF REAL_VAR:%12.4G",REAL_VAR)

Ergebnis: Die String-Variable RESULT wird mit der Zeichenkette "CONTENT OF 
REAL_VAR:xx1.235EX+06" beschrieben ("x" steht im Beispiel stellvertretend fr 
Leerzeichen).

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

451

Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

%.<n>P:

Wandlung eines REAL-Werts in einen INTEGER-Wert unter Bercksichtigung von 
<n> Nachkommastellen. Der INTEGER-Wert wird als 32-Bit-Binrzahl ausgegeben. 
Kann der zu wandelnde Wert nicht mit 32 Bit dargestellt werden, wird die Bearbeitung 
mit Alarm abgebrochen.

Da eine mit der Formatanweisung %.<n>P erzeugte Byte-Folge auch binre Nullen 
enthalten kann, entspricht der so erzeugte Gesamt-String nicht mehr den Konventi
onen des NC-Datentyps STRING. Er kann daher weder in einer Variablen vom Typ 
STRING gespeichert werden, noch mit den String-Befehlen der NC-Sprache weiter 
bearbeitet werden. Die einzig mgliche Verwendung ist die Parameterbergabe an 
den WRITE-Befehl mit Ausgabe an ein entsprechendes externes Gert (siehe fol
gendes Beispiel).

Sobald der <Format_String> eine Formatbeschreibung vom Typ %P enthlt, wird der 
gesamte String, mit Ausnahme der mit %.<n>P generierten Binrzahl, entsprechend 
dem MD10750 $MN_SPRINT_FORMAT_P_CODE im Zeichen-Code ASCII, ISO 
(DIN6024) oder EIA (RS244) ausgegeben. Wird ein nicht umsetzbares Zeichen pro
grammiert, wird die Bearbeitung mit Alarm abgebrochen.

Beispiel:
N10 DEF REAL REAL_VAR=123.45
N20 DEF INT ERROR
N30 DEF STRING[20] EXT_DEVICE="/ext/dev/1"
...
N100 EXTOPEN(ERROR,EXT_DEVICE)
N110 IF ERROR <> 0
...                              ; Fehlerhandling
N200 WRITE(ERROR,EXT_DEVICE,SPRINT("INTEGER BINARY 
CODED:%.3P",REAL_VAR)
N210 IF ERROR <> 0
 ; Fehlerhandling

Ergebnis: Der String "INTEGER BINARY CODED: 'H0001E23A'" wird an das Aus
gabegert /ext/dev/1 bertragen. Der hexadezimale Wert 0x0001E23A entspricht 
dem dezimalen Wert 123450.

452

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

%<m>.<n>P:

Wandlung eines REAL-Werts entsprechend der Einstellung im Maschinendatum 
MD10751 $MN_SPRINT_FORMAT_P_DECIMAL in einen String mit:

 einer Ganzzahl von <m> + <n> Stellen oder

 einer Dezimalzahl mit maximal <m> Vorkommastellen und exakt <n> Nachkom

mastellen.

Wie bei der Formatbeschreibung %.<n>P wird der gesamte String in dem durch 
MD10750 $MN_SPRINT_FORMAT_P_CODE festgelegten Zeichen-Code abgelegt.

Wandlung bei MD10751 = 0:

Der REAL-Wert wird in einen String mit einer Ganzzahl von <m> + <n> Stellen ge
wandelt. Ggf. werden Nachkommstellen auf <n> Stellen gerundet oder mit 0 aufge
fllt. Fehlende Vorkommastellen werden mit Leerzeichen aufgefllt. Das Minus-Vor
zeichen wird linksbndig angefgt, an Stelle des Plus-Vorzeichens wird ein Leerzei
chen abgesetzt.

Beispiel:
N10 DEF REAL REAL_VAR=-123.45
N20 DEF STRING[80] RESULT
N30 RESULT=SPRINT("PUNCHED TAPE FORMAT:%5.3P",REAL_VAR)

Ergebnis: Die String-Variable RESULT wird mit der Zeichenkette "PUNCHED TAPE 
FORMAT:-xx123450" beschrieben ("x" steht im Beispiel stellvertretend fr Leerzei
chen).

Wandlung bei MD10751 = 1:

Der REAL-Wert wird in einen String mit einer Dezimalzahl mit maximal <m> Vor
kommastellen und exakt <n> Nachkommastellen gewandelt. Ggf. werden die Vor
kommastellen abgeschnitten und die Nachkommastellen gerundet oder mit 0 aufge
fllt. Ist <n> gleich 0 entfllt auch der Dezimalpunkt.

Beispiel:
N10 DEF REAL REAL_VAR1=-123.45
N20 DEF REAL REAL_VAR2=123.45
N30 DEF STRING[80] RESULT
N40 RESULT=SPRINT("PUNCHED TAPE FORMAT:%5.3P VAR2:%2.0P", 
REAL_VAR1,REAL_VAR2) 

Ergebnis: Die String-Variable RESULT wird mit der Zeichenkette "PUNCHED TAPE 
FORMAT:-123.450 VAR2:23" beschrieben.

%S:

Einfgen eines Strings.

Beispiel:
N10 DEF STRING[16] STRING_VAR="ABCDEFG"
N20 DEF STRING[80] RESULT
N30 RESULT=SPRINT("CONTENT OF STRING_VAR:%S",STRING_VAR) 

Ergebnis: Die String-Variable RESULT wird mit der Zeichenkette "CONTENT OF 
STRING_VAR:ABCDEFG" beschrieben.

%<m>S:

Einfgen eines Strings mit mindestens <m> Zeichen. Fehlende Stellen werden mit 
Leerzeichen aufgefllt.

Beispiel:
N10 DEF STRING[16] STRING_VAR="ABCDEFG"
N20 DEF STRING[80] RESULT
N30 RESULT=SPRINT("CONTENT OF STRING_VAR:%10S",STRING_VAR) 

Ergebnis: Die String-Variable RESULT wird mit der Zeichenkette "CONTENT OF 
STRING_VAR:xxxABCDEFG" beschrieben ("x" steht im Beispiel stellvertretend fr 
Leerzeichen).

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

453

Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

%.<n>S:

Einfgen von <n> Zeichen eines Strings (beginnend mit dem ersten Zeichen).

%<m>.<n>S:

Beispiel:
N10 DEF STRING[16] STRING_VAR="ABCDEFG"
N20 DEF STRING[80] RESULT
N30 RESULT=SPRINT("CONTENT OF STRING_VAR:%.3S",STRING_VAR) 

Ergebnis: Die String-Variable RESULT wird mit der Zeichenkette "CONTENT OF 
STRING_VAR:ABC" beschrieben. 

Einfgen von <n> Zeichen eines Strings (beginnend mit dem ersten Zeichen). Die 
Gesamtlnge des erzeugten Strings hat mindestens < m> Zeichen. Fehlende Stellen 
werden mit Leerzeichen aufgefllt.

Beispiel:
N10 DEF STRING[16] STRING_VAR="ABCDEFG"
N20 DEF STRING[80] RESULT
N30 RESULT=SPRINT("CONTENT OF STRING_VAR:%10.5S", STRING_VAR) 

Ergebnis: Die String-Variable RESULT wird mit der Zeichenkette "CONTENT OF 
STRING_VAR:xxxxxABCDE" beschrieben ("x" steht im Beispiel stellvertretend fr 
Leerzeichen).

%X:

Wandlung eines INTEGER-Werts in einen String mit Hexadezimal-Darstellung.

Beispiel:
N10 DEF INT INT_VAR='HA5B8
N20 DEF STRING[80] RESULT
N30 RESULT=SPRINT("INTEGER HEXADECIMAL:%X",INT_VAR) 

Ergebnis: Die String-Variable RESULT wird mit der Zeichenkette "INTEGER HEXA
DECIMAL:A5B8" beschrieben.

Hinweis

Die Eigenschaft der NC-Sprache, bezglich Bezeichnern und Schlsselworten nicht zwischen 
Gro- und Kleinbuchstaben zu unterscheiden, gilt auch fr die Formatbeschreibungen. Sie 
knnen daher ohne funktionalen Unterschied mit Klein- oder Grobuchstaben programmiert 
werden.

Kombinationsmglichkeiten

Die folgende Tabelle gibt Auskunft darber, welche NC-Datentypen mit welcher 
Formatbeschreibung kombiniert werden knnen. Es gelten die Regeln zur impliziten 
Datentypwandlung (siehe "Datentypen (Seite 414)").

BOOL

CHAR

INT

REAL

STRING

AXIS

FRAME

NC-Datentypen

%B

%C

%D

%F

%E

%G

%S

+

-

+

-

-

-

-

+

+

+

-

-

-

+

+

-

+

+

+

+

-

+

-

+

+

+

+

-

+

+

-

-

-

-

+

-

-

-

-

-

-

-

-

-

-

-

-

-

-

454

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

BOOL

CHAR

INT

REAL

STRING

AXIS

FRAME

%X

%P

+

-

+

-

+

+

-

+

-

-

-

-

-

-

NC-Datentypen

Hinweis

Die Tabelle zeigt, dass die NC-Datentypen AXIS und FRAME nicht direkt in der SPRINT-
Funktion verwendet werden knnen. Es ist aber mglich:

 den Datentyp AXIS mit der Funktion AXSTRING in einen String zu wandeln, der dann mit 

SPRINT weiterverarbeitet werden kann.

 die einzelnen Werte des Datentyps FRAME per Frame-Komponentenzugriff zu lesen. 
Dadurch bekommt man ein Datum vom Typ REAL, das mit SPRINT weiterverarbeitet 
werden kann.

3.1.5

Programmsprnge und -verzweigungen

3.1.5.1

Rcksprung auf Programmanfang (GOTOS)

Mit dem Befehl GOTOS ist es mglich, zur Programmwiederholung an den Anfang eines Haupt- 
oder Unterprogramms zurckzuspringen. 

ber Maschinendaten kann eingestellt werden, dass bei jedem Rcksprung auf den 
Programmanfang:

 die Programmlaufzeit auf "0" gesetzt wird.

 die Werkstckzhlung um den Wert "1" erhht wird.

Syntax

GOTOS

Bedeutung

GOTOS:

Sprunganweisung mit Sprungziel Programmanfang.

Die Ausfhrung wird gesteuert ber das NC/PLC-Nahtstellensignal:

DB21, ... DBX384.0 (Programmverzweigung steuern)

Wert:

Bedeutung:

0

1

Kein Rcksprung auf den Programmanfang. Die Programmbearbeitung 
wird mit dem nchsten Teileprogrammsatz nach GOTOS fortgefhrt.

Rcksprung auf den Programmanfang. Das Teileprogramm wird wieder
holt. 

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

455

 
Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Randbedingungen

 GOTOS lst intern ein STOPRE (Vorlaufstopp) aus.

 Bei einem Teileprogramm mit Datendefinitionen (LUD-Variablen) wird mit GOTOS auf den 

ersten Programmsatz nach dem Definitionsabschnitt gesprungen, d. h. die 
Datendefinitionen werden nicht erneut ausgefhrt. Die definierten Variablen behalten daher 
den im GOTOS-Satz erreichten Wert und werden nicht auf die im Definitionsabschnitt 
programmierten Standardwerte zurckgesetzt.

 In Synchronaktionen und Technologie-Zyklen steht der Befehl GOTOS nicht zur Verfgung.

Beispiel

Programmcode

Kommentar

N10 ...

...

N90 GOTOS

...

; Programmanfang.

; Sprung an den Programmanfang.

3.1.5.2

Programmsprnge auf Sprungmarken (GOTOB, GOTOF, GOTO, GOTOC)

In einem Programm knnen Sprungmarken (Labels) gesetzt werden, auf die von anderen 
Stellen innerhalb desselben Programms mit dem Befehlen GOTOF, GOTOB, GOTO bzw. GOTOC 
gesprungen werden kann. Die Programmbearbeitung wird dann mit der Anweisung fortgesetzt, 
die unmittelbar nach der Sprungmarke folgt. Dadurch sind Verzweigungen innerhalb des 
Programms realisierbar.

Neben den Sprungmarken sind als Sprungziele auch Haupt- und Nebensatznummern mglich.

Wenn vor der Sprunganweisung eine Sprungbedingung (IF ...) formuliert ist, dann erfolgt 
der Programmsprung nur dann, wenn die Sprungbedingung erfllt ist. 

Syntax

Bedeutung

456

GOTOB <Sprungziel>
IF <Sprungbedingung> == TRUE GOTOB <Sprungziel>

GOTOF <Sprungziel>
IF <Sprungbedingung> == TRUE GOTOF <Sprungziel>

GOTO <Sprungziel>
IF <Sprungbedingung> == TRUE GOTO <Sprungziel>

GOTOC <Sprungziel>
IF <Sprungbedingung> == TRUE GOTOC <Sprungziel>

GOTOB:

GOTOF:

Sprunganweisung mit Sprungziel in Richtung Programmanfang. 

Sprunganweisung mit Sprungziel in Richtung Programmende.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

GOTO:

GOTOC:

Sprunganweisung mit Sprungzielsuche. Die Suche erfolgt erst in Richtung Pro
grammende, dann in Richtung Programmanfang.

Wirkung wie GOTO mit dem Unterschied, dass der Alarm 14080 "Sprungziel 
nicht gefunden" unterdrckt wird.

Das bedeutet, dass die Programmbearbeitung im Falle einer ergebnislosen 
Sprungzielsuche nicht abgebrochen wird, sondern mit der auf den Befehl GO
TOC folgenden Programmzeile fortgesetzt wird.

<Sprungziel>:

Sprungzielparameter

Mgliche Angaben sind:

<Sprungmarke>:

<Satznummer>:

Sprungziel ist die im Programm gesetzte Sprungmar
ke mit benutzerdefiniertem Namen: 
<Sprungmarke>:   

Sprungziel ist eine Haupt- oder Nebensatznummer 
(z. B.: 200, N300)

Variable vom Typ 
STRING:

Variables Sprungziel. Die Variable steht fr eine 
Sprungmarke oder eine Satznummer.

IF:

Schlsselwort zur Formulierung der Sprungbedingung. 

Die Sprungbedingung lsst alle Vergleichs- und logischen Operationen zu (Er
gebnis: TRUE oder FALSE). Der Programmsprung wird ausgefhrt, wenn das 
Ergebnis dieser Operation TRUE ist.

Hinweis

Sprungmarken (Labels)

Sprungmarken stehen immer am Anfang eines Satzes. Wenn eine Programmnummer 
vorhanden ist, steht die Sprungmarke unmittelbar nach der Satznummer.

Fr die Benennung von Sprungmarken gelten folgende Regeln:

 Anzahl an Zeichen:

 mindestens 2

 hchstens 32

 Erlaubte Zeichen sind:

 Buchstaben

 Ziffern

 Unterstriche

 Die ersten beiden Zeichen mssen Buchstaben oder Unterstriche sein.

 Nach dem Namen der Sprungmarke folgt ein Doppelpunkt (":").

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

457

Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Randbedingungen

 Sprungziel kann nur ein Satz mit Sprungmarke oder Satznummer sein, der innerhalb des 

Programms liegt.

 Eine Sprunganweisung ohne Sprungbedingung muss in einem separaten Satz 

programmiert werden. Bei Sprunganweisungen mit Sprungbedingungen gilt diese 
Einschrnkung nicht. Hier knnen mehrere Sprunganweisungen in einem Satz formuliert 
werden.

 Bei Programmen mit Sprunganweisungen ohne Sprungbedingungen muss das 

Programmende M2/M30 nicht zwangslufig am Programmende stehen.

Beispiele

Beispiel 1: Sprnge auf Sprungmarken

Programmcode

N10 

Kommentar

N20 GOTOF Label_1

; Sprung in Richtung Programmende zur 

; Sprungmarke "Label_1".

N30 

N40 Label_0: R1=R2+R3

; Sprungmarke "Label_0" gesetzt.

N50 

N60 Label_1:

N70 

; Sprungmarke "Label_1" gesetzt.

N80 GOTOB Label_0

; Sprung in Richtung Programmanfang 

; zur Sprungmarke "Label_0".

N90 

Beispiel 2: Indirekter Sprung auf Satznummer

Programmcode

Kommentar

IF <Bedingung> == TRUE

   R10=100

ELSE

   R10=110

ENDIF

; Sprungziel zuweisen

; Sprungziel zuweisen

; Sprung in Richtung Programmende auf den Satz, dessen Satznummer in R10 steht

N10 GOTOF "N"<<R10

...

N90 ...

N100 ...

N110 ...

...

; Sprungziel

458

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Beispiel 3: Sprung auf variables Sprungziel

Programmcode

Kommentar

DEF STRING[20] ZIEL

IF <Bedingung> == TRUE

   ZIEL = "Marke1"

; Sprungziel zuweisen

ELSE

   ZIEL = "Marke2"

; Sprungziel zuweisen

ENDIF

; Sprung in Richtung Programmende zum variablen Sprungziel "Inhalt von ZIEL"

GOTOF ZIEL

Marke1: T="Bohrer1"

; Sprungziel 1

...

Marke2: T="Bohrer2"

; Sprungziel 2

...

Beispiel 4: Sprung mit Sprungbedingung

Programmcode

Kommentar

N40 R1=30 R2=60 R3=10 R4=11 R5=50 R6=20

; Zuweisung der Anfangswerte

N41 LA1: G0 X=R2*COS(R1)+R5 Y=R2*SIN(R1)+R6

; Sprungmarke LA1

N42 R1=R1+R3 R4=R4-1

; IF Sprungbedingung == TRUE 

; THEN Sprung in Richtung Programmanfang zur Sprungmarke LA1

N43 IF R4>0 GOTOB LA1

N44 M30

; Programmende

3.1.5.3

Programmverzweigung (CASE ... OF ... DEFAULT ...)

Die CASE-Funktion bietet die Mglichkeit, den aktuellen Wert (Typ: INT) einer Variablen oder 
einer Rechenfunktion zu berprfen und abhngig vom Ergebnis an unterschiedliche Stellen 
im Programm zu springen. 

Syntax

Bedeutung

CASE(<Ausdruck>) OF <Konstante_1> GOTOF <Sprungziel_1> <Konstante_2> 
GOTOF <Sprungziel_2> ... DEFAULT GOTOF <Sprungziel_n>

CASE:

Sprunganweisung

<Ausdruck>:

Variable oder Rechenfunktion

OF:

Schlsselwort zur Formulierung der bedingten Programmverzweigungen

<Konstante_1>:

Erster angegebener konstanter Wert fr die Variable oder Rechenfunktion

Typ:

INT

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

459

 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

<Konstante_2>:

Zweiter angegebener konstanter Wert fr die Variable oder Rechenfunktion

DEFAULT:

Typ:

INT

Fr die Flle, in denen die Variable oder Rechenfunktion keinen der ange
gebenen konstanten Werte annimmt, kann mit der Anweisung DEFAULT 
ein Sprungziel bestimmt werden.

Hinweis:
Falls die DEFAULT-Anweisung nicht programmiert ist, wird in diesen Fllen 
der auf die CASE-Anweisung folgende Satz zum Sprungziel.

GOTOF:

Sprunganweisung mit Sprungziel in Richtung Programmende.

Statt GOTOF sind auch alle anderen GOTO-Befehle programmierbar (siehe 
Thema "Programmsprnge auf Sprungmarken").

<Sprungziel_1>:

Auf dieses Sprungziel wird verzweigt, wenn der Wert der Variablen oder 
Rechenfunktion der ersten angegebenen Konstanten entspricht.

Das Sprungziel kann wie folgt angegeben werden:

<Sprungmarke>:

<Satznummer>:

Sprungziel ist die im Programm gesetzte Sprung
marke mit benutzerdefiniertem Namen: 
<Sprungmarke>:

Sprungziel ist eine Haupt- oder Nebensatznummer 
(z. B.: 200, N300)

Variable vom Typ 
STRING:

Variables Sprungziel. Die Variable steht fr eine 
Sprungmarke oder eine Satznummer.

Auf dieses Sprungziel wird verzweigt, wenn der Wert der Variablen oder 
Rechenfunktion der zweiten angegebenen Konstanten entspricht.

Auf dieses Sprungziel wird verzweigt, wenn der Wert der Variablen keinen 
der angegebenen konstanten Werte annimmt.

<Sprungziel_2>:

<Sprungziel_n>:

Beispiel

Programmcode

...

N20 DEF INT VAR1 VAR2 VAR3

N30 CASE(VAR1+VAR2-VAR3) OF 7 GOTOF Label_1 9 GOTOF La-
bel_2 DEFAULT GOTOF Label_3

N40 Label_1: G0 X1 Y1

N50 Label_2: G0 X2 Y2

N60 Label_3: G0 X3 Y3

...

Die CASE-Anweisung aus N30 definiert folgende Programmverzeigungsmglichkeiten:

1. Wenn der Wert der Rechenfunktion VAR1+VAR2-VAR3 = 7, dann springe zu dem Satz mit 

Sprungmarkendefinition "Label_1" ( N40).

2. Wenn der Wert der Rechenfunktion VAR1+VAR2-VAR3 = 9, dann springe zu dem Satz mit 

Sprungmarkendefinition "Label_2" ( N50).

3. Wenn der Wert der Rechenfunktion VAR1+VAR2-VAR3 weder 7 noch 9 betrgt, dann 

springe zu dem Satz mit Sprungmarkendefinition "Label_3" ( N60).

460

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

3.1.6

Programmteilwiederholung (REPEAT, REPEATB, ENDLABEL, P)

Die Programmteilwiederholung ermglicht die Wiederholung bereits geschriebener 
Programmteile innerhalb eines Programms in beliebiger Zusammensetzung.

Die zu wiederholenden Programmzeilen bzw. Programmbereiche werden durch 
Sprungmarken (Labels) gekennzeichnet. 

Hinweis

Sprungmarken (Labels)

Sprungmarken stehen immer am Anfang eines Satzes. Wenn eine Programmnummer 
vorhanden ist, steht die Sprungmarke unmittelbar nach der Satznummer.

Fr die Benennung von Sprungmarken gelten folgende Regeln:

 Anzahl an Zeichen:

 mindestens 2
 hchstens 32

 Erlaubte Zeichen sind:

 Buchstaben

 Ziffern

 Unterstriche

 Die ersten beiden Zeichen mssen Buchstaben oder Unterstriche sein.

 Nach dem Namen der Sprungmarke folgt ein Doppelpunkt (":").

Syntax

1. Einzelne Programmzeile wiederholen:

<Sprungmarke>: ...

...

REPEATB <Sprungmarke> P=<n>

...

2. Programmbereich zwischen Sprungmarke und REPEAT-Anweisung wiederholen:

<Sprungmarke>: ...

...

REPEAT <Sprungmarke> P=<n>

...

3. Bereich zwischen zwei Sprungmarken wiederholen:

<Start-Sprungmarke>: ...

...

<End-Sprungmarke>: ...

...

REPEAT <Start-Sprungmarke> <End-Sprungmarke> P=<n>

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

461

 
 
 
 
 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

...

Hinweis

Die REPEAT-Anweisung mit den beiden Sprungmarken zu klammern, ist nicht mglich. Wird 
die <Start-Sprungmarke> vor der REPEAT-Anweisung gefunden und wird die <End-
Sprungmarke> nicht vor der REPEAT-Anweisung erreicht, dann wird die Wiederholung 
zwischen <Start-Sprungmarke> und REPEAT-Anweisung durchgefhrt.

4. Bereich zwischen Sprungmarke und ENDLABEL wiederholen:

<Sprungmarke>: ...

...

ENDLABEL: ...

...

REPEAT <Sprungmarke> P=<n>

...

Hinweis

Die REPEAT-Anweisung mit der <Sprungmarke> und dem ENDLABEL zu klammern, ist nicht 
mglich. Wird die <Sprungmarke> vor der REPEAT-Anweisung gefunden und wird ENDLABEL 
nicht vor der REPEAT-Anweisung erreicht, dann wird die Wiederholung 
zwischen <Sprungmarke> und REPEAT-Anweisung durchgefhrt.

Bedeutung

REPEATB:

REPEAT:

Befehl zum Wiederholen einer Programmzeile

Befehl zum Wiederholen eines Programmbereichs

<Sprungmarke>:

Die <Sprungmarke> kennzeichnet:

 die zu wiederholende Programmzeile (bei REPEATB)

bzw.

 den Beginn des zu wiederholenden Programmbereichs (bei REPEAT)

Die mit der <Sprungmarke> gekennzeichnete Programmzeile kann vor oder 
nach der REPEAT-/REPEATB-Anweisung stehen. Gesucht wird zunchst in 
Richtung Programmanfang. Wird die Sprungmarke in dieser Richtung nicht 
gefunden, dann wird in Richtung Programmende gesucht. 

Ausnahme:
Wenn der Programmbereich zwischen Sprungmarke und REPEAT-Anwei
sung wiederholt werden soll (siehe 2. unter Syntax), dann muss die mit 
der <Sprungmarke> gekennzeichnete Programmzeile vor der REPEAT-An
weisung stehen, da in diesem Fall nur in Richtung Programmanfang gesucht 
wird.

Enthlt die Zeile mit der <Sprungmarke> weitere Anweisungen, so werden 
diese bei jeder Wiederholung erneut ausgefhrt.

462

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
Beispiele

Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

ENDLABEL:

Schlsselwort, welches das Ende eines zu wiederholenden Programmbe
reichs markiert

Enthlt die Zeile mit dem ENDLABEL weitere Anweisungen, so werden diese 
bei jeder Wiederholung erneut ausgefhrt.

ENDLABEL kann mehrfach im Programm verwendet werden.

P:

<n>:

Adresse zur Angabe der Wiederholungsanzahl

Anzahl an Programmteilwiederholungen

Typ:

INT

Der zu wiederholende Programmteil wird <n> mal wiederholt. Nach der letz
ten Wiederholung wird das Programm mit der auf die REPEAT-/REPEATB-Zei
le folgenden Zeile fortgesetzt.

Hinweis:
Ist kein P=<n> angegeben, wird der zu wiederholende Programmteil genau 
einmal wiederholt.

Beispiel 1: Einzelne Programmzeile wiederholen

Programmcode

Kommentar

N10 POSITION1: X10 Y20

N20 POSITION2: CYCLE(0,,9,8)

; Positionszyklus

N30 ...

N40 REPEATB POSITION1 P=5

; Fhre SATZ N10 fnfmal aus.

N50 REPEATB POSITION2

; Fhre Satz N20 einmal aus.

N60 ...

N70 M30

Beispiel 2: Programmbereich zwischen Sprungmarke und REPEAT-Anweisung wiederholen

Programmcode

N5 R10=15

Kommentar

N10 Begin: R10=R10+1

; Breite

N20 Z=10-R10

N30 G1 X=R10 F200

N40 Y=R10

N50 X=-R10

N60 Y=-R10

N70 Z=10+R10

N80 REPEAT BEGIN P=4

; Fhre Bereich N10 bis N70 viermal aus.

N90 Z10

N100 M30

Beispiel 3: Bereich zwischen zwei Sprungmarken wiederholen

Programmcode

N5 R10=15

Kommentar

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

463

 
 
 
 
 
 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Kommentar

; Breite

Programmcode

N10 Begin: R10=R10+1

N20 Z=10-R10

N30 G1 X=R10 F200

N40 Y=R10

N50 X=-R10

N60 Y=-R10

N70 END: Z=10

N80 Z10

N90 CYCLE(10,20,30)

N100 REPEAT BEGIN END P=3

; Fhre Bereich N10 bis N70 dreimal aus.

N110 Z10

N120 M30

Beispiel 4: Bereich zwischen Sprungmarke und ENDLABEL wiederholen

Kommentar

Programmcode

N10 G1 F300 Z-10

N20 BEGIN1:

N30 X10

N40 Y10

N50 BEGIN2:

N60 X20

N70 Y30

N80 ENDLABEL: Z10

N90 X0 Y0 Z0

N100 Z-10

N110 BEGIN3: X20

N120 Y30

N130 REPEAT BEGIN3 P=3

; Fhre Bereich N110 bis N120 dreimal aus.

N140 REPEAT BEGIN2 P=2

; Fhre Bereich N50 bis N80 zweimal aus.

N150 M100

N160 REPEAT BEGIN1 P=2

; Fhre Bereich N20 bis N80 zweimal aus.

N170 Z10

N180 X0 Y0

N190 M30

Beispiel 5: Frsbearbeitung, Bohrposition mit verschiedenen Technologien bearbeiten

Programmcode

Kommentar

N10 ZENTRIERBOHRER()

; Zentrierbohrer einwechseln.

; Bohrpositionen 1

N20 POS_1:

N30 X1 Y1

N40 X2

N50 Y2

N60 X3 Y3

464

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Programmcode

N70 ENDLABEL:

N80 POS_2:

N90 X10 Y5

N100 X9 Y-5

N110 X3 Y3

N120 ENDLABEL:

N130 BOHRER()

Kommentar

; Bohrpositionen 2

; Bohrer wechseln und Bohrzyklus.

N140 GEWINDE(6)

; Gewindebohrer M6 einwechseln und Gewindezyklus.

N150 REPEAT POS_1

; Wiederhole Programmabschnitt ab POS_1 einmal bis ENDLA-
BEL.

N160 BOHRER()

; Bohrer wechseln und Bohrzyklus.

N170 GEWINDE(8)

; Gewindebohrer M8 einwechseln und Gewindezyklus.

N180 REPEAT POS_2

N190 M30

; Wiederhole Programmabschnitt ab POS_2 einmal bis ENDLA-
BEL.

Weitere Informationen

 Programmteilwiederholung kann geschachtelt aufgerufen werden. Jeder Aufruf belegt eine 

Unterprogrammebene.

 Ist whrend der Bearbeitung einer Programmteilwiederholung M17 oder RET programmiert, 
so wird die Programmteilwiederholung abgebrochen. Das Programm wird mit dem auf 
die REPEAT-Zeile folgenden Satz fortgesetzt.

 In der aktuellen Programm-Anzeige wird die Programmteilwiederholung als eigene 

Unterprogrammebene angezeigt.

 Wird whrend der Programmteil-Bearbeitung Ebenenabbruch ausgelst, so wird das 

Programm nach dem Aufruf der Programmteilbearbeitung fortgesetzt.
Beispiel:

Programmcode

N5 R10=15

Kommentar

N10 BEGIN: R10=R10+1

; Breite

N20 Z=10-R10

N30 G1 X=R10 F200

N40 Y=R10

N50 X=-R10

N60 Y=-R10

N70 END: Z10

N80 Z10

N90 CYCLE(10,20,30)

N100 REPEAT BEGIN END P=3

N120 Z10

N130 M30

; Ebenenabbruch

; Programmbearbeitung fortsetzen.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

465

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

 Kontrollstrukturen und Programmteilwiederholung knnen kombiniert genutzt werden. Es 
sollte jedoch keine berschneidungen geben. Eine Programmteilwiederholung sollte 
innerhalb eines Kontrollstruktur-Zweigs liegen bzw. eine Kontrollstruktur innerhalb einer 
Programmteilwiederholung.

 Bei der Mischung von Sprngen und Programmteilwiederholung werden die Stze rein 

sequentiell abgearbeitet. Erfolgt z. B. ein Sprung aus einer Programmteilwiederholung, so 
wird solange bearbeitet, bis das programmierte Programmteilende gefunden wird.
Beispiel:

Programmcode

N10 G1 F300 Z-10

N20 BEGIN1:

N30 X=10

N40 Y=10

N50 GOTOF BEGIN2

N60 ENDLABEL:

N70 BEGIN2:

N80 X20

N90 Y30

N100 ENDLABEL: Z10

N110 X0 Y0 Z0

N120 Z-10

N130 REPEAT BEGIN1 P=2

N140 Z10

N150 X0 Y0

N160 M30

Hinweis

Die REPEAT-Anweisung sollte hinter den Verfahrstzen stehen.

3.1.7

Kontrollstrukturen

Die Steuerung arbeitet die NC-Stze standardmig in der programmierten Reihenfolge ab.

466

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Diese Reihenfolge kann durch die Programmierung von alternativen Programmblcken und 
Programmschleifen variiert werden. Die Programmierung dieser Kontrollstrukturen erfolgt mit 
den Schlsselwrtern IF, ELSE, ENDIF, LOOP, FOR, WHILE und REPEAT.

ACHTUNG

Programmierfehler

Kontrollstrukturen sind nur innerhalb des Anweisungsteils eines Programms mglich. 
Definitionen im Programmkopf knnen nicht bedingt oder wiederholt ausgefhrt werden. 

Schlsselworte fr Kontrollstrukturen drfen ebenso wie Sprungziele nicht mit Makros 
berlagert werden. Eine Abprfung bei der Makrodefinition findet nicht statt.

Wirksamkeit

Eine Kontrollstruktur kann nicht programmbergreifend verwendet werden.

Schachtelungstiefe

Innerhalb jeder Unterprogrammebene ist eine Schachtelungstiefe von bis zu 16 
Kontrollstrukturen mglich.

Laufzeitverhalten

Im standardmig aktiven Interpreterbetrieb kann durch Verwendung von Programmsprngen 
ein schnellerer Programmablauf als mit Kontrollstrukturen erreicht werden.

In vorkompilierten Zyklen ist kein Unterschied zwischen Programmsprngen und 
Kontrollstrukturen vorhanden.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

467

UnterprogrammHauptprogrammLOOPENDLOOPENDWHILEWHILEREPEATPROC SUBPROGUNTILENDFORFORWHILEENDWHILEIFENDIFWHILEENDWHILEWHILEENDWHILESUBPROGFORENDFORArbeitsvorbereitung

3.1 Flexible NC-Programmierung

Aktuelle Satzanzeige bei Programmschleifen

Werden innerhalb einer Programmschleife nur Vorlaufstze ausgefhrt, wird in der aktuellen 
Satzanzeige der letzte Hauptlaufsatz vor der Programmschleife angezeigt.

Damit z. B. zu Diagnosezwecken auch die abgearbeiteten Vorlaufstze in der aktuellen 
Satzanzeige sichtbar werden, muss der Decodier-Einzelsatz SBL2 aktiviert werden.

Schleifen ohne Hauptlaufsatz

Wird innerhalb einer Programmschleife kein Hauptlaufsatz programmiert, wird die Schleife so 
lange im Vorlauf bearbeitet, bis die Schleifenbedingung erfllt ist. 

Dadurch entsteht eine hohe Auslastung und die Anzeige kann beeintrchtigt werden.

Als Abhilfe bietet sich an, den Befehl STOPRE oder eine Verweilzeit G04 von 0 Sekunden in 
die Schleife einzufgen.

Randbedingungen

 Stze mit Kontrollstrukturelementen knnen nicht ausgeblendet werden.

 Sprungmarken (Labels) sind in Stzen mit Kontrollstrukturelementen nicht erlaubt.

 Kontrollstrukturen werden interpretativ abgearbeitet. Bei Erkennen eines Schleifenendes 

wird unter Bercksichtigung der dabei gefundenen Kontrollstrukturen nach dem 
Schleifenanfang gesucht. Daher wird im Interpreterbetrieb die Blockstruktur eines 
Programms nicht komplett geprft.

 Grundstzlich empfiehlt sich, Kontrollstrukturen und Programmsprnge nicht gemischt zu 

verwenden.

 Bei Vorverarbeitung von Zyklen kann die korrekte Schachtelung von Kontrollstrukturen 

berprft werden.

3.1.7.1

Bedingte Anweisung und Verzweigung (IF, ELSE, ENDIF)

Bedingten Anweisung: IF - Programmblock - ENDIF

Bei einer bedingten Anweisung wird der zwischen IF und ENDIF stehende Programmblock nur 
ausgefhrt, wenn die Bedingung erfllt ist. 

Verzweigung: IF - Programmblock_1 - ELSE - Programmblock_2 - ENDIF

Bei einer Verzweigung wird immer einer von zwei Programmblcken ausgefhrt. 

Ist die Bedingung erfllt, wird der zwischen IF und ELSE stehende Programmblock_1 
ausgefhrt. 

468

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Ist die Bedingung nicht erfllt, wird der zwischen ELSE und ENDIF stehende Programmblock_2 
ausgefhrt.

Hinweis

ELSE in Synchronaktionen

Das Schlsselwort ELSE ist auch in Synchronaktionen programmierbar. Damit kann eine 
Synchronaktion um Aktionen erweitert werden, die bei nicht erfllter Bedingung ausgefhrt 
werden sollen.  

Syntax

Bedingte Anweisung

IF <Bedingung>

   Programmblock

ENDIF

Verzweigung

IF <Bedingung>

   Programmblock_1

ELSE

; Ausfhrung bei: <Bedingung> == TRUE

; Ausfhrung bei: <Bedingung> == TRUE

   Programmblock_2

; Ausfhrung bei: <Bedingung> == FALSE

Bedeutung

ENDIF

IF:

ELSE:

ENDIF:

Leitet die bedingte Anweisung bzw. Verzweigung ein.

Leitet den alternativen Programmblock ein.

Markiert das Ende der bedingte Anweisung bzw. Verzweigung.

<Bedingung>:

Logischer Ausdruck, dessen Auswertung TRUE oder FALSE ergibt.

Beispiel: Werkzeugwechselunterprogramm

Programmcode

PROC L6

N500 DEF INT TNR_AKTUELL

N510 DEF INT TNR_VORWAHL

N520 STOPRE

N530 IF $P_ISTEST

N540    TNR_AKTUELL = $P_TOOLNO

N550 ELSE

Kommentar

Werkzeugwechselroutine

Variable fr aktive T-Nummer

Variable fr vorgewhlte T-Nummer

Aktuelles Werkzeug ermitteln

Im Programmtest-Betrieb wird ...

... aus dem Programmkontext das 
"aktuelle" Werkzeug gelesen.

Andernfalls wird ...

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

469

 
 
 
 
 
 
 
Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Programmcode

Kommentar

N560    TNR_AKTUELL = $TC_MPP6[9998,1]

N570 ENDIF

N580 GETSELT(TNR_VORWAHL)

N590 IF TNR_AKTUELL <> TNR_VORWAHL

N600    G0 G40 G60 G90 SUPA X450 Y300 Z300 D0

N610    M206

N620 ENDIF

N630 M17

... das Werkzeug der Spindel aus-
gelesen.

T-Nummer des vorgewhlten Werk-
zeugs auf der Spindel lesen.

Wenn das vorgewhlte Werkzeug 
noch nicht das aktuelle Werkzeug 
ist, dann ...

... Werkzeugwechselpunkt anfah-
ren ...

... und Werkzeugwechsel ausfh-
ren.

3.1.7.2

Endlos-Programmschleife (LOOP, ENDLOOP)

Die Endlos-Schleife findet Verwendung in Endlos-Programmen. Am Schleifenende findet 
immer wieder der Rcksprung zum Schleifenanfang statt. 

Syntax

Bedeutung

Beispiel

LOOP

...

ENDLOOP

LOOP:

Leitet die Endlosschleife ein.

ENDLOOP:

Markiert das Ende der Schleife und bewirkt Rcksprung auf den Schleifenanfang.

Programmcode

...

LOOP

MSG("keine Werkzeugschneide aktiv")

M0

STOPRE

ENDLOOP

...

470

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
3.1.7.3

Zhlschleife (FOR ... TO ..., ENDFOR)

Die Zhlschleife wird verwendet, wenn ein Arbeitsablauf mit einer festen Anzahl von 
Durchlufen wiederholt werden soll. 

Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Syntax

Bedeutung

Beispiele

FOR <Variable> = <Anfangswert> TO <Endwert>

...

ENDFOR

FOR:

ENDFOR:

Leitet die Zhlschleife ein.

Markiert das Ende der Schleife und bewirkt Rcksprung auf den Schleifenan
fang, solange der Endwert der Zhlung noch nicht erreicht ist.

<Variable>:

Zhlvariable, die vom Anfangs- bis zum Endwert hochgezhlt wird und sich bei 
jedem Durchlauf um den Wert "1" erhht. 

Typ

INT oder REAL

Hinweis:
Der Typ REAL wird genommen, wenn z. B. R-Parameter fr eine Zhl
schleife programmiert werden. Ist die Zhlvariable vom Typ REAL, 
wird ihr Wert auf einen ganzzahligen Wert gerundet.

<Anfangswert>:

Anfangswert der Zhlung

Bedingung: Der Anfangswert muss kleiner sein als der Endwert.

<Endwert>:

Endwert der Zhlung

Beispiel 1: INTEGER-Variable oder R-Parameter als Zhlvariable

INTEGER-Variable als Zhlvariable:

Programmcode

Kommentar

DEF INT iVARIABLE1

R10=R12-R20*R1 R11=6

FOR iVARIABLE1= R10 TO R11

; Zhlvariable = INTEGER-Variable

 R20=R21*R22+R33

ENDFOR

M30

R-Parameter als Zhlvariable:

Programmcode

R11=6

Kommentar

FOR R10=R12-R20*R1 TO R11

; Zhlvariable = R-Parameter (Realvariable)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

471

 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Programmcode

 R20=R21*R22+R33

ENDFOR

M30

Kommentar

Beispiel 2: Fertigung einer festen Teilestckzahl

Programmcode

DEF INT STUECKZAHL

FOR STUECKZAHL = 0 TO 100

G01 

ENDFOR

M30

Kommentar

; Definiert Variable vom Typ INT mit Namen "STU-
ECKZAHL".

; Leitet die Zhlschleife ein. Die Variable "STU-
ECKZAHL" wird vom Anfangswert "0" bis zum Endwert 
"100" hochgezhlt.

; Ende der Zhlschleife.

3.1.7.4

Programmschleife mit Bedingung am Schleifenanfang (WHILE, ENDWHILE)

Bei einer WHILE-Schleife steht die Bedingung am Schleifenanfang. Solange die Bedingung 
erfllt ist, wird die WHILE-Schleife durchlaufen. 

Syntax

Bedeutung

Beispiel

WHILE <Bedingung>

...

ENDWHILE

WHILE:

ENDWHILE:

Leitet die Programmschleife ein.

Markiert das Ende der Schleife und bewirkt Rcksprung auf den Schleifenan
fang.

<Bedingung>:

Bedingung, die erfllt sein muss, damit die WHILE-Schleife durchlaufen wird.

Programmcode

...

WHILE $AA_IW[BOHRACHSE] > -10

G1 G91 F250 AX[BOHRACHSE] = -1

ENDWHILE

Kommentar

; Aufruf der WHILE-Schleife unter folgender 
Bedingung: der aktuelle WKS-Sollwert fr 
die Bohrachse muss grer -10 sein.

472

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Programmcode

...

Kommentar

3.1.7.5

Programmschleife mit Bedingung am Schleifenende (REPEAT, UNTIL)

Bei einer REPEAT-Schleife steht die Bedingung am Schleifenende. Die REPEAT-Schleife wird 
einmal durchlaufen und solange wiederholt, bis die Bedingung erfllt ist. 

Syntax

Bedeutung

Beispiel

REPEAT

...

UNTIL <Bedingung>

REPEAT:

UNTIL:

Leitet die Programmschleife ein.

Markiert das Ende der Schleife und bewirkt Rcksprung auf den Schleifenan
fang.

<Bedingung>:

Bedingung, die erfllt sein muss, damit die REPEAT-Schleife nicht mehr durch
laufen wird.

Programmcode

Kommentar

...

REPEAT

...

UNTIL ...

...

; Aufruf der REPEAT-Schleife.

; Prfung, ob Bedingung erfllt ist.

3.1.7.6

Programmbeispiel mit verschachtelten Kontrollstrukturen

Programmcode

LOOP

   IF NOT $P_SEARCH

      G1 G90 X0 Z10 F1000

Kommentar

; IF kein Satzsuchlauf

      WHILE $AA_IM[X] <= 100

; WHILE (Sollwert X-Achse <= 100)

         G1 G91 X10 F500

; Bohrbild

         Z5 F100

         Z5

      ENDWHILE

   ELSE

; ELSE Satzsuchlauf

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

473

 
 
 
 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Programmcode

      MSG("Im Suchlauf wird nicht gebohrt")

   ENDIF

   $A_OUT[1] = 1

   G4 F2

ENDLOOP

M30

Kommentar

; ENDIF

; nchste Bohrplatte

3.1.8

Kanalbergreifende Programmkoordinierung (INIT, START, WAITM, WAITMC, 
WAITE, SETM, CLEARM)

Ein Kanal der NC kann prinzipiell das in ihm gestartete Programm unabhngig von anderen 
Kanlen seiner Betriebsartengruppe (BAG) abarbeiten. Sind aber gleichzeitig mehrere 
Programme in mehreren Kanlen der BAG an der Fertigung eines Werkstcks beteiligt, 
mssen die Programmablufe mit den nachfolgenden Koordinierungsbefehlen in den 
unterschiedlichen Kanlen koordiniert werden.

Voraussetzung

Alle an der Programmkoordinierung beteiligten Kanle mssen zur selben 
Betriebsartengruppe (BAG) gehren:

MD10010 $MC_ASSIGN_CHAN_TO_MODE_GROUP[<Kanal>] = <BAG-Nummer>

Kanalname statt Kanalnummer

Als Parameter der vordefinierten Prozeduren der Programmkoordinierung knnen anstelle von 
Kanalnummern auch die in MD20000 $MC_CHAN_NAME[<Kanalindex>] eingetragenen 
Kanalnamen verwendet werden. Die Verwendung der Kanalnamen in NC-Programmen muss 
zuerst freigegeben werden:

MD10280 $MN_PROG_FUNCTION_MASK, Bit 1 = TRUE

Hinweis

Mindestabstand zwischen Befehlen

Zwischen den Befehlen INIT, START, WAITE, WAITM, SETM, CLEARM und dem Befehl WAITMC 
mssen mindestens zwei Verfahrstze Abstand gehalten werden. WAITMC ist ein 
ausfhrbarer Satz, wird aber zur Optimierung in den vorherigen Satz verschoben und dann als 
Satz gelscht. SETM als Beispiel ist kein ausfhrbarer Satz und wird in den nchsten Satz 
verschoben, so dass bei einem Satz Abstand beide Befehle im mittleren Satz stehen wrden. 
Da nur ein Satz mglich ist, wird bei einem Satz Abstand fr WAITMC die Optimierung nicht 
durchgefhrt. 

Damit bremst das Programm ab und die Bearbeitung wird kurz angehalten.

INIT(<ChanNr>, <Prog>, <AckMode>)

Syntax

474

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

START(<ChanNr>, <ChanNr>, ...)
WAITM(<MarkNr>, <ChanNr>, <ChanNr>, ...)
WAITE(<ChanNr>, <ChanNr>, ...)
WAITMC(<MarkNr>, <ChanNr>, <ChanNr>, ...)
SETM(<MarkNr>, <MarkNr>, ...)
CLEARM(<MarkNr>, <MarkNr>, ...)

Bedeutung

INIT():

START():

WAITM():

Vordefinierte Prozedur zur Anwahl des NC-Programms, das im angegebenen Kanal 
abgearbeitet werden soll

Vordefinierte Prozedur zum Starten des im jeweiligen Kanal angewhlten Programms

Vordefinierte Prozedur zum Warten auf das Erreichen einer Wartemarke in den ange
gebenen Kanlen

Im eigenen Kanal wird die angegebene Wartemarke durch WAITM gesetzt. Der vorher
gehenden Satz wird mit Genauhalt beendet. Die Wartemarke wird nach Synchronisa
tion gelscht.

Gleichzeitig knnen max. 10 Marken pro Kanal gesetzt werden.

WAITE():

Vordefinierte Prozedur zum Warten auf das Programmende in einem oder mehreren 
anderen Kanlen

WAITMC(): 1) Vordefinierte Prozedur zum Warten auf das Erreichen einer Wartemarke in den ange

gebenen Kanlen

Im Gegensatz zu WAITM wird das Abbremsen der Achsen auf Genauhalt nur eingeleitet, 
wenn die anderen Kanle die Wartemarke noch nicht erreicht haben.

SETM(): 1)

Vordefinierte Prozedur zum Setzen einer oder mehrerer Wartemarken fr die Kanal
koordinierung

Die Bearbeitung im eigenen Kanal wird davon nicht beeinflusst. 

SETM behlt seine Gltigkeit ber Kanal-Reset und NC-Start hinweg.
CLEARM(): 1) Vordefinierte Prozedur zum Lschen einer oder mehrerer Wartemarken der Kanalkoor

dinierung

Die Bearbeitung im eigenen Kanal wird davon nicht beeinflusst. 

CLEARM() lscht alle Wartemarken im Kanal.

CLEARM(0) lscht nur die Wartemarke "0".

CLEARM behlt seine Gltigkeit ber Kanal-Reset und NC-Start hinweg.

<ChanNr>:

Kanalnummer

Die Nummer des eigenen Kanals muss nicht angegeben werden.

Typ:

INT

<Prog>:

Absolute oder relative Pfadangabe (optional) + Programmname

Typ:

STRING

Informationen zur Pfadangabe siehe Programmierhandbuch NC-Programmierung, Ka
pitel "Adressierung von Dateien des Programmspeichers" (Seite 549).

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

475

Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Beispiele

<AckMode>:

Quittierungsmodus (optional)

Typ:

Wer
te:

CHAR

"N" Ohne Quittung

Die Programmbearbeitung wird nach Absenden des Kommandos fort
gefhrt. Der Absender wird nicht benachrichtigt, wenn das Kommando 
nicht erfolgreich ausgefhrt werden kann.

"S"

Synchrone Quittung

Die Programmabarbeitung wird solange angehalten, bis die Empfn
gerkomponente das Kommando quittiert hat. Bei positiver Quittung 
wird der nchste Befehl abgearbeitet. Bei negativer Quittung wird eine 
Fehlermeldung ausgegeben.

<MarkNr>:

Nummer der Wartemarke

Hinweis

In einem mehrkanaligen System stehen maximal 100 Wartemarken zur Verfgung 
(Wartemarke 0 ... 99). 

In einem einkanaligen System steht nur die Wartemarke 0 zur Verfgung.

1) Zur anwenderspezifischen Kommunikation und / oder Koordination von Kanlen knnen Wartemar
ken mittels SETM / CLEARM auch ohne Verwendung des bedingten Wartebefehles WAITMC eingesetzt 
werden. Die Wartemarken behalten dabei ber Kanal-Reset und NC-Start hinaus ihre Werte bei.

START mittels Kanalnamen aus MD20000

 Parametrierung

MD10280 $MN_PROG_FUNCTION_MASK, Bit 1 = TRUE
$MC_CHAN_NAME[ 0 ] = "BEARBEITUNG"  ; Name fr Kanal 1
$MC_CHAN_NAME[ 1 ] = "ZUFUEHRUNG"   ; Name fr Kanal 2

 Programmierung

Programmcode

Kommentar

START(BEARBEITUNG)

; Start von Kanal 1

START(ZUFUEHRUNG)

; Start von Kanal 2

START ber lokale "Kanalnamen" und Anwendervariable

Programmcode

Kommentar

DEF INT MASCHINE = 1

; Definition Anwendervariable fr Kanal 1

DEF INT LADER = 2

; Definition Anwendervariable fr Kanal 2

...

START(MASCHINE)

; Start von Kanal 1

START(LADER)

; Start von Kanal 2

START ber lokale "Kanalnamen", Anwendervariable und parametrierte Kanalnamen

Programmcode

Kommentar

DEF INT chanNo1

DEF INT chanNo2

; Definition Anwendervariable fr Kanal 1

; Definition Anwendervariable fr Kanal 2

476

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Programmcode

Kommentar

chanNo1 = CHAN_1

; Zuweisung parametrierter Kanalnamen Kanal 1

chanNo2 = CHAN_2

; Zuweisung parametrierter Kanalnamen Kanal 2

...

START(chanNo1)

START(chanNo2)

; Start von Kanal 1

; Start von Kanal 2

INIT-Befehl mit absoluter Pfadangabe

Anwahl von Programm /_N_MPF_DIR/_N_ABSPAN1_MPF in Kanal 2.

Programmcode
INIT(2,"/_N_WKS_DIR/_N_WELLE1_WPD/_N_ABSPAN1_MPF")

INIT-Befehl mit Programmnamen

Anwahl des Programms mit dem Namen "MYPROG".  Die Steuerung sucht das Programm 
anhand des Suchpfades.

Programmcode
INIT(2,"MYPROG")

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

477

 
Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Programmkoordinierung mit WAITM

 Kanal 1: Das Programm /_N_MPF_DIR/_N_MPF100_MPF ist bereits angewhlt. und 

gestartet.

Programmcode

Kommentar

; Programm MPF100

N10 INIT(2,"MPF200","N")

; Anwahl Programm MPF200, Kanal 2

N11 START(2)

...

; Start von Kanal 2

N80 WAITM(1,1,2)

; Warten auf WAIT-Marke 1 in Kanal 1 und 2

N81 ...

...

; Kanal 1, N81 und Kanal 2, N71 werden
; synchron begonnen

N180 WAITM(2,1,2)

; Warten auf WAIT-Marke 2 in Kanal 1 und 2

N181 ...

...

N200 WAITE(2)

N201 ...

; Kanal 1, N181 und Kanal 2, N271 werden
; synchron begonnen

; Warten auf Programmende in Kanal 2

; N201 wird erst nach dem Programmende von
; MPF200 in Kanal 2 begonnen

N201 M30

; Programmende Kanal 1

 Kanal 2: In Kanal 1 wird ber Satz N10 und N20 das Programm MPF200_MPF fr Kanal 2 

angewhlt und gestartet.

Programmcode

Kommentar

;$PATH=/_N_MPF_DIR

; Programm MPF200

...

N70 WAITM(1,1,2)

Warten auf WAIT-Marke 1 in Kanal 1 und 2

N71 ...

...

; Kanal 1, N81 und Kanal 2, N71 werden
; synchron begonnen

N270 WAITM(2,1,2)

Warten auf WAIT-Marke 2 in Kanal 1 und 2

N271 ...

...

N400 M30

; Kanal 1, N181 und Kanal 2, N271 werden
; synchron begonnen

Programmende Kanal 2

478

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Randbedingungen

Nicht synchroner Beginn des Abarbeitens von Folgestzen nach WAIT-Marken

Bei einer Kanalkoordinierung mittels WAIT-Marken kann es zu einem nicht synchronen Beginn 
des Abarbeitens der Folgestze kommen. Dieses Verhalten tritt auf, wenn unmmittelbar vor 
Erreichen der gemeinsamen WAIT-Marke in einem der zu synchronisierenden Kanle eine 
Aktion ausgelst wird, die in diesem Restweglschen mit implizitem Repositionieren 
(REPOSA) zur Folge hat.

Annahme: Aktuelle Achszuordnung in den Kanlen 1 und 2

 Kanal 1: Achsen X1 und U

 Kanal 2: Achse X2

Tabelle 3-2

Zeitlicher Abblauf in den Kanlen 1 und 2

Kanal 1

...

N100 
WAITM(20,1,2)

Beginn der GETD(U) 
Bearbeitung:

 Achstausch

 Restweglschen

 REPOSA

Ende

N110 G0 X1=100

Kanal 2

Beschreibung

...

Beliebige Bearbeitung in Kanal 1 und 2

Kanal 1: erreicht die WAIT-Marke und wartet auf Syn
chronisation mit Kanal 2

N200 GETD(U)

Kanal 2: fordert die Achse U aus Kanal 1 an

Kanal 1: Bearbeitung von GET(U) im Hintergrund

N210 
WAITM(20,1,2)

Kanal 2: erreicht die WAIT-Marke.  Die Synchronisa
tion der Kanle 1 und 2 ist damit abgeschlossen

N220 G0 X2=100 Kanal 2: Beginn des Abarbeitens von N220

Kanal 1: Zeitversetzter Beginn des Abarbeitens von 
N110

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

479

(cid:90)(cid:68)(cid:85)(cid:87)(cid:72)(cid:81)(cid:40)(cid:81)(cid:71)(cid:72)(cid:3)(cid:61)(cid:72)(cid:76)(cid:87)(cid:37)(cid:72)(cid:74)(cid:76)(cid:81)(cid:81)(cid:90)(cid:68)(cid:85)(cid:87)(cid:72)(cid:81)(cid:90)(cid:68)(cid:85)(cid:87)(cid:72)(cid:81)(cid:46)(cid:68)(cid:81)(cid:68)(cid:79)(cid:3)(cid:21)(cid:46)(cid:68)(cid:81)(cid:68)(cid:79)(cid:3)(cid:20)(cid:48)(cid:51)(cid:41)(cid:3)(cid:21)(cid:19)(cid:19)(cid:48)(cid:51)(cid:41)(cid:3)(cid:20)(cid:19)(cid:19)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:48)(cid:22)(cid:19)(cid:49)(cid:21)(cid:19)(cid:20)(cid:48)(cid:22)(cid:19)(cid:49)(cid:23)(cid:19)(cid:19)(cid:58)(cid:36)(cid:44)(cid:55)(cid:40)(cid:11)(cid:21)(cid:12)(cid:49)(cid:21)(cid:19)(cid:19)(cid:58)(cid:36)(cid:44)(cid:55)(cid:48)(cid:11)(cid:21)(cid:15)(cid:20)(cid:15)(cid:21)(cid:12)(cid:49)(cid:21)(cid:26)(cid:19)(cid:58)(cid:36)(cid:44)(cid:55)(cid:48)(cid:11)(cid:20)(cid:15)(cid:20)(cid:15)(cid:21)(cid:12)(cid:49)(cid:26)(cid:19)(cid:58)(cid:36)(cid:44)(cid:55)(cid:48)(cid:11)(cid:21)(cid:15)(cid:20)(cid:15)(cid:21)(cid:12)(cid:49)(cid:20)(cid:27)(cid:19)(cid:58)(cid:36)(cid:44)(cid:55)(cid:48)(cid:11)(cid:20)(cid:15)(cid:20)(cid:15)(cid:21)(cid:12)(cid:49)(cid:27)(cid:19)(cid:48)(cid:21)(cid:48)(cid:20)(cid:54)(cid:55)(cid:36)(cid:53)(cid:55)(cid:11)(cid:21)(cid:12)(cid:54)(cid:55)(cid:36)(cid:53)(cid:55)(cid:11)(cid:21)(cid:12)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:49)(cid:20)(cid:20)(cid:49)(cid:20)(cid:19)(cid:49)(cid:20)(cid:19)Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

3.1.9

Makrotechnik (DEFINE ... AS)

ACHTUNG

Makrotechnik erhht die Komplexitt der Programmierung

Mit Makrotechnik kann die Programmiersprache der Steuerung stark verndert werden. 
Makrotechnik darf nur mit groer Sorgfalt eingesetzt werden.

Als Makro bezeichnet man die Zusammenfassung von einzelnen Anweisungen zu einer neuen 
Gesamtanweisung mit eigenem Namen. Bei Aufruf des Makros im Programmablauf werden 
die unter dem Makronamen programmierten Anweisungen nacheinander abgearbeitet.

Entsprechend dem Gltigkeitsbereich, d. h. dem Bereich in dem die Makrodefinition wirksam 
ist, gibt es folgende Kategorien von Makros:

 Lokale Makros

Lokale Makros sind Makros, die am Programmanfang eines NC-Programms definiert sind, 
das zum Zeitpunkt der Abarbeitung nicht das Hauptprogramm ist. Sie werden beim Aufruf 
des NC-Programms angelegt und mit Programmende-Reset bzw. dem nchsten 
Steuerungshochlauf gelscht. Auf lokale Makros kann nur innerhalb des NC-Programms 
zugegriffen werden, in dem sie definiert sind.

 Programmglobale Makros

Programmglobale Makros sind Makros, die am Programmanfang eines als Hauptprogramm 
verwendeten NC-Programms definiert sind. Sie werden beim Aufruf des NC-Programms 
angelegt und mit Programmende-Reset bzw. dem nchsten Steuerungshochlauf gelscht. 
Auf programmglobale Makros kann im Hauptprogramm und in allen Unterprogrammen 
zugegriffen werden.

Hinweis

Verfgbarkeit von programmglobalen Makros

Im Hauptprogramm definierte programmglobale Makros sind nur dann auch in den 
Unterprogrammen verfgbar, wenn folgendes Maschinendatum gesetzt ist:

MD11120 $MN_LUD_EXTENDED_SCOPE = 1

Mit MD11120 = 0 sind die im Hauptprogramm definierten programmglobalen Makros nur im 
Hauptprogramm verfgbar.

 Globale Makros

Globale Makros sind NC- bzw. Kanal-globale Makros, die in einer Definitionsdatei 
(Makrodatei) definiert sind und auch nach Programmende-Reset bzw. dem nchsten 
Steuerungshochlauf erhalten bleiben. Globale Makros knnen in jedem beliebigen Haupt- 
oder Unterprogramm aufgerufen und abgearbeitet werden.

Hinweis

Um die Makros einer externen Makrodatei im NC-Programm verwenden zu knnen, muss 
die Makrodatei in die NC geladen werden.

480

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Makros mssen vor ihrer Verwendung definiert worden sein. Folgende Regeln sind dabei zu 
beachten:

 Im Makro knnen beliebige Bezeichner, G-, M-, H-Funktionen und L-Unterprogrammnamen 

definiert werden.

 Die Makrodefinition kann am Programmanfang oder in einer eigenen Definitionsdatei 

(Makrodatei) erfolgen.

 Lokale und programmglobale Makros werden am Programmanfang definiert. 

 Globale Makros mssen in einer Makrodatei, z. B. _N_DEF_DIR/_N_UMAC_DEF, definiert 

werden.

 G-Befehls-Makros knnen nur als globale Makros definiert werden.

 H- und L-Funktionen sind 2-stellig programmierbar.

 M- und G-Befehle knnen 3-stellig programmiert werden.

Hinweis

Schlsselworte und reservierte Namen drfen nicht mit Makros berschrieben werden. Das gilt 
auch fr alle Sprungziele innerhalb eines GOTO Befehls und fr die Schlsselworte in 
Programmschleifen wie FOR, WHILE, LOOP, REPEAT.

Makro-Definition:
DEFINE <Macro_Name> AS <Operation_1> <Operation_2> ...

Aufruf im NC-Programm:
<Macro_Name>

DEFINE ... AS:

Schlsselwort-Kombination zur Definition eines Makros

<Macro_Name>:

Name des Makros

Als Makronamen sind nur Bezeichner zulssig.

Mit dem Makronamen wird das Makro aus dem NC-Programm heraus auf
gerufen.

<Operation_1>:

<Operation_2>:

Erste Programmieranweisung im Makro

Zweite Programmieranweisung im Makro

Beispiel 1: Makrodefinition am Programmanfang

Programmcode

Kommentar

DEFINE LINIE AS G1 G94 F300

; Makro-Definition

...

Syntax

Bedeutung

Beispiele

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

481

 
Arbeitsvorbereitung

3.1 Flexible NC-Programmierung

Programmcode

N70 LINIE X10 Y20

...

Kommentar

; Makro-Aufruf

Beispiel 2: Makrodefinitionen in einer Makrodatei

Programmcode

DEFINE M6 AS L6

Kommentar

; Beim Werkzeugwechsel wird ein Unterprogramm auf-
gerufen, das den ntigen Datentransfer bernimmt. 
Im Unterprogramm wird die eigentliche Werkzeugwech-
sel-M-Funktion ausgegeben (z. B. M106).

DEFINE G81 AS DRILL(81)

; Nachbildung des DIN-G-Befehls.

DEFINE G33 AS M333 G333

; Beim Gewindeschneiden wird Synchronisation mit 
der PLC angefordert. Der ursprngliche G-Befehl G33 
wurde per MD in G333 umbenannt, die Programmierung 
bleibt fr den Anwender gleich.

Beispiel 3: Externe Makrodatei

Nach dem Einlesen der externen Makrodatei in die Steuerung muss die Makrodatei in die NC 
geladen werden. Erst dann knnen die Makros im NC-Programm verwendet werden.

Programmcode

%_N_UMAC_DEF

;$PATH=/_N_DEF_DIR

DEFINE PI AS 3.14

DEFINE TC1 AS M3 S1000

DEFINE M13 AS M3 M7

DEFINE M14 AS M4 M7

DEFINE M15 AS M5 M9

DEFINE M6 AS L6

Kommentar

; Kundenspezifische Makros

; Spindel rechts, Khlmittel ein

; Spindel links, Khlmittel ein

; Spindel Halt, Khlmittel aus

; Aufruf des Werkzeugwechselprogramms

DEFINE G80 AS MCALL

; Abwahl Bohrzyklus

M30

482

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
Arbeitsvorbereitung

3.2 Unterprogrammtechnik

3.2

Unterprogrammtechnik

3.2.1

Allgemeines

3.2.1.1

Unterprogramm

Die Bezeichnung "Unterprogramm" stammt noch aus der Zeit, als Teileprogramme fest in 
Haupt- und Unterprogramme unterteilt waren. Hauptprogramme waren dabei die 
Teileprogramme, die an der Steuerung zum Abarbeiten angewhlt und dann gestartet wurden. 
Unterprogramme waren die Teileprogramme, die vom Hauptprogramm aus aufgerufen 
wurden.

Diese feste Einteilung besteht mit der heutigen SINUMERIK NC-Sprache nicht mehr. Jedes 
Teileprogramm kann prinzipiell als Hauptprogramm angewhlt und gestartet oder als 
Unterprogramm von einem anderen Teileprogramm aus aufgerufen werden.

Somit wird im weiteren Verlauf mit Unterprogramm ein Teileprogramm bezeichnet, das von 
einem anderen Teileprogramm aus aufgerufen wird. 

Anwendung

Wie in allen hheren Programmiersprachen werden auch in der NC-Sprache Unterprogramme 
dazu angewandt, um Programmteile, die mehrfach verwendet werden, in eigenstndige, in 
sich abgeschlossene Programme auszulagern.

Unterprogrammen bieten folgende Vorteile:

 Erhhen die bersichtlichkeit und Lesbarkeit der Programme

 Erhhen die Qualitt durch Wiederverwendung getesteter Programmteile

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

483

HauptprogrammUnterprogrammArbeitsvorbereitung

3.2 Unterprogrammtechnik

 Bieten die Mglichkeit zur Schaffung spezifischer Bearbeitungsbibliotheken

 Sparen Speicherplatz

3.2.1.2

Unterprogrammnamen

Benennungregeln

Der Unterprogrammname kann unter Einhaltung folgender Regeln frei gewhlt werden:

 Erlaubte Zeichen:

 Buchstaben: A ... Z, a ... z

 Ziffern: 0 ... 9

 Unterstrich: _

 Die ersten beiden Zeichen sollten zwei Buchstaben oder ein Unterstrich gefolgt von einem 

Buchstaben sein.

Hinweis

Wenn diese Bedingung erfllt ist, dann kann ein NC-Programm allein durch Angabe des 
Programmnamens als Unterprogramm aus einem anderen Programm heraus aufgerufen 
werden. Beginnt der Programmname hingegen mit Ziffern, dann ist der Unterprogramm-
Aufruf nur ber die CALL-Anweisung mglich.

 Maximale Lnge: 24 Zeichen

Hinweis

Gro- / Kleinbuchstaben

In der SINUMERIK NC-Sprache wird nicht zwischen Gro- und Kleinbuchstaben 
unterschieden.

Hinweis

Unzulssige Programmnamen

Um Probleme mit Windows-Applikationen zu vermeiden, drfen folgende 
Programmnamen nicht verwendet werden:

 CON, PRN, AUX, NUL

 COM1, COM2, COM3, COM4, COM5, COM6, COM7, COM8, COM9

 LPT1, LPT2, LPT3, LPT4, LPT5, LPT6, LPT7, LPT8, LPT9

484

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.2 Unterprogrammtechnik

Steuerungsinterne Erweiterungen

Der bei der Programmerstellung vergebene Unterprogrammname wird steuerungsintern mit 
einem Pre- und Postfix erweitert:

 Prefix: _N_

 Postfix: _SPF

Verwendung des Programmnamens

Bei der Verwendung des Programmnamens, z. B. bei einem Unterprogrammaufruf, sind alle 
Kombinationen von Prefix, Programmnamen und Postfix mglich.

Beispiel:

Das Unterprogramm mit dem Programmnamen SUB_PROG kann ber folgende Bezeichner 
aufgerufen werden:

1. SUB_PROG

2. _N_SUB_PROG

3. SUB_PROG_SPF

4. _N_SUB_PROG_SPF

Namensgleichheit bei Haupt- und Unterprogrammen

Existiert ein Hauptprogramme (.MPF) und ein Unterprogramme (.SPF) mit gleichem 
Programmnamen, muss bei der Verwendung des Programmnamens im NC-Programm die 
entsprechende Dateierweiterung zur eindeutigen Kennzeichnung mit angegeben werden. 
Ansonsten wird das Programm verwendet, das entlang des Suchpfades als erstes mit dem 
angegebenen Programmnamen gefunden wird.

3.2.1.3

Schachtelung von Unterprogrammen

Ein Hauptprogramm kann Unterprogramme aufrufen, die wiederum Unterprogramme 
aufrufen. Die Ablufe der Programme sind somit ineinander geschachtelt. Jedes Programm 
luft dabei in einer eigenen Programmebene.

Schachtelungstiefe

Die NC-Sprache stellt aktuell 16 Programmebenen zur Verfgung. Das Hauptprogramm luft 
immer in der obersten Programmebene 0. Ein Unterprogramm luft immer in der dem Aufruf 
folgenden nchstniedrigeren Programmebene. Die Programmebene 1 ist somit die erste 
Unterprogrammebene.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

485

Arbeitsvorbereitung

3.2 Unterprogrammtechnik

Unterteilung der Programmebenen:

 Programmebene 0: Hauptprogrammebene

 Programmebene 1 - 15: Unterprogrammebene 1 - 15

Interruptroutinen (ASUP)

Wird im Rahmen einer Interruptroutine ein Unterprogramm aufgerufen, wird dieses nicht in der 
aktuellen im Kanal aktiven Programmebene (n), sondern ebenfalls in der nchstniedrigeren 
Programmebene (n+1) abgearbeitet. Damit dies auch in der untersten Programmebene noch 
mglich ist, stehen im Zusammenhang mit Interruptroutinen 2 zustzliche Programmebenen 
(16 und 17) zur Verfgung.

Werden mehr als 2 Programmebenen bentigt, muss dies explizit in der Strukturierung des im 
Kanal abgearbeiteten Teileprogramms bercksichtigt werden. D. h. es darf dann maximal nur 
so viele Programmebenen beanspruchen, dass noch ausreichend Programmebenen fr die 
Interruptbearbeitung zur Verfgung stehen.

Bentigt die Interruptbearbeitung z. B. 4 Programmebenen, muss das Teileprogramm so 
strukturiert werden, dass es maximal Programmebene 13 belegt. Erfolgt dann ein Interrupt, 
stehen diesem die bentigten 4 Programmebenen (14 bis 17) zur Verfgung.

Siemens-Zyklen

Siemens-Zyklen bentigen 3 Programmebenen. Der Aufruf eines Siemens-Zyklus muss daher 
sptestens erfolgen in:

 Teileprogrammbearbeitung: Programmebene 12

 Interruptroutine: Programmebene 14

3.2.1.4

Suchpfad

Beim Aufruf eines Unterprogramms ohne Pfadangabe durchsucht die Steuerung nach einer 
vordefinierten Suchreihenfolge (siehe "Suchpfad bei Unterprogrammaufruf (Seite 554)") die 
vorhandenen Programmspeicher. 

486

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

... ... (cid:43)(cid:68)(cid:88)(cid:83)(cid:87)(cid:16)(cid:3)(cid:83)(cid:85)(cid:82)(cid:74)(cid:85)(cid:17)(cid:3)(cid:56)(cid:81)(cid:87)(cid:72)(cid:85)(cid:16)(cid:3)(cid:83)(cid:85)(cid:82)(cid:74)(cid:85)(cid:17)(cid:3)(cid:56)(cid:81)(cid:87)(cid:72)(cid:85)(cid:16)(cid:3)(cid:83)(cid:85)(cid:82)(cid:74)(cid:85)(cid:17)(cid:3)(cid:56)(cid:81)(cid:87)(cid:72)(cid:85)(cid:16)(cid:3)(cid:83)(cid:85)(cid:82)(cid:74)(cid:85)(cid:17)(cid:3)(cid:51)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)(cid:72)(cid:69)(cid:72)(cid:81)(cid:72)(cid:81)(cid:3)(cid:80)(cid:68)(cid:91)(cid:17)(cid:3)(cid:20)(cid:24)Arbeitsvorbereitung

3.2 Unterprogrammtechnik

3.2.1.5

Formal- und Aktualparameter

Von Formal- und Aktualparameter spricht man im Zusammenhang mit der Definition und dem 
Aufruf von Unterprogrammen mit Parameterbergabe.

Formalparameter 

Bei der Definition eines Unterprogramms mssen die dem Unterprogramm zu bergebenden 
Parameter, die sogenannten Formalparameter, mit Typ und Parameternamen definiert 
werden.

Die Formalparameter definieren somit die Schnittstelle des Unterprogramms.

Beispiel:

Programmcode

Kommentar

PROC KONTUR (REAL X, REAL Y)

; Formalparameter: X und Y beide vom Typ REAL

N20 X1=X Y1=Y

...

N100 RET

Aktualparameter 

; Verfahren der Achse X1 auf Position X und der 
Achse Y1 auf Position Y

Beim Aufruf eines Unterprogramms mssen dem Unterprogramm absolute Werte oder 
Variablen, die sogenannten Aktualparameter, bergeben werden.

Die Aktualparameter befllen somit beim Aufruf die Schnittstelle des Unterprogramms mit 
aktuellen Werten.

Beispiel:

Programmcode

N10 DEF REAL BREITE

N20 BREITE=20.0

N30 KONTUR(5.5, BREITE)

...

N100 M30

Kommentar

; Variablendefinition

; Variablenzuweisung

; Unterprogrammaufruf mit Aktualparametern: 
5.5 und BREITE

3.2.1.6

Parameterbergabe

Definition eines Unterprogramms mit Parameterbergabe

Die Definition eines Unterprogramms mit Parameterbergabe erfolgt mit dem 
Schlsselwort PROC und einer vollstndigen Auflistung aller vom Unterprogramm erwarteten 
Parameter.  

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

487

 
 
 
 
Arbeitsvorbereitung

3.2 Unterprogrammtechnik

Unvollstndige Parameterbergabe

Beim Aufruf des Unterprogramms mssen nicht immer alle in der Unterprogrammschnittstelle 
definierten Parameter explizit bergeben werden. Wird ein Parameter weggelassen, wird fr 
diesen Parameter der Standardwert "0" bergeben.

Zur eindeutigen Kennzeichnung der Reihenfolge der Parameter mssen allerdings die 
Kommas als Trennzeichen der Parameter immer mit angegeben werden. Eine Ausnahme 
bildet der letzte Parameter. Wird dieser beim Aufruf weggelassen, kann auch das letzte 
Komma entfallen.

Beispiel:

Unterprogramm:

Programmcode

Kommentar

PROC SUB_PROG (REAL X, REAL Y, REAL Z)

; Formalparameter: X, Y und Z

...

N100 RET

Hauptprogramm:

Programmcode

PROC MAIN_PROG

...

Kommentar

N30 SUB_PROG(1.0,2.0,3.0)

; Unterprogrammaufruf mit vollstndiger Parameter-
bergabe:

X=1.0, Y=2.0, Z=3.0



N100 M30

Beispiele fr den Unterprogrammaufruf in N30 mit unvollstndiger Parameterbergabe:

N30 SUB_PROG( ,2.0,3.0)

; X=0.0, Y=2.0, Z=3.0

N30 SUB_PROG(1.0, ,3.0)

; X=1.0, Y=0.0, Z=3.0

N30 SUB_PROG(1.0,2.0)

; X=1.0, Y=2.0, Z=0.0

N30 SUB_PROG( , ,3.0)

; X=0.0, Y=0.0, Z=3.0

N30 SUB_PROG( , , )

; X=0.0, Y=0.0, Z=0.0

ACHTUNG

Parameterbergabe Call-by-Reference

Parameter, die ber Call-by-Reference bergeben werden, drfen beim Unterprogramm-
Aufruf nicht weggelassen werden.

ACHTUNG

Datentyp AXIS

Parameter vom Datentyp AXIS drfen beim Unterprogramm-Aufruf nicht weggelassen 
werden.

488

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
Arbeitsvorbereitung

3.2 Unterprogrammtechnik

berprfung der bergabeparameter  

ber die Systemvariable $P_SUBPAR [ n ] mit n = 1, 2, ... kann im Unterprogramm berprft 
werden, ob ein Parameter explizit bergeben oder weggelassen wurde. Der Index n bezieht 
sich auf die Reihenfolge der Formalparameter. Index n = 1 bezieht sich auf den 
1. Formalparameter, Index n = 2 auf den 2. Formalparameter usw.

Der folgende Programmausschnitt zeigt beispielhaft fr den 1. Formalparameter, wie eine 
berprfung realisiert werden kann:

Programmierung

Kommentar

PROC SUB_PROG (REAL X, REAL Y, REAL Z)

; Formalparameter: X, Y und Z

N20 IF $P_SUBPAR[1]==TRUE

; berprfung des 1.Formalparameters X.

...

N40 ELSE

...

N60 ENDIF

...

N100 RET

; Diese Aktionen werden ausgefhrt, 
wenn der Formalparameter X explizit 
bergeben wurde.

; Diese Aktionen werden ausgefhrt, 
wenn der Formalparameter X nicht ber-
geben wurde.

; Allgemeine Aktionen

3.2.2

Definition eines Unterprogramms

3.2.2.1

Unterprogramm ohne Parameterbergabe

Bei der Definition von Unterprogrammen ohne Parameterbergabe kann die Definitionszeile 
am Programmanfang entfallen.

Syntax

Bedeutung

[PROC <Programmname>]

...

PROC:

Definitionsanweisung am Anfang eines Programms

<Programmname>:

Name des Programms

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

489

 
 
 
Arbeitsvorbereitung

3.2 Unterprogrammtechnik

Beispiel

Beispiel 1: Unterprogramm mit PROC-Anweisung

Programmcode

PROC SUB_PROG

N10 G01 G90 G64 F1000

N20 X10 Y20

...

N100 RET

Kommentar

; Definitionszeile

; Unterprogrammrcksprung

Beispiel 2: Unterprogramm ohne PROC-Anweisung

Programmcode

Kommentar

N10 G01 G90 G64 F1000

N20 X10 Y20

...

N100 RET

; Unterprogrammrcksprung

Siehe auch

Unterprogrammaufruf ohne Parameterbergabe (Seite 516)

3.2.2.2

Unterprogramm mit Parameterbergabe Call-by-Value (PROC)

Die Definition eines Unterprogramms mit Parameterbergabe Call-by-Value erfolgt mit dem 
Schlsselwort PROC, gefolgt vom Programmnamen und einer vollstndigen Auflistung aller 
Parameter mit Typ und Namen. Die Definitionsanweisung muss in der ersten Programmzeile 
stehen.

Call-by-Value 

Das aufrufende Programm bergibt bei einer Parameterbergabe Call-by-Value dem 
Unterprogramm nur den Wert einer Variablen Damit bekommt das Unterprogramm keinen 
direkten Zugriff auf die Variable. Dadurch wird bei einer nderung des Parameterwerts nur der 
im Unterprogramm sichtbare Wert gendert. Der Wert der im aufrufenden Programm 
definierten Variablen bleibt unverndert. Die Parameterbergabe Call-by-Value hat somit 
keine Rckwirkungen auf das aufrufende Programm.

490

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
Arbeitsvorbereitung

3.2 Unterprogrammtechnik

PROC <Programmname> (<Parametertyp> <Parametername>=<Init_Wert>, ...)

Hinweis

Es knnen bis zu 127 Parameter bergeben werden.

Syntax

Bedeutung

PROC:

<Programmname>:

<Parametertyp>:

Definitionsanweisung am Anfang eines Programms

Name des Programms

Datentyp des Parameters (z. B. REAL, INT, BOOL)

<Parametername>:

Name des Parameters

<Init_Wert>:

Optionaler Wert zur Initialisierung des Parameters (optional)

Wird beim Aufruf des Unterprogramms kein Parameter angegeben, 
erhlt der Parameter den Initialisierungswert zugewiesen.

Beispiele

Beispiel 1

Definition eines Unterprogramms SUB_PROG mit drei Parametern vom Typ REAL mit 
Defaultwerten:

Programmcode
PROC SUB_PROG(REAL LENGTH=10.0, REAL WIDTH=20.0, REAL HIGHT=30.0)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

491

alte Werte    g(cid:190)ltigneue Werte      g(cid:190)ltigneue WertzuweisungLAENGE=20BREITE=15UnterprogrammWertzuweisungLAENGE=12BREITE=10HauptprogrammLAENGE, BREITEArbeitsvorbereitung

3.2 Unterprogrammtechnik

Beispiel 2

Verschiedene Aufrufvarianten

Programmcode
PROC MAIN_PROG

  REAL PAR_1 = 100

  REAL PAR_2 = 200

  REAL PAR_3 = 300

  ; Aufrufvarianten

  SUB_PROG

  SUB_PROG(PAR_1, PAR_2, PAR_3)

  SUB_PROG(PAR_1)

  SUB_PROG(PAR_1, , PAR_3)

  SUB_PROG( , , PAR_3)

N100 RET

Siehe auch

Unterprogrammaufruf mit Parameterbergabe (EXTERN) (Seite 518)

3.2.2.3

Unterprogramm mit Parameterbergabe Call-by-Reference (PROC, VAR)

Die Definition eines Unterprogramms mit Parameterbergabe Call-by-Reference erfolgt mit 
dem Schlsselwort PROC, gefolgt vom Programmnamen und einer vollstndigen Auflistung 
aller Parameter mit Schlsselwort VAR, Typ und Namen. Die Definitionsanweisung muss in der 
ersten Programmzeile stehen. Als Parameter knnen auch Referenzen auf Felder bergeben 
werden.

Call-by-Reference 

Das aufrufende Programm bergibt bei einer Parameterbergabe Call-by-Reference dem 
Unterprogramm nicht den Wert einer Variablen, sondern eine Referenz (Zeiger) auf die 
Variable. Damit bekommt das Unterprogramm direkten Zugriff auf die Variable. Dadurch wird 
bei einer nderung des Parameterwertes nicht nur der im Unterprogramm sichtbare Wert 
gendert, sondern der Wert der im aufrufenden Programm definierten Variablen. Die 
Parameterbergabe Call-by-Reference hat somit auch nach Beendigung des 
Unterprogramms Rckwirkungen auf das aufrufende Programm.

492

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.2 Unterprogrammtechnik

Syntax

Bedeutung

Hinweis

Die Parameterbergabe Call-by-Reference ist nur dann erforderlich, wenn die bergebene 
Variable lokal in einem aufrufenden Programm definiert ist (LUD). Kanal-globale oder NC-
globale Variablen mssen nicht bergeben werden, da auf diese auch direkt vom 
Unterprogramm aus zugegriffen werden kann.

PROC <Programmname> (VAR <Parametertyp> <Parametername>, ...)
PROC <Programmname> (VAR <Feldtyp> <Feldname> [<m>,<n>,<o>], ...)

Hinweis

Es knnen bis zu 127 Parameter bergeben werden.

PROC:

VAR:

<Programmname>:

<Parametertyp>:

Definitionsanweisung am Anfang eines Programms

Schlsselwort fr die Parameterbergabe per Referenz

Name des Programms

Datentyp des Parameters (z. B. REAL, INT, BOOL)

<Parametername>:

Name des Parameters

<Feldtyp>:

<Feldname>:

Datentyp der Feldelemente (z. B. REAL, INT, BOOL)

Name des Feldes

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

493

neue Werte      g(cid:190)ltigneue Werte      g(cid:190)ltigneueWertzuweisungLAENGE=20BREITE=15UnterprogrammHauptprogrammWertzuweisungLAENGE=20BREITE=10LAENGE, BREITELAENGE, BREITEArbeitsvorbereitung

3.2 Unterprogrammtechnik

[<m>,<n>,<o>]:

Feldgre

Aktuell sind maximal 3-dimensionale Felder mglich:

<m>:

<n>:

<o>:

Feldgre fr 1. Dimension

Feldgre fr 2. Dimension

Feldgre fr 3. Dimension

Hinweis
 Der nach dem Schlsselwort PROC angegebene Programmname muss mit dem an der 

Bedienoberflche vergebenen Programmnamen bereinstimmen.

 Mit Feldern unbestimmter Feldlnge als Formalparameter knnen Unterprogramme Felder 
variabler Lnge bearbeiten. Dazu wird bei der Definition z. B. eines zweidimensionalen 
Feldes als Formalparameter die Lnge der 1. Dimension nicht angegeben. Das Komma 
aber muss geschrieben werden.
Beispiel: PROC <Programmname> (VAR REAL FELD[ ,5])

Beispiel

Siehe auch

Definition eines Unterprogramms mit zwei Parameter als Referenz auf Typ REAL:

Programmcode
; Parameter 1: Referenz auf Typ: REAL, Name: LAENGE
; Parameter 2: Referenz auf Typ: REAL, Name: BREITE

PROC SUB_PROG(VAR REAL LAENGE, VAR REAL BREITE)

Unterprogrammaufruf mit Parameterbergabe (EXTERN) (Seite 518)

3.2.2.4

Modale G-Funktionen sichern (SAVE)

Das Attribut SAVE bewirkt, dass die vor dem Unterprogrammaufruf aktiven modalen G-Befehle 
gesichert und nach dem Unterprogrammende wieder reaktiviert werden. 

ACHTUNG

Unterbrechung des Bahnsteuerbetriebs

Wird bei aktivem Bahnsteuerbetrieb ein Unterprogramme mit Attribut SAVE aufgerufen, wird 
der Bahnsteuerbetrieb am Ende des Unterprogramms (Rcksprung) unterbrochen.

Syntax

PROC <Unterprogrammname> SAVE

494

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Bedeutung

Beispiel

Arbeitsvorbereitung

3.2 Unterprogrammtechnik

SAVE:

Sichern der modalen G-Befehle vor dem Unterprogrammaufruf und Wiederherstellen 
nach Unterprogrammende

Im Unterprogramm KONTUR wirkt der modale G-Befehl G91 (Kettenma). Im Hauptprogramm 
wirkt der modale G-Befehl G90 (Absolutma). Durch die Unterprogrammdefinition mit SAVE 
wirkt nach dem Unterprogrammende im Hauptprogramm wieder G90.

Unterprogramm-Definition:

Programmcode

Kommentar

PROC KONTUR (REAL WERT1) SAVE

; Unterprogramm-Definition mit Parameter SAVE

N10 G91 ...

N100 M17

Hauptprogramm:

; Modaler G-Befehl G91: Kettenma

; Unterprogrammende

Programmcode

Kommentar

N10 G0 X... Y... G90

; Modaler G-Befehl G90: Absolutma

N20 ...

...

N50 KONTUR (12.4)

N60 X... Y...

Randbedingungen

Frames

; Unterprogrammaufruf

; Modaler G-Befehl G90 durch SAVE reaktiviert

Das Verhalten von Frames bezglich Unterprogrammen mit dem Attribut SAVE ist abhngig 
vom Typ des Frames und kann ber Maschinendaten eingestellt werden.

3.2.2.5

Einzelsatzbearbeitung unterdrcken (SBLOF, SBLON)

Auch bei aktiver Einzelsatzbearbeitung hat der Anwender die Mglichkeit, ein NC-Programm 
komplett oder teilweise ohne anzuhalten abzuarbeiten. Die Unterdrckung der 
Einzelsatzbearbeitung erfolgt ber den Befehl SBLOF, das Wiedereinschalten ber den Befehl 
SBLON.

Einzelsatzbearbeitung fr das gesamte NC-Programm unterdrcken

Ist das Ausschalten der Einzelsatzbearbeitung (SBLOF) in der ersten Zeile (PROC ...) eines 
Hauptprogramms programmiert, gilt dies bis zum Ende oder Abbruch des NC-Programms. Das 
NC-Programm wird dann bei Einzelsatz ohne anzuhalten abgearbeitet.

Ist das Ausschalten der Einzelsatzbearbeitung (SBLOF) in der ersten Zeile (PROC ...) eines 
Unterprogramms programmiert, gilt dies bis zum Ende oder Abbruch des NC-Programms. Mit 

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

495

 
 
Arbeitsvorbereitung

3.2 Unterprogrammtechnik

dem programmierten Rcksprung-Befehl wird entschieden, ob am Ende des Unterprogramms 
angehalten wird oder nicht:

 Rcksprung mit M17: Stopp am Ende des Unterprogramms

 Rcksprung mit RET: Kein Stopp am Ende des Unterprogramms

Einzelsatzbearbeitung innerhalb des NC-Programms unterdrcken

Ist das Ausschalten der Einzelsatzbearbeitung (SBLOF) in einem Satz innerhalb eines NC-
Programms programmiert, wird die Einzelsatzbearbeitung ab diesem Satz bis zum nchsten 
programmierten Einschalten der Einzelsatzbearbeitung (SBLON) oder dem Ende der aktiven 
Unterprogrammebene ausgeschaltet.

Einzelsatzbearbeitung fr das gesamte NC-Programm unterdrcken:

PROC ... SBLOF

...

Einzelsatzbearbeitung innerhalb des NC-Programms unterdrcken:

...

SBLOF

...

SBLON

...

PROC:

SBLOF:

Erste Anweisung eines Programms

Vordefinierte Prozedur zum Ausschalten der Einzelsatzbearbeitung

Alleine im Satz:

ja, im PROC-Satz mglich

Wirksamkeit:

modal

SBLON:

Vordefinierte Prozedur zum Einschalten der Einzelsatzbearbeitung

Alleine im Satz:

ja

Wirksamkeit:

modal

Syntax

Bedeutung

496

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
Besonderheiten

Arbeitsvorbereitung

3.2 Unterprogrammtechnik

 Satzanzeige bei unterdrckter Einzelsatzbearbeitung

Die aktuelle Satzanzeige kann in Unterprogrammen mit DISPLOF unterdrckt werden. 
Wird DISPLOF zusammen mit SBLOF programmiert, wird bei Einzelsatz-Stopps innerhalb 
des Unterprogramms der Aufruf des Unterprogramms angezeigt.

 Unterdrckung der Einzelsatzbearbeitung bei asynchronen Unterprogrammen (ASUP)

Um ein ASUP bei aktiver Einzelsatzbearbeitung in einem Schritt abzuarbeiten, muss im 
ASUP eine PROC-Anweisung mit SBLOF programmiert werden. Dies gilt auch fr die 
Funktion "Editierbares System-ASUP" (MD11610 $MN_ASUP_EDITABLE).
Wenn der Einzelsatz-Stopp im System- oder Anwender-ASUP ber die Programmierung 
von SBLOF in der PROC-Zeile oder ber die Einstellungen im Maschinendatum 
MD10702 $MN_IGNORE_SINGLEBLOCK_MASK unterdrckt wird (Bit0 = 1 bzw. Bit1 = 1), 
dann kann der Einzelsatz-Stopp durch Programmierung von SBLON im ASUP wieder 
aktiviert werden.
Wird der Einzelsatz-Stopp im Anwender-ASUP ber die Einstellung im Maschinendatum 
MD20117 $MC_IGNORE_SINGLEBLOCK_ASUP unterdrckt, dann kann der Einzelsatz-
Stopp durch Programmierung von SBLON im ASUP nicht wieder aktiviert werden.

 Besonderheiten bei den verschiedenen Einzelsatzbearbeitungstypen

 "SB2: Rechensatz" UND MD10702 $MN_IGNORE_SINGLEBLOCK_MASK, Bit 12 = 1:

 Im SBLON-Satz wird nicht angehalten.

 "SB3: Einzelsatz fein":

 Der Befehl SBLOF wird unterdrckt.

 Unterdrckung der Einzelsatzbearbeitung in geschachtelten Programmen

Wurde in einem Unterprogramm SBLOF in der PROC-Anweisung programmiert, so wird 
auf den Unterprogrammrcksprung mit M17 angehalten. Damit wird verhindert, dass im 
aufrufenden Programm bereits der nchste Satz ausgefhrt wird. Wird in einem 
Unterprogramm mit SBLOF, ohne SBLOF in der PROC-Anweisung, eine Unterdrckung 
der Einzelsatzbearbeitung aktiviert, wird erst nach dem nchsten Maschinenfunktionssatz 
des aufrufenden Programms angehalten. Ist dies nicht erwnscht, muss im Unterprogramm 
noch vor dem Rcksprung (M17) wieder SBLON programmiert werden. Bei einem 
Rcksprung mit RET in ein bergeordnetes Programm wird nicht angehalten.

Beispiele

Beispiel 1: Einzelsatzbearbeitung innerhalb des NC-Programms unterdrcken

Ausgangssituation: Einzelsatzbearbeitung ist aktiv.

Programmcode

Kommentar

N10 G1 X100 F1000

N20 SBLOF

N30 Y20

N40 M100

N50 R10=90

N60 SBLON

N70 M110

N80 ...

; Einzelsatzbearbeitung ausschalten

; Einzelsatzbearbeitung wieder einschalten

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

497

 
 
 
 
 
 
Arbeitsvorbereitung

3.2 Unterprogrammtechnik

Der Bereich zwischen N20 und N60 wird im Einzelsatzbetrieb als ein Schritt bearbeitet.

Beispiel 2: Zyklus soll fr den Anwender wie ein Befehl wirken

Ausgangssituation: Einzelsatzbearbeitung ist aktiv.

Hauptprogramm:

Programmcode

...

N100 G1 X10 G90 F200

N120 X-4 Y6

N130 CYCLE1

N140 G1 X0

N150 M30

Zyklus CYCLE1:

Programmcode

Kommentar

N100 PROC CYCLE1 DISPLOF SBLOF

; Einzelsatzbearbeitung fr das gesamte Pro-
gramm unterdrcken.

N110 R10=3*SIN(R20)+5

N120 IF (R11 <= 0)

N130  SETAL(61000)

N140 ENDIF

N150 G1 G91 Z=R10 F=R11

N160 M17

Der Zyklus CYCLE1 wird bei aktiver Einzelsatzbearbeitung abgearbeitet. D. h., es muss fr die 
Bearbeitung von CYCLE1 einmal die Start-Taste gedrckt werden.

Beispiel 3: Ein von der PLC gestartetes ASUP zum Aktivieren von genderter 
Nullpunktverschiebung und Werkzeugkorrekturen soll nicht sichtbar sein

Programmcode

Kommentar

N100 PROC NV SBLOF DISPLOF

; Einzelsatzbearbeitung und Satzanzeige unter-
drcken.

N110 CASE $P_UIFRNUM OF

       0 GOTOF _G500

       1 GOTOF _G54

       2 GOTOF _G55

       3 GOTOF _G56

       4 GOTOF _G57

     DEFAULT GOTOF END

N120 _G54: G54 D=$P_TOOL T=$P_TOOLNO

N130 RET

N140 _G54: G55 D=$P_TOOL T=$P_TOOLNO

N150 RET

N160 _G56: G56 D=$P_TOOL T=$P_TOOLNO

N170 RET

498

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.2 Unterprogrammtechnik

Programmcode

Kommentar

N180 _G57: G57 D=$P_TOOL T=$P_TOOLNO

N190 RET

N200 END: D=$P_TOOL T=$P_TOOLNO

N210 RET

Beispiel 4: Gezieltes Anhalten im Unterprogramm

Ausgangssituation:

 Einzelsatzbearbeitung ist aktiv.

 MD10702 $MN_IGNORE_SINGLEBLOCK_MASK, Bit12 = 1

Hauptprogramm:

Programmcode

Kommentar

N10 G0 X0

N20 X10

N30 CYCLE

N50 G90 X20

M30

Zyklus CYCLE:

; Einzelsatz-Stopp

; Einzelsatz-Stopp

; Vom Zyklus generierter Verfahrsatz.

; Einzelsatz-Stopp

Programmcode

Kommentar

PROC CYCLE SBLOF

; Einzelsatzbearbeitung unterdrcken

N100 R0=1

N110 SBLON

N120 X1

N140 SBLOF

N150 R0=2

RET

; Kein Einzelsatz-Stopp wegen MD10702 Bit12=1

; Einzelsatz-Stopp

Beispiel 5: Unterdrckung der Einzelsatzbearbeitung bei Programmschachtelung

Ausgangssituation:

 Einzelsatzbearbeitung Typ 2 ist aktiv.

 Im SBLON-Satz soll nicht angehalten werden 

(MD10702 $MN_IGNORE_SINGLEBLOCK_MASK, Bit12 = 1)

Programmcode

N10 X0 F1000

N20 UP1(0)

      PROC UP1(INT _NR) SBLOF

      N100 X10

      N110 UP2(0)

            PROC UP2(INT _NR)

            N200 X20

Kommentar

; Einzelsatz-Stopp

; Einzelsatzbearbeitung fr UP1 ausschal-
ten

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

499

 
 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.2 Unterprogrammtechnik

Programmcode

            N210 SBLON

            N220 X22

            N230 UP3(0)

                  PROC UP3(INT _NR)

Kommentar

; Einzelsatzbearbeitung einschalten

; Einzelsatz-Stopp

                  N300 SBLOF

; Einzelsatzbearbeitung ausschalten

                  N305 X30

                  N310 SBLON

; Einzelsatzbearbeitung einschalten

                  N320 X32

; Einzelsatz-Stopp

                  N330 SBLOF

; Einzelsatzbearbeitung ausschalten

                  N340 X34

                  N350 M17

; Einzelsatz-Stopp (M17)

            N240 X24

            N250 M17

      N120 X12

      N130 M17

N30 X0

N40 M30

; Einzelsatz-Stopp (N210)

; Einzelsatz-Stopp (M17)

; Einzelsatz-Stopp (M17)

; Einzelsatz-Stopp

; Einzelsatz-Stopp

3.2.2.6

Aktuelle Satzanzeige unterdrcken (DISPLOF, DISPLON, ACTBLOCNO)

In der Satzanzeige wird standardmig der aktuelle Programmsatz angezeigt. In Zyklen bzw. 
Unterprogrammen kann die Anzeige des aktuellen Satzes mit dem Befehl DISPLOF 
unterdrckt werden. Anstelle des aktuellen Satzes wird dann der Aufruf des Zyklus bzw. 
Unterprogramms angezeigt. Mit dem Befehl DISPLON kann die Unterdrckung der 
Satzanzeige wieder aufgehoben werden.

DISPLOF bzw. DISPLON wird in der Programmzeile mit der PROC-Anweisung programmiert 
und wirkt fr das gesamte Unterprogramm und implizit fr alle von diesem Unterprogramm 
aufgerufenen Unterprogramme, die keinen DISPLON- bzw. DISPLOF-Befehl enthalten. Dieses 
Verhalten gilt auch fr ASUPs. 

Syntax

Bedeutung

PROC  DISPLOF
PROC  DISPLOF ACTBLOCNO
PROC  DISPLON

DISPLOF:

Befehl zum Unterdrcken der aktuellen Satzanzeige.

Platzierung:

Am Ende der Programmzeile mit der PROC-Anweisung

Wirksamkeit:

Bis zum Rcksprung aus dem Unterprogramm oder Programm
ende.

Hinweis:
Wenn aus dem Unterprogramm mit dem DISPLOF-Befehl weitere Unterprogram
me aufgerufen werden, dann wird auch in diesen Unterprogrammen die aktuelle 
Satzanzeige unterdrckt, sofern in diesen nicht explizit DISPLON programmiert ist.

500

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
Arbeitsvorbereitung

3.2 Unterprogrammtechnik

DISPLON:

Befehl zum Aufheben der Unterdrckung der aktuellen Satzanzeige

ACTBLOCNO:

Platzierung:

Am Ende der Programmzeile mit der PROC-Anweisung

Wirksamkeit:

Bis zum Rcksprung aus dem Unterprogramm oder Programm
ende.

Hinweis:
Wenn aus dem Unterprogramm mit dem DISPLON-Befehl weitere Unterprogram
me aufgerufen werden, dann wird auch in diesen Unterprogrammen der aktuelle 
Programmsatz angezeigt, sofern in diesen nicht explizit DISPLOF programmiert ist.

DISPLOF zusammen mit dem Attribut ACTBLOCNO bewirkt, dass im Falle eines 
Alarms die Nummer des aktuellen Satzes ausgegeben wird, in dem der Alarm 
aufgetreten ist. Dies gilt auch dann, wenn in einer niedrigeren Programmebene 
nur DISPLOF programmiert ist.

Bei DISPLOF ohne ACTBLOCNO wird dagegen die Satznummer des Zyklen- bzw. 
Unterprogrammaufrufs aus der letzten nicht mit DISPLOF gekennzeichneten Pro
grammebene angezeigt.

Beispiel 1: Aktuelle Satzanzeige im Zyklus unterdrcken

Programmcode

Kommentar

PROC CYCLE(AXIS TOMOV, REAL POSITION) 
SAVE DISPLOF

; Aktuelle Satzanzeige unterdrcken. Statt-
dessen soll der Zyklus-Aufruf angezeigt wer-
den, z. B.: CYCLE(X,100.0)

DEF REAL DIFF

G01 ...

...

RET

; Zyklen-Inhalt

; Unterprogramm-Rcksprung. In der Satzan-
zeige wird der auf den Zyklus-Aufruf folgen-
de Satz angezeigt.

Beispiele

Beispiel 2: Satzanzeige bei der Alarmausgabe

Unterprogramm SUBPROG1 (mit ACTBLOCNO):

Programmcode

Kommentar

PROC SUBPROG1 DISPLOF ACTBLOC-
NO

N8000 R10 = R33 + R44

...

N9040 R10 = 66 X100

; Alarm 12080 auslsen

...

N10000 M17

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

501

 
 
 
 
 
 
 
Arbeitsvorbereitung

3.2 Unterprogrammtechnik

Unterprogramm SUBPROG2 (ohne ACTBLOCNO):

Programmcode

Kommentar

PROC SUBPROG2 DISPLOF

N5000 R10 = R33 + R44

...

N6040 R10 = 66 X100

; Alarm 12080 auslsen

...

N7000 M17

Hauptprogramm:

Programmcode

N1000 G0 X0 Y0 Z0

N1010 ...

...

N2050 SUBPROG1

N2060 ...

N2350 SUBPROG2

...

N3000 M30

Kommentar

; Alarmausgabe = "12080 Kanal K1 Satz N9040 Syntax-
fehler bei Text R10="

; Alarmausgabe = "12080 Kanal K1 Satz N2350 Syntax-
fehler bei Text R10="

Beispiel 3: Unterdrckung der aktuellen Satzanzeige aufheben

Unterprogramm SUB1 mit Unterdrckung:

Programmcode

PROC SUB1 DISPLOF

...

N300 SUB2

...

N500 M17

Kommentar

; Aktuelle Satzanzeige im Unterprogramm SUB1 unter-
drcken. Stattdessen soll der Satz mit dem SUB1-Auf-
ruf angezeigt werden.

; Unterprogramm SUB2 aufrufen.

Unterprogramm SUB2 ohne Unterdrckung:

Programmcode

PROC SUB2 DISPLON

...

N200 M17

Kommentar

; Unterdrckung der aktuellen Satzanzeige im Unter-
programm SUB2 aufheben.

; Rcksprung ins Unterprogramm SUB1. In SUB1 wird die 
aktuelle Satzanzeige wieder unterdrckt.

502

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Beispiel 4: Anzeigeverhalten bei unterschiedlichen DISPLON/DISPLOF-Kombinationen

Arbeitsvorbereitung

3.2 Unterprogrammtechnik

 In der aktuellen Satzanzeige werden die Teileprogrammzeilen aus Programmebene 0 angezeigt.
 In der aktuellen Satzanzeige werden die Teileprogrammzeilen aus Programmebene 3 angezeigt.
 In der aktuellen Satzanzeige werden die Teileprogrammzeilen aus Programmebene 3 angezeigt.
 In der aktuellen Satzanzeige werden die Teileprogrammzeilen aus Programmebene 7/8 angezeigt.

3.2.2.7

Unterprogramme mit Vorbereitung kennzeichnen (PREPRO)

Mit dem Schlsselwort PREPRO knnen im Hochlauf am Ende der PROC-Anweisungszeile alle 
Dateien gekennzeichnet werden. 

Hinweis

Diese Art der Programmvorbereitung ist von der Einstellung von Maschinendatum MD10700 
$MN_PREPROCESSING_LEVEL abhngig. Bitte Angaben des Maschinenherstellers 
beachten.

Syntax

Bedeutung

PROC  PREPRO

PREPRO:

Schlsselwort fr Kennzeichnung aller im Hochlauf vorbereiteten Dateien, der in Zy
klenverzeichnissen abgelegten NC-Programme

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

503

(cid:20)(cid:21)(cid:22)(cid:23)(cid:43)(cid:51)(cid:82)(cid:75)(cid:81)(cid:72)(cid:51)(cid:53)(cid:50)(cid:38)(cid:56)(cid:51)(cid:20)(cid:51)(cid:53)(cid:50)(cid:38)(cid:39)(cid:44)(cid:54)(cid:51)(cid:47)(cid:50)(cid:41)(cid:56)(cid:51)(cid:22)(cid:51)(cid:53)(cid:50)(cid:38)(cid:39)(cid:44)(cid:54)(cid:51)(cid:47)(cid:50)(cid:49)(cid:56)(cid:51)(cid:23)(cid:51)(cid:53)(cid:50)(cid:38)(cid:39)(cid:44)(cid:54)(cid:51)(cid:47)(cid:50)(cid:41)(cid:56)(cid:51)(cid:25)(cid:51)(cid:53)(cid:50)(cid:38)(cid:39)(cid:44)(cid:54)(cid:51)(cid:47)(cid:50)(cid:41)(cid:56)(cid:51)(cid:26)(cid:51)(cid:53)(cid:50)(cid:38)(cid:39)(cid:44)(cid:54)(cid:51)(cid:47)(cid:50)(cid:49)(cid:56)(cid:51)(cid:28)(cid:51)(cid:53)(cid:50)(cid:38)(cid:39)(cid:44)(cid:54)(cid:51)(cid:47)(cid:50)(cid:41)(cid:36)(cid:54)(cid:56)(cid:51)(cid:51)(cid:53)(cid:50)(cid:38)(cid:39)(cid:44)(cid:54)(cid:51)(cid:47)(cid:50)(cid:41)(cid:56)(cid:51)(cid:21)(cid:82)(cid:75)(cid:81)(cid:72)(cid:51)(cid:53)(cid:50)(cid:38)(cid:56)(cid:51)(cid:27)(cid:82)(cid:75)(cid:81)(cid:72)(cid:51)(cid:53)(cid:50)(cid:38)(cid:51)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)(cid:72)(cid:69)(cid:72)(cid:81)(cid:72)(cid:29)(cid:43)(cid:51)(cid:29)(cid:3)(cid:43)(cid:68)(cid:88)(cid:83)(cid:87)(cid:83)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)(cid:56)(cid:51)(cid:29)(cid:3)(cid:56)(cid:81)(cid:87)(cid:72)(cid:85)(cid:83)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)(cid:36)(cid:54)(cid:56)(cid:51)(cid:29)(cid:3)(cid:36)(cid:86)(cid:92)(cid:81)(cid:70)(cid:75)(cid:85)(cid:82)(cid:81)(cid:72)(cid:86)(cid:3)(cid:56)(cid:81)(cid:87)(cid:72)(cid:85)(cid:83)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)(cid:3)(cid:11)(cid:44)(cid:81)(cid:87)(cid:72)(cid:85)(cid:85)(cid:88)(cid:83)(cid:87)(cid:85)(cid:82)(cid:88)(cid:87)(cid:76)(cid:81)(cid:72)(cid:12)(cid:19)(cid:20)(cid:21)(cid:22)(cid:23)(cid:24)(cid:25)(cid:26)(cid:27)(cid:28)Arbeitsvorbereitung

3.2 Unterprogrammtechnik

Unterprogramme mit Vorbereitung einlesen und Unterprogrammaufruf

Sowohl im Hochlauf vorbereiteter Unterprogramme mit Parametern als auch beim 
Unterprogrammaufruf werden die Zyklenverzeichnissen in der gleichen Reihenfolge 
behandelt:

1. _N_CUS_DIR Anwenderzyklen

2. _N_CMA_DIR Herstellerzyklen

3. _N_CST_DIR Standardzyklen

Im Falle gleichnamiger NC-Programme mit unterschiedlicher Ausprgung wird die zuerst 
gefundene PROC-Anweisung aktiviert und die andere PROC-Anweisung wird ohne 
Alarmmeldung berlesen.

3.2.2.8

Unterprogrammrcksprung M17

Am Ende eines Unterprogramms steht der Rcksprung-Befehl M17 (bzw. der 
Teileprogrammende-Befehl M30). Er bewirkt den Rcksprung in das aufrufende Programm auf 
den Teileprogrammsatz nach dem Unterprogrammaufruf. 

Hinweis

M17 und M30 werden in der NC-Sprache gleichwertig behandelt.

Syntax

PROC <Programmname>

...

M17/M30

Randbedingungen

Auswirkung des Unterprogrammrcksprungs auf den Bahnsteuerbetrieb

Steht M17 (bzw. M30) alleine im Teilprogrammsatz, wird dadurch ein im Kanal aktiver 
Bahnsteuerbetrieb unterbrochen.

Um zu vermeiden, dass der Bahnsteuerbetrieb unterbrochen wird, ist M17 (bzw. M30) mit in den 
letzten Verfahrsatz zu schreiben. Zustzlich muss folgendes Maschinendatum auf "0" gesetzt 
sein:

MD20800 $MC_SPF_END_TO_VDI = 0 (keine M30/M17-Ausgabe an die NC/PLC-Nahtstelle)

1. Unterprogramm mit M17 im eigenen Satz

Programmcode

Kommentar

N10 G64 F2000 G91 X10 Y10 

N20 X10 Z10

Beispiel

504

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
Arbeitsvorbereitung

3.2 Unterprogrammtechnik

Programmcode

N30 M17

Kommentar

; Rcksprung mit Unterbrechung des Bahnsteuerbet-
riebs.

2. Unterprogramm mit M17 im letzten Verfahrsatz

Programmcode

Kommentar

N10 G64 F2000 G91 X10 Y10 

N20 X10 Z10 M17

; Rcksprung ohne Unterbrechung des Bahnsteuerbet-
riebs.

3.2.2.9

Unterprogrammrcksprung RET

Als Ersatz fr den Rcksprungsbefehl M17 kann im Unterprogramm auch der Befehl RET 
verwendet werden. RET muss in einem eigenen Teileprogrammsatz programmiert werden. 
Wie M17 bewirkt RET den Rcksprung in das aufrufende Programm auf den 
Teileprogrammsatz nach dem Unterprogrammaufruf.

Hinweis

Durch die Programmierung von Parametern kann das Rcksprungverhalten von RET gendert 
werden (siehe "Parametrierbarer Unterprogrammrcksprung (RET ...) (Seite 506)").

Anwendung

Voraussetzung

Syntax

Beispiel

Die RET-Anweisung ist dann zu benutzen, wenn ein G64-Bahnsteuerbetrieb (G641 ... G645) 
durch den Rcksprung nicht unterbrochen werden soll.

Der Befehl RET kann nur in Unterprogrammen verwendet werden, die nicht mit dem 
Attribut SAVE definiert wurden.

PROC <Programmname>

...

RET

Hauptprogramm:

Programmcode

Kommentar

PROC MAIN_PROGRAM

; Programmanfang

...

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

505

 
 
Arbeitsvorbereitung

3.2 Unterprogrammtechnik

Programmcode

N50 SUB_PROG

N60 ...

...

N100 M30

Unterprogramm:

Programmcode

PROC SUB_PROG

...

N100 RET

Kommentar

; Unterprogrammaufruf: SUB_PROG

; Programmende

Kommentar

; Rcksprung erfolgt auf Satz N60 im Hauptprogramm.

3.2.2.10

Parametrierbarer Unterprogrammrcksprung (RET ...)

Im Allgemeinen wird mit dem Befehl RET aus einem Unterprogramm in das aufrufende 
Programm zurckgesprungen. Die Bearbeitung wird dann mit der auf den 
Unterprogrammaufruf folgenden Programmzeile fortgesetzt. Soll die Programmbearbeitung 
an einer anderen Stelle fortgesetzt werden, stehen folgende Mglichkeiten zur Verfgung:

 Fortsetzung der Programmbearbeitung nach Aufruf der Abspanzyklen im ISO-Dialekt-

Modus (nach der Konturbeschreibung).

 Rcksprung ins Hauptprogramm aus einer beliebigen Unterprogrammebene (auch nach 

ASUP) beim Fehlerhandling.

 Rcksprung ber mehrere Programmebenen fr spezielle Anwendungen in Compile-

Zyklen und im ISO-Dialekt-Modus.

Dazu ist der Befehl RET mit weiteren Parametern zu programmieren. 

Suchrichtung

Bei Angabe des Parameters <Zielsatz> erfolgt der Rcksprung zuerst auf den Satz nach 
dem Aufrufsatz. Anschlieend wird das Ziel in Richtung Ende des Programms gesucht, in das 
zurckgesprungen wird. Ist die Suche nicht erfolgreich, wird als nchstes in Richtung 
Programmanfang gesucht.

Syntax

RET("<Zielsatz>")
RET("<Zielsatz>",<Satz nach Zielsatz>)
RET("<Zielsatz>",<Satz nach Zielsatz>,<Anzahl der Rcksprungebenen>)
RET("<Zielsatz>", ,<Anzahl der Rcksprungebenen>)
RET("<Zielsatz>",<Satz nach Zielsatz>,<Anzahl der Rcksprungebenen>,
<Rcksprung auf Programmanfang>)
RET( , ,<Anzahl der Rcksprungebenen>,<Rcksprung auf Programmanfang
>)

506

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
Bedeutung

RET:

<Zielsatz>:

Arbeitsvorbereitung

3.2 Unterprogrammtechnik

Unterprogrammende

Im Parameter wird als Sprungziel der Satz angegeben, an dem 
die Programmbearbeitung fortgesetzt werden soll.

Ist der Parameter <Anzahl der Rcksprungebenen> nicht pro
grammiert, dann befindet sich das Sprungziel in dem Programm, 
aus dem das aktuelle Unterprogramm aufgerufen wurde.

Mgliche Angaben sind:

<Satznummer>

Nummer des Zielsatzes. 

<Sprungmarke>

<Zeichenkette>

Die Suche nach der Satznummer erfolgt im 
Programm, in das zurckgesprungen wird, 
zuerst in Richtung Programmende.

Sprungmarke, die im Programm, in das zu
rckgesprungen wird, vorhanden sein muss.

Die Suche nach der Sprungmarke erfolgt im 
Programm, in das zurckgesprungen wird, 
zuerst in Richtung Programmende.

Zeichenkette, die im Programm, in das zu
rckgesprungen wird, vorhanden sein muss 
(z. B. Programm- oder Variablenname).

Die Suche nach der Zeichenkette erfolgt im 
Programm, in das zurckgesprungen wird, 
zuerst in Richtung Programmende.

Fr die Programmierung der Zeichenkette im 
Zielsatz gelten folgende Regeln:

 Leerzeichen am Ende (im Unterschied 

zur Sprungmarke, die durch einen ":" am 
Ende gekennzeichnet ist).

 Vor der Zeichenkette drfen nur eine 

Satznummer und/oder eine Sprungmarke 
gesetzt sein, keine Programmbefehle.

<Satz nach Zielsatz>:

Im Parameter wird angegeben, ob die Programmbearbeitung im 
unter Parameter <Zielsatz> angegebenen Satz oder im darauf 
folgenden Satz fortgefhrt werden soll.

Typ:

Wert:

INT

0

Der Rcksprung erfolgt auf den im Parameter 
<Zielsatz> angegebenen Satz.

> 0 Der Rcksprung erfolgt auf den im Parameter 
<Zielsatz> angegebenen nachfolgenden Satz.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

507

Arbeitsvorbereitung

3.2 Unterprogrammtechnik

<Anzahl der
Rcksprungebenen>:

Im Parameter wird die Anzahl der Programmebenen angegeben, 
die zurckzuspringen sind, um dort den Zielsatz zu suchen und 
die Programmbearbeitung fortzusetzen.

Das Programm wird in der "aktuellen Pro
grammebene -1" fortgesetzt (wie RET ohne 
Parameter).

Das Programm wird in der "aktuellen Pro
grammebene -2" fortgesetzt, d. h., es wird eine 
Ebene bersprungen.

Das Programm wird in der "aktuellen Pro
grammebene -3" fortgesetzt, d. h., es werden 
zwei Ebenen bersprungen.

Typ:

Wert:

INT

1

2

3

...

1 ... 15

Wertebe
reich:

<Rcksprung auf
Programmanfang>:

Im Parameter wird angegeben, ob bei einem Rcksprung in das 
Hauptprogramm und dort aktivem ISO-Dialekt-Modus das Pro
gramm am Programmanfang fortgesetzt werden soll.

Typ:

Wert:

BOOL

1 Wenn der Rcksprung ins Hauptprogramm er
folgt und dort ein ISO-Dialekt-Modus aktiv ist, 
wird auf den Programmanfang verzweigt.

Hinweis

Bei einem Unterprogrammrcksprung mit einer Zeichenkette als Angabe fr die Zielsatzsuche 
wird im aufrufenden Programm immer zuerst nach einer Sprungmarke gesucht.

Wenn ein Sprungziel durch eine Zeichenkette eindeutig definiert sein soll, darf die 
Zeichenkette daher nicht mit dem Namen einer Sprungmarke bereinstimmen, da sonst der 
Unterprogrammrcksprung immer auf die Sprungmarke und nicht auf die Zeichenkette 
ausgefhrt wird (siehe Beispiel 2).

Randbedingungen

Beim Rcksprung ber mehrere Programmebenen werden die SAVE-Anweisungen der 
einzelnen Programmebenen ausgewertet.

Ist bei einem Rcksprung ber mehrere Programmebenen ein modales Unterprogramm aktiv 
und ist in einem der bersprungenen Unterprogramme der Abwahlbefehl MCALL fr das 
modale Unterprogramm programmiert, bleibt das modale Unterprogramm weiterhin aktiv.

ACHTUNG

Programmierfehler

Bei einem Rcksprung ber mehrere Programmebenen liegt es in der alleinigen 
Verantwortung des Anwenders, dafr zu sorgen, dass mit den erforderlichen modalen 
Einstellungen fortgesetzt wird. Dies kann z. B. durch Programmierung eines entsprechenden 
Hauptsatzes erreicht.

508

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
Beispiele

Arbeitsvorbereitung

3.2 Unterprogrammtechnik

Beispiel 1: Wiederaufsetzen im Hauptprogramm nach ASUP-Bearbeitung

Programmierung

N10010 CALL "UP1"

  N11000 PROC UP1

  N11010 CALL "UP2"

  N12000 PROC UP2

  ...

Kommentar

; Programmebene 0 (Hauptprogramm)

; Programmebene 1

; Programmebene 2

  N19000 PROC ASUP

; Programmebene 3 (ASUP-Bearbeitung)

  ...

  N19100 RET("N10900", ,$P_STACK)

; Unterprogrammrcksprung ins Hauptprogramm

N10900

N10910 MCALL

; $P_STACK: aktuelle Programmebene

; Zielsatz im Hauptprogramm

; Modalen Unterprogrammaufruf ausschalten

N10920 G0 G60 G40 M5

; Weitere modale Einstellungen initialisieren

Beispiel 2: Zeichenkette (<String>) als Angabe fr die Zielsatzsuche

Hauptprogramm:

Programmcode

PROC MAIN_PROGRAM

N1000 DEF INT iVar1=1, iVar2=4

N1010 ...

N1200 subProg1

N1210 M2 S1000 X10 F1000

N1220 ......

N1400 subProg2

N1410 M3 S500 Y20

N1420 ..

N1500 lab1: iVar1=R10*44

N1510 F500 X5

N1520 ...

Kommentar

; Aufruf von Unterprogramm "subProg1"

; Aufruf von Unterprogramm "subProg2"

N1550 subprog1: G1 X30

; "subProg1" ist hier als Sprungmarke definiert.

N1560 ...

N1600 subProg3

N1610 ...

N1900 M30

; Aufruf von Unterprogramm "subProg3"

Unterprogramm subProg1:

Programmcode

PROC subProg1

Kommentar

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

509

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.2 Unterprogrammtechnik

Programmcode

N2000 R10=R20+100

N2010 ...

Kommentar

N2200 RET("subProg2")

; Rcksprung ins Hauptprogramm auf den Satz N1400

Unterprogramm subProg2:

Programmcode

PROC subProg2

N2000 R10=R20+100

N2010 ...

Kommentar

N2200 RET("iVar1")

; Rcksprung ins Hauptprogramm auf den Satz N1500

Unterprogramm subProg3:

Programmcode

PROC subProg3

N2000 R10=R20+100

N2010 ...

Kommentar

N2200 RET("subProg1")

; Rcksprung ins Hauptprogramm auf den Satz N1550

Weitere Informationen

Die folgenden Grafiken zeigen die unterschiedlichen Wirkungen der Rcksprungsparameter

1. <Zielsatz> = "N200", <Satz nach Zielsatz> = 0

510

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:17)(cid:17)(cid:17)(cid:49)(cid:21)(cid:19)(cid:19)(cid:3)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:3)(cid:3)(cid:3)(cid:51)(cid:53)(cid:50)(cid:38)(cid:3)(cid:54)(cid:56)(cid:37)(cid:20)(cid:49)(cid:20)(cid:19)(cid:3)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:49)(cid:24)(cid:19)(cid:3)(cid:53)(cid:40)(cid:55)(cid:11)(cid:3248)(cid:49)(cid:21)(cid:19)(cid:19)(cid:3248)(cid:15)(cid:19)(cid:12)(cid:43)(cid:68)(cid:88)(cid:83)(cid:87)(cid:83)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)(cid:56)(cid:81)(cid:87)(cid:72)(cid:85)(cid:83)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)(cid:17)(cid:17)(cid:17)(cid:49)(cid:20)(cid:19)(cid:19)(cid:3)(cid:54)(cid:56)(cid:37)(cid:20)(cid:49)(cid:20)(cid:20)(cid:19)(cid:3)(cid:42)(cid:19)(cid:3)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17) 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.2 Unterprogrammtechnik

Nach dem RET-Befehl wird die Programmbearbeitung mit dem Satz N200 im Hauptprogramm 
fortgesetzt.

2. <Zielsatz> = "N200", <Satz nach Zielsatz> = 1

Nach dem RET-Befehl wird die Programmbearbeitung mit dem Satz (N210) fortgesetzt, der auf 
den Satz N200 im Hauptprogramm folgt.

3. <Zielsatz> = "N220", <Anzahl der Rcksprungebenen> = 2

Nach dem RET-Befehl wird zwei Programmebenen zurckgesprungen und die 
Programmbearbeitung wird mit dem Satz N220 fortgesetzt.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

511

(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:51)(cid:53)(cid:50)(cid:38)(cid:3)(cid:54)(cid:56)(cid:37)(cid:21)(cid:49)(cid:20)(cid:19)(cid:3)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:49)(cid:24)(cid:19)(cid:3)(cid:53)(cid:40)(cid:55)(cid:11)(cid:3248)(cid:21)(cid:19)(cid:19)(cid:3248)(cid:15)(cid:20)(cid:12)(cid:17)(cid:17)(cid:17)(cid:49)(cid:21)(cid:19)(cid:19)(cid:3)(cid:17)(cid:17)(cid:17)(cid:49)(cid:21)(cid:20)(cid:19)(cid:3)(cid:17)(cid:17)(cid:17)(cid:49)(cid:21)(cid:21)(cid:19)(cid:3)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:49)(cid:20)(cid:19)(cid:19)(cid:3)(cid:54)(cid:56)(cid:37)(cid:21)(cid:49)(cid:20)(cid:20)(cid:19)(cid:3)(cid:42)(cid:19)(cid:3)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:43)(cid:68)(cid:88)(cid:83)(cid:87)(cid:83)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)(cid:56)(cid:81)(cid:87)(cid:72)(cid:85)(cid:83)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)(cid:17)(cid:17)(cid:17)(cid:49)(cid:21)(cid:21)(cid:19)(cid:3)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:53)(cid:40)(cid:55)(cid:11)(cid:5)(cid:49)(cid:21)(cid:21)(cid:19)(cid:5)(cid:15)(cid:3)(cid:15)(cid:21)(cid:12)(cid:80)(cid:68)(cid:91)(cid:17)(cid:3)(cid:20)(cid:25)(cid:3)(cid:51)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)(cid:72)(cid:69)(cid:72)(cid:81)(cid:72)(cid:81)(cid:56)(cid:81)(cid:87)(cid:72)(cid:85)(cid:16)(cid:83)(cid:85)(cid:82)(cid:74)(cid:85)(cid:17)(cid:56)(cid:81)(cid:87)(cid:72)(cid:85)(cid:16)(cid:83)(cid:85)(cid:82)(cid:74)(cid:85)(cid:17)(cid:56)(cid:81)(cid:87)(cid:72)(cid:85)(cid:16)(cid:83)(cid:85)(cid:82)(cid:74)(cid:85)(cid:17)(cid:43)(cid:68)(cid:88)(cid:83)(cid:87)(cid:16)(cid:83)(cid:85)(cid:82)(cid:74)(cid:85)(cid:17)(cid:53)(cid:190)(cid:70)(cid:78)(cid:86)(cid:83)(cid:85)(cid:88)(cid:81)(cid:74)(cid:53)(cid:190)(cid:70)(cid:78)(cid:86)(cid:83)(cid:85)(cid:88)(cid:81)(cid:74)Arbeitsvorbereitung

3.2 Unterprogrammtechnik

3.2.2.11

Parametrierbarer Unterprogrammrcksprung (RETB ...)

Im Allgemeinen wird mit dem Befehl RETB aus einem Unterprogramm in das aufrufende 
Programm zurckgesprungen. Die Bearbeitung wird dann mit der auf den 
Unterprogrammaufruf folgenden Programmzeile fortgesetzt. Soll die Programmbearbeitung 
an einer anderen Stelle fortgesetzt werden, stehen folgende Mglichkeiten zur Verfgung:

 Fortsetzung der Programmbearbeitung nach Aufruf der Abspanzyklen im ISO-Dialekt-

Modus (nach der Konturbeschreibung).

 Rcksprung ins Hauptprogramm aus einer beliebigen Unterprogrammebene (auch nach 

ASUP) beim Fehlerhandling.

 Rcksprung ber mehrere Programmebenen fr spezielle Anwendungen in Compile-

Zyklen und im ISO-Dialekt-Modus.

Dazu ist der Befehl RETB mit weiteren Parametern zu programmieren. 

Suchrichtung

Bei Angabe des Parameters <Zielsatz> erfolgt der Rcksprung zuerst auf den Satz nach 
dem Aufrufsatz. Anschlieend wird das Ziel in Richtung Anfang des Programms gesucht, in 
das zurckgesprungen wird. Ist die Suche nicht erfolgreich, wird als nchstes in Richtung 
Programmende gesucht.

Syntax

RETB("<Zielsatz>")
RETB("<Zielsatz>",<Satz nach Zielsatz>)
RETB("<Zielsatz>",<Satz nach Zielsatz>,<Anzahl der Rcksprungebenen>)
RETB("<Zielsatz>", ,<Anzahl der Rcksprungebenen>)
RETB("<Zielsatz>",<Satz nach Zielsatz>,<Anzahl der Rcksprungebenen>,
<Rcksprung auf Programmanfang>)
RETB( , ,<Anzahl der Rcksprungebenen>,<Rcksprung auf Programmanfan
g>)

512

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Bedeutung

RETB:

<Zielsatz>:

Arbeitsvorbereitung

3.2 Unterprogrammtechnik

Unterprogrammende

Im Parameter wird als Sprungziel der Satz angegeben, an dem 
die Programmbearbeitung fortgesetzt werden soll.

Ist der Parameter <Anzahl der Rcksprungebenen> nicht pro
grammiert, dann befindet sich das Sprungziel in dem Programm, 
aus dem das aktuelle Unterprogramm aufgerufen wurde.

Mgliche Angaben sind:

<Satznummer>

Nummer des Zielsatzes. 

<Sprungmarke>

<Zeichenkette>

Die Suche nach der Satznummer erfolgt im 
Programm, auf das zurckgesprungen wird, 
zuerst in Richtung Programmanfang.

Sprungmarke, die im Programm, in das zu
rckgesprungen wird, vorhanden sein muss.

Die Suche nach der Sprungmarke erfolgt im 
Programm, auf das zurckgesprungen wird, 
zuerst in Richtung Programmanfang.

Zeichenkette, die im Programm, in das zu
rckgesprungen wird, vorhanden sein muss 
(z. B. Programm- oder Variablenname).

Die Suche nach der Zeichenkette erfolgt im 
Programm, auf das zurckgesprungen wird, 
zuerst in Richtung Programmanfang.

Fr die Programmierung der Zeichenkette im 
Zielsatz gelten folgende Regeln:

 Leerzeichen am Ende (im Unterschied 

zur Sprungmarke, die durch einen ":" am 
Ende gekennzeichnet ist).

 Vor der Zeichenkette drfen nur eine 

Satznummer und/oder eine Sprungmarke 
gesetzt sein, keine Programmbefehle.

<Satz nach Zielsatz>:

Im Parameter wird angegeben, ob die Programmbearbeitung im 
unter Parameter <Zielsatz> angegebenen Satz oder im darauf 
folgenden Satz fortgefhrt werden soll.

Typ:

Wert:

INT

0

Der Rcksprung erfolgt auf den im Parameter 
<Zielsatz> angegebenen Satz.

> 0 Der Rcksprung erfolgt auf den im Parameter 
<Zielsatz> angegebenen nachfolgenden Satz.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

513

Arbeitsvorbereitung

3.2 Unterprogrammtechnik

<Anzahl der
Rcksprungebenen>:

Im Parameter wird die Anzahl der Programmebenen angegeben, 
die zurckzuspringen sind, um dort den Zielsatz zu suchen und 
die Programmbearbeitung fortzusetzen.

Das Programm wird in der "aktuellen Pro
grammebene -1" fortgesetzt (wie RET ohne 
Parameter).

Das Programm wird in der "aktuellen Pro
grammebene -2" fortgesetzt, d. h., es wird eine 
Ebene bersprungen.

Das Programm wird in der "aktuellen Pro
grammebene -3" fortgesetzt, d. h., es werden 
zwei Ebenen bersprungen.

Typ:

Wert:

INT

1

2

3

...

1 ... 15

Wertebe
reich:

<Rcksprung auf
Programmanfang>:

Im Parameter wird angegeben, ob bei einem Rcksprung in das 
Hauptprogramm und dort aktivem ISO-Dialekt-Modus das Pro
gramm am Programmanfang fortgesetzt werden soll.

Typ:

Wert:

BOOL

1 Wenn der Rcksprung ins Hauptprogramm er
folgt und dort ein ISO-Dialekt-Modus aktiv ist, 
wird auf den Programmanfang verzweigt.

Hinweis

Bei einem Unterprogrammrcksprung mit einer Zeichenkette als Angabe fr die Zielsatzsuche 
wird im aufrufenden Programm immer zuerst nach einer Sprungmarke gesucht.

Wenn ein Sprungziel durch eine Zeichenkette eindeutig definiert sein soll, darf die 
Zeichenkette daher nicht mit dem Namen einer Sprungmarke bereinstimmen, da sonst der 
Unterprogrammrcksprung immer auf die Sprungmarke und nicht auf die Zeichenkette 
ausgefhrt wird (siehe Beispiel 2).

Randbedingungen

Beim Rcksprung ber mehrere Programmebenen werden die SAVE-Anweisungen der 
einzelnen Programmebenen ausgewertet.

Ist bei einem Rcksprung ber mehrere Programmebenen ein modales Unterprogramm aktiv 
und ist in einem der bersprungenen Unterprogramme der Abwahlbefehl MCALL fr das 
modale Unterprogramm programmiert, bleibt das modale Unterprogramm weiterhin aktiv.

ACHTUNG

Programmierfehler

Bei einem Rcksprung ber mehrere Programmebenen liegt es in der alleinigen 
Verantwortung des Anwenders, dafr zu sorgen, dass mit den erforderlichen modalen 
Einstellungen fortgesetzt wird. Dies kann z. B. durch Programmierung eines entsprechenden 
Hauptsatzes erreicht.

514

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
Arbeitsvorbereitung

3.2 Unterprogrammtechnik

Beispiel

Kommentar

Programmcode

BEISPIEL.MPF

    

   N3000 START_CYC(parm1, param2, )

   N3010 TECH_CYC1(param1, param2, )

   N3020 TECH_CYC2(param1, param2, )

   N3030 TECH_CYC3(param1, param2, )

   N3040 END_CYC(param1, param2, )

   N3040 END_CYC(param1, param2, )

   N3050 

   N4500 START_CYC(param11, param12, )

   N4510 

   N4590 END_CYC(param11, param12, ..)

   N5000 

    

N6000 M30

Programmcode

PROC END_CYC()

   N10000 

   N15000 if status == 1

Kommentar

; Aufruf im Hauptprogramm Zeile N3040

      N15010 RETB(START_CYC)

; Rcksprung auf aufrufendes Programm BEISPIEL.MPF

; Suche nach Zeichenkette "START_CYC"

; Suchrichtung: rckwrts Richtung Progammanfang 

; Fortsetzung der Programmbearbeitung mit Zeile 
N3000

   N15020 endif

   N15030 if status == 0

      N15040 RET

; Rcksprung auf aufrufendes Programm BEISPIEL.MPF

   N15050 endif

   N16000 RET(START_CYC)

; Rcksprung auf aufrufendes Programm BEISPIEL.MPF

; Fortsetzung der Programmbearbeitung mit Zeile 
N3050

; Suche nach Zeichenkette "START_CYC"

; Suchrichtung: vorwrts Richtung Progammende

; Fortsetzung der Programmbearbeitung mit Zeile 
N4500

N17060 RETB

; Rcksprung auf aufrufendes Programm BEISPIEL.MPF

; Fortsetzung der Programmbearbeitung mit Zeile 
N3050

; RETB ohne Parameter ist identisch mit RET

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

515

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.2 Unterprogrammtechnik

3.2.3

Aufruf eines Unterprogramms

3.2.3.1

Unterprogrammaufruf ohne Parameterbergabe

Der Aufruf eines Unterprogramms erfolgt entweder mit Adresse L und Unterprogrammnummer 
oder durch Angabe des Programmnamens.

Auch ein Hauptprogramm kann als Unterprogramm aufgerufen werden. Das im 
Hauptprogramm gesetzte Programmende M2 oder M30 wird in diesem Fall wie M17 
(Programmende mit Rcksprung ins aufrufende Programm) gewertet. 

Hinweis

Entsprechend kann ein Unterprogramm auch als Hauptprogramm gestartet werden.

Suchstrategie der Steuerung:

Gibt es *_MPF?

Gibt es *_SPF?

Daraus folgt: Falls der Name des aufzurufenden Unterprogramms mit dem Namen des 
Hauptprogramms identisch ist, dann wird das aufrufende Hauptprogramm wieder aufgerufen. 
Dieser in der Regel nicht gewnschte Effekt muss durch eindeutige Namenswahl ber 
Unterprogramme und Hauptprogramme vermieden werden.

Hinweis

Unterprogramme, die keine Parameterbergabe erfordern, knnen auch aus einer 
Initialisierungsdatei aufgerufen werden.

Syntax

L<Nummer>/<Programmname>

Hinweis

Der Aufruf eines Unterprogramms muss immer im eigenen NC-Satz programmiert werden.

Bedeutung

L:

<Nummer>:

Adresse fr den Unterprogrammaufruf 

Nummer des Unterprogramms

Typ:

Wert:

INT

Maximal 7 Dezimalstellen

Achtung:
Fhrende Nullen sind bei der Namensgebung von Bedeu
tung ( L123, L0123 und L00123 sind drei verschiedene 
Unterprogramme).

<Programmname>:

Name des Unterprogramms (oder Hauptprogramms)

516

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Beispiele

Beispiel 1: Aufruf eines Unterprogramms ohne Parameterbergabe

Arbeitsvorbereitung

3.2 Unterprogrammtechnik

Beispiel 2: Aufruf eines Hauptprogramms als Unterprogramm

Siehe auch

Unterprogramm ohne Parameterbergabe (Seite 489)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

517

N10N10 L47UnterprogrammoderHauptprogrammZapfen_2N50 M30...N10...N10WELLE3N10 MPF739weiteresHauptprogrammoderHauptprogrammArbeitsvorbereitung

3.2 Unterprogrammtechnik

3.2.3.2

Unterprogrammaufruf mit Parameterbergabe (EXTERN)

Beim Unterprogrammaufruf mit Parameterbergabe knnen Variablen oder Werte direkt 
bergeben werden (nicht bei VAR-Parametern).

Unterprogramme mit Parameterbergabe mssen vor dem Aufruf im Hauptprogramm mit 
EXTERN bekannt gemacht werden (z. B. am Programmanfang). Angegeben werden dabei der 
Name des Unterprogramms und die Variablentypen in der Reihenfolge der bergabe. 

ACHTUNG

Verwechslungsgefahr

Sowohl die Variablentypen als auch die Reihenfolge der bergabe muss mit den Definitionen, 
die im Unterprogramm unter PROC vereinbart wurden, bereinstimmen. Die Parameternamen 
knnen in Haupt- und Unterprogramm unterschiedlich sein.

Syntax

EXTERN <Programmname>(<Typ_Par1>,<Typ_Par2>,<Typ_Par3>)

...

<Programmname>(<Wert_Par1>,<Wert_Par2>,<Wert_Par3>)

Hinweis

Der Unterprogrammaufruf muss immer im eigenen NC-Satz programmiert werden.

Bedeutung

<Programmname>:

EXTERN:

<Typ_Par1>,<Typ_Par2>,<Typ_Par3>:

<Wert_Par1>,<Wert_Par2>,<Wert_Par3>:

Name des Unterprogramms

Schlsselwort fr die Bekanntmachung ei
nes Unterprogramms mit Parameterberga
be

Hinweis:
EXTERN muss nur dann angegeben wer
den, wenn das Unterprogramm im Werk
stck- oder im globalen Unterprogrammver
zeichnis steht. Zyklen mssen nicht 
als EXTERN erklrt werden.

Variablentypen der zu bergebenden Para
meter in der Reihenfolge der bergabe

Variablenwerte fr die zu bergebenden Pa
rameter

518

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
Arbeitsvorbereitung

3.2 Unterprogrammtechnik

Beispiele

Beispiel 1: Unterprogrammaufruf mit vorhergehender Bekanntmachung

Programmcode

Kommentar

N10 EXTERN RAHMEN(REAL,REAL,REAL)

; Angabe des Unterprogramms.

...

N40 RAHMEN(15.3,20.2,5)

; Aufruf des Unterprogramms mit Para-
meterbergabe.

Beispiel 2: Unterprogrammaufruf ohne Bekanntmachung

Programmcode

Kommentar

N10 DEF REAL LAENGE, BREITE, TIEFE

N20 

N30 LAENGE=15.3 BREITE=20.2 TIEFE=5

N40 RAHMEN(LAENGE,BREITE,TIEFE)

; oder: N40 RAHMEN(15.3,20.2,5)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

519

N40 RAHMEN(15.3,20.2,5)..RAHMEN(REAL,REAL,REAL)N10 EXTERNHauptprogramm 
 
 
 
Arbeitsvorbereitung

3.2 Unterprogrammtechnik

Siehe auch

Unterprogramm mit Parameterbergabe Call-by-Value (PROC) (Seite 490)

Unterprogramm mit Parameterbergabe Call-by-Reference (PROC, VAR) (Seite 492)

3.2.3.3

Anzahl der Programmwiederholungen (P)

Soll ein Unterprogramm mehrfach hintereinander abgearbeitet werden, kann im Satz mit dem 
Unterprogrammaufruf unter der Adresse P die gewnschte Anzahl der 
Programmwiederholungen programmiert werden. 

VORSICHT

Unterprogrammaufruf mit Programmwiederholung und Parameterbergabe

Parameter werden nur beim Programmaufruf bzw. ersten Durchlauf bergeben. Fr die 
weiteren Wiederholungen bleiben die Parameter unverndert. Falls Sie bei 
Programmwiederholungen die Parameter verndern wollen, mssen Sie im Unterprogramm 
entsprechende Vereinbarungen festlegen.

Syntax

Bedeutung

520

<Programmname> P<Wert>

<Programmname>:

Unterprogrammaufruf

P:

Adresse fr die Programmierung von Programmwiederholungen

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

N40RAHMEN(15.3,20.2,5)N40 RAHMEN(LAENGE,BREITE;TIEFE)N30 LAENGE=15.3 BREITE=20.2 TIEFE=5oderHauptprogrammArbeitsvorbereitung

3.2 Unterprogrammtechnik

<Wert>:

Anzahl der Programmwiederholungen

Typ:

INT

Wertebereich:

1  9999
(ohne Vorzeichen)

Beispiel

Programmcode

Kommentar

...

N40 RAHMEN P3

...

; Das Unterprogramm RAHMEN soll dreimal hintereinander abgear-
beitet werden.

3.2.3.4

Modaler Unterprogrammaufruf (MCALL)

Durch den modalen Unterprogrammaufruf MCALL <ProgName> wird das angegebene 
Unterprogramm nicht sofort aufgerufen. Stattdessen erfolgt der Aufruf ab diesem Zeitpunkt im 
Teileprogramm automatisch nach jedem Verfahrsatz mit Bahnbewegungen. Auch ber 
Programmebenen hinweg. 

Hinweis

In einem Programmablauf wirkt immer nur der letzte modale Unterprogrammaufruf  MCALL 
<ProgName>. Der aktuelle modale Unterprogrammaufruf ersetzt den bisher aktiven.

Werden Parameter an das Unterprogramm bergeben, erfolgt die Parameterbergabe nur 
beim Aufruf:

MCALL(<ProgName>(Par1, Par2, ...)) 

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

521

321N40 RAHMEN P3UnterprogrammHauptprogramm 
 
Arbeitsvorbereitung

3.2 Unterprogrammtechnik

Hinweis

Der Datendefinitionsbereich am Anfang des Unterprogramms wird nur einmal bei der 
Ausfhrung des Satzes mit dem programmierten MCALL-Aufruf durchlaufen. Bei den 
folgenden Unterprogrammaufrufen nach den Verfahrstzen wird der Datendefinitionsbereich 
nicht mehr durchlaufen. Dies hat zur Folge, dass ein bei der Definition einer lokalen 
Anwendervariablen (LUD) zugewiesener Wert nach dem ersten Aufruf nicht mehr zu 
Verfgung steht, sondern der Wert, der im Zyklus zuletzt geschrieben wurde. Die Variable wird 
nach dem ersten Aufruf nicht neu angelegt, sondern behlt den letzten Wert aus dem 
vorherigen Aufruf. Um dieses Verhalten zu umgehen, wird empfohlen, die LUD-Definition und 
-Wertzuweisung voneinander zu trennen und die Wertzweisung in einem eigenen Satz nach 
dem Datendefinitionsbereich zu programmieren.

ACHTUNG

Modale Unterprogrammaufrufe ohne Bahnbewegung

Das modale Unterprogramm wird in folgenden Situationen auch ohne Programmierung einer 
Bahnbewegung aufgerufen:

 Programmierung der Adressen S oder F, wenn G0 oder G1 aktiv ist

 Wenn G0 oder G1 allein im Satz steht oder zusammen mit weiteren G-Befehlen 

programmiert wurde.

Syntax

Bedeutung

MCALL <ProgName>

...

MCALL

MCALL <ProgName>:

Funktion "Modaler Unterprogrammaufruf" einschalten

<ProgName>:

Name des Unterprogramms

MCALL:

Mit MCALL ohne Angabe eines Programmnamens wird die Funktion "Mo
daler Unterprogrammaufruf" ausgeschaltet.

Randbedingungen

ASUP

Wird die Bearbeitung eines Teileprogramms durch ein ASUP (siehe Kapitel "Interruptroutine 
(ASUP) (Seite 533)") unterbrochen, werden in diesem ASUP keine modalen 
Unterprogrammaufrufe ausgefhrt.

Wird ein ASUP im Kanalzustand "Reset" gestartet, verhlt es sich bezglich der modalen 
Unterprogrammaufrufe wie ein normales Teileprogramm.

522

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
Arbeitsvorbereitung

3.2 Unterprogrammtechnik

Werkzeugwechsel-Zyklus

Erfolgt im Werkzeugwechsel-Zyklus eine Abwahl der Funktion "Modaler 
Unterprogrammaufruf", so ist zu beachten, dass der Werkzeugwechsel-Zyklus ggf. auch nach 
Satzsuchlauf implizit ber das Suchlauf-ASUP oder manuell per berspeichern aufgerufen 
wird. In dieser Situation darf die Funktion "Modaler Unterprogrammaufruf" nicht abgewhlt 
werden, weil sonst das Suchlauf-Ergebnis verflscht wird. Es wird deshalb empfohlen, die 
Abwahl der Funktion "Modaler Unterprogrammaufruf" im Werkzeugwechsel-Zyklus wie folgt zu 
programmieren:

Programmcode

Kommentar

...

  IF $AC_ASUP == 0

    MCALL

  ENDIF

...

; Aufruf erfolgt nicht ber Suchlauf-ASUP oder berspei-
chern.

; Funktion "Modaler Unterprogrammaufruf" ausschalten.

Beispiele

Beispiel 1

Programmcode

N10 G0 X0 Y0

Kommentar

N20 MCALL L70

; Modalen Unterprogrammaufruf fr L70 einschalten.

; X10 Y10 wird angefahren, anschlieend wird L70 aufgerufen.

; X20 Y20 wird angefahren, anschlieend wird L70 aufgerufen.

; Funktion "Modaler Unterprogrammaufruf" ausschalten.

; X0 Y0 wird angefahren, L70 wird nicht aufgerufen.

N30 X10 Y10

N40 X20 Y20

...

N100 MCALL

N110 X0 Y0

Beispiel 2

Programmcode

N10 G0 X0 Y0

N20 MCALL L70

N30 L80

In diesem Beispiel stehen die nachfolgenden NC-Stze mit programmierten Bahnachsen in 
Unterprogramm L80. L70 wird durch L80 aufgerufen.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

523

 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.2 Unterprogrammtechnik

3.2.3.5

Indirekter Unterprogrammaufruf (CALL)

In Abhngigkeit von den gegebenen Bedingungen knnen an einer Stelle unterschiedliche 
Unterprogramme aufgerufen werden. Hierzu wird der Name des Unterprogramms in einer 
Variablen vom Typ STRING hinterlegt. Der Unterprogrammaufruf erfolgt mit CALL und dem 
Variablennamen. 

Hinweis

Der indirekte Unterprogrammaufruf ist nur fr Unterprogramme ohne Parameterbergabe 
mglich. Fr den direkten Aufruf eines Unterprogramms hinterlegen Sie den Namen in einer 
STRING-Konstanten.

Syntax

Bedeutung

Beispiel

CALL <Programmname>

CALL:

Befehl fr den indirekten Unterprogrammaufruf

<Programmname>:

Name des Unterprogramms (Variable oder Konstante)

Typ:

STRING

Direkter Aufruf mit STRING-Konstante:

Programmcode



CALL "/_N_WKS_DIR/_N_SUBPROG_WPD/_N_TEIL1_SPF"



Kommentar

; Unterprogramm TEIL1 mit 
CALL direkt aufrufen.

Indirekter Aufruf ber Variable:

Programmcode



Kommentar

DEF STRING[100] PROGNAME

; Variable definieren.

PROGNAME="/_N_WKS_DIR/_N_SUBPROG_WPD/_N_TEIL1_SPF"

CALL PROGNAME



; Unterprogramm TEIL1 der Vari-
ablen PROGNAME zuordnen.

; Unterprogramm TEIL1 ber 
CALL und die Variable PROGNAME 
indirekt aufrufen.

524

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
Arbeitsvorbereitung

3.2 Unterprogrammtechnik

3.2.3.6

Indirekter Unterprogrammaufruf mit Angabe des auszufhrenden Programmteils (CALL 
BLOCK ... TO ...)

Mit CALL und der Schlsselwortkombination BLOCK ... TO wird ein Unterprogramm indirekt 
aufgerufen und der mit Start- und Endmarke gekennzeichnete Programmteil ausgefhrt. 

Syntax

Bedeutung

CALL <Programmname> BLOCK <Startmarke> TO <Endmarke>
CALL BLOCK <Startmarke> TO <Endmarke>

CALL:

<Programmname>:

Befehl fr den indirekten Unterprogrammaufruf

Name des Unterprogramms (Variable oder Konstante), das den zu 
bearbeitenden Programmteil enthlt (Angabe optional).

Typ:

STRING

Hinweis:
Ist kein <Programmname> programmiert, wird der 
mit <Startmarke> und <Endmarke> gekennzeichnete Programm
teil im aktuellen Programm gesucht und ausgefhrt.

BLOCK ... TO ... :

Schlsselwortkombination fr indirekte Programmteilausfhrung

<Startmarke>:

Variable, die auf den Beginn des zu bearbeitenden Programmteils ver
weist.

<Endmarke>:

Variable, die auf das Ende des zu bearbeitenden Programmteils ver
weist.

Typ:

STRING

Typ:

STRING

Beispiel

Hauptprogramm:

Programmcode

...

Kommentar

DEF STRING[20] STARTLABEL, ENDLABEL

; Variablendefinition fr die Start- und 
Endmarke.

STARTLABEL="LABEL_1"

ENDLABEL="LABEL_2"

...

CALL "CONTUR_1" BLOCK STARTLABEL TO ENDLA-
BEL

; Indirekter Unterprogrammaufruf und 
Kennzeichnung des auszufhrenden Pro-
grammteils.

...

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

525

 
 
 
 
 
 
Arbeitsvorbereitung

3.2 Unterprogrammtechnik

Unterprogramm:

Programmcode

Kommentar

PROC CONTUR_1 ...

LABEL_1

N1000 G1 ...

...

LABEL_2

...

; Startmarke: Beginn der Programmteilausfhrung

; Endmarke: Ende der Programmteilausfhrung

3.2.3.7

Indirekter Aufruf eines in ISO-Sprache programmierten Programms (ISOCALL)

Mit dem indirekten Programmaufruf ISOCALL kann ein in einer ISO-Sprache programmiertes 
Programm aufgerufen werden. Dabei wird der in den Maschinendaten eingestellte ISO-Modus 
aktiviert. Am Programmende wird wieder der ursprngliche Bearbeitungsmodus wirksam. Ist in 
den Maschinendaten kein ISO-Modus eingestellt, erfolgt der Aufruf des Unterprogramms im 
Siemens-Modus. 

Weitere Informationen zum ISO-Modus: Funktionshandbuch ISO-Dialekte

Syntax

Bedeutung

ISOCALL <Programmname>

ISOCALL:

<Programmname>:

Schlsselwort fr indirekten Unterprogrammaufruf, mit dem der in den 
Maschinendaten eingestellte ISO-Modus aktiviert wird

Name des in einer ISO-Sprache programmierten Programms (Variable 
oder Konstante vom Typ STRING)

Beispiel: Kontur mit Zyklenprogrammierung aus dem ISO-Modus heraus aufrufen

Programmcode

0122_SPF

N1010 G1 X10 Z20

N1020 X30 R5

N1030 Z50 C10

N1040 X50

N1050 M99

Kommentar

; Konturbeschreibung im ISO-Modus

N0010 DEF STRING[5] PROGNAME = "0122"

; Siemens-Teileprogramm (-Zyklus)

...

N2000 R11 = $AA_IW[X]

N2010 ISOCALL PROGNAME

N2020 R10 = R10+1

...

; Programm 0122.spf im ISO-Modus bear-
beiten

526

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.2 Unterprogrammtechnik

Programmcode

N2400 M30

Kommentar

3.2.3.8

Unterprogramm mit Pfadangabe und Parametern aufrufen (PCALL)

Mit PCALL knnen Unterprogramme mit absoluter Pfadangabe und Parameterbergabe 
aufgerufen werden. 

Syntax

Bedeutung

PCALL <Pfad/Programmname>(<Parameter 1>,,<Parameter n>)

PCALL:

Schlsselwort fr Unterprogrammaufruf mit absoluter Pfadanga
be.

<Pfad/Programmname>:

Absolute Pfadangabe einschlielich Unterprogrammnamen.

Regeln zur Pfadangabe siehe "Adressierung von Dateien des 
Programmspeichers (Seite 549)".

Wurde kein absoluter Pfad angegeben, verhlt sich PCALL wie 
ein Standard-Unterprogrammaufruf mit Programmbezeichner.

Der Programmname wird ohne Prfix und ohne Datei-Kennung 
angegeben. Soll der Programmname mit Prfix und Datei-Ken
nung programmiert werden, so muss er explizit mit Prfix und 
Datei-Kennung mit dem Befehl EXTERN erklrt werden.

Aktual-Parameter entsprechend der PROC-Anweisung des Unter
programms.

<Parameter 1>, ...:

Beispiel

Programmcode

PCALL/_N_WKS_DIR/_N_WELLE_WPD/WELLE(parameter1,parameter2,)  

3.2.3.9

Suchpfad bei Unterprogrammaufrufen erweitern (CALLPATH)

Mit dem Befehl CALLPATH kann der Suchpfad fr Unterprogrammaufrufe erweitert werden. 
Damit knnen auch Unterprogramme aus einem nicht ausgewhlten Werkstckverzeichnis 
aufgerufen werden, ohne den vollstndigen, absoluten Pfadnamen des Unterprogramms 
anzugeben. 

Eine weitere Anwendungsmglichkeit bietet sich im EES-Betriebsmodus "EES ohne GDIR", 
wenn ein Verzeichnis auf einem externen Programmspeicher zur Ablage globaler 
Unterprogramme genutzt wird. In diesem Fall kann mit CALLPATH der Suchpfad um dieses 
Unterprogrammverzeichnis erweitert werden. 

Die Suchpfaderweiterung erfolgt vor dem Eintrag fr Anwenderzyklen (_N_CUS_DIR).  

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

527

 
 
Arbeitsvorbereitung

3.2 Unterprogrammtechnik

Durch folgende Ereignisse wird die Suchpfaderweiterung wieder abgewhlt:

 CALLPATH mit Leerzeichen

 CALLPATH ohne Parameter

 Teileprogrammende

 Reset

CALLPATH("<Pfadname>")

CALLPATH:

<Pfadname>:

Syntax

Bedeutung

Beispiel

Schlsselwort fr die programmierbare Suchpfad
erweiterung.

Wird in einer eigenen Teileprogrammzeile pro
grammiert.

Konstante oder Variable vom Typ STRING.

Enthlt die absolute Pfadangabe des Verzeichnis
ses, um das der Suchpfad erweitert werden soll. 

Regeln zur Pfadangabe siehe "Adressierung von 
Dateien des Programmspeichers (Seite 549)".

Der Suchpfad soll um ein bestimmtes Werkstckverzeichnis erweitert werden:

Programmcode

...

CALLPATH("/_N_WKS_DIR/_N_MYWPD_WPD")

...

Damit wird folgender Suchpfad eingestellt (Position 5. ist neu):

1. Aktuelles Verzeichnis/name

2. Aktuelles Verzeichnis/name_SPF

3. Aktuelles Verzeichnis/name_MPF

4.

//NC:/_N_SPF_DIR/name_SPF

5.

/_N_WKS_DIR/_N_MYWPD_WPD/name_SPF

6.

/N_CUS_DIR/name_SPF

7.

/_N_CMA_DIR/name_SPF

8.

/_N_CST_DIR/name_SPF

528

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
Arbeitsvorbereitung

3.2 Unterprogrammtechnik

Randbedingungen

 CALLPATH prft, ob der programmierte Pfadname tatschlich vorhanden ist. Im Fehlerfall 

wird die Teileprogrammbearbeitung mit Korrektursatz-Alarm 14009 abgebrochen.

 CALLPATH kann auch in INI-Dateien programmiert werden. Er wirkt dann fr die 

Bearbeitungsdauer der INI-Datei (WPD-INI-Datei oder Initialisierungsprogramm fr NC-
aktive Daten, z. B. Frames im 1. Kanal _N_CH1_UFR_INI). Danach wird der Suchpfad 
wieder zurckgesetzt.

3.2.3.10

Externes Unterprogramm abarbeiten (EXTCALL)

Mit dem Befehl EXTCALL kann ein Teileprogramm von einem externen Speicher nachgeladen 
und abgearbeitet werden. 

Als externer Speicher stehen zur Verfgung:

 Lokales Laufwerk

 Netzlaufwerk

 USB-Laufwerk

Hinweis

Als Schnittstelle zum Abarbeiten eines auf einem USB-Laufwerk befindlichen externen 
Programms drfen nur die USB-Schnittstellen an der Bedientafelfront bzw. TCU verwendet 
werden.

ACHTUNG

Werkzeug-/Werkstckbeschdigung durch USB-FlashDrive

Es wird empfohlen zum Abarbeiten eines externen Unterprogramms kein USB-FlashDrive 
zu verwenden. Ein Kommunikationsabbruch zum USB-FlashDrive whrend der 
Abarbeitung des Teileprogramms durch Kontaktschwierigkeiten, Herausfallen, 
Abbrechen durch Anstoen oder versehentliches Abziehen fhrt zum sofortigen Stop der 
Bearbeitung. Werkzeug und/oder Werkstck knnten dabei beschdigt werden.

Voreinstellung des externen Programmpfades

Der Pfad zum externen Programmverzeichnis kann voreingestellt mit dem Settingdatum:

SD42700 $SC_EXT_PROG_PATH

Zusammen mit dem beim EXTCALL-Aufruf angegebenen Programmpfad und -bezeichner 
ergibt sich daraus der Gesamtpfad des aufzurufenden Teileprogramms.

Hinweis

Soll der Programmpfad nur ber den EXTCALL-Aufruf angegeben werden, muss SD42700 leer 
sein!

Hinweis
Parameter

Beim Aufruf eines externen Programms knnen diesem keine Parameter bergeben werden.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

529

Arbeitsvorbereitung

3.2 Unterprogrammtechnik

Syntax

Bedeutung

EXTCALL("<Pfad/><Programmname>")

EXTCALL:

Befehl zum Aufrufen eines externen Unterprogramms

"<Pfad/><Programmname>":

Konstante/Variable vom Typ STRING

<Pfad/>:

<Programmname>:

Absolute oder relative Pfadangabe 
(optional) 

Der Programmname wird ohne Pr
fix "_N_" angegeben.

Die Dateierweiterung ("MPF", 
"SPF") kann mit dem Zeichen "_" 
oder "." am Programmnamen ange
fgt werden (optional).

Beispiel:

"WELLE"
"WELLE_SPF"
"WELLE.SPF"

Pfadangabe: Kurzbezeichnungen

Folgende Kurzbezeichnungen knnen bei der Pfadangabe verwendet werden:

 Lokales Laufwerk: "LOCAL_DRIVE:"

 CF-Karte: "CF_CARD:"

 USB-Laufwerk (Bedientafelfront): "USB:"

Die Kurzbezeichnungen "CF_CARD:" und "LOCAL_DRIVE:" sind alternativ verwendbar.

Abarbeiten von lokalem Laufwerk

Das Hauptprogramm "MAIN.MPF" befindet sich im NC-Speicher und ist zur Abarbeitung 
angewhlt.

Unterprogramm "SP_1"

Das externe Unterprogramm "SP_1.SPF" bzw. "SP_1.MPF" befindet sich auf dem lokalen 
Laufwerk in dem Verzeichnis "/user/sinumerik/data/prog/WKS.DIR/WST1.WPD".

Der Pfad zum externen Programmverzeichnis ist einzustellen mit:

SD42700 $SC_EXT_PROG_PATH = LOCAL_DRIVE:WKS.DIR/WST1.WPD

Hinweis

Pfadangabe fr den Aufruf des externen Unterprogramms:
 Ohne Verwendung der Voreinstellung: "LOCAL_DRIVE:WKS.DIR/WST1.WPD/SP_1"
 Mit Verwendung der Voreinstellung: "SP_1"

Beispiel

530

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.2 Unterprogrammtechnik

Unterprogramm "SP_2"

Das externe Unterprogramm "SP_2.SPF" bzw. "SP_2.MPF" befindet sich im Verzeichnis 
WKS.DIR/WST1.WPD des USB-Laufwerks. Die Voreinstellung des Pfads zum externen 
Programmverzeichnis wird fr den Pfad des Unterprogramms "SP_1" verwendet und wird im 
Hauptprogramm auch nicht umgeschrieben. Daher muss beim Aufruf des Unterprogramms 
"SP_2" der vollstndige Pfad angegeben werden.

Hauptprogramm "MAIN"

Programmcode

N010 PROC MAIN

N020 ...

N030 EXTCALL("SP_1")

N030 EXTCALL("USB:WKS.DIR/WST1.WPD/SP_2")

N050 ...

N060 M30

Weitere Informationen

EXTCALL-Aufruf mit absoluter Pfadangabe

Ist das Unterprogramm unter dem angegebenen Pfad vorhanden, wird es mit dem EXTCALL-
Aufruf ausgefhrt. Ist das Unterprogramm unter dem angegebenen Pfad nicht vorhanden, wird 
die Programmausfhrung mit dem EXTCALL-Aufruf abgebrochen.

EXTCALL-Aufruf mit relativer Pfadangabe / ohne Pfadangabe

Bei einem EXTCALL-Aufruf mit relativer Pfadangabe bzw. ohne Pfadangabe werden die 
vorhandenen Programmspeicher nach folgendem Muster durchsucht:

1.

Ist in SD42700 $SC_EXT_PROG_PATH eine Pfadangabe voreingestellt, wird zuerst 
ausgehend von diesem Pfad nach der Angabe im EXTCALL-Aufruf (Programmname ggf. 
mit relativer Pfadangabe) gesucht. Der absolute Pfad ergibt sich dann durch 
Zeichenverkettung aus:

 Voreingestellten Pfadangabe im SD42700 $SC_EXT_PROG_PATH

 Trennzeichen "/"

 Pfadangabe und Unterprogrammname im Befehl EXTCALL 

2. Wurde das Unterprogramm unter 1. nicht gefunden, werden die Verzeichnisse des 

Anwenderspeichers durchsucht.

Die Suche endet, wenn das Unterprogramm erstmalig gefunden wurde. Wird das 
Unterprogramm nicht gefunden, wird die Programmausfhrung mit dem EXTCALL-Aufruf 
abgebrochen.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

531

 
Arbeitsvorbereitung

3.2 Unterprogrammtechnik

Einstellbarer Nachladespeicher (FIFO-Puffer)

Fr das Abarbeiten eines externen Unterprogramms wird ein Nachladespeicher bentigt. Die 
Gre des Nachladespeichers ist mit 30 kByte voreingestellt und kann nur vom 
Maschinenhersteller verndert werden (ber MD18360 MM_EXT_PROG_BUFFER_SIZE).

Hinweis

Unterprogramme mit Sprunganweisungen

Bei externen Unterprogrammen, die Spunganweisungen enthalten (GOTOF, GOTOB, CASE, 
FOR, LOOP, WHILE, REPEAT, IF, ELSE, ENDIF etc.), mssen die Sprungziele innerhalb des 
Nachladespeichers liegen.

Hinweis

ShopMill-/ShopTurn-Programme

ShopMill- und ShopTurn-Programme mssen wegen der am Dateiende angefgten 
Konturbeschreibungen vollstndig im Nachladespeicher abgelegt sein.

Fr parallel abgearbeitete externe Unterprogramme wird jeweils ein eigener Nachladespeicher 
bentigt.

Reset / Programmende / POWER ON

Durch Reset und  POWER ON werden externe Unterprogrammaufrufe abgebrochen und die 
jeweiligen Nachladespeicher gelscht.

Ein fr "Abarbeiten von Extern" selektiertes Programm bleibt ber Reset, Programmende oder 
POWER ON hinaus weiter fr "Abarbeiten von Extern" angewhlt. Das Verhalten 
unterscheidet sich nicht zu intern angewhlten Programmen, sofern der externe 
Programmspeicher weiterhin zur Verfgung steht.

532

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.3 Interruptroutine (ASUP)

3.3

Interruptroutine (ASUP)

3.3.1

Funktion einer Interruptroutine

Hinweis

Die in der folgenden Beschreibung abwechselnd vorkommenden Begriffe "Asynchrones 
Unterprogramm (ASUP)" und "Interruptroutine" kennzeichnen die gleiche Funktionalitt.

Die Funktion einer Interruptroutine soll anhand eines typischen Beispiels verdeutlicht werden:

Whrend der Bearbeitung bricht das Werkzeug. Hierdurch wird ein Signal ausgelst, das den 
laufenden Bearbeitungsablauf stoppt und gleichzeitig ein Unterprogramm  die so genannte 
Interruptroutine  startet. In diesem Unterprogramm stehen alle Anweisungen, die in diesem 
Fall ausgefhrt werden sollen.

Ist das Unterprogramm abgearbeitet (und hierdurch die Betriebsbereitschaft hergestellt), 
springt die Steuerung in das Hauptprogramm zurck und setzt die Bearbeitung  je nach 
REPOS-Befehl  an der Unterbrechungsstelle fort (siehe "Wiederanfahren an Kontur 
(Seite 839)").

VORSICHT

Kollisionsgefahr

Wenn im Unterprogramm kein REPOS-Befehl programmiert ist, dann wird auf den Endpunkt 
des Satzes positioniert, der auf den unterbrochenen Satz folgt.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

533

Haupt-programmInterruptroutineWegfahren vonder KonturWerkzeugwechselNeue Korrektur-werteWiederanfahrenArbeitsvorbereitung

3.3 Interruptroutine (ASUP)

3.3.2

Interruptroutine erstellen

Interruptroutine als Unterprogramm erstellen

Die Interruptroutine wird bei der Definition wie ein Unterprogramm gekennzeichnet.

Beispiel:

Programmcode

Kommentar

PROC ABHEB_Z

; Programmname "ABHEB_Z"

N10 ...

...

N50 M17

; Danach folgen die NC-Stze.

; Zum Schluss Programmende und Rckkehr ins Hauptprogramm.

Modale G-Befehle sichern (SAVE)

Die Interruptroutine kann bei der Definition mit SAVE gekennzeichnet werden.

Das Attribut SAVE bewirkt, dass die vor dem Aufruf der Interruptroutine aktiven modalen G-
Befehle gesichert und nach dem Ende der Interruptroutine wieder reaktiviert werden (siehe 
" Unterprogramme mit SAVE-Mechanismus (SAVE) (Seite 494) ").

Dadurch ist es mglich, die Bearbeitung nach Ablauf der Interruptroutine an der 
Unterbrechungsstelle fortzusetzen.

Beispiel:

Programmcode

PROC ABHEB_Z SAVE

N10 ...

...

N50 M17

Weitere Interruptroutinen zuordnen (SETINT)

Innerhalb der Interruptroutine knnen SETINT-Anweisungen (siehe "Interruptroutine zuordnen 
und starten (SETINT)" (Seite 534)) programmiert und hierdurch weitere Interruptroutinen 
scharf geschaltet werden. Das Auslsen erfolgt erst durch den Eingang.

3.3.3

Interruptroutine zuordnen und starten (SETINT, PRIO, BLSYNC)

Die Steuerung verfgt ber mehrere schnelle Eingnge (Eingang 1 ... 8), die jeweils einen 
Interrupt (1 ... 8) auslsen. Jedem Interrupt kann ber den Befehl SETINT eine Prioritt und 
eine Interrupt-Routine zugeordnet werden. Wird der Interrupt durch Setzen des schnellen 
Eingangs ausgelst, wird die aktuelle Bearbeitung im Kanal unterbrochen und die Interrupt-
Routine gestartet.

534

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
Arbeitsvorbereitung

3.3 Interruptroutine (ASUP)

Interrupt-Proritt

Werden in einem Teileprogramm mehreren Eingngen Interrupts zugeordnet, mssen den 
Interrupts unterschiedliche Prioritten zugewiesen werden.

Einem Interrupt kann ein Priorittswerte von 1 ... 128 zugeordnet werden. Priorittswert 1 
entspricht der hchsten, 128 der niedrigsten Prioritt. 

Syntax

SETINT(<n>) <NAME>
SETINT(<n>) PRIO=<Wert> <NAME>
SETINT(<n>) PRIO=<Wert> <NAME> BLSYNC
SETINT(<n>) PRIO=<Wert> <NAME> LIFTFAST

Bedeutung

SETINT(<n>):

Dem Interruptsignal <n> wird NC-Programm (ASUP) <Name> zuordnen. Die zu
geordnete Interruptroutine wird gestartet, sobald Interruptsignal <n> == 1 erkannt 
wird.

Hinweis:
Wird einem Interruptsignal <n> eine andere Interrupt-Routine zugeordnet, wird die 
vorhergende Zuordnung unwirksam.

<n>:

Nummer des Interruptsignals

Typ:

INT

Wertebereich:

1 ... 32

PRIO=:

Prioritt des Interrupts 

(optional)

<Wert>:

(optional) Priorittswert

Typ:

INT

<NAME>:

BLSYNC:

LIFTFAST:

Wertebereich:

1 ... 128 (1  hchste Prioritt)

Name des NC-Programms (ASUP)

(optional) BLSYNC bewirkt, dass nach dem Auslsen des Interrupts zuerst gewar
tet wird, bis der aktuelle Satz abgearbeitet ist. Erst danach wird die Interrupt-Rou
tine ausgefhrt. 

(optional) LIFTFAST bewirkt, dass nach dem Auslsen des Interrupts zuerst ein 
Schnellabheben erfolgt ( siehe Kapitel "Schnellabheben von der Kontur (SETINT 
LIFTFAST, ALF) (Seite 538)"). Erst danach wird die Interrupt-Routine ausgefhrt.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

535

Arbeitsvorbereitung

3.3 Interruptroutine (ASUP)

Randbedingungen

Interrupt-Regeln

Beispiele

1. Fr jeden Interrupt, der nicht sofort abgearbeitet werden kann, oder aktuell schon in 
Bearbeitung ist, wird eine weitere Interrupt-Anforderung gespeichert. Darber hinaus 
gehende Interrupt-Anforderungen fr diesen Interrupt verloren.

2. Wird aktuell ein Interrupt bearbeitet und es wird ein weiterer Interrupt mit hherer Prioritt 
ausgelst, unterbricht dieser den niederprioren Interrupt. Nach Abschluss des hherprioren 
Interrupts, wird der niederpriore Interrupt fortgesetzt. Treffen whrend der hherpriore 
Interrupt bearbeitet wird, weiter Anforderungen fr den niederprioren Interrupt ein, wird eine 
Anforderung gespeichert. Weitere gehen verloren.

3. Wird aktuell ein Interrupt bearbeitet und es wird ein weiterer Interrupt mit hherer Prioritt 
ausgelst, unterbricht dieser den niederprioren Interrupt. Der hherpriore Interrupt wird 
bearbeitet. Wird wiederum ein hherpriorer Interrupt ausgelst, wird der aktuelle Interrupt 
unterbrochen und der hherpriore Interrupt bearbeitet. Maximal sind sechs aktive Interrupt-
Ebenen mglich. Eine aktuell bearbeitete Interrupt-Ebene und fnf wartende Interrupt-
Ebenen. Fr jede aktive Interrupt-Ebene wird maximal eine weitere Interrupt-Anforderung 
gespeichert. Alle weiteren Interrupt-Anforderungen gehen verloren. Ebenso gehen 
Interrupt-Anforderung verloren, wenn diese fr weitere Interrupt-Ebenen (Interrupt-Ebene  
7) angefordert werden.

Beispiel 1: Interruptroutinen zuordnen und Prioritt festlegen

Programmcode

Kommentar

N20 SETINT(3) PRIO=1 ABHEB_Z

; IF Eingang 3 == 1 

N30 SETINT(2) PRIO=2 ABHEB_X

; IF Eingang 2 == 1 

; THEN Interruptroutine "ABHEB_Z" starten

; THEN Interruptroutine "ABHEB_X" starten.

Die Interruptroutinen werden in der Reihenfolge der Priorittswerte nacheinander 
abgearbeitet, wenn die Eingnge gleichzeitig anstehen: zuerst "ABHEB_Z", dann "ABHEB_X".

Beispiel 2: Interruptroutine neu zuordnen 

Programmcode

Kommentar

N20 SETINT(3) PRIO=2 ABHEB_Z

; IF Eingang 3 == 1 

...

N80 SETINT(3) PRIO=1 ABHEB_X

; IF Eingang 3 == 1 

; THEN Interruptroutine "ABHEB_Z" starten

; THEN Interruptroutine "ABHEB_X" starten

536

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
3.3.4

Zuordnung einer Interruptroutine deaktivieren/reaktivieren (DISABLE, ENABLE)

Eine SETINT-Anweisung kann mit DISABLE deaktiviert und mit ENABLE wieder aktiviert 
werden, ohne dass die Zuordnung Eingang  Interruptroutine verloren geht. 

Arbeitsvorbereitung

3.3 Interruptroutine (ASUP)

Syntax

Bedeutung

DISABLE(<n>)
ENABLE(<n>)

DISABLE(<n>):

Befehl: Deaktivieren der Interruptroutinen-Zuordnung von Eingang <n>

ENABLE(<n>):

Befehl: Reaktivieren der Interruptroutinen-Zuordnung von Eingang <n>

<n>:

Parameter: Nummer des Interruptsignals

Typ:

INT

Wertebereich:

1 ... 32

Beispiel

Programmcode

Kommentar

N20 SETINT(3) PRIO=1 ABHEB_Z

; Wenn Eingang 3 schaltet, dann soll die 

; Interruptroutine "ABHEB_Z" starten.

...

N90 DISABLE(3)

; Die SETINT-Anweisung aus N20 wird deaktiviert.

...

N130 ENABLE(3)

...

; Die SETINT-Anweisung aus N20 wird wieder akti-
viert.

3.3.5

Zuordnung einer Interruptroutine lschen (CLRINT)

Eine mit SETINT definierte Zuordnung eines Interruptsignals zu einem NC-Programm (ASUP) 
kann mit CLRINT gelscht werden. 

Syntax

CLRINT(<n>)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

537

 
 
 
Arbeitsvorbereitung

3.3 Interruptroutine (ASUP)

Bedeutung

CLRINT(<n>):

Befehl: Lschen der Zuordnung des Interruptsignals <n> zum mit SETINT defi
nierten NC-Programm (ASUP) <n>

<n>:

Parameter: Nummer des Interruptsignals

Typ:

INT

Wertebereich:

1 ... 32

Beispiel

Programmcode

Kommentar

N20 SETINT(3) PRIO=2 ABHEB_Z

...

N50 CLRINT(3)

; Die Zuordnung zwischen Eingang "3" und der 
Interruptroutine "ABHEB_Z" ist gelscht.

3.3.6

Schnellabheben von der Kontur (SETINT LIFTFAST, ALF)

Bei einer SETINT-Anweisung mit LIFTFAST wird beim Schalten des Eingangs das Werkzeug 
durch schnelles Abheben von der Werkstckkontur weggefahren.

Der weitere Ablauf ist davon abhngig, ob die SETINT-Anweisung neben LIFTFAST eine 
Interruptroutine enthlt: 

Mit Interruptroutine:
Ohne Interruptroutine:

Nach dem Schnellabheben wird die Interruptroutine ausgefhrt.
Die Bearbeitung wird nach dem Schnellabheben mit Alarm ge
stoppt.

538

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
Arbeitsvorbereitung

3.3 Interruptroutine (ASUP)

Syntax

Bedeutung

SETINT(<n>) PRIO=1 LIFTFAST
SETINT(<n>) PRIO=1 <NAME> LIFTFAST

SETINT(<n>):

Befehl: Eingang <n> einer Interruptroutine zuordnen. Die zugeordnete Interrupt
routine startet, wenn Eingang <n> schaltet.

<n>:

Parameter: Nummer des Eingangs

PRIO= :

<Wert>:

<NAME>:

LIFTFAST:

ALF= :

Typ:

INT

Wertebereich:

1 ... 8

Festlegung der Prioritt

Priorittswert

Wertebereich:

1 ... 128

Prioritt 1 entspricht der hchsten Prioritt.

Name des Unterprogramms (Interruptroutine), das abgearbeitet werden soll.

Befehl: Schnellabheben von der Kontur

Befehl: Programmierbare Verfahrrichtung (steht im Bewegungssatz)

Zu den Programmiermglichkeiten mit ALF siehe Thema "Verfahrrichtung beim 
Schnellabheben von der Kontur (Seite 540)".

Randbedingungen

Verhalten bei aktivem Frame mit Spiegelung

Bei der Bestimmung der Abheberichtung wird geprft, ob ein Frame mit Spiegelung aktiv ist. In 
diesem Fall werden bei der Abheberichtung bezogen auf die Tangentenrichtung rechts und 
links vertauscht. Die Richtungsanteile in Werkzeugrichtung werden nicht gespiegelt. Aktiviert 
wird dieses Verhalten durch die MD-Einstellung:

MD21202 $MC_LIFTFAST_WITH_MIRROR = TRUE

Beispiel

Ein abgebrochenes Werkzeug soll automatisch durch ein Schwesterwerkzeug ersetzt werden. 
Die Bearbeitung wird dann mit dem neuen Werkzeug fortgesetzt.

Hauptprogramm:

Hauptprogramm

N10 SETINT(1) PRIO=1 W_WECHS LIFTFAST

N20 G0 Z100 G17 T1 ALF=7 D1

N30 G0 X-5 Y-22 Z2 M3 S300

N40 Z-7

Kommentar

; Wenn Eingang 1 schaltet, wird so-
fort das Werkzeug mit Schnellabhe-
ben (Code Nr. 7 fr Werkzeugradius-
korrektur G41) von der Kontur weg-
gefahren. Dann wird die Interrupt-
routine "W_WECHS" abgearbeitet.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

539

 
 
 
Arbeitsvorbereitung

3.3 Interruptroutine (ASUP)

Hauptprogramm

N50 G41 G1 X16 Y16 F200

N60 Y35

N70 X53 Y65

N90 X71.5 Y16

N100 X16

N110 G40 G0 Z100 M30

Unterprogramm:

Unterprogramm

PROC W_WECHS SAVE

N10 G0 Z100 M5

N20 T11 M6 D1 G41

N30 REPOSL RMBBL M3

Kommentar

Kommentar

; Unterprogramm mit Speicherung des ak-
tuellen Betriebszustandes

; Werkzeugwechselposition, Spindelstopp

; Werkzeug wechseln

; Kontur wiederanfahren und Rcksprung 
ins Hauptprogramm (wird in einem Satz 
programmiert)

3.3.7

Verfahrrichtung beim Schnellabheben von der Kontur 

Rckzugsbewegung

Die Ebene der Rckzugsbewegung wird durch folgende G-Befehle bestimmt:

 LFTXT

Die Ebene der Rckzugsbewegung wird aus der Bahntangente und der Werkzeugrichtung 
bestimmt (Standardeinstellung).

 LFWP

Die Ebene der Rckzugsbewegung ist die aktive Arbeitsebene, die mit den G-
Befehlen G17, G18 oder G19 ausgewhlt wird. Die Richtung der Rckzugsbewegung ist 
unabhngig von der Bahntangente. Damit ist ein achsparalleles Schnellabheben 
programmierbar.

 LFPOS

Rckzug der mit POLFMASK / POLFMLIN bekannt gemachten Achse auf die mit POLF 
programmierte absolute Achsposition.
ALF hat keinen Einfluss auf die Abheberichtung fr mehrere Achsen sowie fr mehrere 
Achsen im linearen Zusammenhang.

Programmierbare Verfahrrichtung (ALF=)

In der Ebene der Rckzugsbewegung wird mit ALF die Richtung in diskreten Schritten von 
45 Grad programmiert.

Die mglichen Verfahrrichtungen sind in der Steuerung unter speziellen Code-Nummern 
gespeichert und unter dieser Nummer abrufbar.

540

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
Arbeitsvorbereitung

3.3 Interruptroutine (ASUP)

Beispiel:

Programmcode

N10 SETINT(2) PRIO=1 ABHEB_Z LIFTFAST

ALF=7

Das Werkzeug fhrt bei eingeschaltetem G41 (Bearbeitungsrichtung links von der Kontur) 
senkrecht von der Kontur weg.

Bezugsebene fr die Beschreibung der Verfahrrichtungen bei LFTXT

Im Eingriffspunkt des Werkzeugs an der programmierten Kontur wird eine Ebene aufgespannt, 
die als Bezug fr die Angabe der Abhebebewegung mit der entsprechenden Code-Nummer 
dient.

Die Bezugsebene wird aufgespannt aus der Werkzeuglngsachse (Zustellrichtung) und einem 
Vektor, der zu dieser und senkrecht zur Tangente im Eingriffspunkt des Werkzeugs an der 
Kontur steht.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

541

ALF = 7G41 
 
 
Arbeitsvorbereitung

3.3 Interruptroutine (ASUP)

Code-Nummern mit Verfahrrichtungen bei LFTXT

Ausgehend von der Bezugsebene finden Sie in folgender Abbildung die Code-Nummern mit 
Verfahrrichtungen.

Fr ALF=1 ist der Rckzug in Werkzeugrichtung festgelegt.

542

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Eingriffs-punktEingriffs-punktTangenteTangenteTangenteTangenteZustellachseAnsicht inVerfahrrichtungVerfahrrichtungDraufsicht4545518284G41G422634713567Arbeitsvorbereitung

3.3 Interruptroutine (ASUP)

Mit ALF=0 ist die Funktion "Schnellabheben" ausgeschaltet.

VORSICHT

Kollisionsgefahr

Bei eingeschalteter Werkzeugradiuskorrektur sollten:
 bei G41 die Codierungen 2, 3, 4
 bei G42 die Codierungen 6, 7, 8

nicht verwendet werden, da in diesen Fllen das Werkzeug zur Kontur hinfahren und mit dem 
Werkstck kollidieren wrde.

Code-Nummern mit Verfahrrichtungen bei LFWP

Bei LFWP ergibt sich die Richtung in der Arbeitsebene nach folgender Zuordnung:

 G17: X/Y-Ebene

ALF=1: Rckzug in X-Richtung
ALF=3: Rckzug in Y-Richtung

 G18: Z/X-Ebene

ALF=1: Rckzug in Z-Richtung
ALF=3: Rckzug in X-Richtung

 G19: Y/Z-Ebene

ALF=1: Rckzug in Y-Richtung
ALF=3: Rckzug in Z-Richtung

Siehe auch

Schnellrckzug whrend Gewindeschneiden (LFON, LFOF, DILF, ALF, LFTXT, LFWP, 
LFPOS, POLF, POLFMASK, POLFMLIN) (Seite 226)

3.3.8

Bewegungsablauf bei Interruptroutinen

Interruptroutine ohne LIFTFAST

Die Achsbewegungen werden auf der Bahn bis zum Stillstand abgebremst. Anschlieend 
startet die Interruptroutine.

Die Stillstandsposition wird als Unterbrechungsposition abgespeichert und wird bei REPOS mit 
RMIBL am Ende der Interruptroutine angefahren.

Interruptroutine mit LIFTFAST

Die Achsbewegungen werden auf der Bahn abgebremst. Gleichzeitig wird die LIFTFAST-
Bewegung als berlagerte Bewegung ausgefhrt. Wenn die Bahnbewegung und LIFTFAST-
Bewegung zum Stillstand gekommen sind, wird die Interruptroutine gestartet.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

543

Arbeitsvorbereitung

3.3 Interruptroutine (ASUP)

Als Unterbrechungsposition wird die Position auf der Kontur abgespeichert, bei der die 
LIFTFAST-Bewegung gestartet und dadurch die Bahn verlassen wurde.

Die Interruptroutine verhlt sich mit LIFTFAST und ALF=0 identisch wie die Interruptroutine 
ohne LIFTFAST.

Hinweis

Der Betrag, um den die Geometrieachsen beim Schnellabheben von der Kontur wegfahren, ist 
ber ein Maschinendatum einstellbar.

544

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.4 Datei- und Programmverwaltung

3.4

Datei- und Programmverwaltung

3.4.1

Programmspeicher

3.4.1.1

Programmspeicher im NCK

Im Programmspeicher werden Dateien und Programme (z. B. Haupt- und Unterprogramme, 
Makro-Definitionen) persistent gespeichert ( Passives Filesystem).    

Daneben gibt es eine Anzahl von Dateitypen, die hier zwischengespeichert werden knnen 
und bei Bedarf (z. B. bei Bearbeitung eines bestimmten Werkstcks) in den Arbeitsspeicher zu 
bertragen sind (z. B. fr Initialisierungszwecke).

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

545

(cid:42)(cid:85)(cid:68)(cid:88)(cid:72)(cid:3)(cid:49)(cid:68)(cid:80)(cid:72)(cid:81)(cid:29)(cid:3)(cid:89)(cid:82)(cid:80)(cid:3)(cid:36)(cid:81)(cid:90)(cid:72)(cid:81)(cid:71)(cid:72)(cid:85)(cid:3)(cid:89)(cid:72)(cid:85)(cid:74)(cid:72)(cid:69)(cid:72)(cid:81)(cid:54)(cid:70)(cid:75)(cid:90)(cid:68)(cid:85)(cid:93)(cid:72)(cid:3)(cid:49)(cid:68)(cid:80)(cid:72)(cid:81)(cid:29)(cid:3)(cid:73)(cid:72)(cid:86)(cid:87)(cid:3)(cid:89)(cid:82)(cid:85)(cid:75)(cid:68)(cid:81)(cid:71)(cid:72)(cid:81)(cid:51)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)(cid:86)(cid:83)(cid:72)(cid:76)(cid:70)(cid:75)(cid:72)(cid:85)(cid:3)(cid:76)(cid:80)(cid:3)(cid:49)(cid:38)(cid:46)(cid:66)(cid:49)(cid:66)(cid:38)(cid:50)(cid:48)(cid:66)(cid:39)(cid:44)(cid:53)(cid:66)(cid:49)(cid:66)(cid:58)(cid:46)(cid:54)(cid:66)(cid:39)(cid:44)(cid:53)(cid:66)(cid:49)(cid:66)(cid:48)(cid:51)(cid:41)(cid:66)(cid:39)(cid:44)(cid:53)(cid:66)(cid:49)(cid:66)(cid:54)(cid:51)(cid:41)(cid:66)(cid:39)(cid:44)(cid:53)(cid:66)(cid:49)(cid:66)(cid:39)(cid:40)(cid:41)(cid:66)(cid:39)(cid:44)(cid:53)(cid:66)(cid:49)(cid:66)(cid:38)(cid:54)(cid:55)(cid:66)(cid:39)(cid:44)(cid:53)(cid:66)(cid:49)(cid:66)(cid:38)(cid:48)(cid:36)(cid:66)(cid:39)(cid:44)(cid:53)(cid:66)(cid:49)(cid:66)(cid:38)(cid:56)(cid:54)(cid:66)(cid:39)(cid:44)(cid:53)(cid:66)(cid:49)(cid:66)(cid:17)(cid:17)(cid:17)(cid:66)(cid:17)(cid:17)(cid:17)(cid:66)(cid:49)(cid:66)(cid:47)(cid:20)(cid:66)(cid:54)(cid:51)(cid:41)(cid:66)(cid:49)(cid:66)(cid:48)(cid:51)(cid:41)(cid:20)(cid:21)(cid:22)(cid:66)(cid:48)(cid:51)(cid:41)(cid:66)(cid:49)(cid:66)(cid:58)(cid:40)(cid:47)(cid:47)(cid:40)(cid:66)(cid:49)(cid:66)(cid:51)(cid:36)(cid:53)(cid:55)(cid:21)(cid:66)(cid:38)(cid:50)(cid:48)(cid:66)(cid:49)(cid:66)(cid:51)(cid:36)(cid:53)(cid:55)(cid:21)(cid:66)(cid:56)(cid:41)(cid:53)(cid:66)(cid:49)(cid:66)(cid:51)(cid:36)(cid:53)(cid:55)(cid:21)(cid:66)(cid:44)(cid:49)(cid:44)(cid:66)(cid:49)(cid:66)(cid:58)(cid:40)(cid:47)(cid:47)(cid:40)(cid:66)(cid:54)(cid:40)(cid:36)(cid:66)(cid:49)(cid:66)(cid:58)(cid:40)(cid:47)(cid:47)(cid:40)(cid:66)(cid:44)(cid:49)(cid:44)(cid:66)(cid:49)(cid:66)(cid:51)(cid:36)(cid:53)(cid:55)(cid:21)(cid:66)(cid:54)(cid:51)(cid:41)(cid:66)(cid:49)(cid:66)(cid:51)(cid:36)(cid:53)(cid:55)(cid:20)(cid:66)(cid:54)(cid:51)(cid:41)(cid:66)(cid:49)(cid:66)(cid:51)(cid:36)(cid:53)(cid:55)(cid:21)(cid:66)(cid:48)(cid:51)(cid:41)(cid:66)(cid:49)(cid:66)(cid:58)(cid:40)(cid:47)(cid:47)(cid:40)(cid:66)(cid:48)(cid:51)(cid:41)(cid:66)(cid:49)(cid:66)(cid:48)(cid:51)(cid:41)(cid:20)(cid:21)(cid:22)(cid:66)(cid:58)(cid:51)(cid:39)(cid:66)(cid:49)(cid:66)(cid:58)(cid:40)(cid:47)(cid:47)(cid:40)(cid:66)(cid:58)(cid:51)(cid:39)(cid:66)(cid:49)(cid:66)(cid:17)(cid:17)(cid:17)(cid:66)(cid:49)(cid:66)(cid:17)(cid:17)(cid:17)(cid:66)(cid:48)(cid:51)(cid:41)(cid:66)(cid:49)(cid:66)(cid:48)(cid:50)(cid:57)(cid:66)(cid:48)(cid:51)(cid:41)(cid:66)(cid:49)(cid:66)(cid:48)(cid:51)(cid:41)(cid:20)(cid:66)(cid:48)(cid:51)(cid:41)(cid:66)(cid:49)(cid:66)(cid:17)(cid:17)(cid:17)(cid:66)(cid:54)(cid:51)(cid:41)(cid:66)(cid:49)(cid:66)(cid:42)(cid:47)(cid:50)(cid:37)(cid:66)(cid:54)(cid:51)(cid:41)(cid:66)(cid:49)(cid:66)(cid:17)(cid:17)(cid:17)(cid:66)(cid:54)(cid:51)(cid:41)(cid:66)(cid:49)(cid:66)(cid:47)(cid:20)(cid:28)(cid:28)(cid:66)(cid:54)(cid:51)(cid:41)(cid:66)(cid:49)(cid:66)(cid:17)(cid:17)(cid:17)(cid:66)(cid:54)(cid:51)(cid:41)(cid:66)(cid:49)(cid:66)(cid:51)(cid:50)(cid:38)(cid:46)(cid:40)(cid:55)(cid:20)(cid:66)(cid:54)(cid:51)(cid:41)(cid:66)(cid:49)(cid:66)(cid:42)(cid:56)(cid:39)(cid:28)(cid:66)(cid:39)(cid:40)(cid:41)(cid:17)(cid:17)(cid:17)(cid:66)(cid:49)(cid:66)(cid:42)(cid:56)(cid:39)(cid:23)(cid:66)(cid:39)(cid:40)(cid:41)(cid:66)(cid:49)(cid:66)(cid:56)(cid:42)(cid:56)(cid:39)(cid:66)(cid:39)(cid:40)(cid:41)(cid:66)(cid:49)(cid:66)(cid:48)(cid:42)(cid:56)(cid:39)(cid:66)(cid:39)(cid:40)(cid:41)(cid:66)(cid:49)(cid:66)(cid:54)(cid:42)(cid:56)(cid:39)(cid:66)(cid:39)(cid:40)(cid:41)(cid:66)(cid:49)(cid:66)(cid:56)(cid:48)(cid:36)(cid:38)(cid:66)(cid:39)(cid:40)(cid:41)(cid:66)(cid:49)(cid:66)(cid:48)(cid:48)(cid:36)(cid:38)(cid:66)(cid:39)(cid:40)(cid:41)(cid:66)(cid:49)(cid:66)(cid:54)(cid:48)(cid:36)(cid:38)(cid:66)(cid:39)(cid:40)(cid:41)(cid:17)(cid:17)(cid:17)Arbeitsvorbereitung

3.4 Datei- und Programmverwaltung

Standard-Verzeichnisse   

Folgende Verzeichnisse sind standardmig vorhanden:

Verzeichnis

_N_DEF_DIR

_N_CST_DIR

_N_CMA_DIR

_N_CUS_DIR

_N_WKS_DIR

_N_SPF_DIR

_N_MPF_DIR

_N_COM_DIR

Inhalt

Datenbausteine und Makrobausteine

Standard-Zyklen

Hersteller-Zyklen

Anwender-Zyklen

Werkstcke

Globale Unterprogramme

Hauptprogramme

Kommentare

Dateitypen   

Im Programmspeicher knnen folgende Dateitypen eingebracht werden:

Dateityp

<Name>_MPF   

<Name>_SPF   

<Name>_TEA

<Name>_SEA

<Name>_TOA

<Name>_UFR

<Name>_INI

<Name>_GUD

<Name>_RPA

<Name>_COM

<Name>_DEF

Beschreibung

Hauptprogramm

Unterprogramm

Maschinendaten

Settingdaten

Werkzeugkorrekturen

Nullpunktverschiebungen/Frame

Initialisierungsdatei

Globale Anwenderdaten

R-Parameter

Kommentar

Definitionen fr globale Anwenderdaten und Makros

Werkstck-Hauptverzeichnis (_N_WKS_DIR)   

Das Werkstck-Hauptverzeichnis ist standardmig unter der Bezeichnung _N_WKS_DIR im 
Programmspeicher eingerichtet. Das Werkstck-Hauptverzeichnis enthlt fr alle Werkstcke, 
die Sie programmiert haben, die entsprechenden Werkstckverzeichnisse.

Werkstckverzeichnisse ( ..._WPD)     

Ein Werkstckverzeichnis enthlt alle Dateien, die zum Bearbeiten eines Werkstcks 
notwendig sind. Dies knnen Hauptprogramme, Unterprogramme, beliebige Initialisierungs-
Programme und Kommentar-Dateien sein.

Initialisierungsprogramme werden nach der Programmanwahl mit dem ersten 
Teileprogrammstart einmalig ausgefhrt (entsprechend Maschinendatum 
MD11280 $MN_WPD_INI_MODE).

546

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.4 Datei- und Programmverwaltung

Beispiel: 

Das Werkstckverzeichnis _N_WELLE_WPD, das fr das Werkstck WELLE angelegt wurde, 
enthlt folgende Dateien:

Datei

_N_WELLE_MPF

_N_PART2_MPF

_N_PART1_SPF

_N_PART2_SPF

_N_WELLE_INI

_N_WELLE_SEA

_N_PART2_INI

_N_PART2_UFR

_N_WELLE_COM

Beschreibung

Hauptprogramm

Hauptprogramm

Unterprogramm

Unterprogramm

Allgemeines Initialisierungsprogramm der Daten fr das Werkstck

Initialisierungsprogramm Settingdaten

Allgemeines Initialisierungsprogramm der Daten fr Programm Part 2

Initialisierungsprogramm fr Frame-Daten fr Programm Part 2

Kommentardatei

Zustzlich knnen in einem Werkstckverzeichnis auch Daten abgelegt werden, welche nicht 
unmittelbar fr die Bearbeitung durch den NC bentigt werden. Dies knnen neben ASCII-
Dateien auch Binrdateien wie z. B. Bilder im JPG-Format oder Beschreibungen im PDF-
Format sein. Damit diese vom NC als Binrdateien interpretiert werden knnen, mssen die 
Dateierweiterungen im NC bekannt sein (Einstellung bei der Inbetriebnahme ber MD17000 
$MN_ EXTENSIONS_OF_BIN_FILES; in der Grundeinstellung sind folgende 
Dateierweiterungen vorbelegt: JPG, GIF, PNG, BMP, PDF, ICO, HTM).

Werkstck fr die Bearbeitung anwhlen

Ein Werkstckverzeichnis kann fr die Abarbeitung in einem Kanal angewhlt werden. 
Befindet sich in diesem Verzeichnis ein Hauptprogramm gleichen Namens oder nur ein 
einziges Hauptprogramm (_MPF), so wird dieses automatisch fr die Abarbeitung angewhlt.

3.4.1.2

Externe Programmspeicher

Neben dem passiven Filesystem im NC knnen an einer Maschine auch externe 
Programmspeicher verfgbar sein (z. B auf dem lokalen Laufwerk oder auf einem 
Netzlaufwerk).

ber die Funktionen "Abarbeiten von Extern" oder "EES (Execution from External Storage)" 
knnen Teilprogramme direkt von externen Programmspeichern abgearbeitet werden.

Weitere Informationen: Funktionshandbuch Basisfunktionen

Globaler Teileprogrammspeicher (GDIR)

Bei der Vereinbarung der Laufwerke kann eines der Laufwerke als globaler 
Teileprogrammspeicher (GDIR) ausgezeichnet werden.

Vom System werden dann automatisch die Verzeichnisse MPF.DIR, SPF.DIR und WKS.DIR 
auf dem Laufwerk angelegt. Diese drei Verzeichnisse bilden das GDIR.

Das GDIR spielt ausschlielich fr die Funktion EES eine Rolle. Je nach 
Laufwerkskonfiguration ersetzt oder erweitert das GDIR den NC-Teileprogrammspeicher. Das 
Einrichten eines GDIR ist fr den EES-Betrieb allerdings nicht zwingend erforderlich.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

547

Arbeitsvorbereitung

3.4 Datei- und Programmverwaltung

Die Verzeichnisse und Dateien des GDIR knnen im Teileprogramm auf dieselbe Art wie im 
passiven Filesystem adressiert werden. Damit ist eine kompatible Verlagerung eines NC-
Programms mit Pfadangaben aus dem passiven Filessystem ins GDIR mglich. Das 
Verzeichnis SPF.DIR des GDIR ist im Suchpfad fr Unterprogramme enthalten.

Programmorganisation

Die folgende Abbildung soll die Programmorganisation auf externen Programmspeichern 
veranschaulichen:

Case-insensitive Dateisysteme

Hinweis

Um Probleme durch die Gro- und Kleinschreibung bei der Datei-Adressierung (siehe 
"Adressierung von Dateien des Programmspeichers (Seite 549)") zu vermeiden, sollten case-
insensitive Dateisysteme als externe Programmspeicher verwendet werden. 

548

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:69)(cid:72)(cid:79)(cid:76)(cid:72)(cid:69)(cid:76)(cid:74)(cid:72)(cid:86)(cid:3)(cid:47)(cid:68)(cid:88)(cid:73)(cid:90)(cid:72)(cid:85)(cid:78)(cid:83)(cid:83)(cid:20)(cid:17)(cid:91)(cid:91)(cid:91)(cid:48)(cid:92)(cid:54)(cid:88)(cid:69)(cid:51)(cid:17)(cid:54)(cid:51)(cid:41)(cid:58)(cid:40)(cid:47)(cid:47)(cid:40)(cid:48)(cid:92)(cid:51)(cid:85)(cid:82)(cid:74)(cid:17)(cid:48)(cid:83)(cid:73)(cid:80)(cid:82)(cid:85)(cid:72)(cid:51)(cid:85)(cid:82)(cid:74)(cid:86)(cid:51)(cid:85)(cid:82)(cid:74)(cid:86)(cid:61)(cid:92)(cid:78)(cid:79)(cid:72)(cid:81)(cid:42)(cid:79)(cid:82)(cid:69)(cid:68)(cid:79)(cid:72)(cid:85)(cid:3)(cid:55)(cid:72)(cid:76)(cid:79)(cid:72)(cid:83)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)(cid:16)(cid:86)(cid:83)(cid:72)(cid:76)(cid:70)(cid:75)(cid:72)(cid:85)(cid:3)(cid:11)(cid:42)(cid:39)(cid:44)(cid:53)(cid:12)(cid:54)(cid:56)(cid:37)(cid:20)(cid:20)(cid:17)(cid:54)(cid:51)(cid:41)(cid:54)(cid:56)(cid:37)(cid:20)(cid:21)(cid:17)(cid:54)(cid:51)(cid:41)(cid:51)(cid:53)(cid:50)(cid:42)(cid:20)(cid:20)(cid:17)(cid:48)(cid:51)(cid:41)(cid:51)(cid:53)(cid:50)(cid:42)(cid:20)(cid:21)(cid:17)(cid:48)(cid:51)(cid:41)(cid:66)(cid:49)(cid:66)(cid:54)(cid:56)(cid:37)(cid:20)(cid:66)(cid:54)(cid:51)(cid:41)(cid:66)(cid:49)(cid:66)(cid:54)(cid:56)(cid:37)(cid:21)(cid:66)(cid:54)(cid:51)(cid:41)(cid:66)(cid:49)(cid:66)(cid:51)(cid:53)(cid:50)(cid:42)(cid:20)(cid:66)(cid:48)(cid:51)(cid:41)(cid:66)(cid:49)(cid:66)(cid:51)(cid:53)(cid:50)(cid:42)(cid:21)(cid:66)(cid:48)(cid:51)(cid:41)(cid:55)(cid:72)(cid:76)(cid:79)(cid:72)(cid:83)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)(cid:86)(cid:83)(cid:72)(cid:76)(cid:70)(cid:75)(cid:72)(cid:85)(cid:51)(cid:68)(cid:86)(cid:86)(cid:76)(cid:89)(cid:72)(cid:86)(cid:3)(cid:41)(cid:76)(cid:79)(cid:72)(cid:86)(cid:92)(cid:86)(cid:87)(cid:72)(cid:80)(cid:3)(cid:76)(cid:80)(cid:3)(cid:49)(cid:38)(cid:46)(cid:40)(cid:91)(cid:87)(cid:72)(cid:85)(cid:81)(cid:72)(cid:3)(cid:51)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)(cid:86)(cid:83)(cid:72)(cid:76)(cid:70)(cid:75)(cid:72)(cid:85)(cid:18)(cid:18)(cid:18)(cid:39)(cid:40)(cid:57)(cid:20)(cid:29)(cid:66)(cid:49)(cid:66)(cid:38)(cid:56)(cid:54)(cid:66)(cid:39)(cid:44)(cid:53)(cid:66)(cid:49)(cid:66)(cid:38)(cid:48)(cid:36)(cid:66)(cid:39)(cid:44)(cid:53)(cid:66)(cid:49)(cid:66)(cid:38)(cid:54)(cid:55)(cid:66)(cid:39)(cid:44)(cid:53)(cid:18)(cid:18)(cid:39)(cid:40)(cid:57)(cid:21)(cid:29)(cid:58)(cid:46)(cid:54)(cid:17)(cid:39)(cid:44)(cid:53)(cid:54)(cid:51)(cid:41)(cid:17)(cid:39)(cid:44)(cid:53)(cid:48)(cid:51)(cid:41)(cid:17)(cid:39)(cid:44)(cid:53)(cid:58)(cid:46)(cid:54)(cid:17)(cid:39)(cid:44)(cid:53)(cid:54)(cid:51)(cid:41)(cid:17)(cid:39)(cid:44)(cid:53)(cid:48)(cid:51)(cid:41)(cid:17)(cid:39)(cid:44)(cid:53)Arbeitsvorbereitung

3.4 Datei- und Programmverwaltung

3.4.1.3

Adressierung von Dateien des Programmspeichers

Eine Datei im Programmspeicher, die durch einen Dateihandlingsbefehl (z. B. WRITE, 
DELETE, READ, ISFILE, FILEDATE, FILETIME, FILESIZE, FILESTAT, FILEINFO) 
angesprochen wird, wird entweder durch einen absoluten Pfad plus Dateinamen oder nur 
durch den Dateinamen allein referenziert. Im zweiten Fall wird der Pfad des angewhlten 
Programms als Dateipfad verwendet.

Adressierung in NC-/EES-Notation

Adressierung von Dateien des passiven Filesystems

Die Adressierung von Dateien des passiven Filesystems erfolgt blicherweise in NC-Notation 
(Verzeichnis- und Dateinamen beginnen mit der Domainkennung "_N_", Trennzeichen fr die 
Verzeichnis-/Dateierweiterung ist "_") ohne Angabe des Laufwerknamens. Eine Adressierung 
in EES-Notation (ohne Domain-Kennung "_N_", Trennzeichen fr die Verzeichnis-/
Dateierweiterung ist ".") ist aber auch zulssig.

Beispiel:

 NC-Notation: "/_N_SPF_DIR/_N_SUB1_SPF"

 EES-Notation: "/SPF.DIR/SUB1.SPF"

Hinweis

Adressierungen von Dateien des passiven Filesystems in EES-Notation werden intern nach 
folgenden Regeln in NC-Notation umgewandelt:

 Verzeichnis- und Dateinamen werden mit der Domainkennung "_N_" erweitert.

 Ist das viertletzte Zeichen im Verzeichnis- bzw. Dateinamen ein Punkt ("."), wird es in einen 

Unterstrich ("_") umgewandelt.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

549

(cid:69)(cid:72)(cid:79)(cid:76)(cid:72)(cid:69)(cid:76)(cid:74)(cid:72)(cid:86)(cid:3)(cid:47)(cid:68)(cid:88)(cid:73)(cid:90)(cid:72)(cid:85)(cid:78)(cid:83)(cid:83)(cid:20)(cid:17)(cid:91)(cid:91)(cid:91)(cid:48)(cid:92)(cid:54)(cid:88)(cid:69)(cid:51)(cid:17)(cid:54)(cid:51)(cid:41)(cid:58)(cid:40)(cid:47)(cid:47)(cid:40)(cid:48)(cid:92)(cid:51)(cid:85)(cid:82)(cid:74)(cid:17)(cid:48)(cid:83)(cid:73)(cid:80)(cid:82)(cid:85)(cid:72)(cid:51)(cid:85)(cid:82)(cid:74)(cid:86)(cid:51)(cid:85)(cid:82)(cid:74)(cid:86)(cid:61)(cid:92)(cid:78)(cid:79)(cid:72)(cid:81)(cid:66)(cid:49)(cid:66)(cid:51)(cid:53)(cid:50)(cid:42)(cid:21)(cid:66)(cid:48)(cid:51)(cid:41)(cid:66)(cid:49)(cid:66)(cid:51)(cid:53)(cid:50)(cid:42)(cid:20)(cid:66)(cid:48)(cid:51)(cid:41)(cid:42)(cid:79)(cid:82)(cid:69)(cid:68)(cid:79)(cid:72)(cid:85)(cid:3)(cid:55)(cid:72)(cid:76)(cid:79)(cid:72)(cid:83)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)(cid:16)(cid:86)(cid:83)(cid:72)(cid:76)(cid:70)(cid:75)(cid:72)(cid:85)(cid:3)(cid:11)(cid:42)(cid:39)(cid:44)(cid:53)(cid:12)(cid:54)(cid:56)(cid:37)(cid:20)(cid:20)(cid:17)(cid:54)(cid:51)(cid:41)(cid:54)(cid:56)(cid:37)(cid:20)(cid:21)(cid:17)(cid:54)(cid:51)(cid:41)(cid:51)(cid:53)(cid:50)(cid:42)(cid:20)(cid:20)(cid:17)(cid:48)(cid:51)(cid:41)(cid:51)(cid:53)(cid:50)(cid:42)(cid:20)(cid:21)(cid:17)(cid:48)(cid:51)(cid:41)(cid:55)(cid:72)(cid:76)(cid:79)(cid:72)(cid:83)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)(cid:86)(cid:83)(cid:72)(cid:76)(cid:70)(cid:75)(cid:72)(cid:85)(cid:66)(cid:49)(cid:66)(cid:54)(cid:56)(cid:37)(cid:20)(cid:66)(cid:54)(cid:51)(cid:41)(cid:66)(cid:49)(cid:66)(cid:54)(cid:56)(cid:37)(cid:21)(cid:66)(cid:54)(cid:51)(cid:41)(cid:51)(cid:68)(cid:86)(cid:86)(cid:76)(cid:89)(cid:72)(cid:86)(cid:3)(cid:41)(cid:76)(cid:79)(cid:72)(cid:86)(cid:92)(cid:86)(cid:87)(cid:72)(cid:80)(cid:3)(cid:76)(cid:80)(cid:3)(cid:49)(cid:38)(cid:46)(cid:40)(cid:91)(cid:87)(cid:72)(cid:85)(cid:81)(cid:72)(cid:3)(cid:51)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)(cid:86)(cid:83)(cid:72)(cid:76)(cid:70)(cid:75)(cid:72)(cid:85)(cid:18)(cid:18)(cid:39)(cid:40)(cid:57)(cid:20)(cid:29)(cid:18)(cid:51)(cid:85)(cid:82)(cid:74)(cid:86)(cid:18)(cid:83)(cid:83)(cid:20)(cid:17)(cid:91)(cid:91)(cid:91)(cid:36)(cid:71)(cid:85)(cid:72)(cid:86)(cid:86)(cid:76)(cid:72)(cid:85)(cid:88)(cid:81)(cid:74)(cid:3)(cid:76)(cid:81)(cid:3)(cid:40)(cid:40)(cid:54)(cid:16)(cid:49)(cid:82)(cid:87)(cid:68)(cid:87)(cid:76)(cid:82)(cid:81)(cid:29)(cid:36)(cid:71)(cid:85)(cid:72)(cid:86)(cid:86)(cid:76)(cid:72)(cid:85)(cid:88)(cid:81)(cid:74)(cid:3)(cid:76)(cid:81)(cid:3)(cid:49)(cid:38)(cid:46)(cid:16)(cid:49)(cid:82)(cid:87)(cid:68)(cid:87)(cid:76)(cid:82)(cid:81)(cid:29)(cid:36)(cid:71)(cid:85)(cid:72)(cid:86)(cid:86)(cid:76)(cid:72)(cid:85)(cid:88)(cid:81)(cid:74)(cid:3)(cid:76)(cid:81)(cid:3)(cid:40)(cid:40)(cid:54)(cid:16)(cid:49)(cid:82)(cid:87)(cid:68)(cid:87)(cid:76)(cid:82)(cid:81)(cid:29)(cid:18)(cid:18)(cid:39)(cid:40)(cid:57)(cid:21)(cid:29)(cid:18)(cid:54)(cid:51)(cid:41)(cid:17)(cid:39)(cid:44)(cid:53)(cid:18)(cid:54)(cid:56)(cid:37)(cid:20)(cid:20)(cid:17)(cid:54)(cid:51)(cid:41)(cid:18)(cid:66)(cid:49)(cid:66)(cid:48)(cid:51)(cid:41)(cid:66)(cid:39)(cid:44)(cid:53)(cid:18)(cid:66)(cid:49)(cid:66)(cid:51)(cid:53)(cid:50)(cid:42)(cid:20)(cid:20)(cid:66)(cid:48)(cid:51)(cid:41)(cid:36)(cid:71)(cid:85)(cid:72)(cid:86)(cid:86)(cid:76)(cid:72)(cid:85)(cid:88)(cid:81)(cid:74)(cid:3)(cid:76)(cid:81)(cid:3)(cid:49)(cid:38)(cid:46)(cid:16)(cid:49)(cid:82)(cid:87)(cid:68)(cid:87)(cid:76)(cid:82)(cid:81)(cid:29)(cid:36)(cid:71)(cid:85)(cid:72)(cid:86)(cid:86)(cid:76)(cid:72)(cid:85)(cid:88)(cid:81)(cid:74)(cid:3)(cid:76)(cid:81)(cid:3)(cid:40)(cid:40)(cid:54)(cid:16)(cid:49)(cid:82)(cid:87)(cid:68)(cid:87)(cid:76)(cid:82)(cid:81)(cid:29)(cid:18)(cid:66)(cid:49)(cid:66)(cid:48)(cid:51)(cid:41)(cid:66)(cid:39)(cid:44)(cid:53)(cid:18)(cid:66)(cid:49)(cid:66)(cid:51)(cid:53)(cid:50)(cid:42)(cid:21)(cid:66)(cid:48)(cid:51)(cid:41)(cid:18)(cid:48)(cid:51)(cid:41)(cid:17)(cid:39)(cid:44)(cid:53)(cid:18)(cid:51)(cid:53)(cid:50)(cid:42)(cid:21)(cid:17)(cid:48)(cid:51)(cid:41)(cid:40)(cid:91)(cid:83)(cid:79)(cid:76)(cid:93)(cid:76)(cid:87)(cid:72)(cid:3)(cid:36)(cid:71)(cid:85)(cid:72)(cid:86)(cid:86)(cid:76)(cid:72)(cid:85)(cid:88)(cid:81)(cid:74)(cid:29)(cid:18)(cid:18)(cid:49)(cid:38)(cid:29)(cid:18)(cid:66)(cid:49)(cid:66)(cid:54)(cid:51)(cid:41)(cid:66)(cid:39)(cid:44)(cid:53)(cid:18)(cid:66)(cid:49)(cid:66)(cid:54)(cid:56)(cid:37)(cid:21)(cid:66)(cid:54)(cid:51)(cid:41)(cid:18)(cid:18)(cid:49)(cid:38)(cid:29)(cid:18)(cid:54)(cid:51)(cid:41)(cid:17)(cid:39)(cid:44)(cid:53)(cid:18)(cid:54)(cid:56)(cid:37)(cid:21)(cid:17)(cid:54)(cid:51)(cid:41)(cid:69)(cid:93)(cid:90)(cid:17)(cid:18)(cid:18)(cid:18)(cid:39)(cid:40)(cid:57)(cid:20)(cid:29)(cid:66)(cid:49)(cid:66)(cid:38)(cid:56)(cid:54)(cid:66)(cid:39)(cid:44)(cid:53)(cid:66)(cid:49)(cid:66)(cid:38)(cid:48)(cid:36)(cid:66)(cid:39)(cid:44)(cid:53)(cid:66)(cid:49)(cid:66)(cid:38)(cid:54)(cid:55)(cid:66)(cid:39)(cid:44)(cid:53)(cid:18)(cid:18)(cid:39)(cid:40)(cid:57)(cid:21)(cid:29)(cid:58)(cid:46)(cid:54)(cid:17)(cid:39)(cid:44)(cid:53)(cid:54)(cid:51)(cid:41)(cid:17)(cid:39)(cid:44)(cid:53)(cid:48)(cid:51)(cid:41)(cid:17)(cid:39)(cid:44)(cid:53)(cid:66)(cid:49)(cid:66)(cid:58)(cid:46)(cid:54)(cid:66)(cid:39)(cid:44)(cid:53)(cid:66)(cid:49)(cid:66)(cid:54)(cid:51)(cid:41)(cid:66)(cid:39)(cid:44)(cid:53)(cid:66)(cid:49)(cid:66)(cid:48)(cid:51)(cid:41)(cid:66)(cid:39)(cid:44)(cid:53)Arbeitsvorbereitung

3.4 Datei- und Programmverwaltung

ber den vordefinierten Laufwerksnamen "//NC:" kann das passive Filesystem auch gezielt 
adressiert werden.

Beispiel:

 NC-Notation: "//NC:/_N_SPF_DIR/_N_SUB1_SPF"

 EES-Notation: "//NC:/SPF.DIR/SUB1.SPF"

Adressierung von Dateien eines externen Programmspeichers

Die Adressierung von Dateien eines externen Programmspeichers, der nicht als GDIR 
ausgezeichnet ist, muss in EES-Notation erfolgen. Am Anfang des Adressierungspfades muss 
der Laufwerksname (z. B. "//DEV1:") angegeben werden. Es sind alle in /user/
sinumerik/hmi/cfg/logdrive.ini projektierten symbolischen Gertenamen zulssig.

Beispiel:

 EES-Notation: "//DEV1:/MyProgDir/pp1.xxx"

 NC-Notation: nicht zulssig

Adressierung von Dateien des globalen Teileprogrammspeichers (GDIR)

Bei der Adressierung von Dateien des GDIR ist neben der Pfadangabe in EES-Notation auch 
eine Pfadangabe in NC-Notation zulssig.

Beispiel:

 EES-Notation: "//DEV2:/MPF.DIR/PROG11.MPF"

 NC-Notation: "/_N_MPF_DIR/_N_PROG11_MPF"

Hinweis

Adressierungen von Dateien des GDIR in NC-Notation werden intern nach folgenden Regeln 
in EES-Notation umgewandelt:

 Die Domainkennung "_N_" in Verzeichnis- und Dateinamen wird entfernt.

 Ist das viertletzte Zeichen im Verzeichnis- bzw. Dateinamen ein Unterstrich ("_"), wird es in 

einen Punkt (".") umgewandelt.

Regeln zur Pfadangabe

Eine vollstndige Pfadangabe besteht aus Laufwerksnamen, Verzeichnispfad und 
Dateinamen.

Laufwerksname

Fr die Angabe des Laufwerksnamens gelten folgende Regeln:

 Es sind alle in /user/sinumerik/hmi/cfg/logdrive.ini projektierten symbolischen 

Gertenamen zulssig.

 Am Anfang steht das Zeichen "//", gefolgt von mindestens einem Buchstaben oder einer 

Ziffer.

 Die folgenden Zeichen knnen in beliebiger Kombination Buchstaben, Ziffern, "_" und 

Leerzeichen sein.

550

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.4 Datei- und Programmverwaltung

 Abgeschlossen wird der Name mit einem Buchstaben oder einer Ziffer, gefolgt von einem 

":".

 Weitere Sonderzeichen sind nicht erlaubt.

Hinweis

Fr das passive Filesystem ist der Laufwerksname "//NC:" vordefiniert.

Beispiele:

 Externe Programmspeicher:

 //Drive1:

 //Drive_1:

 //Drive 1:

 //A B:

 //1 B C 2:

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

551

Arbeitsvorbereitung

3.4 Datei- und Programmverwaltung

Verzeichnispfad

Fr die Angabe des Verzeichnispfades gelten folgende Regeln:

 Am Anfang und am Ende des Verzeichnispfades und als Trennzeichen fr die einzelnen 

Pfadanteile steht "/".

Hinweis

Ein doppelter Schrgstrich ("//") innerhalb des Verzeichnispfades ist nicht zulssig!

 Verzeichnisnamen:

 Verzeichnisnamen mssen mit einem Buchstaben oder einer Ziffer beginnen. Nur bei 

der Adressierung in NC-Notation beginnen die Verzeichnisnamen mit der 
Domainkennung "_N_".

 Die folgenden Zeichen knnen in beliebiger Kombination Buchstaben, Ziffern und "_" 

sein.

Hinweis

Bei externen Programmspeichern sind auch Leerzeichen im Verzeichnisnamen 
zulssig. Dies gilt jedoch nicht, wenn der externe Programmspeicher als globaler 
Teileprogrammspeicher (GDIR) eingerichtet ist. 

 Weitere Sonderzeichen sind nicht erlaubt.

 Verzeichniserweiterungen:

 Verzeichniserweiterungen mssen aus genau drei Buchstaben/Ziffern bestehen.  

 Sie werden mit "_" (NC-Notation) bzw. "." (EES-Notation) vom Verzeichnisnamen 

getrennt.

Hinweis

Im passiven Filesystem gibt es nur die Verzeichniserweiterungen _DIR und _WPD.

Beispiele:

 Passives Filesystem bzw. GDIR:

 NC-Notation: _N_WKS_DIR/_N_MYNCPROGS_WPD/... 

 EES-Notation: WKS.DIR/MYPROGS.WPD/...

 Externe Programmspeicher:

 /abc

 /ab_c.def

 /ab c1.def

 /a b c .d11

 /abc.def/ghi.klm

552

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.4 Datei- und Programmverwaltung

Dateiname

Fr Dateinamen gelten folgende Regeln:

 Nur bei der Adressierung in NC-Notation beginnen die Dateinamen mit der Domainkennung 

"_N_".

 Die beiden folgenden Zeichen sollten zwei Buchstaben oder ein Unterstrich gefolgt von 

einem Buchstaben sein.

Hinweis

Wenn diese Bedingung erfllt ist, dann kann ein NC-Programm allein durch Angabe des 
Programmnamens als Unterprogramm aus einem anderen Programm heraus aufgerufen 
werden. Beginnt der Programmname hingegen mit Ziffern, dann ist der Unterprogramm-
Aufruf nur ber die CALL-Anweisung mglich.

 Die folgenden Zeichen knnen in beliebiger Kombination Buchstaben, Ziffern und "_" sein.

 Dateierweiterung:

 Die Dateierweiterung muss aus genau drei Buchstaben/Ziffern bestehen.

Hinweis

Zulssige Dateierweiterungen im passiven Filesystem siehe "Programmspeicher im 
NCK (Seite 545)".

 Sie wird mit "_" (NC-Notation) bzw. "." (EES-Notation) vom Dateinamen getrennt.

Beispiele:

 Passives Filesystem bzw. GDIR:

 NC-Notation: _N_SUB1_SPF

 EES-Notation: SUB1.SPF

 Externe Programmspeicher:

 Teil1

 _Teil1

 Teil_1.spf

 Teil1.mpf 

DIN Unterprogrammname

Fr DIN Unterprogrammnamen gelten folgende Regeln:

 Das erste Zeichen ist der Buchstabe "L".

 Die folgenden Zeichen sind Ziffern (mindestens eine).

 Dateierweiterung:

 Die Dateierweiterung muss aus genau drei Buchstaben bestehen.

 Sie wird mit "_" (NC-Notation) bzw. "." (EES-Notation) vom Dateinamen getrennt.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

553

Arbeitsvorbereitung

3.4 Datei- und Programmverwaltung

Beispiele:

 L123

 L1_SPF (NC-Notation) bzw. L1.SPF (EES-Notation)

Maximale Pfadlnge

Fr die Angabe von Laufwerksname und Verzeichnispfad stehen maximal 128 Bytes zur 
Verfgung, die Lnge des Dateinamens darf maximal 31 Bytes betragen. Fr den gesamten 
Pfad ergibt das eine maximale Lnge von 159 Bytes.

3.4.1.4

Suchpfad bei Unterprogrammaufruf

Bei Unterprogrammaufrufen ohne Pfadangabe wird der absolute Pfad durch Abarbeiten eines 
festen Suchpfades ermittelt.

Die Programmspeicher werden dabei in der folgenden Reihenfolge durchsucht:

Verzeichnis

Beschreibung

1

2

3

aktuelles Verzeichnis / name

aktuelles Verzeichnis / name_SPF

aktuelles Verzeichnis / name_MPF

4 a

//NC:/_N_SPF_DIR / name_SPF

b

//DEV2:/_N_SPF_DIR / name_SPF 1)

Das aktuelle Verzeichnis ist das Verzeichnis, in 
dem die Programmanwahl erfolgt ist.  

Dies kann sein:

 ein Werkstckverzeichnis oder das Stan

dard-Verzeichnis _N_MPF_DIR im NC-Teile
programmspeicher bzw. globalen Teilepro
grammspeicher

oder

 ein beliebiges Verzeichnis eines externen 

Programmspeichers

Unterprogramm-Verzeichnis im NC-Teilepro
grammspeicher

Unterprogramm-Verzeichnis im globalen Teile
programmspeicher

Hinweis:
Dieser Suchschritt entfllt, wenn kein globaler 
Teileprogrammspeicher eingerichtet ist oder die 
Programmanwahl im NC-Teileprogrammspei
cher erfolgt ist.

5

6

7

8

Mit CALLPATH programmierte Suchpfaderweiterung (siehe "Suchpfad bei Unterprogrammauf
rufen erweitern (CALLPATH) (Seite 527)").

Hinweis:
Dieser Suchschritt entfllt, wenn kein CALLPATH programmiert ist.

/_N_CUS_DIR / name_SPF

Anwenderzyklen-Verzeichnis

/_N_CMA_DIR / name_SPF

Herstellerzyklen-Verzeichnis

/_N_CST_DIR / name_SPF

Standardzyklen-Verzeichnis

1)

//DEV2:" steht beispielhaft fr das Laufwerk, auf dem der globale Teileprogrammspeicher eingerichtet 
ist.  

554

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
Arbeitsvorbereitung

3.4 Datei- und Programmverwaltung

Fr die Suche gelten folgende Regeln:

 Der Suchpfad wird fr jeden einzelnen Unterprogrammaufruf durchlaufen, d. h. es ist 

irrelevant, wo sich das bergeordnete Programm befindet.

 Je nach Verzeichnis werden unterschiedliche Dateitypen bercksichtigt.

 Grundstzlich wird in einem Verzeichnis nicht in unterlagerten, d. h. geschachtelten 

Verzeichnissen gesucht.

3.4.1.5

Abfrage von Pfad und Dateiname

Zur Abfrage des Pfades und des Dateinamens eines NC-Programms stehen folgende im 
Teileprogramm lesbare Systemvariablen zur Verfgung:

Systemvariable

$P_STACK

Typ

INT

Bedeutung

Liefert die Programmebene, in der das aktuelle NC-Programm 
bearbeitet wird.

$P_PATH[ <n>]

STRING Liefert den Pfad des NC-Programms, welches in der durch den 

Feldindex <n> selektierten Programmebene bearbeitet wird.

Beispiele:

$P_PATH[0] liefert den Pfad fr das Hauptprogramm, z. B. "/
_N_WKS_DIR/_N_WELLE_WPD/".

$P_PATH[$P_STACK - 1] liefert den Pfad des aufrufenden 
Programms.

Bezieht sich der Pfad auf ein NC-Programm, das im passiven 
Filesystem des NC oder im globalen Teileprogrammspeicher 
(GDIR) abgelegt ist, wird der Pfad in NC-Notation geliefert.

Bezieht sich der Pfad auf ein NC-Programm, das von einem 
anderen externen Programmspeicher als dem globalen Teile
programmspeicher abgearbeitet wird, liefert $P_PATH den 
Pfad in EES-Notation.

$P_PROG[ <n>]

STRING Liefert den Namen des NC-Programms, welches in der durch 

den Feldindex <n> selektierten Programmebene bearbeitet 
wird.

Ist das NC-Programm im passiven Filesystem des NC oder im 
globalen Teileprogrammspeicher abgelegt, wird der Pro
grammname in NC-Notation geliefert.

Wird das NC-Programm von einem anderen externen Lauf
werk als dem globalen Teileprogrammspeicher abgearbeitet, 
liefert $P_PROG den Namen in EES-Notation.

$P_PROGPATH

STRING Liefert den Pfad des NC-Programms, das gerade bearbeitet 

wird.

Der Aufruf von $P_PROGPATH ist identisch zu 
$P_PATH[$P_STACK].

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

555

Arbeitsvorbereitung

3.4 Datei- und Programmverwaltung

Systemvariable

Typ

Bedeutung

$P_IS_EES_PATH[ <n>]

BOOL

Abfrage, ob der von $P_PATH[<n>] gelieferte Pfad bzw. der 
von $P_PROG[<n>] gelieferte Programmname der NC-Nota
tion oder der EES-Notation entspricht.

= FALSE $P_PATH[<n>] und $P_PROG[<n>] liefern NC-
Notation. D. h. jedem Bezeichner ist eine Prfix 
"_N_" vorangestellt. Das Trennzeichen fr die Da
teikennung ist "_".

= TRUE

Beispiele:

 Pfad in NC-Notation: "/_N_WKS_DIR/

_N_MYWPD_WPD/"

 Programmname in NC-Notation:"_N_MY

PROG_MPF"

Ein Pfad in NC-Notation kann sich sowohl auf das 
passive Filesystem im NC als auch auf den globa
len Teileprogrammspeicher beziehen.

$P_PATH[<n>] und $P_PROG[<n>] liefern EES-
Notation. D. h. den Bezeichnern ist kein Prfix 
"_N_" vorangestellt. Das Trennzeichen fr die Da
teikennung ist ".".

Beispiele:

 Pfad in EES-Notation: "//DEV1:/WKS.DIR/

MYWPD.WPD/"

 Programmname in EES-Notation: "MY

PROG.MPF"

<n>: Der Index <n> definiert die Programmebene, aus der die Pfadinformation gelesen werden soll 
(Wertebereich: 0 ... 17)

Hinweis

Im EES-Betrieb werden auerhalb des globalen Teileprogrammspeichers (GDIR) von den 
Systemvariablen $P_PROG, $P_PATH, und $P_PROGPATH Pfadnamen in EES-Notation 
geliefert. Anwenderprogramme, die diese Pfadnamen auswerten und weiterverarbeiten, 
mssen daher fr den EES-Betrieb so erweitert werden, dass sie auch Pfadnamen in EES-
Notation verarbeiten knnen.

3.4.2

Arbeitsspeicher (CHANDATA, COMPLETE, INITIAL)

Funktion

Der Arbeitsspeicher enthlt die aktuellen System- und Anwenderdaten, mit denen die 
Steuerung betrieben wird (aktives Filesystem), z. B.:

 Aktive Maschinendaten

 Werkzeugkorrekturdaten

556

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.4 Datei- und Programmverwaltung

 Nullpunktverschiebungen

 ...

Initialisierungsprogramme

Hierbei handelt es sich um Programme, mit denen die Daten des Arbeitsspeichers vorbesetzt 
(initialisiert) werden. Hierfr knnen folgende Dateitypen verwendet werden:

Dateityp

name_TEA

name_SEA

name_TOA

name_UFR

name_INI

name_GUD

name_RPA

Beschreibung

Maschinendaten

Settingdaten

Werkzeugkorrekturen

Nullpunktverschiebungen/Frame

Initialisierungsdatei

Globale Anwenderdaten

R-Parameter

Datenbereiche

Die Daten knnen in unterschiedliche Bereiche eingegliedert werden, in denen sie gelten 
sollen. Beispielsweise kann eine Steuerung ber mehrere Kanle verfgen oder gewhnlich 
auch ber mehrere Achsen.

Es gibt:

Kennung

Datenbereiche

NC

CH<n>

AX<n>

TO

NC-spezifische Daten

Kanalspezifische Daten (<n> gibt die Kanalnummer an)

Achsspezifische Daten (<n> gibt die Nummer der Maschinenachse an)

Werkzeugdaten

COMPLETE

Alle Daten

Initialisierungsprogramm am externen PC erzeugen

Mit Hilfe von Datenbereichskennung und Datentypenkennung knnen die Bereiche bestimmt 
werden, die bei der Datensicherung als Einheit betrachtet werden:

_N_AX5_TEA_INI
_N_CH2_UFR_INI
_N_COMPLETE_TEA_INI

Maschinendaten fr Achse 5
Frames des Kanals 2
Alle Maschinendaten

Nach Inbetriebnahme der Steuerung ist ein Datensatz im Arbeitsspeicher vorhanden, der den 
ordnungsgemen Betrieb der Steuerung gewhrleistet.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

557

Arbeitsvorbereitung

3.4 Datei- und Programmverwaltung

Vorgehensweise bei mehrkanaligen Steuerungen (CHANDATA)

CHANDATA(<Kanalnummer>) fr mehrere Kanle ist nur in der Datei _N_INITIAL_INI 
zulssig. Das ist die Inbetriebnahmedatei, mit der alle Daten der Steuerung initialisiert werden.

Programmcode

%_N_INITIAL_INI

CHANDATA(1)

$MC_AXCONF_MACHAX_USED[0]=1

$MC_AXCONF_MACHAX_USED[1]=2

$MC_AXCONF_MACHAX_USED[2]=3

CHANDATA(2)

$MC_AXCONF_MACHAX_USED[0]=4

$MC_AXCONF_MACHAX_USED[1]=5

CHANDATA(1)

Kommentar

; Maschinenachszuordnung Kanal 1:

; Maschinenachszuordnung Kanal 2:

; Axiale Maschinendaten:

; Genauhaltfenster grob:

$MA_STOP_LIMIT_COARSE[AX1]=0.2

$MA_STOP_LIMIT_COARSE[AX2]=0.2

; Achse 1

; Achse 2

; Genauhaltfenster fein:

$MA_STOP_LIMIT_FINE[AX1]=0.01

$MA_STOP_LIMIT_FINE[AX1]=0.01

; Achse 1

; Achse 2

ACHTUNG

CHANDATA-Anweisung

Im Teileprogramm darf die CHANDATA-Anweisung nur fr den Kanal gesetzt werden, auf dem 
das NC-Programm abgearbeitet wird. D. h. die Anweisung kann dazu benutzt werden, NC-
Programme davor zu schtzen, dass sie auf einem nicht vorgesehenen Kanal abgearbeitet 
werden.

Im Fehlerfall wird die Programmabarbeitung abgebrochen.

Hinweis

INI-Dateien in Joblisten enthalten keine CHANDATA-Anweisungen.

Initialisierungsprogramme sichern (COMPLETE, INITIAL)

Die Dateien des Arbeitsspeichers knnen auf einem externen PC gesichert und von dort 
wieder eingelesen werden.

 Die Dateien werden mit COMPLETE gesichert.

 Mit INITIAL wird ber alle Bereiche eine INI-Datei (_N_INITIAL_INI) erzeugt.

558

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.4 Datei- und Programmverwaltung

Initialisierungsprogramme einlesen

ACHTUNG

Datenverlust

Wird die Datei mit dem Namen "INITIAL_INI" eingelesen, so werden alle Daten, die in der 
Datei nicht versorgt werden, mit Standarddaten initialisiert. Ausgenommen davon sind nur die 
Maschinendaten. Es werden also Settingdaten, Werkzeugdaten, NPV, GUD-Werte, ... mit 
Standarddaten (normalerweise "NULL") versorgt.

Zum Einlesen von einzelnen Maschinendaten eignet sich z. B. die Datei COMPLETE_TEA_INI. 
In dieser Datei erwartet die Steuerung nur Maschinendaten. Damit bleiben die anderen 
Datenbereiche in diesem Fall unberhrt.

Initialisierungsprogramme laden

Die INI-Programme knnen auch als Teileprogramme angewhlt und aufgerufen werden, 
wenn sie nur Daten eines Kanals verwenden. So ist es auch mglich, programmgesteuerte 
Daten zu initialisieren. 

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

559

Arbeitsvorbereitung

3.5 Dateihandling

3.5

Dateihandling

3.5.1

Datei schreiben (WRITE)

Mit dem WRITE-Befehl knnen Stze/Daten aus dem NC-Programm an das Ende einer sich im 
passiven Filesystem oder auf einem externen Programmspeicher befindlichen Datei 
(Protokolldatei) geschrieben werden. Dies kann auch das gerade in Abarbeitung befindliche 
Programm sein.

Hinweis

Eine per WRITE-Befehl zu beschreibende Datei wird neu angelegt, wenn sie nicht im 
Programmspeicher existiert.

Voraussetzung

Syntax

Die aktuell eingestellte Schutzstufe muss gleich oder grer dem WRITE-Recht der Datei sein. 
Ist dies nicht der Fall, wird der Zugriff mit Fehlermeldung (Rckgabewert der Fehlervariablen 
= 13) abgelehnt.

DEF INT <Fehler>

...

WRITE(<Fehler>,"<Dateiname>"/"<ExtG>","<Satz/Daten>")

560

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Bedeutung

WRITE:

Befehl zum Anfgen eines Satzes bzw. von Daten an das Ende der angegebenen 
Datei

<Fehler>:

Parameter 1: Variable fr die Rckgabe des Fehlerwerts

Arbeitsvorbereitung

3.5 Dateihandling

Typ:

Wert:

INT

0

1

2

3

4

10

11

12

13

14

15

16

kein Fehler

Pfad nicht erlaubt

Pfad nicht gefunden

Datei nicht gefunden

falscher Dateityp

Datei ist voll

Datei wird benutzt

keine Ressourcen frei

keine Zugriffsrechte

fehlendes oder fehlgeschlagenes EXTOPEN fr das Ausgabege
rt

Fehler beim Schreiben auf externes Gert

ungltiger externer Pfad programmiert

<Dateiname>:

Parameter 2: Name der Datei, in der der angegebene Satz bzw. die angegebenen 
Daten angefgt werden sollen

<ExtG>:

Typ:

STRING

Vor dem eigentlichen Dateinamen kann der absolute Pfad angegeben werden. 
Ohne Pfadangabe wird die Datei im aktuellen Verzeichnis (= Verzeichnis des an
gewhlten Programms) gesucht.

Regeln zur Pfadangabe siehe "Adressierung von Dateien des Programmspeichers 
(Seite 549)".

Sollen Daten ber die Funktion "Process DataShare" auf ein externes Gert/Datei 
ausgegeben werden, muss statt des Dateinamens der symbolische Bezeichner fr 
das zu ffnende externe Gert/Datei angegeben werden.

Typ:

STRING

Weitere Informationen siehe "Process DataShare - Ausgabe auf ein externes Ge
rt/Datei (EXTOPEN, WRITE, EXTCLOSE) (Seite 958)".

Hinweis:
Der Bezeichner muss identisch zu dem im EXTOPEN-Befehl angegebenen Be
zeichner sein. 

<Satz/Daten>:

Parameter 3: Satz bzw. Daten, die in der angegebenen Datei angefgt werden 
sollen.

Typ:

STRING

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

561

Arbeitsvorbereitung

3.5 Dateihandling

Hinweis

Beim Schreiben ins passive Dateisystem oder auf einen externen Programmspeicher fgt 
der WRITE-Befehl implizit ein "LF"-Zeichen (LINE FEED = neue Zeile) an das Ende des 
Ausgabestrings an.

Fr die Ausgabe auf ein externes Gert/Datei ber die Funktion "Process DataShare" gilt 
dieses Verhalten nicht. Soll ein "LF" mit ausgegeben werden, muss das explizit im 
Ausgabestring mit angegeben werden.

 Siehe hierzu Beispiel 3: Implizites/explizites "LF"!

Randbedingungen

 Maximale Dateigre ( Maschinenhersteller!)

Die maximal mgliche Dateigre von Protokolldateien im passiven Filesystem wird 
eingestellt mit dem Maschinendatum:
MD11420 $MN_LEN_PROTOCOL_FILE
Die maximale Dateigre gilt fr alle Dateien, die mit dem WRITE-Befehl im passiven 
Filesystem angelegt werden. Bei berschreitung wird eine Fehlermeldung ausgegeben 
und der Satz bzw. die Daten werden nicht abgespeichert. Sofern der Speicher ausreicht, 
kann eine neue Datei angelegt werden.

Beispiele

Beispiel 1: WRITE-Befehl ins passive Filesystem ohne absolute Pfadangabe

Programmcode

N10 DEF INT ERROR

N20 WRITE(ERROR,"PROT","PROTOKOLL VOM 7.2.97")

Kommentar

; Definition der Fehlervariablen.

; Schreibe den Text "PROTOKOLL VOM 
7.2.97" in die Datei _N_PROT_MPF.

N30 IF ERROR

; Fehlerauswertung.

N40 MSG ("Fehler bei WRITE-Befehl:" << ERROR)

N50 M0

N60 ENDIF

...

Beispiel 2: WRITE-Befehl ins passive Filesystem mit absoluter Pfadangabe

Programmcode

...

WRITE(ERROR,"/_N_WKS_DIR/_N_PROT_WPD/_N_PROT_MPF","PROTOKOLL VOM 
7.2.97")

...

562

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.5 Dateihandling

Beispiel 3: Implizites/explizites "LF"

a, Schreiben ins passive Dateisystem mit implizit erzeugtem "LF"

Programmcode

...

N110 DEF INT ERROR

N120 WRITE(ERROR,"/_N_MPF_DIR/_N_MYPROTFILE_MPF","MY_STRING")

N130 WRITE(ERROR,"/_N_MPF_DIR/_N_MYPROTFILE_MPF","MY_STRING")

N140 M30

Ausgabeergebnis:

MY_STRING

MY_STRING

b, Schreiben in externe Datei ohne implizit erzeugtem "LF"

Programmcode

...

N200 DEF STRING[30] DEV_1

N210 DEF INT ERROR

N220 DEV_1="LOCAL_DRIVE/myprotfile.mpf"

N230 EXTOPEN(ERROR,DEV_1)

N240 WRITE(ERROR,DEV_1,"MY_STRING")

N250 WRITE(ERROR,DEV_1,"MY_STRING")

N260 EXTCLOSE(ERROR,DEV_1)

N270 M30

Ausgabeergebnis:

MY_STRINGMY_STRING

c, Schreiben in externe Datei mit explizit programmiertem "LF"

Um dasselbe Ergebnis wie bei a, zu erzielen, muss Folgendes programmiert werden:

Programmcode

...

N200 DEF STRING[30] DEV_1

N210 DEF INT ERROR

N220 DEV_1="LOCAL_DRIVE/myprotfile.mpf"

N230 EXTOPEN(ERROR,DEV_1)

N240 WRITE(ERROR,DEV_1,"MY_STRING'H0A'")

N250 WRITE(ERROR,DEV_1,"MY_STRING'H0A'")

N260 EXTCLOSE(ERROR,DEV_1)

N270 M30

Ausgabeergebnis:

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

563

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.5 Dateihandling

MY_STRING

MY_STRING

3.5.2

Datei lschen (DELETE)

Mit dem DELETE-Befehl knnen alle Dateien gelscht werden, egal, ob diese per WRITE-
Befehl entstanden sind oder nicht. Auch Dateien, die unter hherer Zugriffsstufe erstellt 
wurden, knnen mit DELETE gelscht werden.

Syntax

Bedeutung

DEF INT <Fehler>
DELETE(<Fehler>,"<Dateiname>")

DELETE:

<Fehler>:

Befehl zum Lschen der angegebenen Datei

Variable fr die Rckgabe des Fehlerwerts

Typ.

Wert:

INT

0

1

2

3

4

11

12

20

kein Fehler

Pfad nicht erlaubt

Pfad nicht gefunden

Datei nicht gefunden

falscher Dateityp

Datei wird benutzt

keine Ressourcen frei

sonstiger Fehler

<Dateiname>:

Name der zu lschenden Datei

Typ:

STRING

Vor dem eigentlichen Dateinamen kann der absolute Pfad angegeben werden. 
Ohne Pfadangabe wird die Datei im aktuellen Verzeichnis (= Verzeichnis des 
angewhlten Programms) gesucht.

Regeln zur Pfadangabe siehe "Adressierung von Dateien des Programmspei
chers (Seite 549)".  

Beispiel

Programmcode

N10 DEF INT ERROR

N15 STOPRE

N20 DELETE(ERROR,"/_N_SPF_DIR/_N_TEST1_SPF")

Kommentar

; Definition der Fehlervariablen.

; Vorlaufstopp.

; Lsche die Datei TEST1 im Unter-
programmverzeichnis.

N30 IF ERROR

; Fehlerauswertung.

N40 MSG("Fehler bei DELETE-Befehl:" <<ERROR)

564

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
Programmcode

N50 M0

N60 ENDIF

Arbeitsvorbereitung

3.5 Dateihandling

Kommentar

3.5.3

Zeilen in Datei lesen (READ)

Der READ-Befehl liest in der angegebenen Datei eine oder mehrere Zeilen und legt die 
gelesenen Informationen in einem Feld vom Typ STRING ab. Jede gelesene Zeile belegt in 
diesem Feld ein Feldelement.

Voraussetzung

Syntax

Bedeutung

Die aktuell eingestellte Schutzstufe muss gleich oder grer dem READ-Recht der Datei sein. 
Ist dies nicht der Fall, wird der Zugriff mit Fehlermeldung (Rckgabewert der Fehlervariablen 
= 13) abgelehnt.

DEF INT <Fehler>
DEF STRING[<Stringlnge>] <Ergebnis>[<n>,<m>]
READ(<Fehler>,"<Dateiname>",<Anfangszeile>,<Zeilenanzahl>,<Ergebnis>
)

READ:

Befehl zum Lesen von Zeilen der angegebenen Datei und zur Ablage dieser 
Zeilen in einem Variablenfeld.

<Fehler>:

Variable fr die Rckgabe des Fehlerwerts (Call-By-Reference-Parameter)

Typ.

Wert:

INT

0

1

2

3

4

11

13

21

22

23

kein Fehler

Pfad nicht erlaubt

Pfad nicht gefunden

Datei nicht gefunden

falscher Dateityp

Datei wird benutzt

Zugriffsrechte nicht ausreichend

Zeile nicht vorhanden (Parameter <Anfangszeile> 
oder <Zeilenanzahl> grer als Anzahl der Zeilen in 
der angegebenen Datei).

Feldlnge der Ergebnisvariablen (<Ergebnis>) ist zu 
klein.

Zeilenbereich zu gro (Parameter <Zeilenanzahl> 
so gro gewhlt, dass ber das Dateiende hinausgele
sen wird).

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

565

 
 
Arbeitsvorbereitung

3.5 Dateihandling

<Dateiname>:

Name der zu lesenden Datei (Call-By-Value-Parameter)

Typ:

STRING

Vor dem eigentlichen Dateinamen kann der absolute Pfad angegeben wer
den. Ohne Pfadangabe wird die Datei im aktuellen Verzeichnis (= Verzeichnis 
des angewhlten Programms) gesucht.

Regeln zur Pfadangabe siehe "Adressierung von Dateien des Programm
speichers (Seite 549)".

<Anfangszeile>:

Anfangszeile des zu lesenden Dateibereichs (Call-By-Value-Parameter)

Typ:

Wert:

INT

0

Es werden die mit dem 
Parameter <Zeilenanzahl> angegebene Anzahl 
an Zeilen vor dem Dateiende gelesen.

<Zeilenanzahl>:

Anzahl der zu lesenden Zeilen (Call-By-Value-Parameter)

1  n

Nummer der ersten zu lesenden Zeile.

<Ergebnis>:

Ergebnisvariable (Call-By-Reference-Parameter)

Typ:

INT

Variablenfeld, in dem der gelesene Text abgelegt wird.

Typ: 

STRING (max. Lnge: 255)

Wenn im Parameter <Zeilenanzahl> weniger Zeilen angegeben sind als 
die Feldgre [<n>,<m>] der Ergebnisvariablen betrgt, dann werden die 
restlichen Feldelemente nicht verndert.

Der Abschluss einer Zeile durch die Steuerzeichen "LF" (Line Feed) oder "CR 
LF" (Carriage Return Line Feed) wird nicht in der Ergebnisvariablen abgelegt. 

Gelesene Zeilen werden abgeschnitten, wenn die Zeile lnger ist als die de
finierte Stringlnge. Es erfolgt keine Fehlermeldung.

Hinweis

Binre Files knnen nicht eingelesen werden. Es wird der Fehler "falscher Dateityp" 
(Rckgabewert der Fehlervariablen = 4) ausgegeben. Folgenden Dateitypen sind nicht lesbar: 
_BIN, _EXE, _OBJ, _LIB, _BOT, _TRC, _ACC, _CYC, _NCK.

Beispiel

Programmcode

N10 DEF INT ERROR

Kommentar

; Definition der Fehlervariablen.

N20 DEF STRING[255] RESULT[5]

; Definition der Ergebnisvariablen.

N30 READ(ERROR,"/_N_CST_DIR/_N_TESTFI-
LE_MPF",1,5,RESULT)

N40 IF ERROR <>0

N50 MSG("FEHLER"<<ERROR<<"BEI READ-BEFEHL")

; Dateiname mit Domain-, Dateikennung

und Pfadangabe.

; Fehlerauswertung.

N60 M0

N70 ENDIF

...

566

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
3.5.4

Vorhandensein einer Datei prfen (ISFILE)

Mit dem ISFILE-Befehl kann geprft werden, ob eine Datei im Programmspeicher existiert.

Arbeitsvorbereitung

3.5 Dateihandling

Syntax

Bedeutung

Beispiele

<Ergebnis>=ISFILE("<Dateiname>")

ISFILE:

Befehl zum Prfen des Vorhandenseins einer Datei

<Dateiname>:

Name der Datei, deren Vorhandensein geprft werden soll.

Typ:

STRING

Vor dem eigentlichen Dateinamen kann der absolute Pfad angegeben werden. 
Ohne Pfadangabe wird die Datei im aktuellen Verzeichnis (= Verzeichnis des 
angewhlten Programms) gesucht.

Regeln zur Pfadangabe siehe "Adressierung von Dateien des Programmspei
chers (Seite 549)".

<Ergebnis>:

Ergebnisvariable zur Aufnahme des Prfergebnisses

Typ.

Wert:

BOOL

TRUE

FALSE

Datei vorhanden

Datei nicht vorhanden

Beispiel 1

Programmcode

Kommentar

N10 DEF BOOL RESULT

; Definition der Ergebnisvariablen.

N20 RESULT=ISFILE("TESTFILE")

N30 IF(RESULT==FALSE)

N40    MSG("DATEI NICHT VORHANDEN")

N50    M0

N60 ENDIF

...

Beispiel 2

Programmcode

Kommentar

N10 DEF BOOL RESULT

; Definition der Ergebnisvariablen.

N20 RESULT=ISFILE("TESTFILE")

N30 IF(NOT ISFILE("TESTFILE"))

N40    MSG("DATEI NICHT VORHANDEN")

N50    M0

N60 ENDIF

...

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

567

 
 
 
 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.5 Dateihandling

3.5.5

Datei-Informationen auslesen (FILEDATE, FILETIME, FILESIZE, FILESTAT, 
FILEINFO)

ber die Befehle FILEDATE, FILETIME, FILESIZE, FILESTAT und FILEINFO knnen 
bestimmte Datei-Informationen wie Datum/Uhrzeit des letzten schreibenden Zugriffs, aktuelle 
Dateigre, Datei-Status oder die Summe dieser Informationen ausgelesen werden. 

Voraussetzung

Syntax

Bedeutung

Die aktuell eingestellte Schutzstufe muss gleich oder grer dem Show-Recht des 
bergeordneten Verzeichnisses sein. Ist dies nicht der Fall, wird der Zugriff mit Fehlermeldung 
(Rckgabewert der Fehlervariablen = 13) abgelehnt.

FILE....(<Fehler>,"<Dateiname>",<Ergebnis>)

FILEDATE:

FILETIME:

FILESIZE:

FILESTAT:

Liefert das Datum des letzten Schreibzugriffs auf eine Datei

Liefert die Uhrzeit des letzten Schreibzugriffs auf eine Datei

Liefert die aktuelle Gre einer Datei

Liefert fr den Status einer Datei bezglich folgender Rechte:

 Lesen (r: read)

 Schreiben (w: write)

 Ausfhren (x: execute)

 Anzeigen (s: show)

 Lschen (d: delete)

Hinweis:
Diese Schutzstufen sind spezielle Eigenschaften des passiven Filesystems. 
Beim Zugriff auf externe Programmspeicher liefert FILESTAT daher nur De
fault-Zugriffsrechte (77777).

FILEINFO:

Liefert fr eine Datei die Summe der Informationen, die ber FILEDATE, 
FILETIME, FILESIZE und FILESTAT auslesbar sind

<Fehler>:

Variable fr die Rckgabe des Fehlerwerts (Call-By-Reference-Parameter)

Typ.

Wert:

VAR INT

0

1

2

3

4

13

22

kein Fehler

Pfad nicht erlaubt

Pfad nicht gefunden

Datei nicht gefunden

falscher Dateityp

Zugriffsrechte nicht ausreichend

Stringlnge der Ergebnisvariablen (<Ergebnis>) ist zu 
klein.

568

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.5 Dateihandling

<Dateiname>:

Name der Datei, von der Datei-Information(en) ausgelesen werden soll(en)

Typ:

CHAR[160]

Vor dem eigentlichen Dateinamen kann der absolute Pfad angegeben werden. 
Ohne Pfadangabe wird die Datei im aktuellen Verzeichnis (= Verzeichnis des 
angewhlten Programms) gesucht.

Regeln zur Pfadangabe siehe "Adressierung von Dateien des Programmspei
chers (Seite 549)".

<Ergebnis>:

Ergebnisvariable (Call-By-Reference-Parameter)

Variable, in der die angeforderte Datei-Information abgelegt wird.

Typ:

VAR CHAR[8]

bei

FILEDATE

Format: "dd.mm.yy"

VAR CHAR[8]

bei

FILETIME

Format: "hh:mm.ss"

VAR INT

bei

FILESIZE

VAR CHAR[5]

bei

FILESTAT

Die Dateigre wird in Byte ausge
geben.

Format: "rwxsd"

(r: read, w: write, x: execute, s: show, 
d: delete)

VAR CHAR[32]

bei

FILEINFO

Format: "rwxsd nnnnnnnn dd.mm.yy 
hh:mm:ss"

Beispiel

Programmcode

N10 DEF INT ERROR

N20 STRING[32] RESULT

Kommentar

; Definition der Fehlervariab-
len.

; Definition der Ergebnisvari-
ablen.

N30 FILEINFO(ERROR,"/_N_MPF_DIR/_N_TESTFILE_MPF",RE-
SULT)

; Dateiname mit Domain-, Da-
teikennung und Pfadangabe.

N40 IF ERROR <> 0

; Fehlerauswertung

N50    MSG("FEHLER"<<ERROR<<"BEI FILEINFO-BEFEHL")

N60    M0

N70 ENDIF

...

Das Beispiel knnte in der Ergebnisvariablen RESULT z. B. folgendes Ergebnis liefern:

"77777 12345678 26.05.00 13:51:30"

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

569

 
 
 
 
 
Arbeitsvorbereitung

3.6 Schutzbereiche

3.6

Schutzbereiche

3.6.1

Schutzbereiche definieren (CPROTDEF, NPROTDEF)

Schutzbereiche, die Maschinenelemente vor Kollisionen schtzen sollen, werden im 
Teileprogramm jeweils in Blcken definiert. Diese enthalten folgende Elemente:

1. Festlegung der Arbeitsebene

Vor der eigentlichen Schutzbereichsdefinition muss die Arbeitsebene angewhlt werden, 
auf die sich die Konturbeschreibung des Schutzbereichs beziehen soll.

2. Definitionsbeginn

Je nach NC-Befehl wird entweder ein kanalspezifischer oder maschinenspezifischer 
Schutzbereich angelegt.

3. Konturbeschreibung des Schutzbereichs

Die Kontur eines Schutzbereichs wird mittels Verfahrbewegungen beschrieben. Diese 
werden nicht ausgefhrt und haben keine Verbindung zu vorhergehenden oder 
nachfolgenden Geometriebeschreibungen. Sie definieren ausschlielich den 
Schutzbereich.

4. Definitionsende

DEF INT <Var>

G17/G18/G19

CPROTDEF/NPROTDEF(<n>,<t>,<AppLim>,<AppPlus>,<AppMinus>)

G0/G1/... X/Y/Z...

...

EXECUTE(<Var>)

DEF INT <Var>:

<Var>:

G17/G18/G19:

CPROTDEF():

NPROTDEF():

<n>:

Definition einer lokalen Hilfsvariablen vom Datentyp INTEGER

Name der Hilfsvariablen

Arbeitsebene

Hinweis:
Die Arbeitsebene darf vor dem Definitionsende nicht gendert 
werden. Eine Programmierung der Applikate zwischen Definiti
onsbeginn und -ende ist nicht zulssig. 

Vordefinierte Prozedur zur Definition eines kanalspezifischen 
Schutzbereichs

Vordefinierte Prozedur zur Definition eines maschinenspezifi
schen Schutzbereichs

Nummer des definierten Schutzbereichs

Datentyp:

INT

Syntax

Bedeutung

570

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.6 Schutzbereiche

<t>:

Typ des Schutzbereichs

Datentyp:

BOOL

<AppLim>:

Art der Begrenzung in der 3. Dimension 

Wert:

TRUE 

Werkzeugbezogener Schutzbereich

FALSE  Werkstckbezogener Schutzbereich

Datentyp:

INT

Wert:

0 

1 

2 

3 

keine Begrenzung

Begrenzung in Plus-Richtung

Begrenzung in Minus-Richtung

Begrenzung in Plus- und Minus-Rich
tung

<AppPlus>:

Wert der Begrenzung in Plus-Richtung der 3. Dimension

Datentyp: REAL

<AppMinus>:

Wert der Begrenzung in Minus-Richtung der 3. Dimension

G0/G1/... X/Y/Z... ... :

Datentyp: REAL

Die Kontur eines Schutzbereichs wird mit maximal 11 Verfahr
bewegungen in der angewhlten Arbeitsebene beschrieben. 
Dabei ist die erste Verfahrbewegung die Bewegung an die Kon
tur. Der letzte Punkt der Konturbeschreibung muss immer mit 
dem ersten Punkt der Konturbeschreibung zusammenfallen.

Als Schutzbereich gilt der Bereich links von der Kontur:

 Innenschutzbereich

Die Kontur fr einen Innenschutzbereich ist gegen den Uhr
zeigersinn zu beschreiben.

 Auenschutzbereich (nur zulssig fr werkstckbezogene 

Schutzbereiche!)
Die Kontur fr einen Auenschutzbereich ist im Uhrzeiger
sinn zu beschreiben.

Folgende Konturelemente sind zulssig:

 G0, G1 fr gerade Konturelemente

 G2 fr Kreisabschnitte im Uhrzeigersinn

Nur zulssig bei werkstckbezogenen Schutzbereichen! 
Nicht zulssig bei werkzeugbezogenen Schutzbereichen, 
da sie nur konvex sein drfen.

 G3 fr Kreisabschnitte gegen den Uhrzeigersinn

Hinweis:
Ein Schutzbereich kann nicht durch einen Vollkreis beschrieben 
werden. Ein Vollkreis muss in zwei Teilkreise aufgeteilt werden.

Hinweis:
Die Folge G2  G3 bzw. G3  G2 ist nicht zulssig! Zwischen die 
beiden Kreisstze muss ein kurzer G1-Satz eingefgt werden.

EXECUTE(<Var>):

Vordefinierte Prozedur, die das Ende der Definition markiert

Mit EXECUTE wird zur normalen Programmbearbeitung zurck
geschaltet.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

571

Arbeitsvorbereitung

3.6 Schutzbereiche

Beispiel

Siehe Beispiel unter "Schutzbereiche aktivieren/deaktivieren (CPROT, NPROT) (Seite 573)". 

Weitere Informationen

Maschinenspezifische Schutzbereiche

Ein maschinenspezifischer Schutzbereich bzw. dessen Kontur wird mittels der 
Geometrieachsen definiert, d. h. bezogen auf das Basiskoordinatensystem (BKS) eines 
Kanals. Damit eine korrekte Schutzbereichsberwachung in allen Kanlen, in denen der 
maschinenspezifische Schutzbereich aktiv ist, stattfinden kann, muss das 
Basiskoordinatensystem (BKS) aller betroffenen Kanle identisch sein:

 Lage des Koordinatenursprungs bezogen auf den Maschinennullpunkt

 Orientierung der Koordinatenachsen

Bezugspunkt der Konturbeschreibung

 Werkzeugbezogene Schutzbereiche

Koordinaten fr werkzeugbezogene Schutzbereiche sind absolut, bezogen auf 
den Werkzeugtrgerbezugspunkt F, anzugeben.

 Werkstckbezogene Schutzbereiche

Koordinaten fr werkstckbezogene Schutzbereiche sind absolut, bezogen auf den 
Nullpunkt des Basiskoordinatensystems (BKS), anzugeben.

Rotationssymmetrische Schutzbereiche

Bei rotationssymmetrischen Schutzbereichen (z. B. Spindelfutter) muss die Gesamtkontur 
beschrieben werden, nicht nur die Kontur bis zur Drehmitte.

Werkzeugbezogene Schutzbereiche

Werkzeugbezogene Schutzbereiche mssen immer konvex sein. Falls ein konkaver 
Schutzbereich gewnscht ist, ist dieser in mehrere konvexe Schutzbereiche zu zerlegen.

 Konvexe Schutzbereiche
 Konkave Schutzbereiche (nicht zulssig!)
F Werkzeugtrgerbezugspunkt

572

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:20)(cid:21)(cid:41)Arbeitsvorbereitung

3.6 Schutzbereiche

Randbedingungen

Whrend der Definition eines Schutzbereichs drfen folgende Funktionen nicht aktiv sein bzw. 
verwendet werden:

 Werkzeugradiuskorrektur (Frserradiuskorrektur, Schneidenradiuskorrektur)

 Transformation

 Referenzpunktanfahren (G74)

 Festpunktanfahren (G75)

 Verweilzeit (G4)

 Satzvorlauf-Stopp (STOPRE)

 Programmende (M17, M30)

 M-Funktionen: M0, M1, M2

3.6.2

Schutzbereiche aktivieren/deaktivieren (CPROT, NPROT)

Vorher im Teileprogramm definierte Schutzbereiche knnen jederzeit aktiviert bzw. fr eine 
sptere Aktivierung durch das PLC-Anwenderprogramm voraktiviert werden. Aktive 
Schutzbereiche knnen jederzeit wieder deaktiviert werden.

Bei der Aktivierung bzw. Voraktivierung besteht zudem die Mglichkeit, den Bezugspunkt des 
Schutzbereichs relativ zu verschieben.

Hinweis

Ein Schutzbereich wird erst nach dem Referenzieren aller Geometrieachsen des Kanals, in 
dem er aktiviert wurde, bercksichtigt.

Hinweis

berwachung der Schutzbereiche

Ist kein werkzeugbezogener Schutzbereich aktiv, wird die Werkzeugbahn gegen die 
werkstckbezogenen Schutzbereiche geprft.

Ist kein werkstckbezogener Schutzbereich aktiv, findet keine Schutzbereichsberwachung 
statt.

Syntax

CPROT(<n>,<Status>,<XMov>,<YMov>,<ZMov>)
NPROT(<n>,<Status>,<XMov>,<YMov>,<ZMov>)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

573

Arbeitsvorbereitung

3.6 Schutzbereiche

Bedeutung

CPROT:

NPROT:

<n>:

<Status>:

Vordefinierte Prozedur zum Aktivieren eines kanalspezifischen 
Schutzbereichs

Vordefinierte Prozedur zum Aktivieren eines maschinenspezifi
schen Schutzbereichs

Nummer des Schutzbereichs

Datentyp:

INT

Mit diesem Parameter wird der kanalspezifische Aktivierungssta
tus gesetzt 

Datentyp:

INT

Wert:

0 

1 

2 

3 

Schutzbereich deaktivieren

Schutzbereich voraktivieren

Schutzbereich aktivieren

Schutzbereich voraktivieren mit bedingtem 
Stopp

Beispiel

<XMov>,<YMov>,<ZMov>:

Additive Verschiebungswerte in X/Y/Z-Richtung

Die Verschiebung kann in 1, 2 oder 3 Dimensionen erfolgen. Die 
Verschiebungswerte beziehen sich auf:

 den Maschinennullpunkt bei werkstckbezogenem Schutzbe

reich

 den Werkzeugtrgerbezugspunkt F bei werkzeugbezogenem 

Schutzbereich

Datentyp: REAL

Fr eine Frsmaschine soll eine mgliche Kollision des Frsers mit dem Messtaster berwacht 
werden. Die Lage des Messtasters soll bei der Aktivierung durch eine Verschiebung 
angegeben werden.

Es werden dafr folgende Schutzbereiche definiert:

 Jeweils ein maschinenspezifischer und werkstckbezogener Schutzbereich fr den 

Messtasterhalter (n-PZ1) und fr den Messtaster selbst (n-PZ2).

 Jeweils ein kanalspezifischer und werkzeugbezogener Schutzbereich fr den Frserhalter 

(c-PZ1), den Frserschaft (c-PZ2) und fr den Frser selbst (c-PZ3).

Die Orientierung aller Schutzbereiche liegt in Z-Richtung.

Die Lage des Bezugspunkts des Messtasters bei der Aktivierung soll bei X = -120, Y = 60 und 
Z = 80 liegen.

574

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.6 Schutzbereiche

 Bezugspunkt fr den Schutzbereich des Messtasters
F

Werkzeugtrgerbezugspunkt

Programmcode

DEF INT PROTZONE

G17

Kommentar

; Definition einer Hilfsvariablen

; Arbeitsebene XY

; Definition der Schutzbereiche:

NPROTDEF(1,FALSE,3,10,10)

; Schutzbereich nPZ1

G01 X0 Y10

X40

Y10

X0

Y-10

EXECUTE(PROTZONE)

NPROTDEF(2,FALSE,3,5,5)

; Schutzbereich nPZ2

G01 X40 Y5

X70

Y5

X40

Y-5

EXECUTE(PROTZONE)

CPROTDEF(1,TRUE,3,0,100)

; Schutzbereich cPZ1

G01 X20 Y20

X20

Y20

X-20

Y-20

EXECUTE(PROTZONE)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

575

(cid:21)(cid:19)(cid:41)(cid:22)(cid:19)(cid:70)(cid:16)(cid:51)(cid:61)(cid:22)(cid:3)(cid:70)(cid:16)(cid:51)(cid:61)(cid:21)(cid:70)(cid:16)(cid:51)(cid:61)(cid:20)(cid:24)(cid:24)(cid:23)(cid:19)(cid:59)(cid:61)(cid:60)(cid:81)(cid:16)(cid:51)(cid:61)(cid:20)(cid:81)(cid:16)(cid:51)(cid:61)(cid:21)(cid:21)(cid:19)(cid:20)(cid:19)(cid:24)(cid:24)(cid:20)(cid:19)(cid:19)(cid:21)(cid:19)(cid:20)(cid:23)(cid:19) 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.6 Schutzbereiche

Programmcode

Kommentar

CPROTDEF(2,TRUE,3,100,150)

; Schutzbereich cPZ2

G01 X0 Y10

G03 X0 Y10 J10

X0 Y10 J10

EXECUTE(PROTZONE)

CPROTDEF(3,TRUE,3,150,170)

; Schutzbereich cPZ3

G01 X0 Y27.5

G03 X0 Y27.5 J27.5

X0 Y27.5 J27.5

EXECUTE(PROTZONE)

; Aktivierung der Schutzbereiche:

NPROT(1,2,120,60,80)

NPROT(2,2,120,60,80)

CPROT(1,2,0,0,0)

CPROT(2,2,0,0,0)

CPROT(3,2,0,0,0)

; Schutzbereich nPZ1 mit Verschiebung akti-
vieren

; Schutzbereich nPZ2 mit Verschiebung akti-
vieren

; Schutzbereich cPZ1 aktivieren

; Schutzbereich cPZ2 aktivieren

; Schutzbereich cPZ3 aktivieren

Weitere Informationen

Aktivierungsstatus nach Hochlaufen der Steuerung

Ein Schutzbereich kann bereits nach dem Hochlaufen der Steuerung und dem Referenzieren 
der Achsen aktiv sein. Dies ist der Fall, wenn fr den Schutzbereich die folgende 
Systemvariable auf TRUE gesetzt ist:

 $SN_PA_ACTIV_IMMED[<n>] (fr maschinenspezifischen Schutzbereich) bzw.

 $SC_PA_ACTIV_IMMED[<n>] (fr kanalspezifischen Schutzbereich)

Der Index "<n>" entspricht der Nummer des Schutzbereichs: 0 = 1. Schutzbereich

Der Schutzbereich wird mit dem Status = 2 und ohne Verschiebung aktiviert.

Mehrfaches Aktivieren eines Schutzbereichs

Ein maschinenspezifischer Schutzbereich kann gleichzeitig in mehreren Kanlen wirksam sein 
(z. B. Schutzbereich der Pinole bei zwei gegenberliegenden Schlitten). Die berwachung der 
Schutzbereiche erfolgt nur, wenn alle Geometrieachsen referenziert sind.

Ein Schutzbereich ist in einem Kanal nicht gleichzeitig mit verschiedenen Verschiebungen 
aktivierbar.

Schutzbereichsberwachung bei aktiver Werkzeugradiuskorrektur

Bei aktiver Werkzeugradiuskorrektur ist eine funktionsfhige Schutzbereichsberwachung nur 
mglich, wenn die Ebene der Werkzeugradiuskorrektur identisch ist mit der Ebene der 
Schutzbereichsdefinitionen.

576

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.6 Schutzbereiche

3.6.3

berprfung auf Schutzbereichsverletzung, Arbeitsfeldbegrenzung und 
Software-Endschalter (CALCPOSI)

Funktion

Definition

Syntax

Bedeutung

Die Funktion CALCPOSI berprft im Werkstckkoordinatensystem (WKS), ob ausgehend 
von der Startposition die Geometrieachsen einen vorgegebenen Weg verfahren knnen, ohne 
aktive Begrenzungen zu verletzen. Fr den Fall, dass der Verfahrweg aufgrund von 
Begrenzungen nicht vollstndig abgefahren werden kann, werden ein positiver, dezimal 
codierter Statuswert und der maximal mgliche Verfahrweg zurckgegeben.

INT CALCPOSI(VAR REAL[3] <Start>, VAR REAL[3] <Dist>, VAR REAL[5] 
<Limit>, VAR REAL[3] <MaxDist>, BOOL <MeasSys>, INT <TestLim>)

<Status> = CALCPOSI(VAR <Start>, VAR <Dist>, VAR <Limit>, VAR 
<MaxDist>, <MeasSys>, <TestLim>)

CALCPOSI(...): Vordefinierte Funktion fr den Test auf Begrenzungsverletzungen bezglich der 

Geometrieachsen

Vorlaufstopp:

Alleine im Satz:

nein

ja

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

577

Arbeitsvorbereitung

3.6 Schutzbereiche

<Status>:

Rckgabewert der Funktion. Negative Werte zeigen Fehlerzustnde an.

(Teil 1)

Datentyp:

INT

Wertebereich:

-8  x  100000

Wert:

0

-1

-2

-3

-4

-5

-6

-7

-8

Der Verfahrweg kann vollstndig abgefahren werden

In <Limit> ist mindestens eine Komponente negativ.

Fehler bei einer Transformationsberechnung.

Beispiel: Der Verfahrweg fhrt durch eine Singularitt, so
dass die Achspositionen nicht definiert sind.

Der angegebene Verfahrweg <Dist> und der maximal mg
liche Verfahrweg <MaxDist> sind linear abhngig. 

Hinweis 
Kann nur im Zusammenhang mit <TestLim>, Bit 4 == 1 auf
treten.

Die Projektion der in <Dist> enthaltenen Verfahrrichtung auf 
die Begrenzungsflche ist der Nullvektor bzw. die Verfahr
richtung steht senkrecht auf der verletzten Begrenzungsfl
che. 

Hinweis 
Kann nur im Zusammenhang mit <TestLim>, Bit 5 == 1 auf
treten.

In <TestLim> sind Bit 4 == 1 UND Bit 5 == 1

Mindestens eine Maschinenachse, die fr die berprfung 
der Verfahrgrenzen betrachtet werden muss, ist nicht refe
renziert.

Funktion Kollisionsvermeidung: Ungltige Definition der ki
nematischen Kette oder der Schutzbereiche.

Funktion Kollisionsvermeidung: Die Funktion kann wegen 
Speichermangel nicht ausgefhrt werden.

Einerstelle

Hinweis
Sind gleichzeitig mehrere Grenzen verletzt, wird diejenige gemeldet, die zur strk
sten Einschrnkung des vorgegebenen Verfahrwegs fhrt.

Wert:

Wert:

1

2

3

4

1x

2x

Software-Endschalter begrenzen den Verfahrweg

Arbeitsfeldbegrenzung begrenzt den Verfahrweg

Schutzbereiche begrenzen den Verfahrweg

Funktion Kollisionsvermeidung: Schutzbereiche begrenzen 
den Verfahrweg

Zehnerstelle

Der Anfangswert verletzt die Grenze

Die vorgegebene Gerade verletzt die Grenze. 

Dieser Wert wird auch dann zurckgegeben, wenn der End
punkt selbst keine Grenze verletzt, auf dem Weg vom Start- 
zum Endpunkt aber eine Verletzung eines Grenzwerts auf
treten wrde (z. B. Durchfahren eines Schutzbereichs, ge
krmmte Software-Endschalter im WKS bei nichtlinearen 
Transformationen, z. B. Transmit).

<Status>:

(Teil 2)

578

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.6 Schutzbereiche

<Status>:

(Teil 3)

Wert:

1xx

Hunderterstelle

UND Einerstelle == 1 oder 2: 
Der positive Grenzwert ist verletzt.

UND Einerstelle == 3 1):
Es ist ein NC-spez. Schutzbereich verletzt.

2xx

UND Einerstelle == 1 oder 2: 
Der negative Grenzwert ist verletzt.

UND Einerstelle == 3 1): 
Es ist ein kanalspezifischer Schutzbereich verletzt.

<Status>:

Tausenderstelle 

(Teil 4)

Wert:

1xxx

UND Einerstelle == 1 oder 2: 
Faktor, mit dem die Achsnummer multipliziert wird, die die 
Grenze verletzt. Die Zhlung der Achsen beginnt bei 1.

Bezug:

 Software-Endschalter: Maschinenachsen

 Arbeitsfeldbegrenzung: Geometrieachsen

UND Einerstelle == 3 1): 
Faktor, mit dem die Nummer des verletzten Schutzbereichs 
multipliziert wird. 

<Status>:

Einhunderttausenderstelle

(Teil 5)

Wert:

0xxxxx Einhunderttausenderstelle == 0: <Dist> bleibt unverndert

1xxxxx

In <Dist> wird ein Richtungsvektor zurckgegeben, der die 
weitere Bewegungsrichtung auf der Begrenzungsflche de
finiert. 

Kann nur bei folgenden Randbedingungen auftreten:

 Software-Endschalter oder Arbeitsfeldbegrenzung ver

letzt (nicht im Startpunkt)

 Eine Transformation ist nicht aktiv

 <TestID>, Bit 4 oder Bit 5 == 1

<Start>:

Referenz auf einen Vektor mit den Startpositionen:

 <Start> [0]: 1. Geometrieachse

 <Start> [1]: 2. Geometrieachse

 <Start> [2]: 3. Geometrieachse

Parametertyp:

Eingang

Datentyp:

VAR REAL[3]

Wertebereich:

-max. REAL-Wert  x[<n>]  +max. REAL-Wert

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

579

Arbeitsvorbereitung

3.6 Schutzbereiche

<Dist>:

Referenz auf einen Vektor.

Eingang: inkrementeller Verfahrweg

 <Dist> [0]: 1. Geometrieachse

 <Dist> [1]: 2. Geometrieachse

 <Dist> [2]: 3. Geometrieachse

Ausgang (nur bei gesetzter Einhunderttausenderstelle im <Status>):

<Dist> enthlt als Ausgangswert einen Einheitsvektor v, der die weitere Ver
fahrrichtung im WKS definiert.

Fall 1: Bildung des Vektors v bei <TestID>, Bit 4 == 1

Die Eingangsvektoren <Dist> und <MaxDist> spannen die Bewegungsebene 
auf. Diese Ebene wird mit der verletzten Begrenzungsflche geschnitten. Die 
Schnittgerade der beiden Ebenen definiert die Richtung des Vektors v. Dabei 
wird die Orientierung (Vorzeichen) so gewhlt, dass der Winkel zwischen 
dem Eingangsvektor <MaxDist> und v nicht grer als 90 Grad ist.

Fall 2: Bildung des Vektors v bei <TestID>, Bit 5 == 1

Der Vektor v ist der Einheitsvektor in Richtung der Projektion des in <Dist> 
enthaltenen Verfahrvektors auf die Begrenzungsflche. Ist die Projektion des 
Verfahrvektors auf die Begrenzungsflche der Nullvektor, wird ein Fehler zu
rckgeben.

Parametertyp:

Ein/Ausgang

Datentyp:

VAR REAL[3]

Wertebereich:

-max. REAL-Wert  x[<n>]  +max. REAL-Wert

<Limit>:

Referenz auf ein Feld der Lnge 5.

 <Limit> [0 - 2]: Mindestabstnde der Geometrieachsen zu den Begrenzungen:

 <Limit> [0]: 1. Geometrieachse

 <Limit> [1]: 2. Geometrieachse

 <Limit> [2]: 3. Geometrieachse

Die Mindestabstnde werden eingehalten bei:

 Arbeitsfeldbegrenzung: Keine Einschrnkungen

 Software-Endschalter: Wenn keine Transformation aktiv ist, oder eine 

Transformation aktiv ist, bei der eine eindeutige Zuordnung der Geomet
rieachsen zu linearen Maschinenachsen mglich ist, z. B. 5-Achs-Trans
formationen.

 <Limit> [3]: Enthlt den Mindestabstand fr lineare Maschinenachsen, die z. B. 
auf Grund einer nichtlinearen Transformation keiner Geometrieachse zuge
ordnet werden knnen. Dieser Wert wird auerdem als Grenzwert bei der 
berwachung der konventionellen Schutzbereiche und der Schutzbereiche 
der Kollisionsvermeidung verwendet.

 <Limit> [4]: Enthlt den Mindestabstand fr rotatorische Maschinenachsen, 

die z. B. auf Grund einer nichtlinearen Transformation keiner Geometrieachse 
zugeordnet werden knnen.
Hinweis
Dieser Wert wird nur bei der berwachung der Software-Endschalter von spe
ziellen Transformationen wirksam.

Parametertyp:

Eingang

Datentyp:

VAR REAL[5]

Wertebereich:

-max. REAL-Wert  x[n]  +max. REAL-Wert

580

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
Arbeitsvorbereitung

3.6 Schutzbereiche

<MaxDist>:

Referenz auf einen Vektor mit dem inkrementellen Verfahrweg, bei dem der vor
gegebene Mindestabstand von einer Achsgrenze von allen beteiligten Maschi
nenachsen nicht unterschritten wird:

 <Dist> [0]: 1. Geometrieachse

 <Dist> [1]: 2. Geometrieachse

 <Dist> [2]: 3. Geometrieachse

Ist der Verfahrweg nicht eingeschrnkt, ist der Inhalt dieses Rckgabeparameters 
gleich dem Inhalt von <Dist>.

Bei <TestID>, Bit 4 == 1: <Dist> und <MaxDist>

<MaxDist> und <Dist> mssen als Eingangswerte Vektoren enthalten, die eine 
Bewegungsebene aufspannt. Die beiden Vektoren mssen voneinander linear 
unabhngig sein. Der Betrag von <MaxDist> ist beliebig. Zur Berechnung der 
Bewegungsrichtung siehe die Beschreibung zu <Dist>.

Parametertyp:

Ausgang

Datentyp:

VAR REAL[3]

Wertebereich:

-max. REAL-Wert  x[<n>]  +max. REAL-Wert

<MeasSys>:

Masystem (inch / metrisch) fr Positions- und Lngenangaben (optional)

Datentyp:

BOOL

Wert:

FALSE 

(De
fault) 

Masystem entsprechend des aktuell aktiven G-Befehls aus 
G-Gruppe 13 (G70, G71, G700, G710).

Hinweis
Bei aktivem G70 und Grundsystem metrisch oder aktivem 
G71 und Grundsystem inch werden die Systemvariablen 
$AA_IW und $AA_MW im Grundsystem geliefert und ms
sen bei Verwendung fr CALCPOSI gegebenenfalls umge
rechnet werden.

TRUE  Masystem gem eingestelltem Grundsystem:

MD52806 $MN_ISO_SCALING_SYSTEM

<TestLim>:

Bitcodierte Auswahl der zu berwachenden Begrenzungen (optional)

Datentyp:

INT

Defaultwert:

Bit 0, 1, 2, 3, 6, 7 == 1 (207)

Bit

Dezimal

Bedeutung

0

1

2

3

4

5

6

7

8

1

2

4

8

16

32

64

128

256

Software-Endschalter

Arbeitsfeldbegrenzung

Aktivierte konventionelle Schutzbereiche

Voraktivierte konventionelle Schutzbereiche

Bei verletzten Software-Endschaltern bzw. Arbeitsfeldbe
grenzungen in <Dist> die Verfahrrichtung entsprechend Fall 
1 (siehe oben) zurckliefern.

Bei verletzten Software-Endschaltern bzw. Arbeitsfeldbe
grenzungen in <Dist> die Verfahrrichtung entsprechend Fall 
2  (siehe oben) zurckliefern.

Aktivierte Schutzbereiche der Kollisionsvermeidung

Voraktivierte Schutzbereiche der Kollisionsvermeidung

Paare von aktivierten und voraktivierten Schutzbereichen 
der Kollisionsvermeidung

1) Sind mehrere Schutzbereiche verletzt, wird der Schutzbereich zurckgegeben, der zur strksten 
Einschrnkung des vorgegebenen Verfahrwegs fhrt.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

581

Arbeitsvorbereitung

3.6 Schutzbereiche

Beispiel

Begrenzungen

Im Beispiel sind die wirksamen Software-Endschalter und Arbeitsfeldbegrenzungen in der X-Y-
Ebene und folgende drei Schutzbereiche dargestellt:

 C2: Werkzeugbezogener kanalspezifischer Schutzbereich, aktiv, kreisfrmig, Radius = 

2 mm

 C4: Werkstckbezogener, kanalspezifischer Schutzbereich, voraktiviert, quadratisch, 

Seitenlnge = 10 mm

 N3: Maschinenspezifischer Schutzbereich, aktiv, rechteckig, Seitenlnge = 10 mm x 15 mm

NC-Programm

Im NC-Programm werden zunchst die Schutzbereiche und Arbeitsfeldbegrenzungen 
definiert. Anschlieend wird die Funktion CALCPOSI() mit verschiedenen Parametrierungen 
aufgerufen.

Programmcode
N10 DEF REAL _START[3]
N20 DEF REAL _DIST[3]
N30 DEF REAL _LIMIT[5]
N40 DEF REAL _MAXDIST[3]
N50 DEF INT _PA
N60 DEF INT _STATUS

582

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:54)(cid:82)(cid:73)(cid:87)(cid:90)(cid:68)(cid:85)(cid:72)(cid:72)(cid:81)(cid:71)(cid:86)(cid:70)(cid:75)(cid:68)(cid:79)(cid:87)(cid:72)(cid:85)(cid:36)(cid:85)(cid:69)(cid:72)(cid:76)(cid:87)(cid:86)(cid:73)(cid:72)(cid:79)(cid:71)(cid:69)(cid:72)(cid:74)(cid:85)(cid:72)(cid:81)(cid:93)(cid:88)(cid:81)(cid:74)(cid:60)(cid:59)(cid:49)(cid:23)(cid:21)(cid:19)(cid:3)(cid:16)(cid:3)(cid:49)(cid:23)(cid:23)(cid:19)(cid:49)(cid:24)(cid:20)(cid:19)(cid:3)(cid:16)(cid:3)(cid:49)(cid:24)(cid:23)(cid:19)(cid:20)(cid:24)(cid:24)(cid:16)(cid:24)(cid:49)(cid:25)(cid:21)(cid:19)(cid:49)(cid:26)(cid:20)(cid:19)(cid:49)(cid:22)(cid:38)(cid:21)(cid:38)(cid:23)(cid:22)(cid:19)(cid:20)(cid:19)(cid:53)(cid:21)(cid:22)(cid:19)(cid:21)(cid:19)(cid:21)(cid:24)(cid:21)(cid:24)(cid:21)(cid:20)(cid:16)(cid:20)(cid:19)(cid:16)(cid:20)(cid:19)(cid:16)(cid:24)Arbeitsvorbereitung

3.6 Schutzbereiche

Programmcode
; Werkzeugbezogener Schutzbereich C2
N70 CPROTDEF(2, TRUE, 0)
N80 G17 G1 X-2 Y0
N90 G3 I2 X2
N100 I-2 X-2
N110 EXECUTE(_PA)

; Werkstckbezogener Schutzbereich C4
N120 CPROTDEF(4, FALSE, 0)
N130 G17 G1 X0 Y15
N140 X10
N150 Y25
N160 X0
N170 Y15
N180 EXECUTE(_PA)

; Maschinenspezifischer Schutzbereich N3
N190 NPROTDEF(3, FALSE, 0)
N200 G17 G1 X10 Y5
N210 X25
N220 Y15
N230 X10
N240 Y5
N250 EXECUTE(_PA)

; Schutzbereiche aktivieren bzw. voraktivieren
N260 CPROT(2, 2, 0, 0, 0)
N270 CPROT(4, 1, 0, 0, 0)
N280 NPROT(3, 2, 0, 0, 0)

; Arbeitsfeldbegrenzungen definieren
N290 G25 XX=-10 YY=-10
N300 G26 XX=20 YY=21

N310 _START[0] = 0.
N320 _START[1] = 0.
N330 _START[2] = 0.

N340 _DIST[0] = 35.
N350 _DIST[1] = 20.
N360 _DIST[2] =  0.

N370 _LIMIT[0] = 0.
N380 _LIMIT[1] = 0.
N390 _LIMIT[2] = 0.
N400 _LIMIT[3] = 0.
N410 _LIMIT[4] = 0.

N420 _STATUS = CALCPOSI(_START, _DIST, _LIMIT, _MAXDIST)
N430 _STATUS = CALCPOSI(_START, _DIST, _LIMIT, _MAXDIST,,3)
N440 _STATUS = CALCPOSI(_START, _DIST, _LIMIT, _MAXDIST,,1)

N450 _START[0] =  5.
N460 _START[1] = 17.
N470 _START[2] =  0.

N480 _DIST[0] =  0.
N490 _DIST[1] =-27.
N500 _DIST[2] =  0.

N510 _STATUS = CALCPOSI(_START, _DIST, _LIMIT, _MAXDIST,,14)
N520 _STATUS = CALCPOSI(_START, _DIST, _LIMIT, _MAXDIST,, 6)

N530 _LIMIT[1] = 2.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

583

Arbeitsvorbereitung

3.6 Schutzbereiche

Programmcode
N540 _STATUS = CALCPOSI(_START, _DIST, _LIMIT, _MAXDIST,, 6)

N550 _START[0] = 27.
N560 _START[1] = 17.1
N570 _START[2] =  0.

N580 _DIST[0] =-27.
N590 _DIST[1] =  0.
N600 _DIST[2] =  0.

N610 _LIMIT[3] = 2.

N620 _STATUS = CALCPOSI(_START, _DIST, _LIMIT, _MAXDIST,,12)

N630 _START[0] = 0.
N640 _START[1] = 0.
N650 _START[2] = 0.

N660 _DIST[0] =  0.
N670 _DIST[1] = 30.
N680 _DIST[2] =  0.

N690 TRANS X10
N700 AROT Z45

N710 _STATUS = CALCPOSI(_START,_DIST, _LIMIT, _MAXDIST)

; Frames aus N690 und N700 wieder lschen
N720 TRANS

N730 _START[0] =  0.
N740 _START[1] = 10.
N750 _START[2] =  0.

; Vektoren _DIST und _MAXDIST definieren die Bewegungsebene
N760 _DIST[0] = 30.
N770 _DIST[1] = 30.
N780 _DIST[2] =  0.

N790 _MAXDIST[0] = 1.
N800 _MAXDIST[1] = 0.
N810 _MAXDIST[2] = 1.

N820 _STATUS = CALCPOSI(_START, _DIST, _LIMIT, _MAXDIST,,17)

N830 M30

Ergebnisse von CALCPOSI()

N... <Status>

<MaxDist>[0]  X

<MaxDist>[1]  Y Bemerkungen

420

430

3123

1122

8.040

20.000

440

1121

30.000

510

520

4213

0000

0.000

0.000

4.594

11.429

17.143

0.000

-27.000

540

2222

0.000

-25.000

N3 wird verletzt.

Keine berwachung der Schutzbereiche,
Arbeitsfeldbegrenzung wird verletzt.

Nur noch berwachung der Software-End
schalter aktiv.

Startpunkt verletzt C4

Voraktivierter C4 wird nicht berwacht. Der 
vorgegebene Weg kann vollstndig verfah
ren werden.

Wegen _LIMIT[1] = 2 wird der Verfahrweg 
durch die Arbeitsfeldbegrenzung einge
schrnkt.

584

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.6 Schutzbereiche

N... <Status>

<MaxDist>[0]  X

<MaxDist>[1]  Y Bemerkungen

620

4223

-13.000

0.000

710

1221

0.000

21.213

820

102121

18.000

18.000

Abstand zu C4 wegen C2 und _LIMIT[3] 
insgesamt 4 mm. Abstand C2  N3 von 
0,1 mm fhrt nicht zur Beschrnkung des 
Verfahrwegs.

Frame mit Translation und Rotation aktiv. 
Der zulssige Verfahrweg in _DIST gilt im 
verschobenen und gedrehten WKS.

Der Software-Endschalter der Y-Achse 
wird verletzt. Mit <_TESTLIM> = 17 wird die 
Berechnung einer Weiterfahrrichtung ange
fordert. Diese Richtung steht in <_DIST> 
(0.707, 0.0, 0.707). Sie ist gltig, da in 
<_STATUS> die Einhunderttausenderstel
le gesetzt ist.

Weitere Informationen

Achsstatus "Referenziert"

Alle von CALCPOSI() betrachteten Maschinenachsen mssen referenziert sein.

Kreisbezogene Wegangaben

Alle kreisbezogenen Wegangaben werden immer als Radiusangabe interpretiert. Dies ist 
insbesondere bei Planachsen mit aktivierter Durchmesserprogrammierung (DIAMON / 
DIAM90) zu bercksichtigen.

Verfahrwegreduzierung

Wird der angegebene Verfahrweg einer Achsen begrenzt, sind im Rckgabewert <MaxDist> 
auch die Verfahrwege der anderen Achsen anteilsmig reduziert. Der resultierende Endpunkt 
liegt dadurch weiterhin auf der vorgegebenen Bahn.

Rundachsen

Rundachsen werden nur berwacht, wenn es keine Modulo-Rundachsen sind.

Es ist zulssig, dass fr eine oder mehrere der beteiligten Achsen keine Software-Endschalter 
bzw. Arbeitsfeldbegrenzungen oder Schutzbereiche definiert sind. 

Software-Endschalter- und Arbeitsfeldbegrenzungs-Status

Software-Endschalter und Arbeitsfeldbegrenzungen werden nur bercksichtigt, wenn diese 
bei Ausfhrung von CALCPOSI()aktiv sind. Der Status kann z. B. beeinflusst werden ber:

 Maschinendaten: MD21020 $MC_WORKAREA_WITH_TOOL_RADIUS

 Settingdaten: $AC_WORKAREA_CS_...

 NC/PLC-Nahtstellensignale: DB31, ... DBX12.2 / 3

 Befehle: WALIMON / WALIMOF

Software-Endschalter und Transformationen

Bei CALCPOSI()knnen bei verschiedenen kinematischen Transformationen (z. B. 
TRANSMIT) aufgrund von Mehrdeutigkeiten an bestimmten Stellen des Verfahrbereichs die 

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

585

Arbeitsvorbereitung

3.6 Schutzbereiche

Positionen der Maschinenachsen (MKS) nicht immer eindeutig aus den Positionen der 
Geometrieachsen (WKS) bestimmt werden. Im normalen Verfahrbetrieb ergibt sich die 
Eindeutigkeit in der Regel aus der Vorgeschichte und der Bedingung, dass einer 
kontinuierlichen Bewegung im WKS eine kontinuierliche Bewegung der Maschinenachsen im 
MKS entsprechen muss. Bei der berwachung der Software-Endschalter wird deshalb in 
derartigen Fllen die zum Ausfhrungszeitpunkt von CALCPOSI() vorliegende 
Maschinenposition zur Auflsung der Mehrdeutigkeit verwendet. 

Hinweis

Vorlaufstopp

Bei Verwendung von CALCPOSI() im Zusammenhang mit Transformationen liegt es in der 
alleinigen Verantwortung des Anwenders, zur Synchronisation der Maschinenachspositionen 
mit dem Vorlauf vor CALCPOSI() einen Vorlaufstopp (STOPRE) zu programmieren.

Schutzbereichsabstand und konventionelle Schutzbereiche

Bei konventionellen Schutzbereichen ist nicht gewhrleistet, dass bei einer Verfahrbewegung 
auf dem vorgegebenen Verfahrweg der im Parameter <Limit>[3] angegebene 
Sicherheitsabstand gegenber allen Schutzbereichen eingehalten wird. Es ist nur 
gewhrleistet, dass bei Verlngerung des in <Dist> zurckgelieferten Endpunkts um den 
Sicherheitsabstand in Verfahrrichtung kein Schutzbereich verletzt wird. Die Gerade kann aber 
in ihrem Verlauf beliebig dicht an einem Schutzbereich vorbei fhren.

Schutzbereichsabstand und Schutzbereiche der Kollisionsvermeidung

Bei Schutzbereichen der Kollisionsvermeidung ist gewhrleistet, dass bei einer 
Verfahrbewegung auf dem vorgegebenen Verfahrweg, der im Parameter <Limit>[3] 
angegebene Sicherheitsabstand gegenber allen Schutzbereichen eingehalten wird. 

Der im Parameter <Limit>[3] angegebene Sicherheitsabstand wird nur wirksam, wenn gilt:

<Limit>[3] > (MD10619 $MN_COLLISION_TOLERANCE)

Ist in Parameter <TestLim> Bit 4 gesetzt (Berechnung der weiteren Verfahrrichtung), ist der in 
<DIST> enthaltene Richtungsvektor nur dann gltig, wenn die Einhunderttausenderstelle im 
Rckgabewert der Funktion (<Status>) gesetzt ist. Kann eine solche Richtung nicht ermittelt 
werden, weil entweder Schutzbereiche verletzt wurden oder eine Transformation aktiv ist, 
bleibt der Eingangswert in <DIST> unverndert. Eine weitere Fehlermeldung erfolgt nicht.

586

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.7 Spezielle Wegbefehle

3.7

Spezielle Wegbefehle

3.7.1

Codierte Positionen anfahren (CAC, CIC, CDC, CACP, CACN)

Mit den Wegbefehlen zum "Anfahren von codierten Positionen" ist es mglich, Linear- und 
Rundachsen unter Angabe von Positionsnummern auf feste, in Maschinendaten-Tabellen 
hinterlegte Achspositionen zu verfahren. 

Syntax

Bedeutung 

CAC(<n>)
CIC(<n>)
CACP(<n>)
CACN(<n>)

CAC(<n>):

CIC(<n>):

CDC(<n>):

CACP(<n>):

CACN(<n>):

Codierte Position von Positionsnummer n anfahren

Codierte Position, ausgehend von der aktuellen Positionsnummer, n-Positions
pltze vor (+n) oder zurck (n) anfahren

Codierte Position von Positionsnummer n auf krzestem Weg anfahren 
(nur fr Rundachsen)

Codierte Position von Positionsnummer n in positiver Richtung anfahren 
(nur fr Rundachsen)

Codierte Position von Positionsnummer n in negativer Richtung anfahren 
(nur fr Rundachsen) 

<n>:

Positionsnummer innerhalb der Maschinendaten-Tabelle

Wertebereich: 0, 1,  (max. Anzahl Tabellenpltze - 1)

Beispiel: Anfahren von codierten Positionen einer Positionierachse

Programmiercode

N10 FA[B]=300

Kommentar

; Vorschub fr Positionierachse B

N20 POS[B]=CAC(10)

; Codierte Position von Positionsnummer 10 anfahren

N30 POS[B]=CIC(-4)

; Codierte Position von "aktuelle Positionsnummer" - 
4 anfahren

3.7.2

NC-Satz-Kompression ein-/ausschalten (COMPCAD, COMPSURF, COMPOF)

Die Funktionen zur Kompression von Linearstzen (und abhngig von der Parametrierung 
auch Kreis- und/oder Eilgangstzen) werden mit den G-Befehlen der G-Gruppe 30 ein-/
ausgeschaltet. Die Befehle sind modal wirksam.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

587

Arbeitsvorbereitung

3.7 Spezielle Wegbefehle

Syntax

Bedeutung

COMPCAD / COMPSURF

...

COMPOF

COMPCAD:

COMPSURF:

COMPOF:

Hinweis

Einschalten der Kompressor-Funktion COMPCAD

Einschalten der Kompressor-Funktion COMPSURF

Ausschalten der aktuell aktiven Kompressor-Funktion

Zur zustzlichen Verbesserung der Oberflchengte kann die berschleiffunktion G642 und 
die Ruckbegrenzung SOFT verwendet werden. Diese Befehle sind am Programmanfang zu 
schreiben.

Beispiel: COMPCAD

Programmcode

Kommentar

N10 G00 X30 Y6 Z40

N20 G1 F10000 G642

; Einschalten: berschleiffunktion G642

N30 SOFT

N40 COMPCAD

N50 FIFOCTRL

; Einschalten: Ruckbegrenzung SOFT

; Einschalten: Kompressor-Funktion COMPCAD

N24050 Z32.499

; 1. Verfahrsatz

N24051 X41.365 Z32.500

; 2. Verfahrsatz

...

N99999 X... Z...

; letzter Verfahrsatz

COMPOF

...

; Kompressor-Funktion aus.

3.7.3

Polynom-Interpolation (POLY, POLYPATH, PO, PL)

Im eigentlichen Sinn handelt es sich bei der Polynom-Interpolation (POLY) nicht um eine Spline-
Interpolationsart. Sie ist in erster Linie als Schnittstelle fr die Programmierung extern 
erzeugter Spline-Kurven gedacht. Hierbei knnen die Spline-Abschnitte direkt programmiert 
werden. 

Diese Interpolationsart entlastet die NC von der Berechnung der Polynom-Koeffizienten. Sie ist 
dann optimal einsetzbar, wenn die Koeffizienten direkt von einem CAD-System oder Post-
Prozessor kommen. 

588

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
Arbeitsvorbereitung

3.7 Spezielle Wegbefehle

Syntax

Polynom 3. Grades:
POLY PO[X]=(xe,a2,a3) PO[Y]=(ye,b2,b3) PO[Z]=(ze,c2,c3) PL=n

Polynome 5.Grades und neue Polynomsyntax:
POLY X=PO(xe,a2,a3,a4,a5) Y=PO(ye,b2,b3,b4,b5) Z=PO(ze,c2,c3,c4,c5) 
PL=n
POLYPATH("AXES","VECT")

Hinweis

Die Summe der in einem NC-Satz programmierten Polynom-Koeffizienten und Achsen darf die 
maximal erlaubte Achsanzahl pro Satz nicht berschreiten.

Bedeutung

POLY :

POLYPATH :

Einschalten der Polynom-Interpolation mit einem 
Satz mit POLY.

Polynom-Interpolation selektierbar fr die beiden 
Achsgruppen AXIS oder VECT

PO[Achsbezeichner/Variable] :

Endpunkte und Polynom-Koeffizienten

X, Y, Z :

xe, ye, ze :

a2, a3, a4, a5 :

PL :

Achsbezeichner

Angabe der Endposition fr die jeweilige Achse; 
Wertebereich wie Wegma

Die Koeffizienten a2, a3, a4, und a5 werden mit ihrem 
Wert geschrieben; Wertebereich wie Wegma. Der 
jeweils letzte Koeffizient kann entfallen, wenn er 
den Wert Null hat.

Lnge des Parameterintervalls, auf dem die Poly
nome definiert sind (Definitionsbereich der Funkti
on f(p)).

Das Intervall beginnt immer bei 0, p kann Werte von 
0 bis PL annehmen.

Theoretischer Wertebereich fr PL:
0,0001  99 999,9999

Hinweis:
Der PL-Wert gilt fr den Satz, in dem er steht. Ist 
kein PL programmiert, wirkt PL=1.

Ein-/Ausschalten der Polynom-Interpolation

Die Polynom-Interpolation wird im Teileprogramm durch den G-Befehl POLY eingeschaltet. 

Der G-Befehl POLY gehrt zusammen mit G0, G1, G2, G3, ASPLINE, BSPLINE und CSPLINE 
zur 1. G-Gruppe.

Achsen, die nur mit Namen und Endpunkt programmiert sind (z.B. X10), werden linear 
verfahren. Sind alle Achsen eines NC-Satzes so programmiert, verhlt sich die Steuerung wie 
bei G1.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

589

Arbeitsvorbereitung

3.7 Spezielle Wegbefehle

Die Polynom-Interpolation wird durch die Programmierung eines anderen Befehls der 1. G-
Gruppe (z. B. G0, G1) implizit wieder ausgeschaltet.

Polynomkoeffizient

Der PO-Wert (PO[]=) bzw. ...=PO(...) gibt alle Polynom-Koeffizienten fr eine Achse 
an. Entsprechend dem Grad des Polynoms werden mehrere Werte durch Kommata getrennt 
angegeben. Innerhalb eines Satzes sind unterschiedliche Polynomgrade fr verschiedene 
Achsen mglich.   

Unterprogramm POLYPATH

Mit POLYPATH(...) kann die Polynom-Interpolation selektiv fr bestimmte Achsgruppen 
freigegeben werden:

Nur Bahnachsen und Zusatzachsen:
Nur Orientierungsachsen:
(beim Verfahren mit Orientierungs-Transformation)

POLYPATH("AXES")
POLYPATH("VECT")

Die jeweils nicht freigegebenen Achsen werden linear verfahren.

Standardmig ist die Polynom-Interpolation fr beide Achsgruppen freigegeben.

Durch Programmierung ohne Parameter POLYPATH( ) wird die Polynom-Interpolation fr alle 
Achsen deaktiviert.

Beispiel

Programmcode

N10 G1 X Y Z F600

N11 POLY PO[X]=(1,2.5,0.7) PO[Y]=(0.3,1,3.2) 
PL=1.5

N12 PO[X]=(0,2.5,1.7) PO[Y]=(2.3,1.7) PL=3

...

N20 M8 H126 

Kommentar

; Polynom-Interpolation ein

N25 X70 PO[Y]=(9.3,1,7.67) PL=5

; gemischte Angaben fr die Achsen

N27 PO[X]=(10,2.5) PO[Y]=(2.3)

N30 G1 X Y Z.



; kein PL programmiert; es wirkt 
PL=1

; Polynom-Interpolation aus

Beispiel: Neue Polynomsyntax

Weiterhin gltige Polynomsyntax

Neue Polynomsyntax

PO[Achsbezeichner]=(.. , ..)

Achsbezeichner=PO(.. , ..)

PO[PHI]=(.. , ..)

PO[PSI]=(.. , ..)

PO[THT]=(.. , ..)

PHI=PO(.. , ..)

PSI=PO(.. , ..)

THT=PO(.. , ..)

590

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
Arbeitsvorbereitung

3.7 Spezielle Wegbefehle

Weiterhin gltige Polynomsyntax

Neue Polynomsyntax

PO[]=(.. , ..)

PO(.. , ..)

PO[variable]=IC(.. , ..)

variable=PO IC(.. , ..)

Beispiel: Kurve in der X/Y-Ebene

Programmierung

Programmcode

N9 X0 Y0 G90 F100

N10 POLY PO[Y]=(2) PO[X]=(4,0.25) PL=4

Verlauf der Kurven X(p) und Y(p)

Verlauf der Kurve in der XY-Ebene

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

591

Beispiel:Endpunkt 4Endpunkt 2(4,0.25) PL=4(2) PO[X]N10 POLY PO[Y]=N9 X0 Y0 G904432(PL)32101Xp21Yp 
 
 
Arbeitsvorbereitung

3.7 Spezielle Wegbefehle

Beschreibung

Die allgemeine Form der Polynom-Funktion lautet:

f(p)= a0 + a1p + a2p2 + . . . + anpn
mit:

ai: konstante Koeffizienten (i = 0, 1, ..., n)
p: Parameter

In der Steuerung knnen maximal Polynome 5. Grades programmiert werden:

f(p)= a0 + a1p + a2p2 + a3p3 + a4p4 + a5p5

Durch Belegen der Koeffizienten mit konkreten Werten sind verschiedene Kurvenverlufe, wie 
Geraden, Parabeln und Potenzfunktionen, erzeugbar.

Eine Gerade wird erzeugt durch a2 = a3 = a4 = a5 = 0:

f(p)= a0 + a1p

Weiter gilt:

a0:  Achsposition am Ende des vorangehenden Satzes
p = PL
a1 = (xE - a0 - a2*p2 - a3*p3) / p

Es ist mglich Polynome zu programmieren, ohne dass die Polynom-Interpolation durch den G-
Befehl POLY aktiviert wurde. In diesem Fall werden nicht die programmierten Polynome 
interpoliert, sondern die programmierten Endpunkte der Achsen linear angefahren (G1). Erst 
nach expliziter Aktivierung der Polynom-Interpolation im Teileprogramm (POLY) werden die 
programmierten Polynome auch als solche verfahren.

592

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

44321(PL)43322110YXErgebnis in XY-Ebene 
 
 
 
 
 
 
Besonderheit: Nenner-Polynom

Arbeitsvorbereitung

3.7 Spezielle Wegbefehle

Fr die Geometrieachsen kann mit PO[]=() ohne Angabe eines Achsnamens auch ein 
gemeinsames Nenner-Polynom programmiert werden, d. h. die Bewegung der 
Geometrieachsen wird als Quotient zweier Polynome interpoliert. 

Damit lassen sich z. B. Kegelschnitte (Kreis, Ellipse, Parabel, Hyperbel) exakt darstellen.

Beispiel:

Programmcode

POLY G90 X10 Y0 F100

PO[X]=(0,10) PO[Y]=(10) PO[]=(2,1)

Kommentar

; Geometrieachsen verfahren linear auf 
die Position X10 Y0.

; Geometrieachsen verfahren im Viertel-
kreis auf X0 Y10.

Der konstante Koeffizient (a0) des Nenner-Polynoms wird stets mit 1 angenommen. Der 
programmierte Endpunkt ist unabhngig von G90 / G91.

Aus den programmierten Werten berechnen sich X(p) und Y(p) zu:

X(p) = (10 - 10 * p2) / (1 + p2)
Y(p) = 20 * p / (1 + p2)
mit 0  p  1

Aufgrund der programmierten Anfangspunkte, Endpunkte, Koeffizient a2 und PL=1 ergeben 
sich folgende Zwischenergebnisse:

Zhler (X) =
Zhler (Y) = 
Nenner =

10 + 0 * p - 10 * p2
0 + 20 * p + 0 * p2
1 + p2

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

593

Y10X 
 
 
 
 
 
Arbeitsvorbereitung

3.7 Spezielle Wegbefehle

Bei eingeschalteter Polynom-Interpolation wird die Programmierung eines Nenner-Polynoms 
mit Nullstellen innerhalb des Intervalls [0,PL] mit einem Alarm abgelehnt. Auf die Bewegung 
von Zusatzachsen hat das Nenner-Polynom keinen Einfluss.

Hinweis

Eine Werkzeugradiuskorrektur ist bei der Polynom-Interpolation mit G41, G42 einschaltbar und 
wie fr Geraden- oder Kreisinterpolation verwendbar.

3.7.4

Einstellbarer Bahnbezug (SPATH, UPATH)

Bei Polynominterpolation (POLY, ASPLINE, BSPLINE, CSPLINE, COMP...) werden die 
Positionen der Bahnachsen i durch Polynome pi(U) vorgegeben. Der Kurvenparameter U 
bewegt sich dabei innerhalb eines NC-Satzes von 0 bis 1. 

Durch FGROUP werden die Achsen (FGROUP-Achsen) ausgewhlt, auf die sich der 
Bahnvorschub F bezieht. Eine Interpolation mit konstanter Geschwindigkeit auf dem Bahnweg 
S der FGROUP-Achsen bedeutet whrend der Polynominterpolation jedoch in der Regel eine 
nicht konstante nderung des Kurvenparameters U. Fr die nicht in FGROUP enthaltenen 
Achsen kann daher zwischen zwei Mglichkeiten gewhlt werden, wie diese den FGROUP-
Achsen folgen sollen: 

 Synchron zum Bahnweg S (SPATH)

 Synchron zum Kurvenparameter U (UPATH)

Syntax 

Bedeutung

SPATH
UPATH

SPATH:

UPATH:

Hinweis

Die nicht in FGROUP enthaltenen Achsen werden bezogen auf den Bahnweg S verfahren

Die nicht in FGROUP enthaltenen Achsen werden bezogen auf den Kurvenparameter U 
verfahren

UPATH und SPATH bestimmen auch den Zusammenhang des F-Wort-Polynoms 
(FPOLY, FCUB, FLIN) mit der Bahnbewegung.

Randbedingungen

SPATH bzw. UPATH haben keine Bedeutung bei:

 Linearinterpolation (G1)

 Kreisinterpolation (G2, G3)

594

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.7 Spezielle Wegbefehle

 Gewindestzen (G33, G34, G35, G33x, G63)

 Alle Bahnachsen sind in FGROUP enthalten

Beispiel

Das folgende Beispiel zeigt den Unterschied zwischen den beiden Arten der 
Bewegungsfhrung.

Programmcode

N10 FGROUP(X,Y,Z)

N15 G1 X0 A0 F1000 SPATH

; SPATH

N20 POLY PO[X]=(10,10) A10

Programmcode

N10 FGROUP(X,Y,Z)

N15 G1 X0 A0 F1000 UPATH

; UPATH

N20 POLY PO[X]=(10,10) A10

In beiden Programmausabschnitten hngt in N20 der Weg S der FGROUP-Achsen vom 
Quadrat des Kurvenparameters U ab. Daher ergeben sich entlang des Wegs von X 
unterschiedliche Positionen der Synchronachse A, je nachdem, ob SPATH oder UPATH aktiv ist.

Weitere Informationen

Steuerungsverhalten bei Reset und Maschinen-/Optionsdaten

Nach Reset ist der durch MD20150 $MC_GCODE_RESET_VALUES[ 44 ] bestimmte G-Befehl 
wirksam (45. G-Gruppe).

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

595

(cid:56)(cid:81)(cid:87)(cid:72)(cid:85)(cid:86)(cid:70)(cid:75)(cid:76)(cid:72)(cid:71)(cid:79)(cid:76)(cid:70)(cid:75)(cid:72)(cid:3)(cid:74)(cid:72)(cid:82)(cid:80)(cid:72)(cid:87)(cid:85)(cid:76)(cid:86)(cid:70)(cid:75)(cid:72)(cid:3)(cid:37)(cid:72)(cid:93)(cid:76)(cid:72)(cid:75)(cid:88)(cid:81)(cid:74)(cid:72)(cid:81)(cid:3)(cid:93)(cid:90)(cid:76)(cid:86)(cid:70)(cid:75)(cid:72)(cid:81)(cid:3)(cid:36)(cid:70)(cid:75)(cid:86)(cid:72)(cid:81)(cid:3)(cid:69)(cid:72)(cid:76)(cid:3)(cid:54)(cid:51)(cid:36)(cid:55)(cid:43)(cid:3)(cid:88)(cid:81)(cid:71)(cid:3)(cid:56)(cid:51)(cid:36)(cid:55)(cid:43)(cid:36)(cid:11)(cid:59)(cid:12)(cid:32)(cid:54)(cid:52)(cid:53)(cid:55)(cid:11)(cid:59)(cid:12)(cid:56)(cid:51)(cid:36)(cid:55)(cid:43)(cid:29)(cid:20)(cid:19)(cid:36)(cid:20)(cid:19)(cid:59)(cid:36)(cid:11)(cid:59)(cid:12)(cid:32)(cid:59)(cid:54)(cid:51)(cid:36)(cid:55)(cid:43)(cid:29)(cid:20)(cid:19)(cid:36)(cid:20)(cid:19)(cid:59) 
 
 
 
 
 
Arbeitsvorbereitung

3.7 Spezielle Wegbefehle

Der Grundstellungswert fr die Art des berschleifens wird mit 
MD20150 $MC_GCODE_RESET_VALUES[9] festgelegt (10. G-Gruppe).

Das achsspezifische Maschinendatum MD33100 $MA_COMPRESS_POS_TOL[<n>] hat eine 
erweiterte Bedeutung: es enthlt die Toleranzen fr die Kompressorfunktion und fr das 
berschleifen mit G642.

3.7.5

Kanalspezifisches Messen (MEAS, MEAW)

Beim kanalspezifischen Messen erfolgt die Aktivierung des Messvorgangs fr einen NC-Kanal 
stets aus dem Teileprogramm, das im betreffenden Kanal luft. In einem Messsatz wird 
jeweils ein Trigger-Ereignis (steigende oder fallende Flanke des Messtasters) und ein 
Messmodus mit Restweglschen (MEAS) oder ohne Restweglschen (MEAW) programmiert. 
Am Messvorgang sind dann alle im Messsatz programmierten Achsen beteiligt.

Sobald ein Messsatz aktiv ist, wird der Messtaster an das Werkstck herangefahren. Bei der 
Schaltflanke des Messtasters werden fr alle im Messsatz programmierten Achsen die 
Positionen gemessen und fr jede Achse in die entsprechende Speicherzelle geschrieben.

Die Messergebnisse lassen sich im Teileprogramm oder mit Synchronaktionen sowohl im 
Maschinen- als auch im Werkstckkoordinatensystem lesen.

MEAS=<TE> G... X... Y... Z...
MEAW=<TE> G... X... Y... Z...

Syntax

596

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:59)(cid:61)Arbeitsvorbereitung

3.7 Spezielle Wegbefehle

Bedeutung

MEAS:

MEAW:

Messen mit Restweglschen

Wirksamkeit:

satzweise

Messen ohne Restweglschen

Wirksamkeit:

satzweise

Anwendung:

Fr Messaufgaben, bei denen in jedem Fall die programmier
te Position angefahren werden soll.

<TE>:

Trigger-Ereignis zur Auslsung der Messung

Typ:

INT

Wertebereich: 

-2, -1, 1, 2

Wert:

(+)1

steigende Flanke von Messtaster 1 (auf Messeingang 1)

-1

fallende Flanke von Messtaster 1 (auf Messeingang 1)

(+)2

steigende Flanke von Messtaster 2 (auf Messeingang 2)

-2

fallende Flanke von Messtaster 2 (auf Messeingang 2)

Hinweis:
Es existieren maximal 2 Messtaster (je nach Ausbaustufe).

G...:

Interpolationsart, z. B. G0, G1, G2 oder G3

X... Y... Z...:

Endpunkte in kartesischen Koordinaten

Hinweis

MEAS und MEAW sind satzweise wirksam und werden zusammen mit 
Bewegungsanweisungen programmiert. Vorschub und Interpolationsart (G0, G1, ), ebenso 
wie die Anzahl der Achsen, mssen dabei dem jeweiligen Messproblem angepasst sein.  

Beispiel

Programmcode

...

N10 MEAS=1 G1 F1000 X100 Y730 Z40

...

Kommentar

; Messsatz mit Messtaster des ersten Mes-
seingangs und Geradeninterpolation. Vor-
laufstopp wird automatisch erzeugt.

Weitere Informationen

Status abfragen

Ist im Programm eine Auswertung erforderlich, ob ein Messtaster ausgelenkt wurde bzw. 
geschaltet hat, kann der Status ber folgende Systemvariablen abgefragt werden:

Systemvariable

Bedeutung

Datentyp

Wert

$A_PROBE[<n>]

Messtasterzustand

INT

0

1

Messtaster nicht aus
gelenkt.

Messtaster ausge
lenkt.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

597

 
 
 
Arbeitsvorbereitung

3.7 Spezielle Wegbefehle

Systemvariable

Bedeutung

Datentyp

Wert

$AC_MEA[<n>]

Schaltzustand des Messtas
ters

INT

$AC_MEA[<n>] wird zu Be
ginn einer Messung automa
tisch zurckgesetzt. 

0

1

Messtaster hat nicht 
geschaltet.

Messtaster hat ge
schaltet.

<n> = Nummer des Messtasters

Messwerteaufnahme

Bei der kanalspezifischen Messung werden die Positionen aller verfahrenen Bahn- und 
Positionierachsen des Satzes (maximale Anzahl an Achsen je nach Steuerungskonfiguration) 
erfasst. Bei MEAS wird die Bewegung nach dem Schalten des Messtasters definiert 
abgebremst.

Hinweis

Ist in einem Messsatz eine Geometrieachse programmiert, werden die Messwerte fr alle 
aktuellen Geometrieachsen abgelegt.

Ist in einem Messsatz eine an einer Transformation beteiligte Achse programmiert, werden die 
Messwerte aller an dieser Transformation beteiligten Achsen abgelegt.

Messergebnisse lesen

Die Messtaster-Messwerte der erfassten Achsen knnen ber die folgenden Systemvariablen 
im Teileprogramm und in Synchronaktionen gelesen werden:

Systemvariable

Bedeutung

$AA_MM[<Axis>]

Messtaster-Messwert im Maschinenkoordinatensystem.

$AA_MW[<Axis>]

Messtaster-Messwert im Werkstckkoordinatensystem.

3.7.6

Achsspezifisches Messen (MEASA, MEAWA, MEAC) (Option)

Beim achsspezifischen Messen kann die Aktivierung im Teileprogramm oder in 
Synchronaktionen erfolgen. Stehen fr die Achse zwei Messsysteme zur Verfgung, knnen 
beide fr die Messung verwendet werden. 

Folgende Messmethoden stehen zur Verfgung:

 Messen mit Restweglschen (MEASA) 

 Messen ohne Restweglschen (MEAWA)

 Kontinuierliches Messen ohne Restweglschen (MEAC)

Mit MEASA bzw. MEAWA werden fr die jeweils programmierte Achse bis zu vier Messwerte 
pro Messung erfasst und passend zum Trigger-Ereignis in Systemvariablen abgelegt.

Beim kontinuierlichen Messen mit MEAC werden die Messergebnisse in FIFO-Variablen 
abgelegt.

598

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.7 Spezielle Wegbefehle

Syntax

MEASA[<Axis>]=(<Mode>,<TE1>,...,<TE4>)
MEAWA[<Axis>]=(<Mode>,<TE1>,...,<TE4>)
MEAC[<Axis>]=(<Mode>,<MeasMem>,<TE1>,...,<TE4>)

Hinweis

MEASA und MEAWA sind satzweise wirksam und knnen zusammen in einem Satz 
programmiert werden. Wird dagegen MEASA/MEAWA zusammen mit MEAS/MEAW in einem 
Satz programmiert, kommt es zu einer Fehlermeldung.

Bedeutung

MEASA:

Achsspezifisches Messen mit Restweglschen

Wirksamkeit:

satzweise

MEAWA:

Achsspezifisches Messen ohne Restweglschen

Wirksamkeit:

satzweise

MEAC:

Achsspezifisches kontinuierliches Messen ohne Restweglschen

<Axis>:

<Mode>:

Wirksamkeit:

satzweise

Name der zu Messung verwendeten Kanalachse 

Zweistellige (xx) Ziffer zur Angabe des Betriebsmodus (Messmodus und Mess
system)

Einerdekade: Messmodus

Legt fest, ob die Trigger-Ereignisse in zeitlicher oder programmierter Reihenfolge 
aktiviert werden sollen.

x0

x1

x2

x3

Messauftrag abbrechen.

Bis zu 4 verschiedene gleichzeitig aktivierbare Trigger-Ereignisse.

Bis zu 4 nacheinander aktivierbare Trigger-Ereignisse.

Bis zu 4 nacheinander aktivierbare Trigger-Ereignisse, jedoch keine ber
wachung von Trigger-Ereignis 1 beim Start (Alarme 21700/21703 werden 
unterdrckt).

Hinweis:
Dieser Modus ist bei MEAC nicht mglich.

Zehnerdekade: Messsystem

Legt fest, mit welchem Messsystem die Messung durchgefhrt werden soll.

0x (oder keine Angabe) aktives Messsystem

1x

2x

3x

Messsystem 1

Messsystem 2

beide Messsysteme

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

599

Arbeitsvorbereitung

3.7 Spezielle Wegbefehle

<TE>:

Trigger-Ereignis zur Auslsung der Messung

Typ:

INT

Wertebereich:

-2, -1, 1, 2

(+)1 steigende Flanke von Messtaster 1

-1 fallende Flanke von Messtaster 1

(+)2 steigende Flanke von Messtaster 2

-2 fallende Flanke von Messtaster 2

Hinweis:
Wenn der Messvorgang mit zwei Messsystemen durchgefhrt wird, sind maximal 
zwei Trigger- Ereignisse programmierbar (steigende oder fallende Flanke). Bei 
jedem der beiden Trigger- Ereignisse werden die Messwerte beider Messsysteme 
erfasst.

<MeasMem>:

Nummer des FIFO (Umlaufspeichers)

Beispiele

Beispiel 1: Achsspezifisches Messen mit Restweglschen im Modus 1 (Auswertung in 
zeitlicher Reihenfolge)

a) Messen mit einem Messsystem

Programmcode

...

N100 MEASA[X]=(1,1,-1) G01 X100 F100

Kommentar

; Messen im Modus 1 mit aktivem Messsys-
tem. Warten auf Messsignal mit steigender/
fallender Flanke von Messtaster 1 auf dem 
Verfahrweg nach X=100.

N110 IF $AC_MEA[1]==FALSE GOTOF ENDE

; Erfolg der Messung kontrollieren.

N120 R10=$AA_MM1[X]

N130 R11=$AA_MM2[X]

N140 ENDE:

; Zum ersten programmierten Trigger-Ereig-
nis (steigende Flanke) gehrigen Messwert 
speichern.

; Zum zweiten programmierten Trigger-Er-
eignis (fallende Flanke) gehrigen Mess-
wert speichern.

b) Messen mit zwei Messsystemen

Programmcode

...

N200 MEASA[X]=(31,1,-1) G01 X100 F100

Kommentar

; Messen im Modus 1 mit beiden Messsyste-
men. Warten auf Messsignal mit steigender/
fallender Flanke von Messtaster 1 auf dem 
Verfahrweg nach X=100.

N210 IF $AC_MEA[1]==FALSE GOTOF ENDE

; Erfolg der Messung kontrollieren.

N220 R10=$AA_MM1[X]

N230 R11=$AA_MM2[X]

; Messwert des Messsystems 1 bei steigen-
der Flanke speichern.

; Messwert des Messsystems 2 bei steigen-
der Flanke speichern.

600

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
Programmcode

N240 R12=$AA_MM3[X]

N250 R13=$AA_MM4[X]

N260 ENDE:

Arbeitsvorbereitung

3.7 Spezielle Wegbefehle

Kommentar

; Messwert des Messsystems 1 bei fallen-
der Flanke speichern.

; Messwert des Messsystems 2 bei fallen-
der Flanke speichern.

Beispiel 2: Achsspezifisches Messen mit Restweglschen im Modus 2 (Auswertung in 
programmierter Reihenfolge)

Programmcode

...

Kommentar

N100 MEASA[X]=(2,1,-1,2,-2) G01 X100 F100 ; Messen im Modus 2 mit aktivem Messsys-

tem. Warten auf Messsignal in der Reihen-
folge steigende Flanke von Messtaster 1, 
fallende Flanke Messtaster 1, steigende 
Flanke von Messtaster 2, fallende Flanke 
Messtaster 2 auf dem Verfahrweg nach 
X=100.

N110 IF $AC_MEA[1]==FALSE GOTOF MESSTAS-
TER2

; Erfolg der Messung mit Messtaster 1 kon-
trollieren.

N120 R10=$AA_MM1[X]

N130 R11=$AA_MM2[X]

N140 MESSTASTER2:

N150 IF $AC_MEA[2]==FALSE GOTOF ENDE

N160 R12=$AA_MM3[X]

N170 R13=$AA_MM4[X]

N180 ENDE:

; Zum ersten programmierten Trigger-Ereig-
nis (steigende Flanke Messtaster 1) geh-
rigen Messwert speichern.

; Zum zweiten programmierten Trigger-Er-
eignis (steigende Flanke Messtaster 1) 
gehrigen Messwert speichern.

; Erfolg der Messung mit Messtaster 2 kon-
trollieren.

; Zum dritten programmierten Trigger-Er-
eignis (steigende Flanke Messtaster 2) 
gehrigen Messwert speichern.

; Zum vierten programmierten Trigger-Er-
eignis (steigende Flanke Messtaster 2) 
gehrigen Messwert speichern.

Beispiel 3: Achsspezifisches kontinuierliches Messen im Modus 1 (Auswertung in zeitlicher 
Reihenfolge)

a) Messen von bis zu 100 Messwerten

Programmcode

...

N110 DEF REAL MESSWERT[100]

N120 DEF INT Schleife=0

Kommentar

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

601

 
 
 
 
 
 
 
Arbeitsvorbereitung

3.7 Spezielle Wegbefehle

Programmcode

Kommentar

N130 MEAC[X]=(1,1,-1) G01 X1000 F100

N135 STOPRE

N140 MEAC[X]=(0)

N150 R1=$AC_FIFO1[4]

N160 FOR Schleife=0 TO R1-1

N170 MESSWERT[Schleife]=$AC_FIFO1[0]

N180 ENDFOR

; Messen im Modus 1 mit aktivem Messsys-
tem, Speichern der Messwerte unter $AC_FI-
FO1, Warten auf Messsignal mit fallender 
Flanke von Messtaster 1 auf dem Verfahr-
weg nach X=1000.

; Messung nach Erreichen der Achsposition 
abbrechen.

; Anzahl aufgelaufener Messwerte in Para-
meter R1 speichern.

; Messwerte aus dem $AC_FIFO1 auslesen 
und abspeichern.

b) Messen mit Restweglschen nach 10 Messwerten

Programmcode

...

Kommentar

N10 WHEN $AC_FIFO1[4]>=10 DO MEAC[x]=(0) DELDTG(x)

; Restweg lschen.

N20 MEAC[x]=(1,1,1,-1) G01 X100 F500

N30 MEAC[X]=(0)

N40 R1=$AC_FIFO1[4]

...

; Anzahl Messwerte.

c) Messen einer fallenden/steigenden Zahnflanke mit 2 Messtastern

Programmcode

...

N110 DEF REAL MESSWERT[16]

N120 DEF INT Schleife=0

N130 MEAC[X]=(1,1,-1,2) G01 X100 F100

N140 STOPRE

N150 MEAC[X]=(0)

N160 R1=$AC_FIFO1[4]

N170 FOR Schleife=0 TO R1-1

N180 MESSWERT[Schleife]=$AC_FIFO1[0]

N190 ENDFOR

Kommentar

; Messen im Modus 1 mit aktivem Messsys-
tem, Speichern der Messwerte unter $AC_FI-
FO1, Warten auf Messsignal in der Reihen-
folge fallende Flanke von Messtaster 1, 
steigende Flanke Messtaster 2, auf dem 
Verfahrweg nach X=100.

; Vorlaufstopp.

; Messung nach Erreichen der Achsposition 
abbrechen.

; Anzahl aufgelaufener Messwerte in Para-
meter R1 speichern.

; Messwerte aus dem $AC_FIFO1 auslesen 
und abspeichern.

602

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
Weitere Informationen

Messauftrag

Arbeitsvorbereitung

3.7 Spezielle Wegbefehle

Die Programmierung eines Messauftrags kann im Teileprogramm oder aus einer 
Synchronaktion heraus erfolgen. Pro Achse kann dabei zu ein- und demselben Zeitpunkt nur 
ein Messauftrag aktiv sein.

Hinweis

Der Vorschub ist dem jeweiligen Messproblem anzupassen.

Bei MEASA und MEAWA knnen korrekte Ergebnisse nur bei Vorschben gewhrleistet 
werden, bei denen nicht mehr als ein gleiches und nicht mehr als 4 verschiedene Trigger-
Ereignisse pro Lagereglertakt eintreffen.

Beim kontinuierlichen Messen mit MEAC darf das Verhltnis zwischen Interpolatortakt und 
Lagereglertakt nicht grer als 1:8 werden.

Trigger-Ereignis

Ein Trigger-Ereignis setzt sich zusammen aus der Nummer des Messtasters und dem 
Auslsekriterium (steigende oder fallende Flanke) des Messsignals.

Fr jede Messung knnen jeweils bis zu 4 Trigger-Ereignisse der angesprochenen Messtaster 
verarbeitet werden, also bis zu zwei Messtaster mit je zwei Messflanken. Die Reihenfolge der 
Verarbeitung sowie die maximale Anzahl der Trigger-Ereignisse sind dabei abhngig vom 
gewhlten Modus.

Wenn der Messvorgang mit zwei Messsystemen durchgefhrt wird, sind maximal zwei Trigger-
Ereignisse programmierbar (steigende oder fallende Flanke). Bei jedem der beiden Trigger-
Ereignisse werden die Messwerte beider Messtaster erfasst.

Bei der Verwendung von PROFIBUS-Telegramm 391 (Standardeinstellung fr die PROFIBUS-
Kommunikation) ist nur ein Messwert pro Trigger-Ereignis und Lageregler-Takt mglich.

Bei der Verwendung von PROFIBUS-Telegramm 395 kann bei MEAC im Betriebsmodus 1 die 
Anzahl der Messwerte pro Trigger-Ereignis auf insgesamt 8 Messwerte bei steigender und 8 
bei fallender Flanke pro Trigger-Ereignis und Lageregler-Takt erhht werden:

 Ein Messtaster: 8 Messwerte bei steigender und 8 bei fallender Flanke

 Zwei Messtaster: 4 Messwerte bei steigender und 4 bei fallender Flanke je Messtaster

Dadurch lassen sich bei Verwendung von PROFIBUS-Telegramm 395 hhere Vorschbe oder 
Drehzahlen realisieren.

Betriebsmodus

Mit der ersten Ziffer (Zehnerdekade) des Betriebsmodus wird das gewnschte Messsystem 
angewhlt. Ist nur ein Messsystem vorhanden, jedoch das zweite programmiert, wird 
automatisch das vorhandene eingesetzt.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

603

Arbeitsvorbereitung

3.7 Spezielle Wegbefehle

Mit der zweiten Ziffer (Einerdekade) wird der gewnschte Messmodus angewhlt. Damit wird 
der Messvorgang an die Mglichkeiten der jeweiligen Steuerung angepasst:

 Modus 1

Die Auswertung der Trigger-Ereignisse erfolgt in der zeitlichen Reihenfolge ihres 
Auftretens.

 Modus 2

Die Auswertung der Trigger-Ereignisse erfolgt in der programmierten Reihenfolge.

 Modus 3

Die Auswertung der Trigger-Ereignisse erfolgt in der programmierten Reihenfolge, jedoch 
keine berwachung von Trigger-Ereignis 1 beim Start.

Messen mit und ohne Restweglschen

Bei der Programmierung von MEASA wird Restweglschen erst nach der Erfassung aller 
geforderten Messwerte durchgefhrt.

Fr spezielle Messaufgaben, bei denen in jedem Fall die programmierte Position angefahren 
werden soll, wird MEAWA eingesetzt.

Hinweis

MEASA ist nicht in Synchronaktionen programmierbar. Ersatzweise kann MEAWA plus 
Restweglschen als Synchronaktion programmiert werden.

Wird der Messauftrag mit MEAWA aus den Synchronaktionen gestartet, sind die Messwerte 
nur im Maschinen-Koordinatensystem verfgbar.

Geometrieachsen / Transformationen

Soll das achsspezifische Messen fr eine Geometrieachse gestartet werden, muss der gleiche 
Messauftrag explizit fr alle restlichen Geometrieachsen programmiert werden. Das Gleiche 
gilt fr Achsen, die an einer Transformation beteiligt sind.

Beispiele:
N10 MEASA[Z]=(1,1) MEASA[Y]=(1,1) MEASA[X]=(1,1) G0 Z100

oder
N10 MEASA[Z]=(1,1) POS[Z]=100

Status abfragen

Ist im Programm eine Auswertung erforderlich, ob ein Messtaster ausgelenkt wurde bzw. 
geschaltet hat, kann der Status ber folgende Systemvariablen abgefragt werden:

Systemvariable

Bedeutung

Datentyp

Wert

$A_PROBE[<n>]

Messtasterzustand

INT

0

1

Messtaster nicht aus
gelenkt.

Messtaster ausge
lenkt.

604

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
Arbeitsvorbereitung

3.7 Spezielle Wegbefehle

Systemvariable

Bedeutung

Datentyp

Wert

$AC_MEA[<n>]

Schaltzustand des Messtas
ters

INT

$AC_MEA[<n>] wird zu Be
ginn einer Messung automa
tisch zurckgesetzt. 

0

1

Messtaster hat nicht 
geschaltet.

Messtaster hat ge
schaltet (alle im 
Messsatz program
mierten Trigger-
Ereignisse sind er
folgt).

<n> = Nummer des Messtasters

Hinweis

Wird Messen aus Synchronaktionen gestartet, wird $AC_MEA nicht mehr aktualisiert. In 
diesem Fall ist das NC/PLC-Nahtstellensignal DB31,  DBX62.3 bzw. die gleichwertige 
Variable $AA_MEAACT[<Axis>] abzufragen:

$AA_MEAACT==1: Messen aktiv

$AA_MEAACT==0: Messen nicht aktiv

Messtasterbegrenzung

Mit der Systemvariablen $A_PROBE_LIMITED kann im NC-Programm oder Synchronaktion 
der Status der Messtasterbegrenzung bei Verwendung des PROFIBUS-Telegramms 395 
gelesen werden:

$A_PROBE_LIMITED[<n>] == 0: Messtasterbegrenzung inaktiv/zurckgesetzt

$A_PROBE_LIMITED[<n>] == 1: Messtasterbegrenzung aktiv

<n> = Messtasternummer

Messergebnisse fr MEASA / MEAWA

Die Messtaster-Messwerte knnen ber die folgenden Systemvariablen im Teileprogramm 
und in Synchronaktionen gelesen werden:

Systemvariable

Bedeutung

$AA_MM1[<Axis>]

Messtaster-Messwert bei Trigger-Ereignis 1 im MKS

...

...

$AA_MM4[<Axis>]

Messtaster-Messwert bei Trigger-Ereignis 4 im MKS

$AA_MW1[<Axis>]

Messtaster-Messwert bei Trigger-Ereignis 1 im WKS

...

...

$AA_MW4[<Axis>]

Messtaster-Messwert bei Trigger-Ereignis 4 im WKS

<Axis> = Messachse

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

605

Arbeitsvorbereitung

3.7 Spezielle Wegbefehle

Wird der Messauftrag mit zwei Messsystemen durchgefhrt, wird jedes der beiden mglichen 
Trigger-Ereignisse von beiden Messsystemen erfasst. Die Belegung der Systemvariablen ist 
dann wie folgt:

$AA_MM1[<Axis>]

bzw.

$AA_MW1[<Axis>]

$AA_MM2[<Axis>]

bzw.

$AA_MW2[<Axis>]

$AA_MM3[<Axis>]

bzw.

$AA_MW3[<Axis>]

$AA_MM4[<Axis>]

bzw.

$AA_MW4[<Axis>]

Messwert von Messsystem 1 bei 
Trigger-Ereignis 1
Messwert von Messsystem 2 bei 
Trigger-Ereignis 1
Messwert von Messsystem 1 bei 
Trigger-Ereignis 2
Messwert von Messsystem 2 bei 
Trigger-Ereignis 2

Kontinuierliches Messen (MEAC)

Die Messwerte liegen bei MEAC im Maschinenkoordinatensystem vor und werden im 
angegebenen FIFO[<n>]-Speicher (Umlaufspeicher) abgelegt. Sind fr die Messung zwei 
Messtaster projektiert, werden die Messwerte des zweiten Messtasters getrennt im zustzlich 
dafr projektierten (ber MD einstellbar) FIFO[<n>+1]-Speicher abgelegt.

Der FIFO-Speicher ist ein Umlaufspeicher, in den Messwerte im Umlaufprinzip in $AC_FIFO-
Variablen eingetragen werden.

Hinweis

Der FIFO-Inhalt kann nur einmal aus dem Umlaufspeicher ausgelesen werden. Zur 
Mehrfachverwendung der Messdaten mssen diese in den Anwenderdaten 
zwischengespeichert werden.

berschreitet die Anzahl der Messwerte fr den FIFO-Speicher die im Maschinendatum 
festgelegte Hchstzahl, so wird die Messung automatisch beendet.

Endloses Messen lsst sich durch zyklisches Auslesen von Messwerten realisieren. Das 
Auslesen muss dabei mindestens in der gleichen Hufigkeit wie der Eingang von neuen 
Messwerten erfolgen.

Weitere Informationen: Funktionshandbuch Synchronaktionen

Schutz vor Fehlerprogrammierungen

Folgende Fehlprogrammierungen werden erkannt und mit einem Fehler angezeigt:

 MEASA/MEAWA zusammen mit MEAS/MEAW in einem Satz programmiert

Beispiel:
N01 MEAS=1 MEASA[X]=(1,1) G01 F100 POS[X]=100

 MEASA/MEAWA mit Parameteranzahl <2 oder >5

Beispiel:
N01 MEAWA[X]=(1) G01 F100 POS[X]=100

 MEASA/MEAWA mit Trigger-Ereignis ungleich 1/ -1/ 2/ -2

Beispiel:
N01 MEASA[B]=(1,1,3) B100

606

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.7 Spezielle Wegbefehle

 MEASA/MEAWA mit falschem Modus

Beispiel:
N01 MEAWA[B]=(4,1) B100

 MEASA/MEAWA mit doppelt programmiertem Trigger-Ereignis

Beispiel:
N01 MEASA[B]=(1,1,-1,2,-1) B100

 MEASA/MEAWA und fehlende Geometrieachse

Beispiel:
N01 MEASA[X]=(1,1) MEASA[Y]=(1,1) G01 X50 Y50 Z50 F100 ;GEO-Achse 
X/Y/Z

 Uneinheitlicher Messauftrag bei Geometrieachsen

Beispiel:
N01 MEASA[X]=(1,1) MEASA[Y]=(1,1) MEASA[Z]=(1,1,2) G01 X50 Y50 Z50 
F100

Siehe auch

Synchronaktionen (Seite 930)

3.7.7

Spezielle Funktionen fr den OEM-Anwender (OMA1 ... OMA5, OEMIPO1, 
OEMIPO2, G810 ... G829)

OEM-Adressen       

Die Bedeutung der OEM-Adressen bestimmt der OEM-Anwender. Die Funktionalitt wird ber 
Compile-Zyklen eingebracht. 5 OEM-Adressen sind reserviert (OMA1 ... OMA5). Die 
Adressbezeichner sind einstellbar. OEM-Adressen sind in jedem Satz zulssig.

Reservierte G-Befehlsaufrufe   

Fr den OEM-Anwender sind folgende G-Befehlsaufrufe reserviert:

 OEMIPO1, OEMIPO2 (aus G-Gruppe 1)

 G810 ... G819 (G-Gruppe 31)  

 G820 ... G829 (G-Gruppe 32)  

Die Funktionalitt wird ber Compile-Zyklen eingebracht.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

607

Arbeitsvorbereitung

3.7 Spezielle Wegbefehle

Funktionen und Unterprogramme

Zustzlich knnen OEM-Anwender auch vordefinierte Funktionen und Unterprogramme mit 
Parameterbergabe anlegen.

Hinweis

Werkstcksimulation 

Bis SW 4.4 werden keine, ab SW 4.4 nur ausgesuchte Compile-Zyklen (CC) bei der 
Werkstcksimulation untersttzt.

Sprachbefehle im Teileprogramm von nicht untersttzten Compile-Zyklen 
(OMA1 ... OMA5, OEMIPO1/2, G810 ... G829, eigene Prozeduren und Funktionen) fhren daher 
ohne individuelle Behandlung zur Alarmmeldung und zum Abbruch der Simulation.

Lsung: Die fehlenden CC-spezifischen Sprachelemente im Teileprogramm individuell 
behandeln ($P_SIM-Abfrage). 
Beispiel:   

N1 G01 X200 F500

IF (1==$P_SIM)

N5 X300 ;bei Simulation CC nicht aktiv

ELSE

N5 X300 OMA1=10

ENDIF

3.7.8

Vorschubreduzierung mit Eckenverzgerung (FENDNORM, G62, G621) 

Bei der automatischen Eckenverzgerung wird der Vorschub glockenfrmig kurz vor der 
betreffenden Ecke abgesenkt. Auerdem kann das Ausma des fr die Bearbeitung 
relevanten Werkzeugverhaltens ber Settingdaten parametriert werden:  

 Beginn und Ende der Vorschubreduzierung

 Override, mit dem der Vorschub reduziert wird

 Erkennung der relevanten Ecke

Als relevante Ecken werden diejenigen Ecken bercksichtigt, deren Innenwinkel kleiner als die 
ber Settingdatum parametrierte Ecke ist.

Mit dem Defaultwert FENDNORM wird die Funktion des automatischen Eckenoverride 
ausgeschaltet.  

FENDNORM

G62 G41

G621

Syntax

608

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Bedeutung

Arbeitsvorbereitung

3.7 Spezielle Wegbefehle

FENDNORM: Automatischer Eckenverzgerung aus

G62:

G621:

Eckenverzgerung an Innenecken bei aktiver Werkzeugradiuskorrektur 

Eckenverzgerung an allen Ecken bei aktiver Werkzeugradiuskorrektur 

G62 wirkt nur an den Innenecken mit aktiver Werkzeugradiuskorrektur G41/G42 und aktivem 
Bahnsteuerbetrieb G64/G641.

Die entsprechende Ecke wird mit dem abgesenkten Vorschub angefahren, der sich wie folgt 
berechnet:

F * (Override zur Vorschubreduzierung) * Vorschuboverride

Die maximal mgliche Vorschubabsenkung wird genau dann erreicht, wenn das Werkzeug, 
bezogen auf die Mittelpunktsbahn, den Richtungswechsel an der betreffenden Ecke 
vornehmen soll.

G621 wirkt analog zu G62 an jeder Ecke der durch FGROUP festgelegten Achsen.

3.7.9

Programmierbares Bewegungsendekriterium (FINEA, COARSEA, IPOENDA, 
IPOBRKA, ADISPOSA)

hnlich dem Satzwechselkriterium bei Bahninterpolation (G601, G602 und G603) kann das 
Bewegungsendekriterium bei Einzelachsinterpolation in einem Teileprogramm bzw. in 
Synchronaktionen fr Kommando-/PLC-Achsen programmiert werden. 

Je nachdem, welches Bewegungsendekriterium eingestellt ist, werden Teileprogrammstze 
bzw. Technologiezyklusstze mit Einzelachsbewegungen unterschiedlich schnell beendet. 
Gleiches gilt fr PLC ber FC15/16/18.  

Syntax

Bedeutung

FINEA[<Achse>]
COARSEA[<Achse>]
IPOENDA[<Achse>]
IPOBRKA(<Achse>[,<Zeitpunkt>])
ADISPOSA(<Achse>[,<Modus>,<Fenstergre>])

FINEA:

COARSEA:

IPOENDA:

IPOBRKA:

Bewegungsendekriterium: "Genauhalt fein"

Wirksamkeit:

modal

Bewegungsendekriterium: "Genauhalt grob"

Wirksamkeit:

modal

Bewegungsendekriterium:"Interpolator-Stopp"

Wirksamkeit:

modal

Satzwechselkriterium: Bremsrampe

Wirksamkeit:

modal

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

609

 
 
 
 
Arbeitsvorbereitung

3.7 Spezielle Wegbefehle

ADISPOSA:

Toleranzfenster zum Bewegungsendekriterium

<Achse>:

<Zeitpunkt>:

Wirksamkeit:

modal

Kanalachsname (X, Y, ....)

Zeitpunkt des Satzwechsels, bezogen auf die Bremsrampe in %: 

 100% = Beginn der Bremsrampe

 0% = Ende der Bremsrampe, gleichbedeutend mit IPOENDA

<Modus>:

Typ:

REAL

Bezug des Toleranzfensters

Wertebereich:

Typ:

0

1

2

INT

Toleranzfenster nicht aktiv

Toleranzfenster bezglich Sollposition

Toleranzfenster bezglich Istposition

<Fenstergre>:

Gre des Toleranzfensters

Typ:

REAL

Beispiele

Beispiel 1: Bewegungsendekriterium: "Interpolator-Stopp"

Programmcode

; Fahre Positionierachse X auf 100, Geschwindigkeit 200 
m/min, Beschleunigung 90%,

; Bewegungsendekriterium: Interpolator-Stopp

N110 G01 POS[X]=100 FA[X]=200 ACC[X]=90 IPOENDA[X]

; Synchronaktion:

; IMMER WENN: Eingang 1 gesetzt ist 

; DANN Fahre Positionierachse X auf 50, Geschwindigkeit 
200 m/min, Beschleunigung 140%,

;      Bewegungsendekriterium: Interpolator-Stopp

N120 EVERY $A_IN[1] DO POS[X]=50 FA[X]=200 ACC[X]=140 
IPOENDA[X]

Beispiel 2: Satzwechselkriterium: "Bremsrampe"

Programmcode

Kommentar

; Defaulteinstellung wirksam

N40 POS[X]=100

; Positionierbewegung von X auf Position 100

N20 IPOBRKA(X,100)

; Satzwechselkriterium: "Bremsrampe", 

Satzwechselkriterium: Genauhalt fein

100% = Beginn der Bremsrampe

N30 POS[X]=200

; Satzwechsel erfolgt, sobald Achse X zu bremsen beginnt

N40 POS[X]=250

; Achse X bremst nicht weiter auf Position 200, sondern fhrt 
weiter auf Position 250.

Sobald die Achse zu bremsen beginnt erfolgt der Satzwechsel.

610

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.7 Spezielle Wegbefehle

Programmcode

N50 POS[X]=0

Kommentar

; Achse X bremst und fhrt auf Position 0 zurck. 

Satzwechsel erfolgt bei Position 0 und "Genauhalt fein"

N60 X10 F100

; Achse X fhrt als Bahnachse auf Position 10

Weitere Informationen

Systemvariable fr Bewegungsendekriterium

Das wirksame Bewegungsendekriterium kann ber die Systemvariable $AA_MOTEND 
gelesen werden.

Satzwechselkriterium: "Bremsrampe" (IPOBRKA)

Ist bei der Aktivierung des Satzwechselkriteriums "Bremsrampe" fr den optionalen 
Satzwechselzeitpunkt ein Wert programmierte, wird dieser fr die nchste 
Positionierbewegung wirksam und hauptlaufsynchron in das Settingdatum geschrieben. Ist fr 
den Satzwechselzeitpunkt kein Wert angegeben, wird der aktuelle Wert des Settingdatums 
wirksam.

SD43600 $SA_IPOBRAKE_BLOCK_EXCHANGE

Mit der nchsten Programmierung eines axialen Bewegungsendekriteriums (FINEA, 
COARSEA , IPOENDA) wird IPOBRKA fr die entsprechende Achse deaktiviert.

Zustzliches Satzwechselkriterium: "Toleranzfenster" (ADISPOSA)

Mit ADISPOSA kann als zustzliches Satzwechselkriterium ein Toleranzfenster um den 
Satzendpunkt (wahlweise Ist- oder Sollposition) definiert werden. Fr den Satzwechsel 
mssen dann beide Bedingungen erfllt sein: 

 Satzwechselkriterium: "Bremsrampe"

 Satzwechselkriterium: "Toleranzfenster"

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

611

Arbeitsvorbereitung

3.8 Koordinatentransformationen (Frames)

3.8

Koordinatentransformationen (Frames)

3.8.1

Koordinatentransformation ber Framevariable

Neben den Frame-Anweisungen (Seite 302) wie z. B. ROT, AROT, SCALE, etc. kann das 
Werkstck-Koordinatensystem (WKS) auch ber die Framevariablen $P_...FR 
(Datenhaltungsframes) und $P_...FRAME (Aktive Frames) transformiert werden. 

Das folgende Bild gibt einen berblick ber die Strukturierung der Framevariablen:

 Datenhaltungsframes

 Aktive Frames

 Aktiver Gesamtframe: Verkettung aller aktiven Frames

 NCU-globale Frames

 Kanalspezifische Frames

612

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

3.8 Koordinatentransformationen (Frames)

Arbeitsvorbereitung

Bild 3-1

bersicht der Framevariablen

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

613

(cid:36)(cid:85)(cid:70)(cid:75)(cid:76)(cid:89)(cid:76)(cid:72)(cid:85)(cid:88)(cid:81)(cid:74)(cid:55)(cid:72)(cid:76)(cid:79)(cid:72)(cid:83)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)(cid:37)(cid:72)(cid:71)(cid:76)(cid:72)(cid:81)(cid:82)(cid:69)(cid:72)(cid:85)(cid:73)(cid:79)(cid:166)(cid:70)(cid:75)(cid:72)(cid:54)(cid:70)(cid:75)(cid:79)(cid:72)(cid:76)(cid:73)(cid:73)(cid:85)(cid:68)(cid:80)(cid:72)(cid:86)(cid:54)(cid:92)(cid:86)(cid:87)(cid:72)(cid:80)(cid:73)(cid:85)(cid:68)(cid:80)(cid:72)(cid:86)(cid:37)(cid:68)(cid:86)(cid:76)(cid:86)(cid:73)(cid:85)(cid:68)(cid:80)(cid:72)(cid:86)(cid:40)(cid:76)(cid:81)(cid:86)(cid:87)(cid:72)(cid:79)(cid:79)(cid:69)(cid:68)(cid:85)(cid:72)(cid:3)(cid:41)(cid:85)(cid:68)(cid:80)(cid:72)(cid:86)(cid:36)(cid:78)(cid:87)(cid:76)(cid:89)(cid:76)(cid:72)(cid:85)(cid:88)(cid:81)(cid:74)(cid:3)(cid:89)(cid:82)(cid:81)(cid:3)(cid:39)(cid:68)(cid:87)(cid:72)(cid:81)(cid:75)(cid:68)(cid:79)(cid:87)(cid:88)(cid:81)(cid:74)(cid:86)(cid:73)(cid:85)(cid:68)(cid:80)(cid:72)(cid:86)(cid:3)(cid:71)(cid:88)(cid:85)(cid:70)(cid:75)(cid:29)(cid:55)(cid:72)(cid:76)(cid:79)(cid:72)(cid:83)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)(cid:46)(cid:68)(cid:81)(cid:68)(cid:79)(cid:3)(cid:20)(cid:36)(cid:78)(cid:87)(cid:76)(cid:89)(cid:72)(cid:3)(cid:41)(cid:85)(cid:68)(cid:80)(cid:72)(cid:86)(cid:11)(cid:36)(cid:78)(cid:87)(cid:76)(cid:89)(cid:72)(cid:85)(cid:3)(cid:42)(cid:72)(cid:86)(cid:68)(cid:80)(cid:87)(cid:73)(cid:85)(cid:68)(cid:80)(cid:72)(cid:3)(cid:71)(cid:88)(cid:85)(cid:70)(cid:75)(cid:3)(cid:57)(cid:72)(cid:85)(cid:78)(cid:72)(cid:87)(cid:87)(cid:88)(cid:81)(cid:74)(cid:3)(cid:68)(cid:79)(cid:79)(cid:72)(cid:85)(cid:3)(cid:68)(cid:78)(cid:87)(cid:76)(cid:89)(cid:72)(cid:81)(cid:3)(cid:41)(cid:85)(cid:68)(cid:80)(cid:72)(cid:86)(cid:3)(cid:76)(cid:81)(cid:3)(cid:71)(cid:72)(cid:85)(cid:3)(cid:68)(cid:81)(cid:74)(cid:72)(cid:74)(cid:72)(cid:69)(cid:72)(cid:81)(cid:72)(cid:81)(cid:3)(cid:53)(cid:72)(cid:76)(cid:75)(cid:72)(cid:81)(cid:73)(cid:82)(cid:79)(cid:74)(cid:72)(cid:12)(cid:3)(cid:42)(cid:24)(cid:19)(cid:19)(cid:15)(cid:3)(cid:42)(cid:24)(cid:23)(cid:3)(cid:17)(cid:17)(cid:3)(cid:42)(cid:24)(cid:28)(cid:28)(cid:15)(cid:3)(cid:51)(cid:44)(cid:66)(cid:54)(cid:40)(cid:55)(cid:56)(cid:39)(cid:55)(cid:15)(cid:3)(cid:42)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:19)(cid:3)(cid:17)(cid:17)(cid:17)(cid:3)(cid:42)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:20)(cid:19)(cid:19)(cid:15)(cid:3)(cid:53)(cid:72)(cid:86)(cid:72)(cid:87)(cid:15)(cid:3)(cid:55)(cid:85)(cid:68)(cid:81)(cid:86)(cid:73)(cid:82)(cid:85)(cid:80)(cid:68)(cid:87)(cid:76)(cid:82)(cid:81)(cid:86)(cid:90)(cid:72)(cid:70)(cid:75)(cid:86)(cid:72)(cid:79)(cid:15)(cid:3)(cid:42)(cid:40)(cid:50)(cid:36)(cid:59)(cid:7)(cid:51)(cid:66)(cid:38)(cid:60)(cid:38)(cid:41)(cid:53)(cid:7)(cid:51)(cid:66)(cid:55)(cid:53)(cid:36)(cid:41)(cid:53)(cid:7)(cid:51)(cid:66)(cid:58)(cid:51)(cid:41)(cid:53)(cid:7)(cid:51)(cid:66)(cid:55)(cid:50)(cid:50)(cid:47)(cid:41)(cid:53)(cid:7)(cid:51)(cid:66)(cid:40)(cid:59)(cid:55)(cid:41)(cid:53)(cid:7)(cid:51)(cid:66)(cid:54)(cid:40)(cid:55)(cid:41)(cid:53)(cid:7)(cid:51)(cid:66)(cid:51)(cid:36)(cid:53)(cid:55)(cid:41)(cid:53)(cid:49)(cid:38)(cid:56)(cid:3)(cid:82)(cid:71)(cid:72)(cid:85)(cid:3)(cid:38)(cid:43)(cid:36)(cid:49)(cid:49)(cid:38)(cid:56)(cid:3)(cid:82)(cid:71)(cid:72)(cid:85)(cid:3)(cid:38)(cid:43)(cid:36)(cid:49)(cid:38)(cid:43)(cid:36)(cid:49)(cid:7)(cid:51)(cid:66)(cid:56)(cid:44)(cid:41)(cid:53)(cid:62)(cid:19)(cid:64)(cid:7)(cid:51)(cid:66)(cid:56)(cid:44)(cid:41)(cid:53)(cid:62)(cid:81)(cid:64)(cid:7)(cid:51)(cid:66)(cid:38)(cid:43)(cid:37)(cid:41)(cid:53)(cid:62)(cid:81)(cid:64)(cid:49)(cid:38)(cid:56)(cid:7)(cid:51)(cid:66)(cid:38)(cid:43)(cid:37)(cid:41)(cid:53)(cid:62)(cid:19)(cid:64)(cid:7)(cid:51)(cid:66)(cid:49)(cid:38)(cid:37)(cid:41)(cid:53)(cid:62)(cid:19)(cid:64)(cid:7)(cid:51)(cid:66)(cid:49)(cid:38)(cid:37)(cid:41)(cid:53)(cid:62)(cid:81)(cid:64)(cid:7)(cid:51)(cid:66)(cid:42)(cid:41)(cid:53)(cid:62)(cid:81)(cid:64)(cid:7)(cid:51)(cid:66)(cid:42)(cid:41)(cid:53)(cid:62)(cid:19)(cid:64)(cid:32)(cid:7)(cid:51)(cid:66)(cid:36)(cid:38)(cid:55)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:7)(cid:51)(cid:66)(cid:53)(cid:40)(cid:47)(cid:41)(cid:53)(cid:7)(cid:51)(cid:66)(cid:44)(cid:54)(cid:50)(cid:23)(cid:41)(cid:53)(cid:7)(cid:51)(cid:66)(cid:44)(cid:54)(cid:50)(cid:22)(cid:41)(cid:53)(cid:7)(cid:51)(cid:66)(cid:44)(cid:54)(cid:50)(cid:21)(cid:41)(cid:53)(cid:7)(cid:51)(cid:66)(cid:44)(cid:54)(cid:50)(cid:20)(cid:41)(cid:53)(cid:7)(cid:51)(cid:66)(cid:51)(cid:36)(cid:53)(cid:55)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:3)(cid:29)(cid:3)(cid:7)(cid:51)(cid:66)(cid:54)(cid:40)(cid:55)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:29)(cid:3)(cid:7)(cid:51)(cid:66)(cid:40)(cid:59)(cid:55)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:3)(cid:29)(cid:3)(cid:7)(cid:51)(cid:66)(cid:44)(cid:54)(cid:50)(cid:20)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:3)(cid:3)(cid:29)(cid:3)(cid:7)(cid:51)(cid:66)(cid:44)(cid:54)(cid:50)(cid:21)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:3)(cid:29)(cid:3)(cid:7)(cid:51)(cid:66)(cid:44)(cid:54)(cid:50)(cid:22)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:3)(cid:29)(cid:3)(cid:7)(cid:51)(cid:66)(cid:36)(cid:38)(cid:55)(cid:37)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:3)(cid:3)(cid:29)(cid:3)(cid:7)(cid:51)(cid:66)(cid:44)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:3)(cid:29)(cid:3)(cid:7)(cid:51)(cid:66)(cid:42)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:3)(cid:29)(cid:3)(cid:7)(cid:51)(cid:66)(cid:55)(cid:50)(cid:50)(cid:47)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:3)(cid:29)(cid:3)(cid:7)(cid:51)(cid:66)(cid:58)(cid:51)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:3)(cid:29)(cid:3)(cid:7)(cid:51)(cid:66)(cid:55)(cid:53)(cid:36)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:3)(cid:29)(cid:3)(cid:7)(cid:51)(cid:66)(cid:51)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:3)(cid:29)(cid:3)(cid:7)(cid:51)(cid:66)(cid:44)(cid:54)(cid:50)(cid:23)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:3)(cid:29)(cid:3)(cid:7)(cid:51)(cid:66)(cid:38)(cid:60)(cid:38)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:38)(cid:43)(cid:36)(cid:49)Arbeitsvorbereitung

3.8 Koordinatentransformationen (Frames)

3.8.1.1

Vordefinierte Framevariable ($P_CHBFRAME, $P_IFRAME, $P_PFRAME, 
$P_ACTFRAME)

Aktiv: kanalspezifische Basisframes $P_CHBFRAME[ <n> ] ($P_BFRAME)

Hinweis

Die der aktuelle Basisframe $P_BFRAME und der Datenhaltungs-Basisframe $P_UBFR werden 
aus Kompatiblilttsgrnden beibehalten.
 $P_BFRAME  $P_CHBFRAME[0]
 $P_UBFR  $P_CHBFR[0]. 

Die Framevariablen $P_CHBFRAME[<n>] definieren den Bezug zwischen 
Basiskoordinatensystem (BKS) und Basis-Nullpunktsystem (BNS).

Soll der aktuelle kanalspezifische Basisframe $P_CHBFRAME[<n>] sofort im NC-Programm 
wirksam werden, stehen folgende Mglichkeiten zu Verfgung

 Befehle:

 G500 (Ausschalten aller Einstellbaren Frames, die Basisframes bleiben aktiv)

 G54 ... G599 (Einstellbare Nullpunktverschiebungen)

 Zuweisung eines kanalspezifischen Basisframes der Datenhaltung an einen aktuellen 

kanalspezifischen Basisiframe:
$P_CHBFRAME[<n>] = $P_CHBFR[<m>]

Aktiv: kanalspezifischer Einstellbarer Frame $P_IFRAME

Die Framevariabln $P_IFRAME, definiert den Bezug zwischen Basis-Nullpunktsystem (BNS) 
und Einstellbarem Nullpunktsystem (ENS). 

 $P_IFRAME entspricht $P_UIFR[$P_IFRNUM] 

 $P_IFRAME enthlt nach Programmierung von z. B. G54 die durch G54 definierte 

Translation, Rotation, Skalierung und Spiegelung.

614

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:61)(cid:59)(cid:61)(cid:59)(cid:7)(cid:51)(cid:66)(cid:36)(cid:38)(cid:55)(cid:37)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:37)(cid:46)(cid:54)(cid:37)(cid:46)(cid:54)(cid:37)(cid:49)(cid:54)(cid:37)(cid:49)(cid:54)3.8 Koordinatentransformationen (Frames)

Arbeitsvorbereitung

Aktiv: kanalspezifischer Programmierbarer Frame $P_PFRAME

Die Framevariable $P_PFRAME, definiert den Bezug zwischen dem Einstellbaren 
Nullpunktsystem (ENS) und dem Werkstckkoordinatensystem (WKS). 

$P_PFRAME enthlt den resultierenden Frame, der sich

 aus der Programmierung von TRANS/ATRANS, ROT/AROT, SCALE/ASCALE, MIRROR/

AMIRROR bzw.

 aus der Zuweisung von CTRANS, CROT, CMIRROR, CSCALE an den programmierbaren 

FRAME ergibt

Aktiv: Gesamtframe $P_ACTFRAME

Der im Kanal wirksame Gesamtframe, ergibt sich aus der Verkettung aller im Kanal wirksamen 
Frames. 

$P_ACTFRAME = 

$P_PARTFRAME : $P_SETFRAME  : $P_EXTFRAME :

$P_ISO1FRAME : $P_ISO2FRAME : $P_ISO3FRAME :

$P_ACTBFRAME : $P_IFRAME    : $P_GFRAME :

$P_TOOLFRAME : $P_WPFRAME   : $P_TRAFRAME :

$P_PFRAME    : $P_ISO4FRAME : $P_CYCFRAME

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

615

(cid:61)(cid:60)(cid:59)(cid:61)(cid:59)(cid:60)(cid:37)(cid:49)(cid:54)(cid:37)(cid:49)(cid:54)(cid:37)(cid:49)(cid:54)(cid:40)(cid:49)(cid:54)(cid:40)(cid:49)(cid:54)(cid:40)(cid:49)(cid:54)(cid:7)(cid:51)(cid:66)(cid:44)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:61)(cid:37)(cid:49)(cid:54)(cid:60)(cid:59)(cid:37)(cid:49)(cid:54)(cid:61)(cid:59)(cid:61)(cid:40)(cid:49)(cid:54)(cid:40)(cid:49)(cid:54)(cid:59)(cid:40)(cid:49)(cid:54)(cid:37)(cid:49)(cid:54)(cid:60)(cid:60)(cid:58)(cid:46)(cid:54)(cid:58)(cid:46)(cid:54)(cid:58)(cid:46)(cid:54)(cid:7)(cid:51)(cid:66)(cid:44)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:7)(cid:51)(cid:66)(cid:51)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)Arbeitsvorbereitung

3.8 Koordinatentransformationen (Frames)

$P_ACTFRAME beschreibt den Nujllpunkt des aktuellen Werkstckkoordinatensystems.

Bild 3-2

Framevariable $P_ACTFRAME

Wird einer der folgenden Frames $P_BFRAME / $P_CHBFRAME[<n>], $P_IFRAME oder 
$P_PFRAME verndert, wird der aktuelle Gesamtframe $P_ACTFRAME neu berechnet. 

Basisframe und Einstellbarer Frame wirken nach Reset, wenn das MD 20110 
RESET_MODE_MASK folgendermaen eingestellt ist:

Bit0=1, Bit14=1 --> $P_UBFR (Basisframe) wirkt 

Bit0=1, Bit5=1 --> $P_UIFR[$P_UIFRNUM] (einst. Frame) wirkt

616

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:61)(cid:37)(cid:49)(cid:54)(cid:60)(cid:59)(cid:37)(cid:49)(cid:54)(cid:61)(cid:61)(cid:60)(cid:59)(cid:60)(cid:59)(cid:40)(cid:49)(cid:54)(cid:40)(cid:49)(cid:54)(cid:40)(cid:49)(cid:54)(cid:37)(cid:49)(cid:54)(cid:59)(cid:61)(cid:58)(cid:46)(cid:54)(cid:58)(cid:46)(cid:54)(cid:58)(cid:46)(cid:54)(cid:37)(cid:46)(cid:54)(cid:37)(cid:46)(cid:54)(cid:7)(cid:51)(cid:66)(cid:36)(cid:38)(cid:55)(cid:37)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:7)(cid:51)(cid:66)(cid:44)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:7)(cid:51)(cid:66)(cid:51)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:7)(cid:51)(cid:66)(cid:36)(cid:38)(cid:55)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:40)(cid:76)(cid:81)(cid:74)(cid:68)(cid:69)(cid:72)(cid:3)(cid:190)(cid:69)(cid:72)(cid:85)(cid:3)(cid:51)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)(cid:3)(cid:93)(cid:17)(cid:37)(cid:17)(cid:7)(cid:51)(cid:66)(cid:51)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:32)(cid:38)(cid:55)(cid:53)(cid:36)(cid:49)(cid:54)(cid:11)(cid:59)(cid:15)(cid:20)(cid:19)(cid:12)(cid:69)(cid:93)(cid:90)(cid:17)(cid:3)(cid:55)(cid:53)(cid:36)(cid:49)(cid:54)(cid:3)(cid:59)(cid:20)(cid:19)(cid:40)(cid:76)(cid:81)(cid:74)(cid:68)(cid:69)(cid:72)(cid:3)(cid:190)(cid:69)(cid:72)(cid:85)(cid:3)(cid:51)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)(cid:3)(cid:93)(cid:17)(cid:37)(cid:17)(cid:7)(cid:51)(cid:66)(cid:44)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:32)(cid:38)(cid:55)(cid:53)(cid:36)(cid:49)(cid:54)(cid:11)(cid:59)(cid:15)(cid:20)(cid:19)(cid:12)(cid:40)(cid:76)(cid:81)(cid:74)(cid:68)(cid:69)(cid:72)(cid:3)(cid:190)(cid:69)(cid:72)(cid:85)(cid:3)(cid:51)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)(cid:3)(cid:93)(cid:17)(cid:37)(cid:17)(cid:7)(cid:51)(cid:66)(cid:37)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:32)(cid:38)(cid:55)(cid:53)(cid:36)(cid:49)(cid:54)(cid:11)(cid:59)(cid:15)(cid:20)(cid:19)(cid:12)(cid:40)(cid:76)(cid:81)(cid:74)(cid:68)(cid:69)(cid:72)(cid:3)(cid:190)(cid:69)(cid:72)(cid:85)(cid:3)(cid:51)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)(cid:3)(cid:93)(cid:17)(cid:37)(cid:17)(cid:7)(cid:51)(cid:66)(cid:56)(cid:44)(cid:41)(cid:53)(cid:62)(cid:81)(cid:64)(cid:32)(cid:38)(cid:55)(cid:53)(cid:36)(cid:49)(cid:54)(cid:11)(cid:59)(cid:15)(cid:20)(cid:19)(cid:12)(cid:40)(cid:76)(cid:81)(cid:74)(cid:68)(cid:69)(cid:72)(cid:190)(cid:69)(cid:72)(cid:85)(cid:3)(cid:43)(cid:48)(cid:44)(cid:18)(cid:48)(cid:48)(cid:38)(cid:3)(cid:40)(cid:76)(cid:81)(cid:74)(cid:68)(cid:69)(cid:72)(cid:3)(cid:190)(cid:69)(cid:72)(cid:85)(cid:3)(cid:51)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)(cid:15)(cid:3)(cid:93)(cid:17)(cid:37)(cid:17)(cid:7)(cid:51)(cid:66)(cid:56)(cid:37)(cid:41)(cid:53)(cid:32)(cid:38)(cid:55)(cid:53)(cid:36)(cid:49)(cid:54)(cid:11)(cid:59)(cid:15)(cid:20)(cid:19)(cid:12)(cid:40)(cid:76)(cid:81)(cid:74)(cid:68)(cid:69)(cid:72)(cid:190)(cid:69)(cid:72)(cid:85)(cid:3)(cid:43)(cid:48)(cid:44)(cid:18)(cid:48)(cid:48)(cid:38)(cid:3)(cid:68)(cid:78)(cid:87)(cid:76)(cid:89)(cid:76)(cid:72)(cid:85)(cid:87)(cid:3)(cid:190)(cid:69)(cid:72)(cid:85)(cid:42)(cid:24)(cid:19)(cid:19)(cid:15)(cid:3)(cid:42)(cid:24)(cid:23)(cid:17)(cid:17)(cid:17)(cid:42)(cid:24)(cid:28)(cid:28)(cid:32)(cid:3)(cid:7)(cid:51)(cid:66)(cid:51)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:3)(cid:7)(cid:51)(cid:66)(cid:56)(cid:44)(cid:41)(cid:53)(cid:62)(cid:81)(cid:64)(cid:3)(cid:7)(cid:51)(cid:66)(cid:56)(cid:37)(cid:41)(cid:53)(cid:3)(cid:7)(cid:51)(cid:66)(cid:36)(cid:38)(cid:55)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:3)(cid:7)(cid:51)(cid:66)(cid:37)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:3)(cid:3)(cid:29)(cid:3)(cid:7)(cid:51)(cid:66)(cid:44)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:3)(cid:3)(cid:29)(cid:3)3.8 Koordinatentransformationen (Frames)

Arbeitsvorbereitung

Datenhaltung: Kanalspezifische Basisframes $P_CHBFR[<n>]

ber die Framevariablen $P_CHBFR[<n>] werden die Basisframes in der Datenhaltung 
gelesen / geschrieben. Der Datenhaltungsframe wird durch das Schreiben nicht sofort im 
Kanal aktiv. Das Aktivieren des geschriebenen Frames erfolgt bei:

 Kanal-Reset und MD20110 $MC_RESET_MODE_MASK,Bit0 == 1 und Bit14 == 1

 Befehl G500, G54 ... G57, G505 ... G599 (Ein/Ausschalten von Basisframes mit 

anschlieender Neuberechnung des Aktuellen Gesamtframes)

Datenhaltung: Kanalspezifische Einstellbare Frames $P_UIFR[<n>]

ber die Framevariablen $P_UIFR[<n>] werden die Einstellbaren Frames in der Datenhaltung 
gelesen / geschrieben. Der Frame wird durch das Schreiben nicht sofort im Kanal aktiv. Das 
Einrechnen des geschriebenen Frames im Kanal erfolgt bei:

 Befehl G500 (Ausschalten aller Einstellbaren Frames bzw. Nullpunktverschiebungen)

 Befehl G54 ... G57, G505 ... G599 (Einschalten eines Einstellbaren Frames bzw. 

Nullpunktverschiebung)

Aktiver Einstellbarer Frame

Datenhaltungsframe

(entspricht Befehl)

$P_IFRAME =

$P_UIFR[0]

$P_UIFR[1]

$P_UIFR[2]

$P_UIFR[3]

$P_UIFR[4]

$P_UIFR[5]

$P_UIFR[6]

...

$P_UIFR[99]

G500

G54

G55

G56

G57

G505

G506

...

G599

3.8.2

Wertzuweisungen an Frames

3.8.2.1

Direkte Werte zuweisen (Achswert, Winkel, Mastab)

Im NC-Programm knnen Sie direkt Frames oder Framevariablen mit Werten belegen. 

Syntax

Syntax

$P_PFRAME = CTRANS(X, <Verschiebungswert>, Y, <Verschiebungswert>, 
Z, <Verschiebungswert>, ...)

$P_PFRAME = ROT(X, <Winkel>, Y, <Winkel>, Z, <Winkel>, ...)

$P_UIFR[..] = CROT(X, <Winkel>, Y, <Winkel>, Z, <Winkel>,  ...

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

617

Arbeitsvorbereitung

3.8 Koordinatentransformationen (Frames)

$P_PFRAME = CSCALE(X, <Mastab>, Y, <Mastab>, Z, <Mastab>, ...)

$P_PFRAME = CMIRROR(X, Y, Z)

Die Syntax fr $P_CHBFRAME[<n>] ist identisch zu $P_PFRAME.

Bedeutung

CTRANS:

CROT:

CSCALE:

CMIRROR:

X, Y, Z:

Verschiebung in den angegebenen Achsen

Drehung um die angegebenen Achsen

Mastabsvernderung in den angegebenen Achsen

Richtungsumkehr der angegebenen Achse

Verschiebewert in Richtung der angegebenen Geometrieachse

<Verschiebungswer
t>:

Verschiebungswert

<Winkel>:

<Mastab>:

Winkel um den gedreht wird

Mastabsangabe

Beispiele

Wertzuweisungen an Framekomponenten des aktuellen Programmierbaren Frames

Wertzuweisung an die Framekomponenten Translation, Drehung und Spiegelung des 
aktuellen Programmierbaren Frames:

$P_PFRAME = CTRANS(X,10,Y,20,Z,5) : CROT(Z,45) : CMIRROR(Y)

Rotationskmponenten eines Frames schreiben

Zuweisen von Werten an alle drei Achsen der Drehkomponente des Einstellbaren 
Datenhaltungsframes $P_UIFR mit CROT :

$P_UIFR[5] = CROT(X, 0, Y, 0, Z, 0)

618

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

ZZXXYXYYY11CTRANS2CROT33CMIRROR23.8 Koordinatentransformationen (Frames)

Arbeitsvorbereitung

Alternativ dazu die direkte Zuweisung der Einzelwerte direkt an die jewseilige Achse der 
Drehkomponente des Datenhaltungsframes:

$P_UIFR[5, Y, RT]=0

$P_UIFR[5, X, RT]=0

$P_UIFR[5, Z, RT]=0

Beschreibung

Mehrere Operationen auf einen Frame knnen durch den Kettungsoperator : miteinander 
verbunden werden. Die Operationen werden dann nacheinander von links nach rechts 
ausgefhrt.

Beispiel

Verkette Operationen auf $P_PFRAME mit Verschiebung, Rotation und Skalierung:

$P_PFRAME = CTRANS(...) : CROT(...) : CSCALE... 

3.8.2.2

Framekomponenten lesen und verndern (TR, FI, RT, SC, MI)

Sie haben die Mglichkeit, auf einzelne Daten eines Frames, z. B. auf einen bestimmten 
Verschiebewert oder Drehwinkel zuzugreifen. Diese Werte knnen Sie verndern oder einer 
anderen Variablen zuweisen.  

Syntax

R10=$P_UIFR[$P_UIFNUM,X,RT]

R12=$P_UIFR[25,Z,TR]

Der Drehwinkel RT um die X-Achse aus der aktuell 
gltigen einstellbaren Nullpunktverschiebung 
$P_UIFRNUM soll der Variablen R10 zugewiesen 
werden.
Der Verschiebewert TR in Z aus dem Datensatz 
des eingestellten Frames Nr. 25 soll der Variablen 
R12 zugewiesen werden.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

619

(cid:59)(cid:59)(cid:10)(cid:59)(cid:10)(cid:10)(cid:60)(cid:10)(cid:10)(cid:60)(cid:10)(cid:60)(cid:38)(cid:55)(cid:53)(cid:36)(cid:49)(cid:54)(cid:38)(cid:54)(cid:38)(cid:36)(cid:47)(cid:40)(cid:38)(cid:53)(cid:50)(cid:55)Arbeitsvorbereitung

3.8 Koordinatentransformationen (Frames)

Bedeutung

R15=$P_PFRAME[Y,TR]

$P_PFRAME[X,TR]=25

Der Verschiebewert TR in Y des aktuellen program
mierbaren Frames soll der Variablen R15 zugewie
sen werden.
Der Verschiebewert TR in X des aktuellen program
mierbaren Frames soll verndert werden. Ab sofort 
gilt X25.

$P_UIFRNUM:

P_UIFR[n,,] :

Mit dieser Variablen wird automatisch der Bezug zur 
aktuell gltigen einstellbaren Nullpunktverschiebung 
hergestellt.

Durch Angabe der Framenummer n greifen Sie auf den 
einstellbaren Frame Nr. n zu.

Angabe der Komponente, die gelesen oder verndert 
werden soll:

TR:

FI:

RT:

SC:

MI:

TR Translation

FI Translation Fine

RT Rotation

SC Scale Mastabsvernderung

MI Spiegelung

X, Y, Z:

Zustzlich (siehe Beispiele) wird die entsprechende 
Achse X, Y, Z angegeben.

Wertebereich fr Drehung RT

Drehung um 1. Geometrieachse:
Drehung um 2. Geometrieachse:
Drehung um 3. Geometrieachse:

-180 bis +180
-90 bis +90
-180 bis +180

Beschreibung

Frame aufrufen 

Durch Angabe der Systemvariablen $P_UIFRNUM knnen Sie direkt auf die mit $P_UIFR bzw. 
G54, G55,  aktuell eingestellte Nullpunktverschiebung zugreifen 
($P_UIFRNUM enthlt die Nummer des aktuell eingestellten Frames).

Alle anderen gespeicherten einstellbaren Frames $P_UIFR rufen Sie durch Angabe der 
entsprechenden Nummer $P_UIFR[n] auf. 

Fr vordefinierte Framevariable und eigendefinierte Frames geben Sie den Namen an, z. B. 
$P_IFRAME.

Daten aufrufen

In den eckigen Klammern stehen Achsname und Framekomponente des Wertes, auf den Sie 
zugreifen oder den Sie verndern wollen, z. B. [X, RT] oder [Z, MI].

620

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
3.8 Koordinatentransformationen (Frames)

Arbeitsvorbereitung

3.8.2.3

Rechnen mit Frames

Im NC-Programm kann ein Frame einem anderen Frame zugewiesen oder Frames 
miteinander verkettet werden.

Frameverkettungen eignen sich z. B. fr die Beschreibung mehrerer Werkstcke, die auf einer 
Palette angeordnet sind und in einem Fertigungsablauf bearbeitet werden sollen.

Fr die Beschreibung von Palettenaufgaben knnten die Framekomponenten z. B. nur 
bestimmte Teilwerte enthalten, durch deren Verkettung verschiedene Werkstcknullpunkte 
generiert werden.

Beispiele

Zuweisungen

Programmconde

Kommentar

DEF FRAME EINSTELLUNG_1

; Definition einer lokalen Framevariablen

EINSTELLUNG_1 = CTRANS(X,10)

$P_PFRAME = EINSTELLUNG_1

; Zuweisung des Ergebnisses einer Funktion an die 
Framevariable

; Zuweisung der Framevariablen an den Aktuellen 
Frame

DEF FRAME EINSTELLUNG_4

; Definition einer lokalen Framevariablen

EINSTELLUNG_4 = $P_PFRAME

...

$P_PFRAME = EINSTELLUNG_4

; Zwischenspeicherung des Aktuellen Frames in der 
Framevariablen

; Rcklesen des Aktuellen Frames aus der Frameva-
riablen

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

621

G54ZXY 
Arbeitsvorbereitung

3.8 Koordinatentransformationen (Frames)

Verkettungen

Die Frames werden in der programmierten Reihenfolge durch den Operator : miteinander 
verkettet. Die Framekomponenten wie z. B. Verschiebungen, Drehungen usw. werden 
nacheinander additiv ausgefhrt. 

Programmconde

Kommentar

$P_IFRAME = $P_UIFR[15] : 
$P_UIFR[16]

; Zuweisung des Ergebnis-Frames aus der Verkettung 
der 

; beiden Einstellbaren Datenhaltungsframes an den 
aktiven

; Einstellbaren Gesamt-Frame.

; Anwendungsbeispiel:

; $P_UIFR[15]: Verschiebung

; $P_UIFR[16]: Drehung

$P_UIFR[3] = $P_UIFR[4] : 
$P_UIFR[5]

; Zuweisung des Ergebnis-Frames aus der Verkettung 
der 

; beiden Einstellbaren Datenhaltungsframes an ei-
nen 

; anderen Einstellbaren Datenhaltungsframe

3.8.2.4

Definition von Framevariablen (DEF FRAME)

Neben den vordefinierten Framevariablen knnen auch eigene Framevariablen definiert 
werden. Die selbstdefinierten Framevariablen sind Anwendervariablen vom Typ FRAME. Der 
Name des Frames kann im Rahmen der Regeln fr Anwendervariablen frei vergeben werden.

Mit den Funktionen CTRANS, CROT, CSCALE, CMIRROR knnen die selbstdefinierten 
Framevariablen Werten zugewiesen werden.

Syntax

Bedeutung

Beispiel

DEF FRAME <Name>

DEF FRAME:

<Name>:

Anwendervariablen vom Typ FRAME definieren.

Name der Framevariablen

Definition einer Framevariablen "PALETTE" und Zuweisung von Verschiebungs- und 
Drehungswerten:

Programmconde

Kommentar

DEF FRAME PALETTE

; Framevariable PALETTE definieren

PALETTE = CTRANS(...) : CROT(...) ; Zuweisung des Ergebnisframes der Verkettung von 

; Verschiebung und Drehung an die Framevariable 
PALETTE

622

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
3.8.3

Grob- und Feinverschiebung (CTRANS, CFINE)

3.8 Koordinatentransformationen (Frames)

Arbeitsvorbereitung

Feinverschiebung

Eine Feinverschiebung CFINE(...) kann auf folgende Frames angewandt werden:

 Einstellbare Frames: $P_UIFR bzw. $P_IFRAME

 Basisframes: $P_NCBFR[<n>], $P_CHBFR[<n>] bzw. $P_CHBFRAMES[<n>] oder 

$P_ACTBFRAME

 Programmierbares Frame: $P_PFRAME

Die Feinverschiebung eines Frames wird mit dem Befehl CFINE(...)programmiert. 

Grobverschiebung

Die Grobverschiebung CTRANS(...) kann auf alle Frames angewandt werden.

Gesamtverschiebung

Die Gesamtverschiebung ergibt sich aus der Addition von Grob- und Feinverschiebung.

Maschinendaten

Freigabe der Feinverschiebung

Die Feinverschiebung wird freigegeben mit dem Maschinendatum:

MD18600 $MN_MM_FRAME_FINE_TRANS = 1

Syntax

Feinverschiebung

 Gesamtframe

 <Frame> = CFINE(<K_1>,<Wert>)

 <Frame> = CFINE(<K_1>,<Wert>, <K_2>, <Wert>)

 <Frame> = CFINE(<K_1>,<Wert>, <K_2>, <Wert>, <K_3>, <Wert>)

 Frame-Komponente

 <Frame>[<n>, <K_1>, FI] = <Wert>

Grobverschiebung

 Gesamtframe

 <Frame> = CTRANS(<K_1>,<Wert>)

 <Frame> = CTRANS(<K_1>,<Wert>, <K_2,<Wert>)

 <Frame> = CTRANS(<K_1>,<Wert>, <K_2,<Wert>, <K_3,<Wert>)

 Frame-Komponente

 <Frame>[<n>,<K_1>,TR] = <Wert>

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

623

Arbeitsvorbereitung

3.8 Koordinatentransformationen (Frames)

Speziell fr den Programmierbaren Frame $P_PFRAME:

 TRANS <K_1> <Wert>

 TRANS <K_1> <Wert> <K_2> <Wert>

 TRANS <K_1> <Wert> <K_2> <Wert> <K_3> <Wert>

Bedeutung

<Frame>:

Frame z.B. Einstellbarer Frame der Datenhaltung $P_UIFR[<n>]

CFINE:

CTRANS:

TRANS:

<K_n>:

<Wert>:

Feinverschiebung, addive Verschiebung.

Grobverschiebung, absolute Verschiebung

Nur Programmierbarer Frame: Grobverschiebung, absolute Verschiebung

Koordinatenachsen X, Y, Z

Verschiebungswert

3.8.4

Externe Nullpunktverschiebung ($AA_ETRANS)

Die Externen Nullpunktverschiebung ist eine lineare Verschiebung zwischen 
Basiskoordinatensystem (BKS) und Basisnullpunktsystem (BNS). 

Die Externen Nullpunktverschiebung mittels $AA_ETRANS wirkt, abhngig von der 
Maschinendaten-Parametrierung, auf zwei Arten:

1. Die Systemvariablen $AA_ETRANS wirkt nach Aktivierung durch das NC/PLC-

Nahtstellensignal direkt als Verschiebungswert

2. Der Wert der Systemvariablen $AA_ETRANS wird nach Aktivierung durch das NC/PLC-

Nahtstellensignal in die aktiven Systemframes $P:EXTFRAME und den 
Datenhaltungsframe $P_EXTFR bernommen. Anschlieend wird der aktive Gesamtframe 
$P_ACTFRAME neu berechnet.

Maschinendaten

Im Zusammenhang mit der Systemvariablen $AA_ETRANS sind zwei Vorgehensweisen zu 
unterscheiden, die ber das folgende Maschinendatum ausgewhlt werden:

624

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:93)(cid:37)(cid:46)(cid:54)(cid:91)(cid:37)(cid:46)(cid:54)(cid:91)(cid:37)(cid:49)(cid:54)(cid:93)(cid:37)(cid:49)(cid:54)(cid:7)(cid:36)(cid:36)(cid:66)(cid:40)(cid:55)(cid:53)(cid:36)(cid:49)(cid:54)(cid:3)(cid:18)(cid:3)(cid:7)(cid:51)(cid:66)(cid:40)(cid:59)(cid:55)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)3.8 Koordinatentransformationen (Frames)

Arbeitsvorbereitung

MD28082 $MC_MM_SYSTEM_FRAME_MASK,Bit1 = <Wert>

<Wert> Bedeutung

0

1

Funktion: Direktes Schreiben von $AA_ETRANS[<Achse>] durch PLC, HMI oder NC-Pro
gramm.

Freigabe zum Herausfahren der Nullpunktverschiebung von $AA_ETRANS[<Achse>] im 
nchstmglichen Verfahrsatz: DB31, ... DBX3.0

Funktion: Aktivierung des aktiven Systemframes $P:EXTFRAME und des Datenhaltungsf
rames $P_EXTFR

Freigabe zum Herausfahren der Nullpunktverschiebung von $AA_ETRANS[<Achse>] durch: 
DB31, ... DBX3.0. Daraufhin erfolgt im Kanal:

 Stop aller Verfahrbeweungen im Kanal (auer Kommando- und PLC-Achsen)

 Vorlaufstop mit anschlieendem Reorganisieren (STOPRE)

 Grobverschiebung aktiver Frame $P_EXTFRAME[<Achse>] = $AA_ETRANS[<Achse>] 

 Grobverschiebung Datenhaltungsframe $P_EXTFR[<Achse>] = $AA_ETRANS[<Ach

se>] 

 Neuberechnung das aktiven Gesamtframes $P_ACTFRAME

 Herausfahren der Verschiebung in den programmierten Achsen.

 Fortsetzen der unterbrochenen Verfahrbewegung bzw. des NC-Programms

Programmierung

 Syntax

$AA_ETRANS[<Achse>] = <Wert>

 Bedeutung

$AA_ETRANS:

<Achse>:

<Wert>:

NC/PLC-Nahtstellensignal

Systemvariable zum Zwischenspeichern der externen Null
punktverschiebung

Kanalachse

Verschiebungswert

DB31, ... DBX3.0 = 0  1  $P_EXTFRAME[<Achse>]  = $P_EXTFR[<Achse>]  = 
$AA_ETRANS[<Achse>] 

3.8.5

Istwertsetzen mit Verlust des Referenzierstatus (PRESETON)

Die Prozedur PRESETON() setzt fr eine oder mehrere Achsen einen neuen Istwert im 
Maschinenkoordinatensystem (MKS). Dies entspricht einer Nullpunktverschiebung des MKS 
der Achse. Die Achse wird dadurch nicht verfahren. 

Durch PRESETON wird ein Vorlaufstop mit Synchronisation ausgelst. Die Istposition wird der 
Achse erst im Stillstand zugewiesen.

Ist die Achse bei PRESETON dem Kanal nicht zugeordnet, ist das weitere Vorgehen abhngig 
von der achsspezifischen Projektierung des Achstausverhaltens:

MD30552 $MA_AUTO_GET_TYPE 

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

625

Arbeitsvorbereitung

3.8 Koordinatentransformationen (Frames)

Referenzierstatus

Programmierung

Durch das Setzen eines neuen Istwertes im Maschinenkoordinatensystem wird der 
Referenzierstatus der Maschinenachse zurckgesetzt:

DB31, ... DBX60.4 / .5 = 0 (Referenziert / Synchronisiert Messsystem 1 / 2)

Es wird empfohlen, PRESETON nur bei Achsen ohne Referenzpunktpflicht zu verwenden. 

Zum Wiederherstellen des ursprnglichen Maschinenkoordinatensystems muss das 
Messsystem der Maschinenachse, z.B. durch Referenzpunktfahren aus dem Teileprogramm 
(G74), erneut referenziert werden.

VORSICHT

Verlust des Referenzierstatus

Durch das Setzen eines neuen Istwerts im Maschinenkoordinatensystem mit PRESETON 
wird der Referenzierstatus der Maschinenachse auf "nicht referenziert / synchronissiert" 
zurckgesetzt. 

Syntax
PRESETON(<Achse_1>, <Wert_1> [, <Achse_2>, <Wert_2>, ... <Achse_8>, 
<Wert_8>])

Bedeutung

PRESETON:

Istwertsetzen mit Verlust des Referenzierstatus

Vorlaufstopp:

Alleine im Satz:

ja

ja

<Achse_x>:

Maschinenachsname

Typ:

AXIS

Wertebereich:

im Kanal definierte Maschinenachsnamen

<Wert_x>:

Neuer Istwert der Maschinenachse im Maschinenkoordinatensystem (MKS)

Die Eingabe erfolgt im aktuell gltigen Masystem (inch / metrisch)

Eine aktive Durchmesserprogrammierung (DIAMON) wird bercksichtigt

Typ:

REAL

Weitere Informationen

PRESETON in NC-Programmen

Eine ausfhrliche Beschreibung von PRESETON in NC-Programmen findet sich im 
Funktionshandbuch Basisfunktionen.

PRESETON in Synchronaktionen

Eine ausfhrliche Beschreibung von PRESETON in Synchronaktionen findet sich im 
Funktionshandbuch Synchronaktionen.

626

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

3.8.6

Istwertsetzen ohne Verlust des Referenzierstatus (PRESETONS)

3.8 Koordinatentransformationen (Frames)

Arbeitsvorbereitung

Die Prozedur PRESETONS() setzt fr eine oder mehrere Achsen einen neuen Istwert im 
Maschinenkoordinatensystem (MKS). Dies entspricht einer Nullpunktverschiebung des MKS 
der Achse. Die Achse wird dadurch nicht verfahren. 

Durch PRESETONS wird ein Vorlaufstop mit Synchronisation ausgelst. Die Istposition wird 
der Achse erst im Stillstand zugewiesen.

Ist die Achse bei PRESETONS dem Kanal nicht zugeordnet, ist das weitere Vorgehen 
abhngig von der achsspezifischen Projektierung des Achstauschverhaltens:

MD30552 $MA_AUTO_GET_TYPE 

Referenzierstatus

Durch das Setzen eines neuen Istwerts im Maschinenkoordinatensystem (MKS) mit 
PRESETONS wird der Referenzierstatus der Maschinenachse nicht verndert.

Voraussetzungen

 Gebertyp

PRESETONS ist nur bei folgenden Gebertypen des aktiven Messsystems mglich:

 MD30240 $MA_ENC_TYPE[<Messsystem>] = 0 (Simulierter Geber)

 MD30240 $MA_ENC_TYPE[<Messsystem>] = 1 (Rohsignalgeber)

 Referenzier-Mode

PRESETONS ist nur bei folgenden Referenzier-Modes des aktiven Messsystems mglich:

 MD34200 $MA_ENC_REFP_MODE[<Messsytem>] = 0 (kein Referenzpunktfahren 

mglich )

 MD34200 $MA_ENC_REFP_MODE[<Messsytem>] = 1 (Referenzieren von 

inkrementellen, rotatorischen oder linearen Messsystemen: Nullimpuls auf der 
Geberspur)

Programmierung

Syntax
PRESETONS(<Achse_1>, <Wert_1> [, <Achse_2>, <Wert_2>, ... <Achse_8>, 
<Wert_8>])

Bedeutung

PRESETONS:

Istwertsetzen ohne Verlust des Referenzierstatus

Vorlaufstopp:

Alleine im Satz:

ja

ja

<Achse_x>:

Maschinenachsname

Typ:

AXIS

Wertebereich:

im Kanal definierte Maschinenachsnamen

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

627

Arbeitsvorbereitung

3.8 Koordinatentransformationen (Frames)

<Wert_x>:

Neuer aktueller Istwert der Maschinenachse im Maschinenkoordinatensystem 
(MKS)

Die Eingabe erfolgt im aktiven Masystem (inch / metrisch)

Eine aktive Durchmesserprogrammierung (DIAMON) wird bercksichtigt

Typ:

REAL

Weitere Informationen

PRESETONS in NC-Programmen

Eine ausfhrliche Beschreibung von PRESETONS in NC-Programmen findet sich im 
Funktionshandbuch Basisfunktionen.

PRESETONS in Synchronaktionen

Eine ausfhrliche Beschreibung von PRESETONS in Synchronaktionen findet sich im 
Funktionshandbuch Synchronaktionen.

3.8.7

Frame-Berechnung aus 3 Messpunkten im Raum (MEAFRAME)

Die Funktion MEAFRAME wird zur Untersttzung der Messzyklen eingesetzt. Sie berechnet 
den Frame aus drei idealen und den korrespondierenden gemessenen Punkten.

Wird ein Werkstck fr die Bearbeitung positioniert, ist seine Position relativ zum kartesischen 
Maschinenkoordinatensystem bezglich seiner Idealposition i. A. sowohl verschoben als auch 
gedreht. Fr exakte Bearbeitung oder Messung ist entweder eine kostspielige physikalische 
Justierung oder nderung der Bewegungen im Teileprogramm ntig.

Ein Frame kann durch Abtasten dreier Punkte im Raum festgelegt werden, deren 
Idealpositionen bekannt sind. Abgetastet wird mit einem Berhrungs- oder optischen Sensor, 
der spezielle, auf der Trgerplatte przise fixierte Lcher oder Messkugeln berhrt. 

Syntax

Bedeutung

MEAFRAME(<Ideal-Punkte>,<Messpunkte>,<Qualitt>)

MEAFRAME:

Funktionsaufruf

<Ideal-Punkte>:

2-dim. REAL-Feld, das die drei Koordinaten der Ideal-Punkte enthlt

<Messpunkte>:

2-dim. REAL-Feld, das die drei Koordinaten der gemessenen Punkte ent
hlt

628

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

3.8 Koordinatentransformationen (Frames)

Arbeitsvorbereitung

<Qualitt>:

Variable, mit der Informationen zur Qualitt der FRAME-Berechnung zu
rckgegeben werden

Typ:

Wert:

VAR REAL

-1

-2

-4

 0.0

Die idealen Punkte liegen nahezu auf einer Ge
raden: Der Frame konnte nicht berechnet werden. 
Die zurckgegebene FRAME-Variable enthlt ei
nen neutralen Frame.

Die Messpunkte liegen nahezu auf einer Geraden: 
Der Frame konnte nicht berechnet werden. Die zu
rckgegebene FRAME-Variable enthlt einen neut
ralen Frame.

Die Berechnung der Rotationsmatrix schlgt aus 
einem anderen Grund fehl.

Summe der Verzerrungen (Abstnde zwischen den 
Punkten), die zur berfhrung des gemessenen 
Dreiecks in ein zum idealen Dreieck kongruentes 
bentigt wird.

Hinweis

Qualitt der Messung

Damit die gemessenen den idealen Koordinaten mit einer kombinierten Rotation/Translation 
zugeordnet werden knnen, muss das von den Messpunkten aufgespannte Dreieck kongruent 
zum idealen Dreieck sein. Dies wird bewerkstelligt von einem Kompensationsalgorithmus, der 
die Summe der Quadrate der Abweichungen minimiert, die das gemessene in das ideale 
Dreieck berfhren.

Die effektiv bentigte Verzerrung der Messpunkte kann als Indikator fr die Qualitt der 
Messung dienen und wird deshalb als zustzliche Variable von MEAFRAME ausgegeben.

Hinweis

Das von MEAFRAME erzeugte Frame kann durch die Funktion ADDFRAME in ein anderes 
Frame in der Frame-Kette transformiert werden (siehe Beispiel "Verkettung mit ADDFRAME").

Beispiele

Beispiel 1:

Teileprogramm 1:

Programmcode

...

DEF FRAME CORR_FRAME

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

629

 
 
 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.8 Koordinatentransformationen (Frames)

Setzen von Messpunkten:

Programmcode

Kommentar

DEF REAL IDEAL_POINT[3,3]=
SET(10.0,0.0,0.0,0.0,10.0,0.0,0.0,0.0,10.0)

DEF REAL MEAS_POINT[3,3]=
SET(10.1,0.2,-0.2,-0.2,10.2,0.1,-0.2,0.2,9.8)

; Fr Test.

DEF REAL FIT_QUALITY=0

DEF REAL ROT_FRAME_LIMIT=5

DEF REAL FIT_QUALITY_LIMIT=3

DEF REAL SHOW_MCS_POS1[3]

DEF REAL SHOW_MCS_POS2[3]

DEF REAL SHOW_MCS_POS3[3]

Programmcode

N100 G01 G90 F5000

N110 X0 Y0 Z0

; Erlaubt max. 5 Grad-Verdrehung 
der Teileposition.

; Erlaubt max. 3 mm-Verschiebung 
zwischen 
dem idealen und dem gemessenen 
Dreieck.

Kommentar

N200 CORR_FRAME=MEAFRAME(IDEAL_POINT,MEAS_POINT,FIT_QUALITY)

N230 IF FIT_QUALITY < 0

SETAL(65000)

GOTOF NO_FRAME

ENDIF

N240 IF FIT_QUALITY > FIT_QUALITY_LIMIT

SETAL(65010)

GOTOF NO_FRAME

ENDIF

N250 IF CORR_FRAME[X,RT] > ROT_FRAME_LIMIT

; Begrenzung des 1. RPY- Winkels.

SETAL(65020)

GOTOF NO_FRAME

ENDIF

N260 IF CORR_FRAME[Y,RT] > ROT_FRAME_LIMIT

; Begrenzung des 2. RPY-Winkels.

SETAL(65021)

GOTOF NO_FRAME

ENDIF

N270 IF CORR_FRAME[Z,RT] > ROT_FRAME_LIMIT

; Begrenzung des 3. RPY- Winkels.

SETAL(65022)

GOTOF NO_FRAME

ENDIF

N300 $P_IFRAME=CORR_FRAME

; Abtast-Frame mit einem setzbaren 
Frame aktivieren.

630

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
3.8 Koordinatentransformationen (Frames)

Arbeitsvorbereitung

Programmcode

Kommentar

; Frame prfen durch Positionieren 
der Geometrieachsen auf die idea-
len Punkte.

N400 X=IDEAL_POINT[0,0] Y=IDEAL_POINT[0,1] 
Z=IDEAL_POINT[0,2]

N410 SHOW_MCS_POS1[0]=$AA_IM[X]

N420 SHOW_MCS_POS1[1]=$AA_IM[Y]

N430 SHOW_MCS_POS1[2]=$AA_IM[Z]

N500 X=IDEAL_POINT[1,0] Y=IDEAL_POINT[1,1] Z=IDEAL_POINT[1,2]

N510 SHOW_MCS_POS2[0]=$AA_IM[X]

N520 SHOW_MCS_POS2[1]=$AA_IM[Y]

N530 SHOW_MCS_POS2[2]=$AA_IM[Z]

N600 X=IDEAL_POINT[2,0] Y=IDEAL_POINT[2,1] Z=IDEAL_POINT[2,2]

N610 SHOW_MCS_POS3[0]=$AA_IM[X]

N620 SHOW_MCS_POS3[1]=$AA_IM[Y]

N630 SHOW_MCS_POS3[2]=$AA_IM[Z]

N700 G500

No_FRAME

M0

M30

; Setzbaren Frame deaktivieren, da 
mit Nullframe (kein Wert eingetra-
gen vorbesetzt). 

; Setzbaren Frame deaktivieren, da 
mit Nullframe (kein Wert eingetra-
gen) vorbesetzt.

Beispiel 2: Verkettung von Frames

Verkettung von MEAFRAME fr Korrekturen

Die Funktion MEAFRAME liefert ein Korrektur-Frame. Wird dieser Korrektur-Frame mit dem 
einstellbaren Frame $P_UIFR[1] verkettet, der bei Aufruf der Funktion aktiv war (z. B. G54), so 
erhlt man einen einstellbaren Frame fr weitere Umrechnungen zum Verfahren oder 
Bearbeiten.

Verkettung mit ADDFRAME

Soll dieser Korrektur-Frame in der Frame-Kette an einer anderen Stelle wirken oder sind vor 
dem einstellbaren Frame noch andere Frames aktiv, dann kann die Funktion ADDFRAME zum 
Einketten in einem der Kanal-Basisframes oder einem Systemframe genutzt werden.

In den Frames darf hierbei nicht aktiv sein:

 Spiegelung mit MIRROR

 Skalierung mit SCALE

Die Eingangsparameter fr Soll- und Istwerte sind die Werkstckkoordinaten. Im Grundsystem 
der Steuerung sind diese Koordinaten stets metrisch oder in Inch (G71/G70) und als 
radiusbezogenes (DIAMOF) Ma anzugeben.

Weitere Informationen zu ADDFRAME siehe Funktionshandbuch Basisfunktionen.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

631

 
 
 
 
 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.8 Koordinatentransformationen (Frames)

3.8.8

Globale Frames

Globale Frames 

Globale Frames gibt es pro Steuerung nur einmal fr alle Kanle. Globale Frames knnen von 
allen Kanlen aus geschrieben und gelesen werden. Die Aktivierung der globalen Frames 
erfolgt im jeweiligen Kanal.

Durch globale Frames knnen Kanalachsen und Maschinenachsen mit Verschiebungen 
skaliert und gespiegelt werden.

Geometrische Zusammenhnge und Frameketten 

Bei globalen Frames existiert kein geometrischer Zusammenhang zwischen den Achsen. 
Deshalb knnen keine Drehungen und keine Programmierung von 
Geometrieachsbezeichnern ausgefhrt werden.

Auf globale Frames lassen sich keine Rotationen anwenden. Die Programmierung einer 
Rotation wird mit dem Alarm 18310 "Kanal %1 Satz %2 Frame: Rotation unzulssig" abgelehnt.

Die Verkettung von globalen Frames und kanalspezifischen Frames ist mglich. Der 
resultierende Frame enthlt alle Frameanteile inklusive der Rotationen fr alle Achsen. Die 
Zuweisung eines Frames mit Rotationsanteilen an einen globalen Frame wird mit dem Alarm 
"Frame: Rotation unzulssig" abgelehnt.

Globale Basisframes $P_NCBFR[n]

Es knnen bis zu 8 globale Basisframes projektiert werden: 

Gleichzeitig knnen kanalspezifische Basisframes vorhanden sein.

Globale Basisframes knnen von allen Kanlen einer Steuerung geschrieben und gelesen 
werden. Beim Schreiben von globalen Frames ist vom Anwender fr eine Kanalkoordinierung 
Sorge zu tragen. Dies kann z. B. durch Wait-Marken (WAITMC) realisiert werden.

Hinweis

Maschinenhersteller

Die Anzahl von globalen Basisframes wird ber Maschinendaten projektiert.

Weitere Informationen: Funktionshandbuch Basisfunktionen

Einstellbare Frames $P_UIFR[n]

Alle einstellbaren Frames G500, G54...G599 knnen entweder global oder kanalspezifisch 
projektiert werden.

Hinweis

Maschinenhersteller

Alle einstellbaren Frames knnen mit Hilfe des Maschinendatums 
MD18601 $MN_MM_NUM_GLOBAL_USER_FRAMES zu globalen Frames umprojektiert 
werden.

632

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

3.8 Koordinatentransformationen (Frames)

Arbeitsvorbereitung

Als Achsbezeichner bei den Frame-Programmbefehlen knnen Kanalachsbezeichner und 
Maschinenachsbezeichner verwendet werden. Die Programmierung von 
Geometrieachsbezeichnern wird mit einem Alarm abgelehnt.

3.8.8.1

Kanalspezifische Frames ($P_CHBFR, $P_UBFR)

Einstellbare Frames oder Basisframes knnen ber das Teileprogramm und ber BTSS von 
der Bedienung und von der PLC geschrieben und gelesen werden. 

Die Feinverschiebung ist auch fr die globalen Frames mglich. Die Unterdrckung von 
globalen Frames erfolgt ebenso wie bei kanalspezifischen Frames ber G53, G153, SUPA und 
G500.

Maschinenhersteller

ber das Maschinendatum MD28081 $MC_MM_NUM_BASE_FRAMES kann die Anzahl der 
Basisframes im Kanal projektiert werden. Die Standardkonfiguration ist so ausgelegt, dass es 
mindestens ein Basisframe pro Kanal gibt. Maximal sind 8 Basisframes pro Kanal mglich. 
Zustzlich zu den 8 Basisframes im Kanal kann es noch 8 NCU-globale Basisframes geben.   

Kanalspezifische Frames

$P_CHBFR[n]

ber die Systemvariable $P_CHBFR[n] knnen die Basisframes gelesen und geschrieben 
werden. Beim Schreiben eines Basisframes wird der verkettete Gesamt-Basisframe nicht 
aktiviert, sondern die Aktivierung erfolgt erst mit der Ausfhrung einer G500, G54 ... G599-
Anweisung. Die Variable dient vorwiegend als Speicher fr Schreibvorgnge auf das 
Basisframe von HMI oder PLC. Diese Frame-Variablen werden ber die Datensicherung 
gesichert.

Erster Basisframe im Kanal

Ein Schreiben auf die vordefinierte Variable $P_UBFR aktiviert den Basisframe mit dem 
Feldindex 0 nicht gleichzeitig, sondern die Aktivierung erfolgt erst mit der Ausfhrung einer 
G500, G54 ... G599-Anweisung. Die Variable kann auch im Programm geschrieben und 
gelesen werden.

$P_UBFR

$P_UBFR ist identisch mit $P_CHBFR[0]. Standardmig gibt es immer einen Basisframe im 
Kanal, so dass die Systemvariable kompatibel zu lteren Stnden ist. Gibt es kein 
kanalspezifisches Basisframe, wird beim Schreiben oder Lesen der Alarm "Frame: Anweisung 
unzulssig" ausgegeben.

3.8.8.2

Im Kanal wirksame Frames

Im Kanal wirksame Frames werden vom Teileprogramm ber die betreffenden 
Systemvariablen dieser Frames eingegeben. Hierzu gehren auch Systemframes. ber diese 
Systemvariablen kann im Teileprogramm das aktuelle Systemframe gelesen und geschrieben 
werden.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

633

Arbeitsvorbereitung

3.8 Koordinatentransformationen (Frames)

Aktuelle im Kanal wirksame Frames    

bersicht

Aktuelle Systemframes
$P_PARTFRAME 
$P_SETFRAME
$P_EXTFRAME
$P_NCBFRAME[n]
$P_CHBFRAME[n]
$P_BFRAME
$P_ACTBFRAME
$P_CHBFRMASK und $P_NCBFRMASK
$P_IFRAME
Aktuelle Systemframes 
$P_TOOLFRAME
$P_WPFRAME
$P_TRAFRAME
$P_PFRAME
Aktuelles Systemframe 
$P_CYCFRAME
P_ACTFRAME
FRAME-Kettung

fr: 
TCARR und PAROT
Istwertsetzen und Ankratzen
Externe Nullpunktverschiebung
Aktuelle globale Basisframes
Aktuelle Kanal-Basisframes
Aktueller 1. Basisframe im Kanal
Gesamt-Basisframe
Gesamt-Basisframe
Aktueller einstellbarer Frame
fr: 
TOROT und TOFRAME
Werkstckbezugspunkte
Transformationen
Aktueller programmierbarer Frame
fr: 
Zyklen
Aktueller Gesamtframe
Aktuelles Frame setzt sich aus dem Ge
samt-Basisframe zusammen

$P_NCBFRAME [n] Aktuelle globale Basisframes   

ber die Systemvariable $P_NCBFRAME[n] knnen die aktuellen globalen Basisframe-
Feldelemente gelesen und geschrieben werden. Das resultierende Gesamt-Basisframe wird 
durch den Schreibvorgang im Kanal eingerechnet.

Der genderte Frame wird nur in dem Kanal, in dem der Frame programmiert wurde, aktiv. Soll 
der Frame fr alle Kanle einer Steuerung gendert werden, muss gleichzeitig $P_NCBFR[n] 
und $P_NCBFRAME[n] beschrieben werden. Die anderen Kanle mssen dann noch den 
Frame mit z. B. G54 aktivieren. Beim Schreiben eines Basisframes wird der Gesamt-
Basisframe neu berechnet.

$P_CHBFRAME[n] Aktuelle Kanal-Basisframes  

ber die Systemvariable $P_CHBFRAME[n] knnen die aktuellen Kanal-Basisframe-
Feldelemente gelesen und geschrieben werden. Der resultierende Gesamt-Basisframe wird 
durch den Schreibvorgang im Kanal eingerechnet. Beim Schreiben eines Basisframes wird der 
Gesamt-Basisframe neu berechnet.

$P_BFRAME Aktueller 1. Basisframe im Kanal  

ber die vordefinierte Framevariable $P_BFRAME kann der aktuelle Basisframe mit dem 
Feldindex 0, der im Kanal gltig ist, im Teileprogramm gelesen und geschrieben werden. Der 
geschriebene Basisframe wird sofort eingerechnet.

634

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

3.8 Koordinatentransformationen (Frames)

Arbeitsvorbereitung

$P_BFRAME ist identisch mit $P_CHBFRAME[0]. Die Systemvariable hat standardmig 
immer einen gltigen Wert. Gibt es kein kanalspezifisches Basisframe, wird beim Schreiben 
oder Lesen der Alarm "Frame: Anweisung unzulssig" ausgegeben.

$P_ACTBFRAME Gesamt-Basisframe  

Die Variable $P_ACTFRAME ermittelt das verkettete Gesamt-Basisframe. Die Variable ist nur 
lesbar.

$P_ACTFRAME entspricht:

$P_NCBFRAME[0] : ... : $P_NCBFRAME[n] : $P_CHBFRAME[0] : ... : $P_CHBFRAME[n].

$P_CHBFRMASK und $P_NCBFRMASK Gesamt-Basisframe    

ber die Systemvariable $P_CHBFRMASK und $P_NCBFRMASK kann der Anwender 
auswhlen, welche Basisframes er in die Berechnung des "Gesamt"-Basisframes mit 
einbeziehen mchte. Die Variablen knnen nur im Programm programmiert werden und ber 
BTSS gelesen werden. Der Wert der Variablen wird als Bitmaske interpretiert und gibt an, 
welches Basisframe-Feldelement von $P_ACTFRAME in die Berechnung einfliet.

Mit $P_CHBFRMASK kann vorgegeben werden, welche kanalspezifischen Basisframes, und 
mit $P_NCBFRMASK, welche globalen Basisframes eingerechnet werden.

Mit der Programmierung der Variablen werden der Gesamt-Basisframe und der Gesamt-
Frame neu berechnet. Nach Reset und in der Grundeinstellung ist der Wert von 
$P_CHBFRMASK und $P_NCBFRMASK wie folgt:

$P_CHBFRMASK = $MC_CHBFRAME_RESET_MASK

$P_NCBFRMASK = $MC_CHBFRAME_RESET_MASK

Beispiel:

$P_NCBFRMASK = 'H81' ;$P_NCBFRAME[0] : $P_NCBFRAME[7]

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

635

(cid:60)(cid:60)(cid:59)(cid:59)(cid:60)(cid:59)(cid:7)(cid:51)(cid:66)(cid:49)(cid:38)(cid:37)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:62)(cid:19)(cid:64)(cid:7)(cid:51)(cid:66)(cid:49)(cid:38)(cid:37)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:62)(cid:81)(cid:64)(cid:15)(cid:3)(cid:81)(cid:7)(cid:51)(cid:66)(cid:38)(cid:43)(cid:37)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:62)(cid:19)(cid:64)(cid:3)(cid:32)(cid:3)(cid:7)(cid:51)(cid:66)(cid:37)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:7)(cid:51)(cid:66)(cid:38)(cid:43)(cid:37)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:62)(cid:81)(cid:64)(cid:15)(cid:3)(cid:81)(cid:7)(cid:51)(cid:66)(cid:36)(cid:38)(cid:55)(cid:37)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:7)(cid:51)(cid:16)(cid:36)(cid:38)(cid:55)(cid:37)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:3)(cid:32)(cid:3)(cid:7)(cid:51)(cid:66)(cid:49)(cid:38)(cid:37)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:62)(cid:19)(cid:64)(cid:3)(cid:29)(cid:3)(cid:7)(cid:51)(cid:66)(cid:49)(cid:38)(cid:37)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:62)(cid:81)(cid:64)(cid:3)(cid:29)(cid:3)(cid:7)(cid:51)(cid:66)(cid:38)(cid:43)(cid:37)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:62)(cid:19)(cid:64)(cid:3)(cid:29)(cid:3)(cid:7)(cid:51)(cid:66)(cid:38)(cid:43)(cid:37)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:62)(cid:81)(cid:64)(cid:37)(cid:46)(cid:54)(cid:3)(cid:32)(cid:3)(cid:37)(cid:68)(cid:86)(cid:76)(cid:86)(cid:78)(cid:82)(cid:82)(cid:85)(cid:71)(cid:76)(cid:81)(cid:68)(cid:87)(cid:72)(cid:81)(cid:86)(cid:92)(cid:86)(cid:87)(cid:72)(cid:80)(cid:37)(cid:49)(cid:54)(cid:3)(cid:32)(cid:3)(cid:37)(cid:68)(cid:86)(cid:76)(cid:86)(cid:81)(cid:88)(cid:79)(cid:79)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:86)(cid:92)(cid:86)(cid:87)(cid:72)(cid:80)(cid:83)(cid:85)(cid:82)(cid:77)(cid:72)(cid:78)(cid:87)(cid:76)(cid:72)(cid:85)(cid:69)(cid:68)(cid:85)(cid:3)(cid:190)(cid:69)(cid:72)(cid:85)(cid:3)(cid:7)(cid:48)(cid:38)(cid:66)(cid:48)(cid:48)(cid:66)(cid:49)(cid:56)(cid:48)(cid:66)(cid:37)(cid:36)(cid:54)(cid:40)(cid:66)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:54)(cid:83)(cid:85)(cid:82)(cid:77)(cid:72)(cid:78)(cid:87)(cid:76)(cid:72)(cid:85)(cid:69)(cid:68)(cid:85)(cid:3)(cid:190)(cid:69)(cid:72)(cid:85)(cid:3)(cid:7)(cid:48)(cid:49)(cid:66)(cid:48)(cid:48)(cid:66)(cid:49)(cid:56)(cid:48)(cid:66)(cid:42)(cid:47)(cid:50)(cid:37)(cid:36)(cid:47)(cid:66)(cid:37)(cid:36)(cid:54)(cid:40)(cid:66)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:54)(cid:37)(cid:46)(cid:54)(cid:37)(cid:46)(cid:54)(cid:37)(cid:46)(cid:54)(cid:37)(cid:49)(cid:54)(cid:37)(cid:49)(cid:54)(cid:37)(cid:49)(cid:54)Arbeitsvorbereitung

3.8 Koordinatentransformationen (Frames)

$P_CHBFRMASK = 'H11' ;$P_CHBFRAME[0] : $P_CHBFRAME[4]

$P_IFRAME Aktueller einstellbarer Frame  

ber die vordefinierte Framevariable $P_IFRAME kann der aktuelle einstellbare Frame, 
welcher im Kanal gltig ist, im Teileprogramm gelesen und geschrieben werden. Der 
geschriebene einstellbare Frame wird sofort eingerechnet.

Bei globalen einstellbaren Frames wirkt der genderte Frame nur in dem Kanal, in dem der 
Frame programmiert wurde. Soll der Frame fr alle Kanle einer Steuerung gendert werden, 
muss gleichzeitig $P_UIFR[n] und $P_IFRAME beschrieben werden. Die anderen Kanle 
mssen dann noch den entsprechenden Frame mit z. B. G54 aktivieren.

$P_PFRAME Aktueller programmierbarer Frame  

$P_PFRAME ist der programmierbare Frame, der sich aus der Programmierung von TRANS/
ATRANS, G58/G59, ROT/AROT, SCALE/ASCALE, MIRROR/AMIRROR bzw. aus der 
Zuweisung von CTRANS, CROT, CMIRROR, CSCALE an den programmierbaren FRAME 
ergibt.

Aktuelle, programmierbare Framevariable, die den Bezug zwischen dem einstellbaren 
Nullpunktsystem (ENS) und dem Werkstckkoordinatensystem (WKS) herstellt.

P_ACTFRAME Aktueller Gesamtframe  

Der aktuelle resultierende Gesamtframe $P_ACTFRAME ergibt sich nun als Verkettung aller 
Basisframes, dem aktuellen einstellbaren Frame und dem programmierbaren Frame. Der 
aktuelle Frame wird immer dann aktualisiert, wenn sich ein Frameanteil ndert.

$P_ACTFRAME entspricht:

$P_PARTFRAME : $P_SETFRAME : $P_EXTFRAME : $P_ACTBFRAME : $P_IFRAME :

$P_TOOLFRAME : $P_WPFRAME : $P_TRAFRAME : $P_PFRAME : $P_CYCFRAME 

636

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

3.8 Koordinatentransformationen (Frames)

Arbeitsvorbereitung

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

637

(cid:42)(cid:72)(cid:86)(cid:68)(cid:80)(cid:87)(cid:73)(cid:85)(cid:68)(cid:80)(cid:72)(cid:36)(cid:78)(cid:87)(cid:76)(cid:89)(cid:72)(cid:85)(cid:3)(cid:42)(cid:72)(cid:86)(cid:68)(cid:80)(cid:87)(cid:73)(cid:85)(cid:68)(cid:80)(cid:72)(cid:39)(cid:68)(cid:87)(cid:72)(cid:81)(cid:75)(cid:68)(cid:79)(cid:87)(cid:88)(cid:81)(cid:74)(cid:86)(cid:73)(cid:85)(cid:68)(cid:80)(cid:72)(cid:86)(cid:46)(cid:68)(cid:81)(cid:68)(cid:79)(cid:86)(cid:83)(cid:72)(cid:93)(cid:76)(cid:73)(cid:76)(cid:86)(cid:70)(cid:75)(cid:72)(cid:54)(cid:92)(cid:86)(cid:87)(cid:72)(cid:80)(cid:73)(cid:85)(cid:68)(cid:80)(cid:72)(cid:86)(cid:46)(cid:68)(cid:81)(cid:68)(cid:79)(cid:86)(cid:83)(cid:72)(cid:93)(cid:76)(cid:73)(cid:76)(cid:86)(cid:70)(cid:75)(cid:72)(cid:3)(cid:49)(cid:38)(cid:56)(cid:16)(cid:37)(cid:68)(cid:86)(cid:76)(cid:86)(cid:73)(cid:85)(cid:68)(cid:80)(cid:72)(cid:86)(cid:49)(cid:38)(cid:56)(cid:16)(cid:74)(cid:79)(cid:82)(cid:69)(cid:68)(cid:79)(cid:72)(cid:41)(cid:85)(cid:68)(cid:80)(cid:72)(cid:86)(cid:40)(cid:76)(cid:81)(cid:74)(cid:68)(cid:69)(cid:72)(cid:3)(cid:190)(cid:69)(cid:72)(cid:85)(cid:3)(cid:51)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)(cid:15)(cid:3)(cid:93)(cid:17)(cid:3)(cid:37)(cid:17)(cid:40)(cid:76)(cid:81)(cid:74)(cid:68)(cid:69)(cid:72)(cid:3)(cid:190)(cid:69)(cid:72)(cid:85)(cid:3)(cid:43)(cid:48)(cid:44)(cid:68)(cid:78)(cid:87)(cid:76)(cid:89)(cid:76)(cid:72)(cid:85)(cid:87)(cid:3)(cid:190)(cid:69)(cid:72)(cid:85)(cid:40)(cid:76)(cid:81)(cid:74)(cid:68)(cid:69)(cid:72)(cid:3)(cid:190)(cid:69)(cid:72)(cid:85)(cid:3)(cid:51)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)(cid:15)(cid:3)(cid:93)(cid:17)(cid:3)(cid:37)(cid:17)(cid:68)(cid:78)(cid:87)(cid:76)(cid:89)(cid:76)(cid:72)(cid:85)(cid:87)(cid:3)(cid:190)(cid:69)(cid:72)(cid:85)(cid:40)(cid:76)(cid:81)(cid:74)(cid:68)(cid:69)(cid:72)(cid:3)(cid:190)(cid:69)(cid:72)(cid:85)(cid:3)(cid:51)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)(cid:15)(cid:3)(cid:93)(cid:17)(cid:3)(cid:37)(cid:17)(cid:40)(cid:76)(cid:81)(cid:74)(cid:68)(cid:69)(cid:72)(cid:3)(cid:190)(cid:69)(cid:72)(cid:85)(cid:3)(cid:51)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)(cid:15)(cid:3)(cid:93)(cid:17)(cid:3)(cid:37)(cid:17)(cid:40)(cid:76)(cid:81)(cid:74)(cid:68)(cid:69)(cid:72)(cid:3)(cid:190)(cid:69)(cid:72)(cid:85)(cid:3)(cid:51)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)(cid:15)(cid:3)(cid:93)(cid:17)(cid:3)(cid:37)(cid:17)(cid:69)(cid:93)(cid:90)(cid:17)(cid:40)(cid:76)(cid:81)(cid:74)(cid:68)(cid:69)(cid:72)(cid:3)(cid:190)(cid:69)(cid:72)(cid:85)(cid:3)(cid:43)(cid:48)(cid:44)(cid:3)(cid:29)(cid:3)(cid:29)(cid:7)(cid:51)(cid:66)(cid:55)(cid:53)(cid:36)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:7)(cid:51)(cid:66)(cid:55)(cid:50)(cid:50)(cid:47)(cid:41)(cid:53)(cid:7)(cid:51)(cid:66)(cid:51)(cid:36)(cid:53)(cid:55)(cid:41)(cid:53)(cid:7)(cid:51)(cid:66)(cid:38)(cid:60)(cid:38)(cid:41)(cid:53)(cid:7)(cid:51)(cid:66)(cid:58)(cid:51)(cid:41)(cid:53)(cid:7)(cid:51)(cid:66)(cid:54)(cid:40)(cid:55)(cid:41)(cid:53)(cid:7)(cid:51)(cid:66)(cid:40)(cid:59)(cid:55)(cid:41)(cid:53)(cid:7)(cid:51)(cid:66)(cid:55)(cid:53)(cid:36)(cid:41)(cid:53)(cid:29)(cid:7)(cid:51)(cid:66)(cid:58)(cid:51)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:7)(cid:51)(cid:66)(cid:38)(cid:60)(cid:38)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:3)(cid:3)(cid:3)(cid:3)(cid:29)(cid:7)(cid:51)(cid:66)(cid:51)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:42)(cid:24)(cid:19)(cid:19)(cid:15)(cid:3)(cid:42)(cid:24)(cid:23)(cid:17)(cid:17)(cid:17)(cid:42)(cid:24)(cid:28)(cid:28)(cid:3)(cid:29)(cid:7)(cid:51)(cid:66)(cid:40)(cid:59)(cid:55)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:7)(cid:54)(cid:40)(cid:55)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:3)(cid:29)(cid:7)(cid:51)(cid:66)(cid:55)(cid:50)(cid:50)(cid:47)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:3)(cid:29)(cid:3)(cid:29)(cid:7)(cid:51)(cid:66)(cid:36)(cid:38)(cid:55)(cid:37)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:29)(cid:7)(cid:51)(cid:66)(cid:44)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:7)(cid:51)(cid:66)(cid:49)(cid:38)(cid:37)(cid:41)(cid:53)(cid:32)(cid:38)(cid:55)(cid:53)(cid:36)(cid:49)(cid:54)(cid:11)(cid:59)(cid:15)(cid:20)(cid:19)(cid:12)(cid:29)(cid:7)(cid:51)(cid:66)(cid:49)(cid:38)(cid:37)(cid:41)(cid:53)(cid:62)(cid:81)(cid:64)(cid:7)(cid:51)(cid:66)(cid:38)(cid:43)(cid:37)(cid:41)(cid:53)(cid:62)(cid:81)(cid:64)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:55)(cid:53)(cid:36)(cid:49)(cid:54)(cid:3)(cid:59)(cid:20)(cid:19)(cid:7)(cid:51)(cid:66)(cid:51)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:32)(cid:38)(cid:55)(cid:53)(cid:36)(cid:49)(cid:54)(cid:11)(cid:59)(cid:15)(cid:20)(cid:19)(cid:12)(cid:7)(cid:51)(cid:66)(cid:44)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:32)(cid:38)(cid:55)(cid:53)(cid:36)(cid:49)(cid:54)(cid:11)(cid:59)(cid:15)(cid:20)(cid:19)(cid:12)(cid:7)(cid:51)(cid:66)(cid:49)(cid:38)(cid:37)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:62)(cid:20)(cid:64)(cid:32)(cid:38)(cid:55)(cid:53)(cid:36)(cid:49)(cid:54)(cid:11)(cid:59)(cid:15)(cid:20)(cid:19)(cid:12)(cid:7)(cid:51)(cid:66)(cid:56)(cid:44)(cid:41)(cid:53)(cid:62)(cid:81)(cid:64)(cid:32)(cid:38)(cid:55)(cid:53)(cid:36)(cid:49)(cid:54)(cid:11)(cid:59)(cid:15)(cid:20)(cid:19)(cid:12)(cid:7)(cid:51)(cid:66)(cid:38)(cid:43)(cid:37)(cid:41)(cid:53)(cid:32)(cid:38)(cid:55)(cid:53)(cid:36)(cid:49)(cid:54)(cid:11)(cid:61)(cid:15)(cid:20)(cid:19)(cid:12)(cid:42)(cid:24)(cid:19)(cid:19)(cid:15)(cid:3)(cid:42)(cid:24)(cid:23)(cid:17)(cid:17)(cid:17)(cid:42)(cid:24)(cid:28)(cid:28)(cid:32)(cid:7)(cid:51)(cid:66)(cid:56)(cid:44)(cid:41)(cid:53)(cid:62)(cid:81)(cid:64)(cid:7)(cid:51)(cid:66)(cid:36)(cid:38)(cid:55)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)(cid:3)(cid:29)(cid:7)(cid:51)(cid:66)(cid:51)(cid:36)(cid:53)(cid:55)(cid:41)(cid:53)(cid:36)(cid:48)(cid:40)Arbeitsvorbereitung

3.8 Koordinatentransformationen (Frames)

Frame-Kettung  

Der aktuelle Frame setzt sich aus dem Gesamt-Basisframe, dem einstellbaren Frame, dem 
Systemframe und dem programmierbaren Frame gem oben angegebenen aktuellen 
Gesamtframe zusammen. 

638

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

kinematische TransformationHandrad (DRF)-Verschiebung, (cid:190)berlagerte Bewegung,[externe Nullpunktverschiebung]G54 ... G599 einstellbares Frame,kanaspez. oder NCU-gobalVerkettetes Feld von Basisframes,kanalspez. und / oder NCU-globalMKS = MaschinenkoordinatensystemBKS = BasiskoordinatensystemWKS = Werkst(cid:190)ckkoordinatensystemBNS = BasisnullpunktsystemENS = Einstellbares-NullpunktsystemFrameketteReferenzpunktverschiebungVerkettete Systemframes f(cid:190)r PAROT, Istwertsetzen,Ankratzen. ext. NullpunktverschiebungFrame f(cid:190)r Zyklen, programmier-bares Frame, Transformationen Systemframe f(cid:190)r TOROT(TOFRAME), Werkst(cid:190)ckeMKSWKSENSBNSBKSArbeitsvorbereitung

3.9 Transformationen

3.9

Transformationen

3.9.1

Allgemeine Programmierung der Transformationsarten

3.9.1.1

Allgemeine Programmierung der Transformationsarten

Allgemeine Funktion

Zur Anpassung der Steuerung an verschiedene Maschinenkinematiken besteht die Auswahl 
Transformationsarten mit geeigneten Parametern zu programmieren. ber diese Parameter 
kann fr die ausgewhlte Transformation sowohl die Orientierung des Werkzeugs im Raum als 
auch die Orientierungsbewegungen der Rundachsen entsprechend vereinbart werden.  

Bei den Drei-, Vier- und Fnf-Achs-Transformationen beziehen sich die programmierten, 
Positionsangaben immer auf die Spitze des Werkzeugs, welches orthogonal zur im Raum 
befindlichen Bearbeitungsflche nachgefhrt wird. Die kartesischen Koordinaten werden vom 
Basiskoordinatensystem ins Maschinenkoordinatensystem umgerechnet und beziehen sich 
auf die Geometrieachsen. Diese beschreiben den Arbeitspunkt. Virtuelle Rundachsen 
beschreiben die Orientierungen des Werkzeugs im Raum und werden mit TRAORI 
programmiert.

Bei der kinematischen Transformation knnen Positionen im kartesischen Koordinatensystem 
programmiert werden. Die Steuerung transformiert die mit TRANSMIT und TRACYL 
programmierten Verfahrbewegungen des kartesischen Koordinatensystems auf die 
Verfahrbewegungen der realen Maschinenachsen.

Drei-, Vier- und Fnf-Achs-Transformationen TRAORI

Die vereinbarte Orientierungstransformation wird mit dem Befehl TRAORI und den drei 
mglichen Parametern fr Trafonummer, Orientierungsvektor und Rundachsoffsets aktiviert.

TRAORI(Trafonummer, Orientierungsvektor, Rundachsoffsets)

Kinematische Transformationen

Zu den Kinematischen Transformationengehren die vereinbarten Transformationen 
TRANSMIT(Trafonummer)

TRACYL(Arbeitsdurchmesser, Trafonummer)

Aktive Transformation ausschalten

Mit TRAFOOF kann die gerade aktive Transformation ausgeschaltet werden.

Programmierung

Orientierungstransformation 

Drei-, Vier- und Fnf- Achs-Transformationen TRAORI

Zur optimalen Bearbeitung rumlich geformter Flchen im Arbeitsraum der Maschine, 
bentigen Werkzeugmaschinen auer den drei Linearachsen X, Y und Z noch zustzliche 

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

639

Arbeitsvorbereitung

3.9 Transformationen

Achsen. Die zustzlichen Achsen beschreiben die Orientierung im Raum und werden 
nachfolgend Orientierungsachsen genannt. Sie stehen als Drehachsen bei vier 
Maschinentypen mit verschiedener Kinematik zur Verfgung. 

1. Zweiachsen-Schwenkkopf, z. B. Kardanischer Werkzeugkopf mit einer Rundachse parallel 

zu einer Linearachse bei festem Werkzeugtisch.

2. Zweiachsen-Drehtisch, z. B. fester Schwenkkopf mit drehbarem Werkzeugtisch um zwei 

Achsen.

3. Einachs-Schwenkkopf und Einachs-Drehtisch, z. B. ein drehbarer Schwenkkopf mit 

gedrehtem Werkzeug bei drehbarem Werkzeugtisch um eine Achse.

4. Zweiachsen-Schwenkkopf und Einachs-Drehtisch, z. B. bei drehbarem Werkzeugtisch um 
eine Achse und ein drehbarer Schwenkkopf mit drehbarem Werkzeug um sich selbst.

Die 3- und 4-Achs-Transformationen sind Sonderformen der 5-Achs-Transformation und 
werden analog zu den 5-Achs-Transformationen programmiert.

Die "Generische 3-/4-/5-/6-Achs-Transformation" deckt mit ihrem Funktionsumfang fr 
rechtwinklig angeordnete Rundachsen sowie die Transformationen fr den Kardanischen 
Frskopf ab und kann wie jede andere Orientierungstransformation auch fr diese vier 
Maschinentypen mit TRAORI aktiviert werden. Bei der generischen 5/6-Achs-
Transformationhat die Werkzeugorientierung einen weiteren dritten Freiheitsgrad, bei dem zur 
Werkzeugrichtung beliebig im Raum, das Werkzeug um die eigene Achse gedreht werden 
kann.

Weitere Informationen

Funktionshandbuch Transformationen; Mehrachstransformationen

Kinematikunabhngige Grundstellung der Werkzeugorientierung 

ORIRESET

Ist mit TRAORI eine Orientierungstransformation aktiv, dann knnen mit ORIRESET die 
Grundstellungen von bis zu 3 Orientierungsachsen mit optionalen Parametern A, B, C 
angegeben werden. Die Zuordnung der Reihenfolge der programmierten Parameter zu den 
Rundachsen erfolgt gem der durch die Transformation festgelegten Reihenfolge der 
Orientierungsachsen. Die Programmierung von ORIRESET(A, B, C) bewirkt, dass die 
Orientierungsachsen linear und synchron von ihrer momentanen Position zu der angegebenen 
Grundstellungsposition fahren.

Kinematische Transformationen  

TRANSMIT und TRACYL

Bei Frsbearbeitungen an Drehmaschinen kann fr die vereinbarte Transformation entweder

1. eine stirnseitige Bearbeitung in der Drehaufspannung mit TRANSMIT oder

2. eine Bearbeitung von beliebig verlaufenden Nuten an zylindrischen Krpern mit TRACYL

programmiert werden.

Kartesisches PTP-Fahren

Zur kinematischen Transformation gehrt auch das "Kartesisches PTP-Fahren" bei dem bis zu 
8 unterschiedliche Gelenkstellungen STAT= programmiert werden knnen. Die Positionen 

640

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.9 Transformationen

werden im kartesischen Koordinatensystem programmiert, wobei die Bewegung der Maschine 
in Maschinenkoordinaten erfolgt.

Weitere Informationen 
Funktionshandbuch Transformationen; Kinematische Transformation

Verkettete Transformationen

Es knnen jeweils zwei Transformationen hintereinander geschaltet werden. Bei der hierdurch 
verketteten zweiten Transformation werden die Bewegungsanteile der Achsen aus der ersten 
Transformation bernommen.  

Als erste Transformation sind mglich:

 Orientierungstransformation TRAORI

 Polartransformation TRANSMIT

 Zylindertransformation TRACYL

3.9.1.2

Orientierungsbewegungen bei den Transformationen

Verfahrbewegungen und Orientierungsbewegungen

Die Verfahrbewegungen der programmierbaren Orientierungen hngen primr vom 
Maschinentyp ab. Bei der Drei-, Vier- und Fnf-Achs-Transformation mit TRAORI beschreiben 
die rotatorischen Achsen oder die schwenkbaren Linearachsen die Orientierungsbewegungen 
des Werkzeugs.   

nderungen der Positionen der an der Orientierungstransformation beteiligten Rundachsen 
fhren zu Ausgleichsbewegungen der brigen Maschinenachsen. Die Position der 
Werkzeugspitze bleibt dabei unverndert.

Orientierungsbewegungen des Werkzeugs knnen ber die Rundachsbezeichner A, B, 
C der virtuellen Achsen je nach Anwendung entweder durch Angabe von Euler- bzw. RPY-
Winkeln oder Richtungs- bzw. Flchennormalenvektoren, Normierte Vektoren fr die 
Drehachse eines Kegels oder fr die Zwischenorientierung auf einer Kegelmantelflche 
programmiert werden.

Bei der Kinematischen Transformation mit TRANSMIT und TRACYL transformiert die 
Steuerung die programmierten Verfahrbewegungen des kartesischen Koordinatensystems 
auf die Verfahrbewegungen der realen Maschinenachsen.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

641

Arbeitsvorbereitung

3.9 Transformationen

Maschinenkinematik bei Drei-, Vier- und Fnf-Achs-Transformation TRAORI

Es kann entweder das Werkzeug oder der Werkzeugtisch mit bis zu zwei Rundachsen drehbar 
sein. Eine Kombination von jeweils einachsigem Schwenkkopf und Drehtisch ist auch 
mglich.   

Maschinentyp

Programmierung der Orientierung

Drei-Achs-Transformation Ma
schinentypen 1 und 2 

Vier-Achs-Transformation Ma
schinentypen 1 und 2 

Fnf-Achs-Transformation 
Maschinentypen 3 
Einachs-Schwenkkopf und 
Einachs-Drehtisch

Programmierung der Werkzeugorientierung nur in der Ebene, die 
senkrecht zu der rotatorischen Achse ist. Es existieren 
zwei translatorischen Achsen (Linearachsen) und 
einer rotatorischen Achse (Rundachse).

Programmierung der Werkzeugorientierung nur in der Ebene, die 
senkrecht zu der rotatorischen Achse ist. Es existieren 
drei translatorischen Achsen (Linearachsen) und 
einer rotatorischen Achse (Rundachse).

Programmierung der Orientierungstransformation. Kinematik mit 
drei Linearachsen und zwei orthogonalen Rundachsen. 
Die Rundachsen sind parallel zu zwei der drei Linearachsen. Die erste 
Rundachse wird von zwei kartesischen Linearachsen bewegt. Sie 
dreht die dritte Linearachse mit dem Werkzeug. Die zweite Rundachse 
dreht das Werkstck.

Generische 5/6-AchsTransformationen    

Maschinentyp

Programmierung der Orientierungstransformation

Generische Fnf-/Sechs-
Achs Transformation Maschi
nentypen 4 
Zweiachs-Schwenkkopf mit 
drehbarem Werkzeug um sich 
selbst und Einachs-Drehtisch

Programmierung der Orientierungstransformation. Kinematik mit 
drei Linearachsen und drei orthogonalen Rundachsen. 
Die Rundachsen sind parallel zu zwei der drei Linearachsen. Die erste 
Rundachse wird von zwei kartesischen Linearachsen bewegt. Sie 
dreht die dritte Linearachse mit dem Werkzeug. Die zweite Rundachse 
dreht das Werkstck. Die Grundorientierung des Werkzeugs kann 
durch eine zustzliche Drehung um sich selbst mit dem Drehwinkel 
THETA programmiert werden.

642

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

gedrehtes Werkst(cid:190)ckMaschinentyp 2 mit der Achsfolge ACgedrehtes Werkzeug gedrehtes Werkst(cid:190)ckMaschinentyp 3 mit der Achsfolge BCgedrehtes WerkzeugMaschinentyp 1 mit der Achsfolge CAACCBACYXWerkzeugtisch festWerkzeugtisch drehbar um Z-AchseWerkzeugtisch drehbar um X-Achse und Z-AchseSchwenkkopf festSchwenkkopf drehbar um Y-AchseSchwenkkopf drehbar um X-Achse und Z-AchseZZYXZArbeitsvorbereitung

3.9 Transformationen

Beim Aufruf der "Generischen Drei-, Vier- und Fnf-/Sechs-Achs Transformation" kann 
zustzlich die Grundorientierung des Werkzeugs bergeben werden. Es gelten die 
Einschrnkungen bezglich der Richtungen der Rundachsen nicht mehr. Wenn die 
Rundachsen nicht exakt senkrecht aufeinander stehen oder vorhandene Rundachsen nicht 
exakt parallel zu den Linearachsen stehen, kann die "Generische Fnf-/Sechs-Achs 
Transformation" bessere Ergebnisse der Werkzeugorientierung liefern.

Kinematische Transformationen TRANSMIT und TRACYL 

Fr Frsbearbeitungen an Drehmaschinen oder einer schrg zustellbaren Achse beim 
Schleifen gelten abhngig von der Transformation im Standardfall folgende 
Achsanordnungen: 

TRANSMIT

Aktivierung der Polar-Transformation

stirnseitige Bearbeitung in der 
Drehaufspannung   

eine Rundachse 
eine Zustellachse senkrecht zur Drehachse 
eine Lngsachse parallel zur Drehachse

TRACYL

Aktivierung der Zylindermanteltransformation

Bearbeitung von beliebig ver
laufenden Nuten an den zy
lindrischen Krper   

eine Rundachse 
eine Zustellachse senkrecht zur Drehachse 
eine Lngsachse parallel zur Drehachse

Kartesisches PTP-Fahren

Die Bewegung der Maschine erfolgt in Maschinenkoordinaten und wird programmiert mit:

TRAORI

Aktivierung der Transformation

PTP Punkt-zu-Punkt-Fahren

Position im kartesischen Koordinatensystem (MKS) anfahren

CP

STAT

TU

Bahnbewegung der kartesischen Achsen im (BKS)

Stellung der Gelenke ist abhngig von der Transformation

Um welchen Winkel die Achsen auf den krzesten Weg verfahren

PTP-Fahren bei generischer 5/6-AchsTransformation

Die Bewegung der Maschine erfolgt in Maschinenkoordinaten und die Werkzeugorientierung 
kann sowohl mit Rundachspositionen als auch mit von der Kinematik unabhngigen Vektoren 
Euler bzw. RPY-Winkel oder den Richtungsvektoren programmiert werden.

Dabei sind Rundachsinterpolation, Vektoreninterpolation mit Grokreisinterpolation oder 
Interpolation des Orientierungsvektors auf einer Kegelmantelflche mglich.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

643

Arbeitsvorbereitung

3.9 Transformationen

Beispiel Drei-, bis Fnf-Achs-Transformation bei einen Kardanischen Frskopf

Die Werkzeugmaschine hat mindestens 5 Achsen, davon

 Drei translatorische Achsen fr geradlinige Bewegungen, die den Arbeitspunkt an jede 

beliebige Position im Arbeitsaum bewegen.

 Zwei rotatorische Schwenkachsen, die unter einem projektierbaren Winkel (meist 45 Grad) 
angeordnet sind, ermglichen dem Werkzeug Orientierungen im Raum einzunehmen, die 
sich bei 45 Grad Anordnung auf eine Halbkugel beschrnken.

644

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.9 Transformationen

3.9.1.3

bersicht der Orientierungstransformation TRAORI

Mgliche Programmierungsarten im Zusammenhang mit TRAORI

Maschinentyp

Programmierung bei aktiver Transformation TRAORI

Maschinentypen 1, 2 oder 3 
Zweiachs-Schwenkkopf oder 
Zweiachs-Drehtisch oder eine 
Kombination von jeweils ein
achsigem Schwenkkopf und 
Drehtisch.

Achsfolge der Orientierungsachsen und die Orientierungsrichtung des 
Werkzeugs ist und entweder 
maschinenbezogen projektierbar ber Maschinendaten 
abhngig von der Maschinenkinemtik oder 
werkstckbezogen mit programmierbarer Orientierung 
unabhngig von der Maschinenkinemtik 
Die Drehrichtungen der Orientierungsachsen im Bezugssystem wird 
programmiert mit: 
- ORIMKS Bezugssystem = Maschinenkoordinatensystem 
- ORIWKS Bezugssystem = Werkstckkoordinatensystem 
Die Grundeinstellung ist ORIWKS.

Programmierung der Orientierungsachsen mit: 
A, B, C der Maschinenachspositionen direkt 
A2, B2, C2 Winkelprogrammierung virtueller Achsen mit 
- ORIEULER ber Euler-Winkel (Standard) 
- ORIRPY ber RPY-Winkel 
- ORIVIRT1 ber virtuelle Orientierungsachsen 1. Definition 
- ORIVIRT2 ber virtuelle Orientierungsachsen 2. Definition 
mit Unterscheidung der Interpolationsart:
lineare Interpolation 
- ORIAXES von Orientierungsachsen oder Maschinenachsen 
Grokreisinterpolation (Interpolation des Orientierungsvektors)
- ORIVECT von Orientierungsachsen 
Programmierung der Orientierungsachsen durch Angabe
A3, B3, C3 der Vektorkomponenten (Richtung-/Flchennormale) 
Programmierung der resultierenden Werkzeugorientierung 
A4, B4, C4 des Flchennormalvektors am Satzanfang 
A5, B5, C5 des Flchennormalvektors am Satzende 
LEAD Voreilwinkel fr die Werkzeugorientierung 
TILT Seitwrtswinkel fr die Werkzeugorientierung 

Interpolation des Orientierungsvektors auf einer Kegelmantelflche 
Orientierungsnderungen auf einer beliebig im Raum befindlichen 
Kegelmantelflche durch Interpolation:
- ORIPLANE in der Ebene (Groreisinterpolation) 
- ORICONCW auf einer Kegelmantelflche im Uhrzeigersinn 
- ORICONCCW auf einer Kegelmantelflche gegen Uhrzeigersinn 
A6, B6, C6 Richtungsvektors (Drehachse des Kegels) 
-OICONIO Interpolation auf einer Kegelmantelflche mit: 
A7, B7, C7 Zwischenvektoren (Start- und Endorientierung) oder 
- ORICONTO auf einer Kegelmantelflche tangentialer bergang 
Orientierungsnderungen bezogen auf eine Bahn mit 
- ORICURVE Vorgabe der Bewegung zweier Kontaktpunkte ber 
PO[XH]=(xe, x2, x3, x4, x5) Orientierungspolynome bis 5.Grades 
PO[YH]=(ye, y2, y3, y4, y5) Orientierungspolynome bis 5.Grades 
PO[ZH]=(ze, z2, z3, z4, z5) Orientierungspolynome bis 5.Grades

- ORIPATHS Glttung des Orientierungsverlaufs mit
A8, B8, C8 Umorientierungsphase des Werkzeugs entspricht: Rich
tung und Weglnge des Werkzeugs bei der Abhebebewegung

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

645

 
Arbeitsvorbereitung

3.9 Transformationen

Maschinentyp

Programmierung bei aktiver Transformation TRAORI

Maschinentypen 1 und 3 

Weitere Maschinentypen mit 
zustzlicher Drehung des 
Werkzeugs um sich selbst er
fordern eine 3. Rundachse 

Orientierungstransformation, 
wie z.B. generische 6-Achs-
Transformation. Drehungen 
des Orientierungsvektors.

Programmierung der Drehungen der Werkzeugorientierung mit 
LEAD Voreilwinkel Winkel relativ zum Flchennormalenvektor 
PO[PHI] Programmierung eines Polynoms bis 5.Grades
TILT Seitwrtswinkel Drehung um Bahntangente (Z-Richtung) 
PO[PSI] Programmierung eines Polynoms bis 5.Grades 
THETA Drehwinkel (Drehung um die Werkzeugrichtung in Z) 
THETA= Wert der am Satzende erreicht wird 
THETA=AC(...) Satzweise auf Maangabe absolut umschalten 
THETA=IC(...) Satzweise auf Kettenmaangabe umschalten 
THETA=e Programmierter Winkel G90/G91 interpolieren 
PO[THT]=(..) Programmierung eines Polynoms bis 5.Grades 
Programmierung des Drehvektors 
- ORIROTA Drehung absolut 
- ORIROTR relativer Drehvektor 
- ORIROTT tangentialer Drehvektor

Bahnrelative Orientierung fr 
Orientierungsnderungen re
lativ zur Bahn oder Drehung 
des Drehvektors tangential 
zur Bahn

Orientierungsnderungen relativ zur Bahn mit
- ORIPATH Werkzeugorientierung bezogen auf die Bahn 
- ORIPATHS zustzlich bei einen Knick im Orientierungsverlauf 
Programmierung des Drehvektors 
- ORIROTC tangentialer Drehvektor, Drehung zur Bahntangente

3.9.2

Drei-, Vier- und Fnf-Achs-Transformation (TRAORI)

3.9.2.1

Allgemeine Zusammenhnge Kardanischer Werkzeugkopf

Um optimale Schnittbedingungen beim Bearbeiten rumlich gekrmmter Flchen zu erzielen, 
muss der Anstellwinkel des Werkzeugs vernderbar sein. 

Mit welcher Maschinenkonstruktion dies erreicht wird, ist in den Achsdaten hinterlegt.

646

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

WerkzeugachseArbeitsvorbereitung

3.9 Transformationen

5-Achs-Transformation

Kardanischer Werkzeugkopf

Hier legen drei Linearachsen (X, Y, Z) und zwei Orientierungsachsen (C, A) den Anstellwinkel 
und Arbeitspunkt des Werkzeugs fest. Eine der beiden Orientierungsachsen ist als 
Schrgachse angelegt, hier im Beispiel A' - in vielen Fllen als 45-Anordnung.

In den hier gezeigten Beispielen sehen Sie die Anordnungen am Beispiel mit dem 
Kardanischen Werkzeugkopf der Maschinenkinematik CA!

Maschinenhersteller

Die Achsfolge der Orientierungsachsen und die Orientierungsrichtung des Werkzeugs kann 
abhngig von der Maschinenkinematik ber Maschinendaten eingestellt werden.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

647

CXYZ(cid:769),Akardanischer Werkzeugkopf, Variante 1Arbeitsvorbereitung

3.9 Transformationen

In diesem Beispiel liegt A' unter dem Winkel  zur X-Achse

Allgemein gelten folgende mgliche Zusammenhnge:

A' liegt unter dem Winkel  zur
B' liegt unter dem Winkel  zur
C' liegt unter dem Winkel  zur

X-Achse
Y-Achse
Z-Achse

Der Winkel  kann im Bereich 0 bis +89 ber Maschinendaten projektiert werden.

Mit schwenkbarer Linearachse

Hierbei handelt es sich um eine Anordnung mit bewegtem Werkstck und bewegtem 
Werkzeug. Die Kinematik setzt sich aus drei Linearachsen (X, Y, Z) und zwei rechtwinklig 
angeordneten Drehachsen zusammen. Die erste Rundachse wird z. B. ber einen 
Kreuzschlitten von zwei Linearachsen bewegt, das Werkzeug steht parallel zur dritten 
Linearachse. Die zweite Drehachse dreht das Werkstck. Die dritte Linearachse 
(Schwenkachse) liegt in der Ebene des Kreuzschlittens.  

648

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 kardanischer Werkzeugkopf, Variante 2(cid:769)CA,Arbeitsvorbereitung

3.9 Transformationen

Die Achsfolge der rotatorischen Achsen und die Orientierungsrichtung des Werkzeugs kann 
abhngig von der Maschinenkinematik ber Maschinendaten eingestellt werden.

Es gelten folgende mgliche Zusammenhnge:

Achsen:

1. Rundachse

2. Rundachse

Geschwenkte Linearachse

Achsfolgen:

A A B B C C

B C A C A B 

Z Y Z X Y X

Weitere Informationen zu konfigurierbaren Achsfolgen fr die Orientierungsrichtung des 
Werkzeugs siehe Funktionshandbuch Transformationen.

3.9.2.2

Drei, Vier, und Fnf- Achs-Transformation (TRAORI)

Der Anwender kann zwei bzw. drei translatorische Achsen und eine rotatorische Achse 
projektieren. Die Transformationen gehen davon aus, dass die rotatorische Achse orthogonal 
auf der Orientierungsebene steht.

Die Orientierung des Werkzeugs ist nur in der Ebene mglich, die senkrecht zur rotatorischen 
Achse ist. Die Transformation untersttzt die Maschinentypen mit beweglichem Werkzeug und 
beweglichem Werkstck.

Die Projektierung und Programmierung der Drei- und Vier-Achs-Transformationen sind analog 
zu den Fnf-Achs-Transformationen.  

Weitere Informationen: Funktionshandbuch Transformationen

Syntax

TRAORI(<n>)

TRAORI(<n>,<X>,<Y>,<Z>,<A>,<B>)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

649

BAZYXArbeitsvorbereitung

3.9 Transformationen

TRAFOOF

Bedeutung

TRAORI:

Aktiviert die erste vereinbarte Orientierungstransformation

TRAORI(<n>):

Aktiviert die mit n vereinbarte Orientierungstransformation

<n>:

Nummer der Transformation

Wert:

1 oder 2

Beispiel:

<X>,<Y>,<Z>:

Komponente des Orientierungsvektors, in die das Werkzeug zeigt.

TRAORI(1) aktiviert Orientierungstransformation 1

<A>,<B>:

TRAFOOF:

Programmierbarer Offset fr die Rundachsen

Transformation ausschalten

Werkzeugorientierung

Abhngig von der gewhlten Orientierungsrichtung des Werkzeugs muss im NC-Programm 
die aktive Arbeitsebene (G17, G18, G19) so eingestellt werden, dass die 
Werkzeuglngenkorrektur in Richtung der Werkzeugorientierung wirkt.

Hinweis

Nach dem Einschalten der Transformation beziehen sich Positionsangaben (X, Y, Z) immer auf 
die Spitze des Werkzeugs. nderung der Positionen der an der Transformation beteiligten 
Rundachsen fhren zu Ausgleichsbewegungen der brigen Maschinenachsen, wodurch die 
Position der Werkzeugspitze unverndert bleibt.

Die Orientierungstransformation ist immer von der Werkzeugspitze zur Werkzeugaufnahme 
gerichtet.

Offset fr Orientierungsachsen

Bei Aktivierung der Orientierungstransformation kann ein zustzlicher Offset fr 
Orientierungsachsen direkt programmiert werden.

Es drfen Parameter weggelassen werden, wenn bei der Programmierung die richtige 
Reihenfolge eingehalten wird.

Beispiel:

TRAORI(, , , ,A,B) ; wenn nur ein einziger Offset eingegeben werden soll

Alternativ zur direkten Programmierung kann der zustzliche Offset fr Orientierungsachsen 
auch aus der momentan aktiven Nullpunktverschiebung automatisch bernommen werden. 
Die bernahme wird ber Maschinendaten projektiert.

TRAORI(1,0,0,1)

; Die Grundorientierung des Werkzeugs zeigt in Z-Richtung

TRAORI(1,0,1,0)

; Die Grundorientierung des Werkzeugs zeigt in Z-Richtung

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Beispiele

650

TRAORI(1,0,1,1)

; Die Grundorientierung des Werkzeugs zeigt in Y/Z-Richtung 
(entspricht Stellung -45)

Arbeitsvorbereitung

3.9 Transformationen

3.9.2.3

Varianten der Orientierungsprogrammierung und Grundstellung (ORIRESET)

Orientierungsprogrammierung der Werkzeugorientierung bei TRAORI  

In Verbindung mit einer programmierbaren Orientierungstransformation TRAORI knnen 
zustzlich zu den Linearachsen X, Y, Z auch ber die Rundachsbezeichner A.., B..., C... 
Achspositionen oder virtuelle Achsen mit Winkeln oder Vektorkomponenten programmiert 
werden. Fr Orientierungs- und Maschinenachsen sind verschiedene Interpolationsarten 
mglich. Unabhngig davon, welche Orientierungspolynome PO[Winkel] und Achspolynome 
PO[Achse] gerade aktiv sind, knnen mehrere unterschiedliche Polynomarten wie z.B. G1, G2, 
G3, CIP oder POLY programmiert sein.

Die nderung der Orientierung des Werkzeuges kann auch ber Orientierungsvektoren 
programmiert werden. Hierbei kann die Endorientierung jedes Satzes entweder durch direkte 
Programmierung des Vektors oder durch Programmierung der Rundachspositionen erfolgen.

Varianten der Orientierungsprogrammierung bei Drei- bis Fnf-Achs-Transformationen

Folgende Varianten der Orientierungsprogrammierung schlieen sich gegenseitig aus.

A, B, C

A2, B2, C2

A3, B3, C3

LEAD, TILT

A4, B4, C4
A5, B5, C5

A6, B6, C6
A7, B7, C7

A8, B8, C8

Direkte Angabe der Rundachspositionen

Winkelprogrammierung virtueller Achsen ber Eulerwinkel oder RPY-
Winkel 

Angabe der Vektorkomponenten 

Angabe der Voreil- und Seitwrtswinkel bezogen auf die Bahn und 
Oberflche 

Flchennormalenvektor am Satzanfang und am Satzende 

Interpolation des Orientierungsvektors auf einer Kegelmantelflche 

Umorientierung des Werkzeugs, Richtung und Weglnge der Abhebe
bewegung

Grundstellung der Werkzeugorientierung anfahren (ORIRESET) 

Durch ORIRESET(...) werden die Orientierungsachsen der jeweiligen Maschinenkinematik 
linear und synchron von ihrer aktuellen Position auf die programmierte Grundstellungsposition 
verfahren. Wenn fr eine Achse keine Grundstellungsposition programmiert ist, dann wird die 
Position aus dem dazugehrigen Maschinendatum $MC_TRAFO5_ROT_AX_OFFSET_1/2 
verwendet. 

Aktive Frames der Rundachsen werden nicht bercksichtigt. 

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

651

Arbeitsvorbereitung

3.9 Transformationen

Beispiele fr Maschinenkinematik CA (Kanalachsnamen C, A)

Befehle

ORIRESET(90, 45)

ORIRESET(, 30)

ORIRESET( )

Beschreibung

Achse C: 90
Achse A: 45

Achse C: $MC_TRAFO5_ROT_AX_OFFSET_1/2[0]
Achse A: 30

Achse C: $MC_TRAFO5_ROT_AX_OFFSET_1/2[0]
Achse A: $MC_TRAFO5_ROT_AX_OFFSET_1/2[1]

Beispiele fr Maschinenkinematik CAC (Kanalachsnamen C, A, B)

Befehle

ORIRESET(90, 45, 90)

Beschreibung

Achse C: 90
Achse A: 45
Achse B: 90

ORIRESET( )

Hinweis

Achse C: $MC_TRAFO5_ROT_AX_OFFSET_1/2[0]
Achse A: $MC_TRAFO5_ROT_AX_OFFSET_1/2[1]
Achse B: $MC_TRAFO5_ROT_AX_OFFSET_1/2[2]

Das Anfahren der Grundstellung der Werkzeugorientierung mit ORIRESET(...) darf nur bei 
aktiver Orientierungstransformation TRAORI(...) erfolgen.

Programmierung der Drehungen LEAD, TILT und THETA

Voreilwinkel LEAD und Seitwrtswinkel TILT 

Die Drehungen der Werkzeugorientierung werden bei der Drei- bis Fnf-Achs-Transformation 
mit den Voreilwinkel LEAD und den Seitwrtswinkel TILT programmiert.

Drehwinkel THETA 

Bei einer Transformation mit dritter Rundachse kann sowohl fr die Orientierung mit 
Vektorkomponenten als auch mit Programmierung der Winkel LEAD, TILT die Drehung des 
Werkzeugs um sich selbst mit dem Drehwinkel THETA programmiert werden.

3.9.2.4

Programmierung der Werkzeugorientierung (A..., B..., C..., LEAD, TILT)

Fr die Programmierung der Orientierung des Werkzeugs gibt es folgende Mglichkeiten: 

1. Direkte Programmierung der Bewegung der Rundachsen. Die Orientierungsnderung 
erfolgt immer im Basis- bzw. Maschinen-Koordinatensystem. Die Orientierungsachsen 
werden als Synchronachsen verfahren.

2. Programmierung in Euler- oder RPY-Winkeln gem Winkeldefinition ber A2, B2, C2.

3. Programmierung des Richtungsvektors ber A3, B3, C3. Der Richtungsvektor zeigt von 

der Werkzeugspitze in Richtung Werkzeugaufnahme.

4. Programmierung des Flchennormalenvektors am Satzanfang mit A4, B4, C4 und am 

Statzende mit A5, B5, C5 (Stirnfrsen).

652

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.9 Transformationen

5. Programmierung ber Voreilwinkel LEAD und Seitwrtswinkel TILT

6. Programmierung der Drehachse des Kegels als normierter Vektor ber A6, B6, C6 oder 

der Zwischenorientierung auf der Kegelmantelflche ber A7, B7, C7, 
siehe Kapitel "Orientierungsprogrammierung entlang einer Kegelmantelflche 
(ORIPLANE, ORICONxx)".

7. Programmierung der Umorientierung, Richtung und Weglnge des Werkzeugs whrend 

der Abhebebewegung ber A8, B8, C8, 
siehe Kapitel "Glttung des Orientierungsverlaufs (ORIPATHS A8=, B8=, C8=)"

Hinweis

In allen Fllen ist die Orientierungsprogrammierung nur zulssig, wenn eine 
Orientierungstransformation eingeschaltet ist.

Vorteil: Diese Programme sind auf jede Maschinenkinematik portierbar.

Definition der Werkzeugorientierung ber G-Befehl

Hinweis

Maschinenhersteller

ber Maschinendatum kann zwischen Euler- oder RPY-Winkeln umgeschaltet werden. Bei 
entsprechenden Maschinendaten Einstellungen ist eine Umschaltung sowohl abhngig als 
auch unabhngig vom aktiven G-Befehl der Gruppe 50 mglich. Folgende 
Einstellmglichkeiten stehen zur Auswahl:

1. Wenn beide Maschinendaten fr die Definition der Orientierungsachsen und Definition der 

Orientierungswinkel ber G-Befehl auf Null gesetzt sind: 
Die mit A2, B2, C2 programmierten Winkel werden abhngig vom Maschinendatum 
Winkeldefinition der Orientierungsprogrammierung entweder als Euler- oder RPY-Winkeln 
interpretiert.

2. Wenn das Maschinendatum fr die Definition der Orientierungsachsen ber G-Befehl auf 

Eins gesetzt ist, erfolgt Umschaltung 
abhngig vom aktiven G-Befehl der Gruppe 50: 
Die mit A2, B2, C2 programmierten Winkel werden gem einem der aktiven G-
Befehle ORIEULER, ORIRPY, ORIVIRT1, ORIVIRT2, ORIAXPOS und ORIPY2 
interpretiert. Die mit den Orientierungsachsen programmierten Werte werden 
entsprechend dem aktiven G-Befehl der Gruppe 50 auch als Orientierungswinkel 
interpretiert.

3. Wenn das Maschinendatum fr die Definition der Orientierungswinkel ber G-Befehl auf 

Eins und das Maschinendatum fr die Definition der Orientierungsachsen ber G-Befehl auf 
Null gesetzt ist erfolgt Umschaltung 
unabhngig vom aktiven G-Befehl der Gruppe 50:
Die mit A2, B2, C2 programmierten Winkel werden gem einem der aktiven G-
Befehle ORIEULER, ORIRPY, ORIVIRT1, ORIVIRT2 ORIAXPOS und ORIPY2 
interpretiert. Die mit den Orientierungsachsen programmierten Werte werden unabhngig 
vom aktiven G-Befehl der Gruppe 50 immer als Rundachspositionen interpretiert.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

653

Arbeitsvorbereitung

3.9 Transformationen

Syntax

Rundachspositionen

G1 X<Wert> Y<Wert> Z<Wert> A<Wert> B<Wert> C<Wert> 

Eulerwinkel

G1 X<Wert> Y<Wert> Z<Wert> A2=<Wert> B2=<Wert> C2=<Wert>

Richtungsvektor

G1 X<Wert> Y<Wert> Z<Wert> A3=<Wert> B3=<Wert> C3=<Wert>

Flchennormalenvektor am Satzanfang

G1 X<Wert> Y<Wert> Z<Wert> A4=<Wert> B4=<Wert> C4=<Wert>

Flchennormalenvektor am Satzende

G1 X<Wert> Y<Wert> Z<Wert> A5=<Wert> B5=<Wert> C5=<Wert> 

Voreilwinkel

LEAD=<Wert>

Seitwrtswinkel

TILT=<Wert>

Bedeutung

G1:

X, Y, Z:

A, B, C:

Linearinterpolation

Linearachspositionen

Rundachspositionen

A2=, B2=, C2=:

Winkelprogrammierung (Euler- oder RPY-Winkel)

A3=, B3=, C3=:

Richtungsvektor in X, Y und Z-Koordinaten des WKS

A4=, B4=, C4=:

Flchennormalenvektor am Satzanfang in X, Y und Z-Koordinaten des WKS

A5=, B5=, C5=:

Flchennormalenvektors am Satzende in X, Y und Z-Koordinaten des WKS

LEAD= :

TILT= :

Voreilwinkel 1)

Seitwrtswinkel 1)

1) Die Interpretation der Winkelangaben ist abhngig von der Einstellung in MD21094 $MC_ORI
PATH_MODE

Weitere Informationen

In der Regel werden 5-Achs-Programme von CAD/CAM-Systemen erzeugt und nicht an der 
Steuerung eingegeben. Deshalb wenden sich die folgenden Erklrungen hauptschlich an 
Programmierer von Postprozessoren.

654

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.9 Transformationen

Folgende Befehle zur Orientierungsprogrammierung stehen zur Verfgung:

Befehl

ORIEULER:

ORIRPY:

ORIRPY2:

ORIVIRT1:

Bedeutung

Euler-Winkel mit Drehreihenfolge ZX'Z''

RPY-Winkel mit Drehreihenfolge XY'Z''

RPY-Winkel mit Drehreihenfolge ZY'X''

Virtuelle Orientierungsachsen mit frei definierbarer Drehreihenfolge ber:

MD21120 $MC_ORIAX_TURN_TAB_1

ORIVIRT2:

Virtuelle Orientierungsachsen mit frei definierbarer Drehreihenfolge ber:

MD21130 $MC_ORIAX_TURN_TAB_2

ORIAXPOS:

Virtuelle Orientierungsachsen mit Rundachspositionen

Hinweis

ber Maschinendaten knnen vom Maschinenhersteller verschiedene Varianten definiert 
werden. Bitte beachten Sie die Angaben des Maschinenherstellers.

Programmierung in Eulerwinkeln ORIEULER, Drehreihenfolge Z X' Z''   

Die bei der Orientierungsprogrammierung ORIEULER mit A2, B2, C2 programmierten Werte 
werden als Eulerwinkel (in Grad) interpretiert.

Der neue Orientierungsvektor ergibt sich, durch folgende drei Drehungen des ursprnglichen 
Orientierungsvektors

1. mit der Rundachse A2 um die Koordinatenachse Z

2. mit der Rundachse B2 um die neue Koordinatenachse X'

3. mit der Rundachse C2 um die neue Koordinatenachse Z''

In diesem Fall ist der Wert von C2 (Drehung um neue Z-Achse) bedeutungslos und muss nicht 
programmiert werden.

Programmierung in RPY-Winkeln ORIRPY, Drehreihenfolge X Y' Z''

Die bei der Orientierungsprogrammierung ORIRPY mit A2, B2, C2 programmierten Werte 
werden als RPY-Winkel (in Grad) mit der Drehreihenfolge X Y' Z'' interpretiert. 

Hinweis

Im Gegensatz zur Programmierung mit ORIEULER haben bei ORIRPY alle drei Werte Einfluss 
auf den Orientierungsvektor.

Der neue Orientierungsvektor ergibt sich, durch folgende drei Drehungen des ursprnglichen 
Orientierungsvektors

1. mit der Rundachse A2 um die Koordinatenachse X

2. mit der Rundachse B2 um die neue Koordinatenachse Y'

3. mit der Rundachse C2 um die neue Koordinatenachse Z''

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

655

Arbeitsvorbereitung

3.9 Transformationen

Programmierung des Richtungsvektors 

Die Komponenten des Richtungsvektors werden mit A3, B3, C3 programmiert. Der Vektor 
zeigt in Richtung Werkzeugaufnahme; die Lnge des Vektors ist dabei ohne Bedeutung. 

Nicht programmierte Vektorkomponenten werden gleich Null gesetzt.

X, Y, Z

Koordinatenachsen des WKS

A3, B3, 
C3

O
Bild 3-3

Komponenten des Richtungsvektors

Orientierungsvektor

Programmierung des Richtungsvektors

Programmierung der Werkzeugorientierung mit LEAD und TILT

Die resultierende Werkzeugorientierung wird ermittelt aus:

 Bahntangente

 Flchennormalenvektor

Am Satzanfang A4, B4, C4 und am Satzende A5, B5, C5

 Voreilwinkel LEAD 

Winkel in der von Bahntangente und Flchennormalenvektor aufgespannten Ebene

 Seitwrtswinkel TILT am Satzende

Winkel in der Ebene senkrecht zur Bahntangente relativ zum Flchennormalenvektor

656

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:37)(cid:22)(cid:3)(cid:32)(cid:17)(cid:17)(cid:17)(cid:36)(cid:22)(cid:3)(cid:32)(cid:17)(cid:17)(cid:17)(cid:59)(cid:60)(cid:38)(cid:22)(cid:3)(cid:32)(cid:17)(cid:17)(cid:17)(cid:61)(cid:50)Arbeitsvorbereitung

3.9 Transformationen

T

S

N

B

Bahntangente

Senkrechte zur Bahntangente

Flchennormale

Bahn

TCP Tool Center Point

O
Bild 3-4

Orientierungsvektor

Programmierung von LEAD TILT

Hinweis

Verhalten bei Innenecken bei 3D-WZK

Wenn der Satz an einer Innenecke verkrzt wird, wird die programmierte 
Werkzeugorientierung trotzdem am Satzende eingenommen.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

657

(cid:37)(cid:22)(cid:3)(cid:32)(cid:17)(cid:17)(cid:17)(cid:36)(cid:22)(cid:3)(cid:32)(cid:17)(cid:17)(cid:17)(cid:55)(cid:55)(cid:44)(cid:47)(cid:55)(cid:54)(cid:38)(cid:22)(cid:3)(cid:32)(cid:17)(cid:17)(cid:17)(cid:49)(cid:37)(cid:55)(cid:38)(cid:51)(cid:50)(cid:47)(cid:40)(cid:36)(cid:39)Arbeitsvorbereitung

3.9 Transformationen

3.9.2.5

Stirnfrsen (A4, B4, C4, A5, B5, C5)

Stirnfrsen dient zur Bearbeitung beliebig gekrmmter Oberflchen.  

Fr diese Art des 3D-Frsens bentigen Sie die zeilenweise Beschreibung der 3D-Bahnen auf 
der Werkstckoberflche.

Die Berechnungen werden unter Bercksichtigung der Werkzeugform und 
Werkzeugabmessungen blicherweise im CAM durchgefhrt. Die fertig berechneten NC-
Stze werden dann ber Postprozessoren in die Steuerung eingelesen.

Programmierung der Bahnkrmmung

Beschreibung der Flchen

Die Beschreibung der Bahnkrmmung erfolgt ber Flchennormalenvektoren mit folgenden 
Komponenten:

A4, B4, C4 Startvektor am Satzanfang

A5, B5, C5 Endvektor am Satzende

Steht in einem Satz nur der Startvektor, bleibt der Flchennormalenvektor ber den ganzen 
Satz konstant. Steht in einem Satz nur der Endvektor, so wird vom Endwert des vorherigen 
Satzes ber Grokreisinterpolation zum programmierten Endwert interpoliert.

Sind Start- und Endvektor programmiert, so wird zwischen beiden Richtungen ebenfalls ber 
Grokreisinterpolation interpoliert. Hierdurch lassen sich kontinuierlich glatte Bahnwege 
erzeugen.

In der Grundstellung zeigen Flchennormalenvektoren unabhngig von der aktiven Ebene 
G17 bis G19 in Z-Richtung.

Die Lnge eines Vektors ist ohne Bedeutung.

Nicht programmierte Vektorkomponenten werden zu Null gesetzt.

658

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

A4B4C4A5B5C5Arbeitsvorbereitung

3.9 Transformationen

Bei aktivem ORIWKS (siehe "Bezug der Orientierungsachsen (ORIWKS, ORIMKS) 
(Seite 659)") beziehen sich die Flchennormalenvektoren auf den aktiven Frame und werden 
bei Frame-Drehung mitgedreht.

Maschinenhersteller

Der Flchennormalenvektor muss innerhalb eines ber Maschinendatum einstellbaren 
Grenzwertes senkrecht zur Bahntangente stehen, ansonsten wird Alarm ausgegeben.

3.9.2.6

Bezug der Orientierungsachsen (ORIWKS, ORIMKS)

Bei Orientierungsprogrammierung im Werkstckkoordinatensystem ber

 Euler- bzw. RPY-Winkel oder

 Orientierungsvektor

kann der Verlauf der Drehbewegung ber ORIMKS/ORIWKS eingestellt werden. 

Hinweis

Maschinenhersteller

Die Interpolationsart fr die Orientierung wird festgelegt mit dem Maschinendatum:

MD21104 $MC_ORI_IPO_WITH_G_CODE

= FALSE: Bezug sind die G-Befehle ORIWKS und ORIMKS

= TRUE: Bezug sind die G-Befehle der 51. Gruppe (ORIAXES, ORIVECT, ORIPLANE, ...)

Syntax

Bedeutung

ORIMKS=...

ORIWKS=...

ORIMKS:

ORIWKS:

Hinweis

Drehung im Maschinenkoordinatensystem

Drehung im Werkstckkoordinatensystem

ORIWKS ist Grundeinstellung. Ist bei einem Fnf-Achs-Programm nicht von vornherein klar, 
auf welcher Maschine es ablaufen soll, so ist grundstzlich ORIWKS zu whlen. Welche 
Bewegungen die Maschine tatschlich ausfhrt, hngt von der Maschinenkinematik ab.

Mit ORIMKS knnen tatschliche Maschinenbewegungen programmiert werden, z. B. um 
Kollisionen mit Vorrichtungen o. . zu vermeiden.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

659

Arbeitsvorbereitung

3.9 Transformationen

Weitere Informationen

Bei ORIMKS ist die ausgefhrte Werkzeugbewegung von der Maschinenkinematik abhngig. 
Bei Orientierungsnderung mit raumfester Werkzeugspitze wird zwischen den 
Rundachspositionen linear interpoliert.

Bei ORIWKS ist die Werkzeugbewegung von der Maschinenkinematik unabhngig. Bei 
Orientierungsnderung mit raumfester Werkzeugspitze bewegt sich das Werkzeug in der vom 
Anfangs- und Endvektor aufgespannten Ebene.

Singulre Stellungen

Hinweis

ORIWKS

Orientierungsbewegungen im Bereich der singulren Stellung der Fnf-Achs-Maschine 
erfordern groe Bewegungen der Maschinenachsen. (Beispielsweise sind bei einem 
Drehschwenkkopf mit C als Drehachse und A als Schwenkachse alle Stellungen mit A=0 
singulr.)

Maschinenhersteller

Um die Maschinenachsen nicht zu berlasten, senkt die Geschwindigkeitsfhrung die 
Bahngeschwindigkeit in der Nhe der singulren Stellen stark ab. 

Mit den Maschinendaten

$MC_TRAFO5_NON_POLE_LIMIT

$MC_TRAFO5_POLE_LIMIT

kann die Transformation so parametriert werden, dass Orientierungsbewegungen in der Nhe 
des Pols durch den Pol gelegt werden und eine zgige Bearbeitung mglich ist.

Singulre Stellen werden nur mit dem MD $MC_TRAFO5_POLE_LIMIT behandelt.

660

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Ebene, die beideVektoren aufspanntVektor amSatzendeVektor amSatzanfangArbeitsvorbereitung

3.9 Transformationen

Weitere Informationen: Funktionshandbuch Transformationen

3.9.2.7

Programmierung der Orientierungsachsen (ORIAXES, ORIVECT, ORIEULER, ORIRPY, 
ORIRPY2, ORIVIRT1, ORIVIRT2)

Die Funktion "Orientierungsachsen" beschreibt die Orientierung des Werkzeugs im Raum und 
wird durch Programmierung der Offsets fr die Rundachsen erreicht. Ein weiterer dritter 
Freiheitsgrad kann durch die zustzliche Drehung des Werkzeugs um sich selbst erzielt 
werden. Diese Werkzeugorientierung erfolgt beliebig im Raum ber eine dritte Rundachse und 
erfordert die Sechs-Achs-Transformation. Die Eigendrehung des Werkzeugs um sich selbst 
wird abhngig von der Interpolationsart der Drehvektoren mit dem Drehwinkel THETA 
festgelegt (siehe "Drehungen der Werkzeugorientierung (ORIROTA, ORIROTR, ORIROTT, 
ORIROTC, THETA) (Seite 670)".  

Orientierungsachsen werden ber die Achsbezeichner A2, B2, C2 programmiert.   

Syntax

Bedeutung

N... ORIAXES/ORIVECT

N... G1 X Y Z A B C

; Lineare oder Grokreisinterpolation

N... ORIPLANE

; Orientierungsinterpolation der Ebene

N... ORIEULER/ORIRPY/ORIRPY2

; Orientierungswinkel Euler-/RPY-Winkel

N... G1 X Y Z A2= B2= C2=

; Winkelprogrammierung virtueller Achsen

N... ORIVIRT1/ORIVIRT2

; virtuelle Orientierungsachsen Def. 1/2

N... G1 X Y Z A3= B3= C3=

; Richtungsvektorprogrammierung

Hinweis

Fr Orientierungsnderungen entlang einer im Raum befindlichen Kegelmantelflche knnen 
weitere Rundachsoffsets der Orientierungsachsen programmiert werden (siehe 
"Orientierungsprogrammierung entlang einer Kegelmantelflche (ORIPLANE, ORICONCW, 
ORICONCCW, ORICONTO, ORICONIO) (Seite 663)".

ORIAXES:

ORIVECT:

ORIMKS:

ORIWKS:

A= B= C=:

ORIEULER:

Lineare Interpolation der Maschinen- oder Orientierungsachsen

Grokreisinterpolation (identisch mit ORIPLANE)

Drehung im Maschinenkoordinatensystem

Drehung im Werkstckkoordinatensystem 

Beschreibung siehe "Bezug der Orientierungsachsen (ORIWKS, 
ORIMKS) (Seite 659)".

Programmierung der Maschinenachsposition

Orientierungsprogrammierung ber Euler-Winkel

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

661

 
 
 
 
 
 
 
Arbeitsvorbereitung

3.9 Transformationen

ORIRPY:

Orientierungsprogrammierung ber RPY-Winkel

Die Drehreihenfolge ist XYZ, wobei gilt:

 A2 ist der Drehwinkel um X

 B2 ist der Drehwinkel um Y

 C2 ist der Drehwinkel um Z

ORIRPY2:

Orientierungsprogrammierung ber RPY-Winkel

Die Drehreihenfolge ist ZYX, wobei gilt:

 A2 ist der Drehwinkel um Z

 B2 ist der Drehwinkel um Y

 C2 ist der Drehwinkel um X

A2= B2= C2=:

Winkelprogrammierung virtueller Achsen

ORIVIRT1/ORIVIRT2:

Orientierungsprogrammierung ber virtuelle Orientierungsachsen

Definition 1:
Festlegung nach MD21120 $MC_ORIAX_TURN_TAB_1

Definition 2:
Festlegung nach MD21130 $MC_ORIAX_TURN_TAB_2

A3= B3= C3=:

Richtungsvektorprogrammierung der Richtungsachse

Weitere Informationen

Maschinenhersteller

Mit MD21102 $MC_ORI_DEF_WITH_G_CODE wird festgelegt, wie die programmierten 
Winkel A2, B2, C2 definiert werden:

Definition erfolgt nach MD21100 $MC_ORIENTATION_IS_EULER (Standard) oder Definition 
erfolgt nach G-Gruppe 50 (ORIEULER, ORIRPY, ORIVIRT1, ORIVIRT2).

Mit MD21104 $MC_ORI_IPO_WITH_G_CODE wird festgelegt, welche Interpolationsart 
wirksam ist: ORIWKS/ORIMKS oder ORIAXES/ORIVECT.

Betriebsart JOG

Die Orientierungswinkel werden in dieser Betriebsart immer linear interpoliert. Beim 
kontinuierlichen und inkrementellen Verfahren ber Verfahrtasten kann nur eine 
Orientierungsachse verfahren werden. ber die Handrder knnen die Orientierungsachsen 
gleichzeitig verfahren werden. 

Fr das manuelle Verfahren von Orientierungsachsen wirkt der kanalspezifische Vorschub-
Override-Schalter bzw. der Eilgang-Override-Schalter bei Eilgangberlagerung.

Mit folgenden Maschinendaten ist eine separate Geschwindigkeitsvorgabe mglich:

MD21160 $MC_JOG_VELO_RAPID_GEO

MD21165 $MC_JOG_VELO_GEO

MD21150 $MC_JOG_VELO_RAPID_ORI

662

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.9 Transformationen

MD21155 $MC_JOG_VELO_ORI

Hinweis

SINUMERIK 840D sl mit "Transformationspaket Handling"

Mit der Funktion "Kartesisches manuelles Verfahren" kann im JOG-Betrieb die Translation von 
Geometrieachsen in den Bezugssystemen MKS, WKS und TCS getrennt voneinander 
eingestellt werden.

Weitere Informationen: Funktionshandbuch Transformationen

3.9.2.8

Orientierungsprogrammierung entlang einer Kegelmantelflche (ORIPLANE, 
ORICONCW, ORICONCCW, ORICONTO, ORICONIO)

Mit der erweiterten Orientierung ist es mglich, Orientierungsnderungen entlang sich einer im 
Raum befindlichen Kegelmantelflche auszufhren. Die Interpolation des 
Orientierungsvektors auf einer Kegelmantelflche erfolgt mit den modalen Befehlen 
ORICONxx. Fr die Interpolation in einer Ebene kann die Endorientierung mit ORIPLANE 
programmiert werden. Generell wird die Startorientierung durch die vorhergehenden Stze 
festgelegt.  

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

663

Werkst(cid:190)ck-oberfl(cid:166)che(cid:152)ffnungswinkel PSIdes KegelsORICONCWim UhrzeigersinnDrehwinkelPHIRichtungsachseStartorientierung durch vorhergehenden SatzORICONCWWgegen UrzeigersinnEndorientierungZwischenorientierungArbeitsvorbereitung

3.9 Transformationen

Programmierung

Die Endorientierung wird entweder durch Angabe der Winkelprogrammierung in Euler- oder 
RPY-Winkel mit A2, B2, C2 oder durch Programmierung der Rundachspositionen mit A, B, C 
festgelegt. Fr die Orientierungsachsen entlang der Kegelmantelflche sind weitere 
Programmierangaben erforderlich:

 Drehachse des Kegels als Vektor mit A6, B6, C6

 ffnungswinkel PSI mit den Bezeichner NUT

 Zwischenorientierung im Kegelmantel mit A7, B7, C7

Hinweis

Programmierung des Richtungsvektor A6, B6, C6 fr die Drehachse des Kegels

Die Programmierung einer Endorientierung ist nicht unbedingt erforderlich. Ist keine 
Endorientierung angegeben, dann wird ein voller Kegelmantel mit 360 Grad interpoliert.

Programmierung des ffnungswinkel des Kegels mit NUT=winkel

Die Angabe einer Endorientierung ist zwingend erforderlich.

Ein vollstndiger Kegelmantel mit 360 Grad kann auf diese Weise nicht interpoliert werden.

Programmierung der Zwischenorientierung A7, B7, C7 im Kegelmantel

Die Angabe einer Endorientierung ist zwingend erforderlich. Die Orientierungsnderung 
und Drehrichtung wird eindeutig durch die drei Vektoren Start-, End- und 
Zwischenorientierung festgelegt. Alle drei Vektoren mssen hierbei voneinander 
unterschiedlich sein. Ist die programmierte Zwischenorientierung parallel zur Start- oder 
Endorientierung, dann wird eine lineare Grokreisinterpolation der Orientierung in der 
Ebene, die von Start- und Endvektor aufgespannt wird, durchgefhrt.

Erweiterte Orientierungsinterpolation auf einer Kegelmantelflche
N... ORICONCW oder ORICONCCW
N... A6= B6= C6= A3= B3= C3=

oder

N... ORICONTO

N... G1 X Y Z A6= B6= C6=
oder

N... ORICONIO

N... G1 X Y Z A7= B7= C7=

N... PO[PHI]=(a2, a3, a4, a5)

N... PO[PSI]=(b2, b3, b4, b5)

Interpolation auf einen Kegelmantel mit

Richtungsvektor im/gegen Uhrzeigersinn 
des Kegels und Endorientierung oder

tangentialem bergang und
Angabe der Endorientierung

oder 
Angabe der Endorientierung und einer 
Zwischenorientierung im Kegelmantel mit

Polynome fr Drehwinkel und 
Polynome fr ffnungswinkel

Parameter

ORIPLANE:

ORICONCW:

ORICONCCW:

ORICONTO:

Interpolation in der Ebene (Grokreisinterpolation)

Interpolation auf einer Kegelmantelflche im Uhrzeigersinn

Interpolation auf einer Kegelmantelflche gegen Uhrzeigersinn

Interpolation auf einer Kegelmantelflche tangentialer bergang

664

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.9 Transformationen

A6= B6= C6=:

NUT=winkel:

NUT=+179:

NUT=-181:

ORICONIO:

Programmierung der Drehachse des Kegels (normierter Vektor)

ffnungswinkel des Kegels in Grad

Verfahrwinkel kleiner oder gleich 180 Grad

Verfahrwinkel grer oder gleich 180 Grad

Interpolation auf einer Kegelmantelflche

A7= B7= C7=:

Zwischenorientierung (Programmierung als normierter Vektor)

PHI:

PSI:

mgliche Polynome 
PO[PHI]=(a2, a3, a4, a5) 
PO[PSI]=(b2, b3, b4, b5)

Drehwinkel der Orientierung um die Richtungsachse des Kegels

ffnungswinkel des Kegels

Auer den jeweiligen Winkeln sind auch Polynome maximal 
5. Grades programmierbar

Beispiel: Unterschiedliche Orientierungsnderungen

Programmcode



N10 G1 X0 Y0 F5000

N20 TRAORI(1)

N30 ORIVECT



N40 ORIPLANE

N50 A3=0 B3=0 C3=1

N60 A3=0 B3=1 C3=1



N70 ORICONCW

N80 A6=0 B6=0 C6=1 A3=0 B3=0 C3=1

N90 A6=0 B6=0 C6=1

Kommentar

; Orientierungstransformation ein.

; Werkzeug-Orientierung als Vektor inter-
polieren.

; Werkzeugorientierung in der Ebene.

; Grokreisinterpolation auswhlen.

; Orientierung in der Y/Z-Ebene um 45 
Grad gedreht, am Satzende wird die Orien-
tierung (0,1/2,1/2)erreicht.

; Orientierungsprogrammierung auf Kegel-
mantel:

; Der Orientierungsvektor wird auf einem 
Kegelmantel mit der Richtung (0,0,1) bis 
zur Orientierung (1/2,0,1/2) im Uhrzei-
gersinn interpoliert, der Drehwinkel be-
trgt hierbei 270 Grad.

; Die Werkzeugorientierung durchluft ei-
ne volle Umdrehung auf demselben Kegel-
mantel.

Weitere Informationen

Sollen Orientierungsnderungen auf einer beliebig im Raum liegenden Kegelmantelflche 
beschrieben werden, dann muss der Vektor um den die Werkzeugorientierung gedreht werden 
soll, bekannt sein. Auerdem mssen die Start- und Endorientierung vorgegeben werden. Die 
Startorientierung ergibt sich aus den vorhergehenden Satz und die Endorientierung muss 
entweder programmiert oder durch andere Bedingungen festgelegt werden.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

665

 
 
 
 
Arbeitsvorbereitung

3.9 Transformationen

Programmierung in der Ebene ORIPLANE entspricht ORIVECT

Die Programmierung der Grokreisinterpolation zusammen mit Winkelpolynomen entspricht 
der Linear- und Polynominterpolation von Konturen. Die Werkzeugorientierung wird in einer 
Ebene interpoliert, die von der Start- und Endorientierung aufgespannt wird. Werden zustzlich 
Polynome programmiert, dann kann der Orientierungsvektor auch aus der Ebene gekippt 
werden.

Programmierung von Kreisen in einer Ebene G2/G3, CIP und CT

Die erweiterte Orientierung entspricht der Interpolation von Kreisen in einer Ebene. Zu den 
entsprechenden Programmiermglichkeiten von Kreisen mit Mittelpunktsangabe oder 
Radiusangabe wie G2/G3, Kreis ber Zwischenpunkt CIP und Tangentialkreise CT siehe 
Kapitel "Kreisinterpolation (Seite 188)".

Orientierungsprogrammierung

Interpolation des Orientierungsvektors auf einer Kegelmantelflche ORICONxx

Fr die Interpolation von Orientierungen auf einer Kegelmantelflche knnen vier 
verschiedene Interpolationsarten aus der G-Gruppe 51 ausgewhlt werden:

1.

2.

3.

4.

Interpolation auf einen Kegelmantel im Uhrzeigersinn ORICONCW mit Angabe der 
Endorientierung und der Kegelrichtung oder des ffnungswinkels. Der Richtungsvektor 
wird mit den Bezeichnern A6, B6, C6 und der ffnungswinkel des Kegels wird mit dem 
Bezeichner NUT= Wertebereich im Intervall 0 bis 180 Grad programmiert.

Interpolation auf einen Kegelmantel gegen Uhrzeigersinn ORICONCWW mit Angabe der 
Endorientierung und der Kegelrichtung oder des ffnungswinkels. Der Richtungsvektor 
wird mit den Bezeichnern A6, B6, C6 und der ffnungswinkel des Kegels wird mit dem 
Bezeichner NUT= Wertebereich im Intervall 0 bis 180 Grad programmiert.

Interpolation auf einen Kegelmantel ORICONIO mit Angabe der Endorientierung und einer 
Zwischenorientierung, die mit den Bezeichnern A7, B7, C7 programmiert wird.

Interpolation auf einen Kegelmantel ORICONTO mit tangentialem bergang und Angabe 
der Endorientierung. Der Richtungsvektor wird mit den Bezeichnern A6, B6, C6 
programmiert.

3.9.2.9

Orientierungsvorgabe zweier Kontaktpunke (ORICURVE, PO[XH]=, PO[YH]=, PO[ZH]=)

Programmierung der Orientierungsnderung durch die zweite Raumkurve ORICURVE

Eine weitere Mglichkeit der Programmierung von Orientierungsnderungen besteht darin, 
auer der Werkzeugspitze entlang einer Raumkurve auch die Bewegung eines zweiten 
Kontaktpunktes des Werkzeugs mit ORICURVE zu programmieren. Damit knnen 
Orientierungsnderungen des Werkzeugs, wie bei der Programmierung des Werkzeugvektors 
selber, eindeutig festgelegt werden.  

Maschinenhersteller

Beachten Sie bitte die Hinweise des Maschinenherstellers zu ber Maschinendatum 
einstellbare Achsbezeichner fr die Programmierung der 2. Orientierungsbahn des 
Werkzeugs.

666

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Programmierung

Arbeitsvorbereitung

3.9 Transformationen

Bei dieser Interpolationsart knnen fr die beiden Raumkurven Punkte mit G1 bzw. Polynome 
mit POLY programmiert werden. Kreise und Evolventen sind nicht zulssig. Zustzlich kann 
eine Spline-Interpolation mit BSPLINE und die Funktion "Zusammenfassung kurzer Spline-
Stze" aktiviert werden.

Weitere Informationen zur Funktion "Zusammenfassung kurzer Spline-Stze" siehe 
Funktionshandbuch Basisfunktionen. 

Die anderen Splinearten ASPLINE und CSPLINE sowie die Aktivierung eines Kompressors mit 
COMP... sind nicht zulssig.

Die Bewegung der zwei Kontaktpunkte des Werkzeugs kann bei der Programmierung der 
Orientierungspolynome fr Koordinaten bis maximal 5.Grades vorgegeben werden.

Erweiterte Orientierungsinterpolation mit zustzlicher Raumkurve und Polynome fr Koordi
naten

N... ORICURVE

N... PO[XH]=(xe, x2, x3, x4, x5)

N... PO[YH]=(ye, y2, y3, y4, y5)

N... PO[ZH]=(ze, z2, z3, z4, z5)

; Angabe der Bewegung des zweiten Kon
taktpunkts des Werkzeugs und zustzli
che Polynome der jeweiligen Koordinaten

Parameter

ORICURVE 

XH YH ZH 

Interpolation der Orientierung mit Vorgabe der Bewe
gung zweier Kontaktpunkte des Werkzeuges.

Bezeichner der Koordinaten des zweiten Kontaktpunk
tes des Werkzeugs der zustzlichen Kontur als Raum
kurve

PO[XH]=(xe, x2, x3, x4, x5) 

Mgliche Polynome

PO[YH]=(ye, y2, y3, y4, y5) 

PO[ZH]=(ze, z2, z3, z4, z5) 

Auer den jeweiligen Endpunkten sind die Raumkurven 
zustzlich mit Polynomen programmierbar.

xe, ye, ze 

xi, yi, zi 

Endpunkte der Raumkurve

Koeffizienten der Polynome maximal 5. Grades

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

667

Arbeitsvorbereitung

3.9 Transformationen

Hinweis

Bezeichner XH YH ZH fr die Programmierung einer 2. Orientierungsbahn

Die Bezeichner mssen so gewhlt werden, dass kein Konflikt mit anderen Bezeichnern der 
Linearachsen

X Y Z Achsen

und Rundachsen wie

A2 B2 C2 Eulerwinkel bzw. RPY-Winkel

A3 B3 C3 Richtungsvektoren

A4 B4 C4 bzw. A5 B5 C5 Flchennormalenvektoren

A6 B6 C6 Drehvektoren bzw. A7 B7 C7 Zwischenpunktkoordinaten

oder anderen Interpolationsparameter entsteht.

3.9.3

Orientierungspolynome (PO[Winkel], PO[Koordinate])

Unabhngig davon, welche Polynominterpolation der G-Gruppe 1 gerade aktiv ist, knnen 
zwei verschiedene Typen von Orientierungspolynomen bis maximal 5. Grades bei einer Drei- 
bis Fnf-Achs-Transformation programmiert werden.

1. Polynome fr Winkel: Voreilwinkel LEAD, Seitwrtswinkel TILT 

in Bezug auf die Ebene, die von Start- und Endorientierung aufgespannt wird.

2. Polynome fr Koordinaten: XH, YH, ZH der zweiten Raumkurve fr die 

Werkzeugorientierung eines Bezugspunktes auf dem Werkzeug.

Bei einer Sechs-Achs-Transformation kann zur Werkzeugorientierung zustzlich die Drehung 
des Drehvektors THT mit Polynomen bis maximal 5. Grades fr Drehungen des Werkzeugs 
selbst programmiert werden.

Syntax

Orientierungspolynome vom Typ 1 fr Winkel

N PO[PHI]=(a2, a3, a4, a5)

Drei- bis Fnf-Achs-Transformation

N PO[PSI]=(b2, b3, b4, b5)

Orientierungspolynome vom Typ 2 fr Koordinaten

N PO[XH]=(xe, x2, x3, x4, x5)

N PO[YH]=(ye, y2, y3, y4, y5)

N PO[ZH]=(ze, z2, z3, z4, z5)

Bezeichner fr die Koordinaten der zweiten 
Orientierungsbahn fr die Werkzeugorientie
rung

668

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.9 Transformationen

Zustzlich kann in beiden Fllen ein Polynom fr die Drehung bei Sechs-Achs-
Transformationen mit

N PO[THT]=(c2, c3, c4, c5)
oder

N PO[THT]=(d2, d3, d4, d5)

Bahnrelative Interpolation der Drehung

absoluter, relative und tangentiale Interpola
tion zur Orientierungsnderung

des Orientierungsvektors programmiert werden. Dies ist dann mglich, wenn die 
Transformation einen Drehvektor mit einem durch den Drehwinkel THETA programmierbaren 
und interpolierbaren Offset untersttzt.

PO[PHI]    Winkel in der Ebene zwischen Start- und Endorientierung

PO[PSI]    Winkel der die Auskippung der Orientierung aus der Ebene zwischen Start- und End

orientierung beschreibt

PO[THT]   

Drehwinkel der durch Drehung des Drehvektors einer der mit THETA programmierten 
G-Befehle der Gruppe 54

PHI   

PSI   

THETA

PO[XH]   

PO[YH]   

PO[ZH]   

Voreilwinkel LEAD

Seitwrtswinkel TILT

Drehung um die Werkzeugrichtung in Z

X-Koordinate des Bezugspunktes auf dem Werkzeug

Y-Koordinate des Bezugspunktes auf dem Werkzeug

Z-Koordinate des Bezugspunktes auf dem Werkzeug

Bedeutung

Weitere Informationen

Orientierungspolynomen knnen nicht programmiert werden

 wenn die Splineinterpolationen ASPLINE, BSPLINE, CSPLINE aktiv sind. 

Polynome vom Typ1 fr Orientierungswinkel sind fr jede Interpolationsart auer Spline 
d.h. bei Linearinterpolation mit Eilgang G00 bzw. mit Vorschub G01 
bei Polynominterpolation mit POLY und 
bei Kreis- bzw. Evolventeninterpolation mit G02, G03, CIP, CT, INVCW und INCCCW 
mglich. 
Polynome vom Typ2 fr Orientierungskoordinaten sind dagegen nur mglich, wenn 
Linearinterpolation mit Eilgang G00 bzw. mit Vorschub G01 oder
Polynominterpolation mit POLY aktiv ist.

 wenn die Orientierung mittels Achsinterpolation ORIAXES interpoliert wird. In diesem Fall 

knnen direkt Polynome mit PO[A] und PO[B] fr die Orientierungsachsen A und B 
programmiert werden.

Orientierungspolynome vom Typ 1 mit ORIVECT, ORIPLANE und ORICONxx

Bei Grokreisinterpolation und Kegelmantelinterpolation mit ORIVECT, ORIPLANE und 
ORICONxx sind nur Orientierungspolynome vom Typ 1 mglich.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

669

Arbeitsvorbereitung

3.9 Transformationen

Orientierungspolynome vom Typ 2 mit ORICURVE

Ist die Interpolation mit zustzlicher Raumkurve ORICURVE aktiv, werden die kartesischen 
Komponenten des Orientierungsvektors interpoliert und es sind nur Orientierungspolynome 
vom Typ 2 mglich.

3.9.4

Drehungen der Werkzeugorientierung (ORIROTA, ORIROTR, ORIROTT, 
ORIROTC, THETA)

Soll bei Maschinentypen mit beweglichem Werkzeug auch die Orientierung des Werkzeugs 
vernderbar sein, so wird jeder Satz mit einer Endorientierung programmiert. Abhngig von der 
Maschinenkinematik knnen entweder die Orientierungsrichtung der Orientierungsachsen 
oder die Drehrichtung des Orientierungsvektors THETA programmiert werden. Fr diese 
Drehvektoren sind verschiedene Interpolationsarten programmierbar:  

 ORIROTA: Drehwinkel zu einer absolut vorgegebenen Drehrichtung.

 ORIROTR: Drehwinkel relativ zur Ebene zwischen Start- und Endorientierung.

 ORIROTT: Drehwinkel relativ zur nderung des Orientierungsvektors.

 ORIROTC: Tangentialer Drehwinkel zur Bahntangente.

Syntax

Nur wenn die Interpolationsart ORIROTA aktiv ist, kann der Drehwinkel oder der Drehvektor 
auf die vier mglichen Arten wie folgt programmiert werden:

1. Direkt die Rundachspositionen A, B, C

2. Eulerwinkel (in Grad) ber A2, B2, C2

3. RPY-Winkel (in Grad) ber A2, B2, C2

4. Richtungsvektor ber A3, B3, C3 (Drehwinkel mittels THETA=<Wert>)

Falls ORIOTR oder ORIOTT aktiv sind, kann der Drehwinkel nur noch direkt mit THETA 
programmiert werden.

Eine Drehung kann auch allein in einem Satz programmiert werden, ohne dass eine 
Orientierungsnderung stattfindet. Dabei haben ORIROTR und ORIROTT keine Bedeutung. 
In diesem Fall wird der Drehwinkel immer in Bezug zur absoluten Richtung interpretiert 
(ORIROTA).

N... ORIROTA

N... ORIROTR

N... ORIROTT

Interpolation des Drehvektors festlegen   

N... ORIROTC
N... A3= B3= C3= THETA=<Wert> Drehung des Orientierungsvektors festlegen
N... PO[THT]=(d2, d3, d4, d5)

Drehwinkel mit Polynom 5. Grades interpolieren

670

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

  
Arbeitsvorbereitung

3.9 Transformationen

Bedeutung

ORIROTA:

ORIROTR:

ORIROTT:

ORIROTC:

THETA:

Drehwinkel zu einer absolut vorgegebenen Drehrichtung 

Drehwinkel relativ zur Ebene zwischen Start- und Endorientierung

Drehwinkel als tangentialer Drehvektor zur Orientierungsnderung

Drehwinkel als tangentialer Drehvektor zur Bahntangente

Drehung des Orientierungsvektors 

THETA=<Wert>:

Drehwinkel in Grad, der am Satzende erreicht wird

THETA=e:

THETA=AC():

THETA=AC():

e:

Drehwinkel mit Endwinkel e des Drehvektors
Satzweise auf Maangabe absolut umschalten

Satzweise auf Kettenmaangabe umschalten

Endwinkel des Drehvektors sowohl absolut mit G90 als auch relativ mit G91 
(Kettenmaangabe) ist aktiv 

PO[THT]=(....):

Polynom fr den Drehwinkel

Beispiel: Drehungen der Orientierungen

Programmcode

N10 TRAORI

Kommentar

; Orientierungstransformation aktivieren

N20 G1 X0 Y0 Z0 F5000

; Orientierung des Werkzeugs

N30 A3=0 B3=0 C3=1 THETA=0

; in Z-Richtung mit Drehwinkel 0

N40 A3=1 B3=0 C3=0 THETA=90

; in X-Richtung und Drehung um 90 Grad

N50 A3=0 B3=1 C3=0 PO[THT]=(180,90)

; Orientierung

N60 A3=0 B3=1 C3=0 THETA=IC(-90)

; in Y-Richtung und Drehung auf 180 Grad

N70 ORIROTT

; bleibt konstant und Drehung auf 90 Grad

N80 A3=1 B3=0 C3=0 THETA=30

; Drehwinkel relativ zur Orientierungsnde-
rung

; Drehvektor im Winkel 30 Grad zur X-Y Ebene

Bei der Interpolation von Satz N40 wird der Drehwinkel vom Startwert 0 Grad zum Endwert 90 
Grad linear interpoliert. Im Satz N50 ndert sich der Drehwinkel von 90 Grad auf 180 Grad 
gem der Parabel (u) = +90u2. In N60 kann auch eine Drehung ausgefhrt werden, ohne 
dass eine Orientierungsnderung stattfindet.

Bei N80 wird die Werkzeugorientierung von der YRichtung in XRichtung gedreht. Dabei liegt 
die Orientierungsnderung in der XY Ebene und der Drehvektor bildet zu dieser Ebene einen 
Winkel von 30 Grad.

Weitere Informationen

ORIROTA

Der Drehwinkel THETA wird bezglich einer absolut festgelegten Richtung im Raum 
interpoliert. Die Grunddrehrichtung erfolgt ber Maschinendaten

ORIROTR

Der Drehwinkel THETA wird relativ zur Ebene, die von der Start- und Endorientierung 
aufgespannt wird, interpretiert.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

671

 
Arbeitsvorbereitung

3.9 Transformationen

ORIROTT

Der Drehwinkel THETA wird relativ zur Orientierungsnderung interpretiert. Fr THETA=0 
wird der Drehvektor tangential zur Orientierungsnderung interpoliert und unterscheidet sich 
nur dann zu ORIROTR, wenn fr die Orientierung mindestens ein Polynom fr den "Kippwinkel 
PSI" programmiert wurde. Damit ergibt sich eine Orientierungsnderung, die nicht in der Ebene 
abluft. Durch einen zustzlich programmierten Drehwinkel THETA kann dann z. B. der 
Drehvektor so interpoliert werden, dass er immer einen bestimmten Wert zur 
Orientierungsnderung bildet.

ORIROTC

Der Drehvektor wird relativ zur Bahntangente mit einem durch den Winkel THETA 
programmierbaren Offset interpoliert. Fr den Offsetwinkel kann dabei auch ein Polynom 
PO[THT]=(c2, c3, c4, c5) maximal 5. Grades programmiert werden.

3.9.5

Bahnrelative Orientierungen

3.9.5.1

Orientierungsarten relativ zur Bahn

Syntax

Mit dieser erweiterten Funktion wird die relative Orientierung nicht nur am Satzende, sondern 
ber den gesamten Bahnverlauf erreicht. Es wird die im Vorgngersatz erreichte Orientierung 
mittels Grokreisinterpolation in die programmierte Endorientierung berfhrt. Grundstzlich 
gibt es zwei Mglichkeiten die gewnschte Orientierung relativ zur Bahn zu programmieren: 

1. Die Werkzeugorientierung als auch die Drehung des Werkzeugs wird mit ORIPATH, 

ORPATHTS relativ zur Bahn interpoliert.

2. Der Orientierungsvektor wird wie bisher blich programmiert und interpoliert. Mit ORIROTC 

wird die Drehung des Orientierungsvektors relativ zur Bahntangente angestellt.

Die Interpolationsart der Orientierung und der Drehung des Werkzeugs wird programmiert mit:

N... ORIPATH
N... ORIPATHS

N... ORIROTC

Bahnrelative Orientierung
Bahnrelative Orientierung mit Glttung des Orientierungsver
laufs
Bahnrelative Interpolation des Drehvektors

Ein durch eine Ecke im Bahnverlauf hervorgerufener Knick der Orientierung kann mit 
ORIPATHS geglttet werden. Die Richtung und Weglnge der Abhebebewegung wird durch 
den Vektor mit den Komponenten A8 = X, B8 = Y und C8 = Z programmiert.

Mit ORIPATH/ORIPATHS knnen verschiedene Bezge zur Bahntangente ber die drei 
Winkel

 LEAD = Angabe Vorwrtswinkel bezogen auf die Bahn und Oberflche

 TILT = Angabe von Seitwrtswinkel bezogen auf die Bahn und Oberflche

 THETA = Drehwinkel

672

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Bedeutung

Arbeitsvorbereitung

3.9 Transformationen

fr den gesamten Bahnverlauf programmiert werden. Zum Drehwinkel THETA knnen mit 
PO[THT] = (...) zustzlich Polynome maximal 5. Grades programmiert werden.

Hinweis

Maschinenhersteller

Bitte beachten Sie die Angaben des Maschinenherstellers. ber projektierbare Maschinen- 
und Settingdaten knnen zur Bahnrelativen Orientierungsart weitere Einstellungen 
vorgenommen werden.

Weitere Informationen: Funktionshandbuch Transformationen

Die Interpolation der Winkel LEAD und TILT ist ber Maschinedatum unterschiedlich 
einstellbar:

 Der mit LEAD und TILT programmierte Bezug der Werkzeugorientierung wird ber den 

ganzen Satz hinweg eingehalten.

 Vorwrtswinkel LEAD: Drehung um die Richtung senkrecht zur Tangente und 
Normalenvektor TILT: Drehung der Orientierung um den Normalenvektor.

 Vorwrtswinkel LEAD: Drehung um die Richtung senkrecht zur Tangente und 

Normalenvektor Seitwrtswinkel TILT: Drehung der Orientierung um die Richtung der 
Bahntangente.

 Drehwinkel THETA: Drehung des Werkzeugs um sich selbst mit einer zustzlichen dritten 

Rundachse als Orientierungsachse bei Sechs-Achs-Transformation.

Hinweis

Bahnrelative Orientierung zusammen mit OSC, OSS, OSSE, OSD, OST unzulssig

Die bahnrelative Orientierungsinterpolation ORIPATH bzw. ORIPATHS und ORIOTC kann 
nicht zusammen mit der Glttung des Orientierungsverlaufs mit einem der G-Befehle aus 
der Gruppe 34 programmiert werden. Hierfr muss OSOF aktiv sein.

3.9.5.2

Bahnrelative Drehung der Werkzeugorientierung (ORIPATH, ORIPATHS, Drehwinkel)

Bei einer Sechs-Achs-Transformation kann zur Werkzeugorientierung beliebig im Raum auch 
das Werkzeug mit einer dritten Rundachse um sich selbst gedreht werden. Bei bahnrelativer 
Drehung der Werkzeugorientierung mit ORIPATH bzw. ORIPATHS kann die zustzliche 
Drehung ber den Drehwinkel THETA programmiert werden. Alternativ hierzu knnen die 
Winkel LEAD und TILT durch einen Vektor, der in der Ebene senkrecht zur Werkzeugrichtung 
liegt, programmiert werden.

Maschinenhersteller

Bitte beachten Sie die Angaben des Maschinenherstellers. ber Maschinendatum kann die 
Interpolation der Winkel LEAD und TILT unterschiedlich eingestellt werden.  

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

673

Arbeitsvorbereitung

3.9 Transformationen

Syntax

Drehung der Werkzeugorientierung und des Werkzeugs

Die Werkzeugorientierungsart relativ zur Bahn wird mit ORIPATH oder ORIPATHS aktiviert.

N... ORIPATH
N... ORIPATHS

Orientierungsart bezogen auf die Bahn aktivieren
Orientierungsart bezogen auf die Bahn mit Glttung 
des Orientierungsverlaufs aktivieren

Aktivierung der drei mglichen Winkel mit Drehwirkung:

N... LEAD=

N... TILT=

N... THETA=

Winkel fr die programmierten Orientierung relativ 
zum Flchennormalenvektor
Winkel fr die programmierte Orientierung in der 
Ebene senkrecht zur Bahntangente relativ zum Fl
chennormalenvektor
Drehwinkel relativ zur Orientierungsnderung um 
die Werkzeugrichtung der dritten Rundachse

Die Werte der Winkel am Satzende werden mit LEAD=Wert, TILT=Wert bzw. THETA=Wert 
programmiert. Zustzlich zu den konstanten Winkeln knnen fr alle drei Winkel Polynome 
maximal 5. Grades programmiert werden.

N... PO[PHI]=(a2, a3, a4, a5)

N... PO[PSI]=(b2, b3, b4, b5)

N... PO[THT]=(d2, d3, d4, d5)

Polynom fr den Voreilwinkel LEAD
Polynom fr den Seitwrtswinkel TILT
Polynom fr den Drehwinkel THETA

Bei der Programmierung knnen die hheren Polynomkoeffizienten, die Null sind, 
weggelassen werden. Beispiel PO[PHI]=a2 ergibt fr den Voreilwinkel LEAD eine Parabel.

Bahnrelative Werkzeugorientierung

ORIPATH: Werkzeugorientierung bezogen auf die Bahn

ORIPATHS
:

LEAD:

TILT:

THETA:

Werkzeugorientierung bezogen auf die Bahn, Knick im Orientierungsverlauf wird geglttet

Winkel relativ zum Flchennormalenvektor, in der von Bahntangente und Flchennorma
lenvektor aufgespannten Ebene

Drehung der Orientierung um die Z-Richtung bzw. Drehung um die Bahntangente

Drehung um die Werkzeugrichtung nach Z

PO[PHI]: Orientierungspolynom fr den Voreilwinkel LEAD

PO[PSI]: Orientierungspolynom fr den Seitwrtswinkel TILT

PO[THT]: Orientierungspolynom fr den Drehwinkel THETA

Bedeutung

674

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.9 Transformationen

Hinweis

Drehwinkel THETA

Fr die Drehung des Werkzeugs mit dritter Rundachse als Orientierungsachse um sich selbst, 
ist eine Sechs-Achs-Transformation erforderlich.

3.9.5.3

Bahnrelative Interpolation der Werkzeugdrehung (ORIROTC, THETA)

Interpolation mit Drehvektoren

Zur mit ORIROTC programmierten Drehung des Werkzeugs relativ zur Bahntangenten kann 
der Drehvektor auch mit einem durch den Drehwinkel THETA programmierbaren Offset 
interpoliert werden. Dabei kann fr den Offsetwinkel mit PO[THT] ein Polynom bis maximal 
5. Grades programmiert werden.  

Syntax

Bedeutung

N... ORIROTC

N... A3= B3= C3= THETA=Wert

Drehung des Werkzeugs relativ 
zur Bahntangente anstellen
Drehung des Orientierungsvek
tors festlegen

N... A3= B3= C3= PO[THT]=(c2, c3, c4, c5) Offsetwinkel mit Polynom maxi

mal 5. Grades interpolieren

Eine Drehung kann auch allein in einem Satz programmiert werden, ohne dass eine 
Orientierungsnderung stattfindet.

Bahnrelative Interpolation der Drehung des Werkzeugs bei Sechs-Achs-Transformation

ORIROTC:

THETA=Wert:

THETA=e:

THETA=AC():

THETA=IC():

tangentialer Drehvektor zur Bahntangente anstellen

Drehwinkel in Grad, der am Satzende erreicht wird

Drehwinkel mit Endwinkel e des Drehvektors
Satzweise auf Maangabe absolut umschalten

Satzweise auf Kettenmaangabe umschalten

PO[THT]=(c2, c3, c4, c5): Offsetwinkel mit Polynom 5. Grades interpolieren

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

675

Arbeitsvorbereitung

3.9 Transformationen

Hinweis

Interpolation des Drehvektors ORIROTC

Soll gegen die Orientierungsrichtung des Werkzeugs auch die Drehung des Werkzeugs relativ 
zur Bahntangente angestellt werden, dann ist dies nur bei einer Sechs-Achs-Transformation 
mglich.

Bei aktiven ORIROTC

Der Drehvektor ORIROTA kann nicht programmiert werden. Im Falle einer Programmierung 
wird der ALARM 14128 "Absolutprogrammierung der Werkzeugdrehung bei aktivem 
ORIROTC" ausgegeben.

Orientierungsrichtung des Werkzeugs bei Drei- bis Fnf-Achs-Transformation

Die Orientierungsrichtung des Werkzeugs kann wie bei der Drei- bis Fnf-Achs-
Transformation gewohnt ber Eulerwinkel bzw. RPY-Winkel oder des Richtungsvektoren 
programmiert werden. Auch sind Orientierungsnderungen des Werkzeugs im Raum durch 
Programmierung der Grokreisinterpolation ORIVECT, der linearen Interpolation der 
Orientierungsachsen ORIAXES, alle Interpolationen auf einer Kegelmantelflche ORICONxx 
sowie der Interpolation zustzlich zur Raumkurve mit zwei Kontaktpunkten des Werkzeugs 
ORICURVE mglich.

G....:

X, Y, Z:

ORIAXES:

ORIVECT:

ORIMKS:

ORIWKS:

A= B= C=:

ORIEULER:

ORIRPY:

Angabe der Bewegungsart der Rundachsen

Angabe der Linearachsen

Lineare Interpolation der Maschinen- oder Orientierungsachsen

Grokreisinterpolation (identisch mit ORIPLANE)

Drehung im Maschinenkoordinatensystem

Drehung im Werkstckkoordinatensystem 

Beschreibung siehe Kap. Drehungen der Werkzeugorientierung

Programmierung der Maschinenachsposition

Orientierungsprogrammierung ber Euler-Winkel

Orientierungsprogrammierung ber RPY-Winkel

A2= B2= C2=:

Winkelprogrammierung virtueller Achsen

ORIVIRT1:

ORIVIRT2:

Orientierungsprogrammierung ber virtuelle Orientierungsachsen

(Definition 1), Festlegung nach MD $MC_ORIAX_TURN_TAB_1

(Definition 2), Festlegung nach MD $MC_ORIAX_TURN_TAB_2

A3= B3= C3=:

Richtungsvektorprogrammierung der Richtungsachse

ORIPLANE:

ORICONCW:

ORICONCCW:

ORICONTO:

A6= B6= C6=:

NUT=winkel

NUT=+179

NUT=-181

ORICONIO:

Interpolation in der Ebene (Grokreisinterpolation)

Interpolation auf einer Kegelmantelflche im Uhrzeigersinn

Interpolation auf einer Kegelmantelflche gegen Uhrzeigersinn

Interpolation auf einer Kegelmantelflche tangentialer bergang

Programmierung der Drehachse des Kegels (normierter Vektor)

ffnungswinkel des Kegels in Grad

Verfahrwinkel kleiner oder gleich 180 Grad

Verfahrwinkel grer oder gleich 180 Grad

Interpolation auf einer Kegelmantelflche

676

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.9 Transformationen

A7= B7= C7=:

ORICURVE

XH YH ZH z.B. mit 
Polynome PO[XH]=(xe, 
x2, x3, x4, x5)

Zwischenorientierung (Programmierung als normierter Vektor)

Interpolation der Orientierung mit Vorgabe der Bewegung zweier Kon
taktpunkte des Werkzeuges. Auer den jeweiligen Endpunkten sind zu
stzliche Raumkurven Polynome programmierbar.

Hinweis

Wird die Werkzeugorientierung mit aktiven ORIAXES ber die Orientierungsachsen 
Interpoliert, dann wird die bahnrelative Anstellung des Drehwinkels nur am Satzende erfllt.

3.9.5.4

Glttung des Orientierungsverlaufs (ORIPATHS A8=, B8=, C8=)

Bei beschleunigungsstetigen Orientierungsnderungen an der Kontur sind Unterbrechungen 
der Bahnbewegungen, die besonders an einer Ecke der Kontur auftreten knnen unerwnscht. 
Der sich hieraus ergebene Knick im Orientierungsverlauf kann durch Einfgen eines eigenen 
Zwischensatzes geglttet werden. Die Orientierungsnderung erfolgt dann 
beschleunigungsstetig, wenn whrend der Umorientierung auch ORIPATHS aktiv ist. In dieser 
Phase kann eine Abhebebewegung des Werkzeugs durchgefhrt werden.

Maschinenhersteller

Beachten Sie bitte die Hinweise des Maschinenherstellers zu gegebenenfalls vordefinierten 
Maschinendaten und Settingdaten mit denen diese Funktion aktiviert wird.

ber Maschinendatum ist einstellbar, wie der Abhebevektor interpretiert wird:

1.

Im Werkzeugkoordinatensystem wird die Z-Koordinate durch die Werkzeugrichtung 
definiert.

2.

Im Werkstckkoordinatensystem wird die Z-Koordinate durch die aktive Ebene definiert.

Weitere Informationen zur Funktion "Bahnrelative Orientierung" siehe Funktionshandbuch 
Transformationen.

Fr stetige Werkzeugorientierungen bezogen auf die gesamte Bahn sind an einer Ecke der 
Kontur weitere Programmierangaben erforderlich. Die Richtung und die Weglnge dieser 
Bewegung wird durch den Vektor mit den Komponenten A8 = X, B8 = Y, C8 = Z programmiert:

N... ORIPATHS A8=X B8=Y C8=Z

ORIPATHS:

Werkzeugorientierung bezogen auf die Bahn, ein Knick im Orientierungsver
lauf wird geglttet.

A8= B8= C8=:

Vektorkomponenten fr Richtung und Weglnge

X, Y, Z:

Abhebebewegung in Werkzeugrichtung

Syntax

Bedeutung

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

677

Arbeitsvorbereitung

3.9 Transformationen

Hinweis

Programmierung des Richtungsvektors A8, B8, C8

Ist die Lnge dieses Vektors gleich Null erfolgt keine Abhebebewegung.

ORIPATHS

Die bahnbezogene Werkzeugorientierung wird mit ORIPATHS aktiv. Anderenfalls wird die 
Orientierung mittels linearer Grokreisinterpolation von der Start- zur Endorientierung 
berfhrt.

3.9.6

Komprimierung der Orientierung (COMPCAD, COMPSURF)

NC-Programme, in denen eine Orientierungstransformation (TRAORI) aktiv ist und 
Werkzeugorientierungen (egal welcher Art) programmiert sind, knnen unter Einhaltung von 
vorgegeben Toleranzen komprimiert werden.

Programmierung

Werkzeugorientierung

Falls eine Orientierungstransformation (TRAORI) aktiv ist, kann bei 5-Achs Maschinen die 
Werkzeugorientierung folgendermaen (kinematikunabhngig) programmiert werden:

 Programmierung des Richtungsvektors ber:

A3=<...> B3=<...> C3=<...>

 Programmierung der Eulerwinkel bzw. RPY-Winkel ber:

A2=<...> B2=<...> C2=<...>

Drehung des Werkzeugs

Bei 6-Achs Maschinen kann zustzlich zur Werkzeugorientierung noch die Drehung des 
Werkzeugs programmiert werden.

Die Programmierung des Drehwinkels erfolgt mit:

THETA=<...>

Siehe " Drehungen der Werkzeugorientierung (ORIROTA, ORIROTR, ORIROTT, ORIROTC, 
THETA) (Seite 670) ".

Hinweis

NC-Stze, in denen zustzlich eine Drehung programmiert ist, sind nur dann komprimierbar, 
falls sich der Drehwinkel linear ndert. D. h., fr den Drehwinkel darf kein Polynom mit 
PO[THT] = (...) programmiert sein.

Allgemeine Form eines komprimierbaren NC-Satzes

Die allgemeine Form eines komprimierbaren NC-Satzes kann daher wie folgt aussehen:

678

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.9 Transformationen

N... X=<...> Y=<...> Z=<...> A3=<...> B3=<...> C3=<...> THETA=<...> F=<...>

bzw.

N... X=<...> Y=<...> Z=<...> A2=<...> B2=<...> C2=<...> THETA=<...> F=<...>

Hinweis

Die Positionswerte knnen direkt (z. B. X90) oder indirekt ber Parameterzuweisungen (z. B. 
X=R1*(R2+R3)) angegeben werden.

Programmierung der Werkzeugorientierung durch Rundachspositionen

Die Werkzeugorientierung kann auch durch Rundachspositionen angegeben sein, z. B. in der 
Form:

N... X=<...> Y=<...> Z=<...> A=<...> B=<...> C=<...> THETA=<...> F=<...>

In diesem Fall wird die Komprimierung auf zwei unterschiedliche Arten durchgefhrt, abhngig 
davon, ob eine Grokreisinterpolation durchgefhrt wird oder nicht. Wenn keine 
Grokreisinterpolation stattfindet, dann wird die komprimierte Orientierungsnderung durch 
axiale Polynome fr die Rundachsen in blicher Weise dargestellt.

Konturgenauigkeit

Abhngig vom eingestellten Kompressionsmodus (MD20482 $MC_COMPRESSOR_MODE) 
werden fr die Geometrieachsen und Orientierungsachsen bei der Komprimierung entweder 
die projektierten achsspezifischen Toleranzen (MD33100 $MA_COMPRESS_POS_TOL) oder 
die folgenden ber Settingdaten einstellbaren kanalspezifischen Toleranzen wirksam:

SD42475 $SC_COMPRESS_CONTUR_TOL (Maximale Konturabweichung)   

SD42476 $SC_COMPRESS_ORI_TOL (Maximale Winkelabweichung fr die 
Werkzeugorientierung)   

SD42477 $SC_COMPRESS_ORI_ROT_TOL (Maximale Winkelabweichung fr den 
Drehwinkel des Werkzeugs) (nur bei 6-Achs Maschinen verfgbar)   

Aktivierung / Deaktivierung

Kompressor-Funktionen werden eingeschaltet durch die modalen G-Befehle COMPCAD und 
COMPSURF.

Beendet wird die Kompressor-Funktion mit COMPOF.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

679

Arbeitsvorbereitung

3.9 Transformationen

Siehe " NC-Satz-Kompression ein-/ausschalten (COMPCAD, COMPSURF, COMPOF) 
(Seite 587) ".

Hinweis

Die Orientierungsbewegung wird nur komprimiert bei aktiver Grokreisinterpolation (d. h., die 
nderung der Werkzeugorientierung erfolgt in der Ebene, die von Start- und Endorientierung 
aufgespannt wird).

Eine Grokreisinterpolation wird unter den folgenden Bedingungen durchgefhrt:

 MD21104 $MC_ORI_IPO_WITH_G_CODE = 0,

ORIWKS ist aktiv und
Orientierung ist mittels Vektoren programmiert (mit A3, B3, C3 bzw. A2, B2, C2).

 MD21104 $MC_ORI_IPO_WITH_G_CODE = 1 und

ORIVECT bzw. ORIPLANE ist aktiv.
Die Werkzeugorientierung kann entweder als Richtungsvektor oder mit 
Rundachspositionen programmiert sein. Ist einer der G-Befehle ORICONxx oder 
ORICURVE aktiv oder sind Polynome fr die Orientierungswinkel (PO[PHI] und PO[PSI]) 
programmiert, wird keine Grokreisinterpolation durchgefhrt.

Beispiel

Im nachfolgenden Programmbeispiel wird ein Kreis, der durch einen Polygonzug angenhert 
ist, komprimiert. Die Werkzeugorientierung bewegt sich dabei synchron dazu auf einem 
Kegelmantel. Obwohl die aufeinander folgenden programmierten Orientierungsnderungen 
unstetig verlaufen, generiert die Kompressor-Funktion einen glatten Verlauf der Orientierung.

Kommentar

Programmierung

DEF INT ANZAHL=60

DEF REAL RADIUS=20

DEF INT COUNTER

DEF REAL WINKEL

N10 G1 X0 Y0 F5000 G64

$SC_COMPRESS_CONTUR_TOL=0.05

; Maximale Abweichung der Kontur = 0.05 mm

$SC_COMPRESS_ORI_TOL=5

; Maximale Abweichung der Orientierung 
= 5 Grad

TRAORI

COMPCAD

; Es wird ein Kreis gefahren, der aus Polygo-
nen gebildet wird. Die Orientierung bewegt 
sich dabei auf einem Kegel um die Z-Achse 
mit einem ffnungswinkel von 45 Grad.

N100 X0 Y0 A3=0 B3=-1 C3=1

N110 FOR COUNTER=0 TO ANZAHL

N120 WINKEL=360*COUNTER/ANZAHL

N130 X=RADIUS*cos(WINKEL) Y=RADIUS*sin(WINKEL)

A3=sin(WINKEL) B3=-cos(WINKEL) C3=1

N140 ENDFOR

680

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.9 Transformationen

3.9.7

Glttung des Orientierungsverlaufs ein-/ausschalten (ORISON, ORISOF)

Die "Glttung des Orientierungsverlaufs" wird im Teileprogramm durch die Befehle der G-
Gruppe 61 ein-/ausgeschaltet. Die Befehle sind modal wirksam. 

Voraussetzungen

 System mit 5/6-Achs-Transformation.

 Kompressor-Funktion COMPCAD ist aktiv. 

Syntax

Bedeutung

Beispiel

ORISON

...

ORISOF

ORISON:

ORISOF:

Glttung des Orientierungsverlaufs einschalten

Glttung des Orientierungsverlaufs ausschalten

Programmcode

Kommentar

...

TRAORI()

COMPCAD

ORISON

$SC_ORISON_TOL=1.0

G91

X10 A3=1 B3=0 C3=1

X10 A3=1 B3=0 C3=1

X10 A3=1 B3=0 C3=1

X10 A3=1 B3=0 C3=1

X10 A3=1 B3=0 C3=1

X10 A3=1 B3=0 C3=1

X10 A3=1 B3=0 C3=1

X10 A3=1 B3=0 C3=1

X10 A3=1 B3=0 C3=1

X10 A3=1 B3=0 C3=1

...

ORISOF

...

; Einschalten der Orientierungstransformation.

; Einschalten der Kompressor-Funktion COMPCAD.

; Einschalten der Orientierungsglttung.

; Maximale Winkelabweichung der Werkzeugorientierung 
= 1,0 Grad.

; Ausschalten der Orientierungsglttung.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

681

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.9 Transformationen

Die Orientierung wird um 90 Grad in der XZEbene von -45 bis +45 Grad geschwenkt. Durch 
die Glttung des Orientierungsverlaufs erreicht die Orientierung nicht mehr die maximalen 
Winkelwerte von -45 bzw. +45 Grad.

3.9.8

Kinematische Transformation

3.9.8.1

Stirnseitentransformation einschalten (TRANSMIT)

Die Stirnseitentransformation (TRANSMIT) wird im Teileprogramm oder Synchronaktion ber 
die Anweisung TRANSMIT eingeschaltet.

Syntax

Bedeutung

TRANSMIT

TRANSMIT(<n>)

TRANSMIT:

TRANSMIT mit erstem TRANSMIT-Datensatz einschalten

TRANSMIT(n):

TRANSMIT mit <n>-tem TRANSMIT-Datensatz einschalten

Hinweis

Eine im Kanal aktive Transformation TRANSMIT wird ausgeschaltet durch:
 Transformation ausschalten: TRAFOOF
 Einschalten einer anderen Transformation: z. B. TRACYL, TRAANG, TRAORI

3.9.8.2

Zylindermanteltransformation einschalten (TRACYL)

Die Zylindermanteltransformation (TRACYL) wird im Teileprogramm oder Synchronaktion 
ber die Anweisung TRACYL eingeschaltet.

Syntax

TRACYL(<d>)

TRACYL(<d>,<n>) 

TRACYL(<d>,<n>,<k>)

682

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.9 Transformationen

Bedeutung

TRACYL(<d>):

TRACYL mit erstem TRACYL-Datensatz und Arbeitsdurchmesser <d> 
einschalten

TRACYL (<d>,<n>):

TRACYL mit <n>-tem TRACYL-Datensatz und Arbeitsdurchmesser <d> 
einschalten

<d>: 

<n>:

<k>:

Hinweis

Bezugs- bzw. Arbeitsdurchmesser

Der Wert muss grer 1 sein.

TRACYL-Datensatznummer (optional)

Wertebereich:

1, 2

Der Parameter <k> ist nur relevant fr Transformationstyp 514

k = 0:

k = 1:

ohne Nutwandkorrektur

mit Nutwandkorrektur

Wird der Parameter nicht angegeben, wirkt die parametrierte Grundstel
lung:

$MC_TRACYL_DEFAULT_MODE_<n>

mit <n> = TRACYL-Datensatznummer

Eine im Kanal aktive Transformation TRACYL wird ausgeschaltet durch:
 Transformation ausschalten: TRAFOOF
 Einschalten einer anderen Transformation: z. B. TRAANG, TRANSMIT, TRAORI

Beispiel

Programmcode

...

N40 TRACYL(40.)

...

Weitere Informationen

Programmstruktur

Kommentar

; TRACYL mit erstem TRACYL-Datensatz und Arbeits-
durchmesser 40 mm einschalten.

Ein Teileprogramm zum Frsen einer Nut mit TRACYL-Transformation 513 (TRACYL mit 
Nutwandkorrektur) besteht in der Regel aus folgenden Schritten:

1. Werkzeug anwhlen.

2. TRACYL anwhlen.

3. Passende Koordinatenverschiebung (FRAME) anwhlen.

4. Positionieren.

5. OFFN programmieren.

6. WRK anwhlen.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

683

 
 
Arbeitsvorbereitung

3.9 Transformationen

7. Anfahrsatz (Einfahren der WRK und Anfahren der Nutwand).

8. Kontur der Nutmittenlinie.

9. WRK abwhlen.

10.Abfahrsatz (Ausfahren der WRK und Wegfahren von der Nutwand).

11.Positionieren.

12.TRAFOOF.

13.Ursprngliche Koordinatenverschiebung (FRAME) wieder anwhlen.

Kontur-Offset (OFFN)

Um mit der TRACYL-Transformation 513 Nuten zu frsen, wird im Teileprogramm die 
Mittenlinie der Nut und ber die Adresse OFFN die halbe Nutbreite programmiert.

Um eine Beschdigung der Nutwand zu vermeiden, wird OFFN erst mit angewhlter 
Werkzeugradiuskorrektur wirksam.

Eine nderung von OFFN innerhalb des Teileprogramms ist mglich. Damit kann die 
Nutmittenlinie aus der Mitte verschoben werden: 

 OFFN
 Programmierte Bahn

Hinweis

OFFN sollte mindestens so gro wie der Werkzeugradius sein, um eine Beschdigung der 
gegenberliegenden Nutwand auszuschlieen.

Hinweis

OFFN mit TRACYL wirkt sich anders aus als ohne TRACYL. Da OFFN auch ohne TRACYL bei 
aktiver WRK eingerechnet wird, sollte OFFN nach TRAFOOF wieder zu Null gesetzt werden.

684

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:21)(cid:20)Arbeitsvorbereitung

3.9 Transformationen

ACHTUNG

Wirkung von OFFN ist vom Transformationstyp abhngig

Bei der TRACYL-Transformation 513 (TRACYL mit Nutwandkorrektur) wird fr OFFN die 
halbe Nutbreite programmiert.

Bei der TRACYL-Transformation 512 (TRACYL ohne Nutwandkorrektur) wirkt der Wert von 
OFFN dagegen als Aufmass zur WRK.

Werkzeugradiuskorrektur (WRK)

Bei der TRACYL-Transformation 513 wird die WRK nicht relativ zur Nutwand, sondern zur 
programmierten Mitte der Nut eingerechnet. Damit das Werkzeug links von der Nutwand fhrt, 
ist statt G41 die Anweisung G42 zu programmieren oder der Wert von OFFN mit negativem 
Vorzeichen anzugeben.

Werkzeugdurchmesser

Mit TRACYL und einem Werkzeug, dessen Durchmesser kleiner als die Nutbreite ist, wird nicht 
dieselbe Nutwandgeometrie erzeugt, wie mit einem Werkzeug, dessen Durchmesser gleich 
der Nutbreite ist. Zur Verbesserung der Genauigkeit wird empfohlen, den 
Werkzeugdurchmesser nur wenig kleiner als die Nutbreite zu whlen.

Achsnutzung

Hinweis

Folgende Achsen knnen nicht als Positionierachse bzw. Pendelachse verwendet werden:

 die Geometrieachse in Umfangsrichtung der Zylindermantelflche (Y-Achse)

 die zustzliche Linearachse bei Nutwandkorrektur (Z-Achse)

3.9.8.3

Schrges Einstechen an Schleifmaschinen (G5, G7)

Die G-Befehle G7 und G5 dienen zur Vereinfachung der Programmierung fr das schrge 
Einstechen an Schleifmaschinen mit Transformation "Schrge Achse (TRAANG)", so dass 
beim Einstechen ausschlielich die schrge Achse verfhrt. 

Zu Programmieren ist dabei nur die gewnschte Endposition der Einstechbewegung in X und 
Z. Die zugehrige Startposition wird von der NC bei G7, ausgehend von der aktuellen Position 
der X-Achse, der programmierten Endposition und dem Winkel  der schrgen Achse, 
berechnet und angefahren. 

Die Startposition ergibt sich aus dem Schnittpunkt der beiden Geraden:

 Gerade parallel zur Z-Achse im Abstand der aktuellen Position der X-Achse

 Gerade parallel zur schrgen Achse durch die programmierte Endposition 

Mit dem nachfolgenden G5 wird die schrge Achse auf die programmierte Endposition 
verfahren.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

685

Arbeitsvorbereitung

3.9 Transformationen

Syntax

G7 <Endpos_X> <Endpos_Z>

G5 <Endpos_X>

Bedeutung

Beispiel

G7:

G5:

Startposition zum schrgen Einstechen berechnen und anfahren

Verfahren der schrgen Achse auf die programmierte Endposition

<Endpos_X>:

Endposition der X-Achse

<Endpos_Z>:

Endposition der Z-Achse

 Schleifscheibe
 Werkstck
 Parallele zur schrgen Achse durch die programmierte Endposition 
 Ausgangsposition
 Einstechen: Startposition
 Einstechen: Endposition
 Parallele zur Z-Achse im Abstand der aktuellen Position der X-Achse
X

Geometrieachse

Geometrieachse

Maschinenachse

Maschinenachse

Schrge Achse programmieren

Z

ZM

UM
Bild 3-5

686

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:20)(cid:22)(cid:24)(cid:25)(cid:26)(cid:23)(cid:21)(cid:48)(cid:59)(cid:56)(cid:48)(cid:734)(cid:36)(cid:54)(cid:48)(cid:49)(cid:24)(cid:19)(cid:49)(cid:25)(cid:19)(cid:38)(cid:48)(cid:61)(cid:18)(cid:61)(cid:48) 
 
Arbeitsvorbereitung

3.9 Transformationen

Programmcode

N... G18

Kommentar

; XZ-Ebene anwhlen.

N40 TRAANG(45.0)

; Transformation TRAANG einschalten, Winkel = 45.

N50 G7 X40 Z70 F4000

; Startposition berechnen und anfahren.

N60 G5 X40 F100

; Schrge Achse auf Endposition verfahren.

N70 ...

3.9.9

Kartesisches PTP-Fahren

3.9.9.1

Kartesisches PTP-Fahren ein-/ausschalten (PTP, PTPG0, PTPWOC, CP)

Das kartesische Punkt-zu-Punkt- bzw. PTP-Fahren wird im NC-Programm mit den Befehlen 
der G-Gruppe 49 ein-/ausgeschaltet.

Die Befehle sind modal wirksam. Voreinstellung ist das Verfahren mit einer kartesischen 
Bahnbewegung (CP).

Anders als bei CP wird bei aktivem PTP-Fahren nur noch eine Transformation des 
kartesischen Zielpunkts durchgefhrt und die Maschinenachsen werden synchron verfahren.

Damit der kartesische Zielpunkt eindeutig in Maschinenachswerte umgerechnet werden kann, 
sind zustzlich zu den Positions- und Winkelangaben noch Informationen notwendig, die die 
Achsstellungen kennzeichnen. Diese Angaben erfolgen ber die einstellbaren Adressen STAT 
(Seite 688) und TU (Seite 692).

Voraussetzung

Syntax

Bedeutung

Transformation TRAORI, TRANSMIT, RCTRA oder ROBX ist aktiv.

PTP / PTPG0 / PTPWOC

...

CP

PTP:

Punkt-zu-Punkt-Bewegung PTP einschalten

Die programmierte kartesische Position in G0- und G1-Stzen wird mit einer Synchron
achsbewegung angefahren.

PTPG0:

Punkt-zu-Punkt-Bewegung PTPG0 einschalten

Nur in G0-Stzen wird die programmierte kartesische Position mit einer Synchronachs
bewegung angefahren. In G1-Stzen wird auf die Bahnbewegung CP umgeschaltet.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

687

 
 
 
 
Arbeitsvorbereitung

3.9 Transformationen

PTPWOC:

Punkt-zu-Punkt-Bewegung PTPWOC einschalten (nur mglich bei aktiver Orientie
rungstransformation)

Wie PTP, allerdings ohne Ausgleichsbewegungen, die durch die Bewegungen von 
Rundachsen und Orientierungsachsen verursacht sind.

CP:

Punkt-zu-Punkt-Bewegung ausschalten und Bahnbewegung CP einschalten

Mit CP wird eine kartesische Bahnbewegung ausgefhrt.

Hinweis

PTPWOC

In Kombination mit einer RCTRA- oder ROBX-Transformation ist die Verwendung von 
PTPWOC nicht sinnvoll!

Beispiele

Siehe:

 Beispiel 1: PTP-Fahren eines 6-Achs-Roboters mit ROBX-Transformation (Seite 695)

 Beispiel 2: PTP-Fahren bei generischer 5-Achs-Transformation (Seite 696)

 Beispiel 3: PTPG0 und TRANSMIT (Seite 697)

3.9.9.2

Stellung der Gelenke angeben (STAT)

Die Positionsangabe mit kartesischen Koordinaten und die Angabe der Werkzeugorientierung 
reichen nicht aus, um die Maschinenstellung eindeutig festzulegen, da bei gleicher 
Werkzeugorientierung mehrere Gelenkstellungen mglich sind. Je nachdem, um welche 
Kinematik es sich handelt, existieren bis zu 8 unterschiedliche Gelenkstellungen. Diese 
unterschiedlichen Gelenkstellungen sind transformationsspezifisch.

Um Mehrdeutigkeiten zu vermeiden, wird die Stellung der Gelenke unter der Adresse STAT 
angegeben.

Hinweis

Die Steuerung bercksichtigt programmierte STAT-Werte nur bei PTP-Bewegungen. Bei CP-
Bewegungen werden sie ignoriert, da beim Verfahren mit aktiver Transformation ein 
Stellungswechsel normalerweise nicht mglich ist. Beim Verfahren mit aktivem CP wird die 
Stellung fr den Zielpunkt vom Startpunkt bernommen.

Syntax

STAT=<Wert>

688

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.9 Transformationen

Bedeutung

STAT:

Einstellbare Adresse zur Angabe der Gelenkstellungen

<Wert>:

Binr- oder Dezimalwert

Enthlt fr jede der mglichen Stellungen ein Bit. Die Bedeutung der Bits wird von der 
jeweiligen Transformation festgelegt.

Die Anwendung von STAT soll am Beispiel eines 6-achsigen Knickarmroboters mit Frsspindel 
veranschaulicht werden. Die kinematische Transformation soll ber die Robotertransformation 
ROBX erfolgen (Voraussetzung: Compile-Zyklus "RMCC/ROBX Transformation Robotik 
erweitert" ist geladen und aktiv). 

Die Achsen A1, A2 und A3 sind die Hauptachsen des Knickarmroboters. Mit den Hauptachsen 
werden die Achsen A4, A5 und A6, die als Kopf- oder Handachsen bezeichnet werden, im 
Arbeitsraum positioniert. Durch die zustzlichen Bewegungsmglichkeiten der Handachsen 
kann die Frsspindel im Raum so orientiert werden, wie es fr die Bearbeitungsaufgabe 
erforderlich ist. Bei gleicher Werkzeugorientierung sind dabei verschiedene Gelenkstellungen 
mglich.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

689

(cid:36)(cid:20)(cid:36)(cid:21)(cid:36)(cid:22)(cid:36)(cid:23)(cid:36)(cid:24)(cid:36)(cid:25)Arbeitsvorbereitung

3.9 Transformationen

Die Auswahl der fr die Bearbeitung zu verwendenden Gelenkstellungen erfolgt durch 
Programmierung von Bit 0 ... 2 der einstellbaren Adresse STAT:

Bit 0

Position des Schnittpunkts der Handachsen (A4, A5, A6)

= 0

Grundbereich (Shoulder Right)

Der Roboter befindet sich im Grundbereich, 
wenn der X-Wert des Schnittpunkts der 
Handachsen, bezogen auf das A1-Koordina
tensystem, positiv ist.

= 1

berkopfbereich (Shoulder Left)

Der Roboter befindet sich im berkopfbe
reich, wenn der X-Wert des Schnittpunkts der 
Handachsen, bezogen auf das A1-Koordina
tensystem, negativ ist.

Bit 1

Position von Achse 3

Der Winkel, bei dem sich der Wert von Bit 1 ndert, ist abhngig vom Robotertyp. Fr Ro
boter, deren Achsen 3 und 4 sich schneiden, gilt:

Beispiel: Der Schnittpunkt der 
Handachsen befindet sich im 
Grundbereich

= 0

= 1

A3 < 0 (Elbow Down)

A3  0 (Elbow Up)

Hinweis:
Bei Robotern mit einem Offset zwischen Achse 3 und 
4 ist der Winkel, bei dem sich der Wert von Bit 1 n
dert, von der Gre dieses Offsets abhngig.

Bit 2

Position von Achse 5

= 0

= 1

A5  0 (No Handflip)

A5 < 0 (Handflip)

Programmbeispiel:

Programmcode

...

Offset zwischen A3 und A4

Kommentar

N14 T="T8MILLD20" D1 

; $TC_DP3[1,1]=132.95

690

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:14)(cid:59)(cid:16)(cid:59)(cid:37)(cid:76)(cid:87)(cid:3)(cid:19)(cid:3)(cid:32)(cid:3)(cid:20)(cid:37)(cid:76)(cid:87)(cid:3)(cid:19)(cid:3)(cid:32)(cid:3)(cid:19) 
Programmcode

N16 ORIMKS

Arbeitsvorbereitung

3.9 Transformationen

Kommentar

N17 G1 PTP X1665.67 Y0 Z1377.405 A=0 B=0 C=0 STAT=... F2000 ; Der STAT-Wert be-

stimmt die Gelenkstel-
lungen (s. u.).

...

STAT=1 ('B001') 

 Shoulder Left

 Elbow Down

 No Handflip

STAT=2 ('B010') 

 Shoulder Right

 Elbow Up

 No Handflip

STAT=5 ('B101') 

 Shoulder Left

 Elbow Down

 Handflip

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

691

(cid:61)(cid:59)(cid:60)(cid:61)(cid:59)(cid:60)(cid:61)(cid:59)(cid:60) 
 
 
Arbeitsvorbereitung

3.9 Transformationen

STAT=6 ('B110' )

 Shoulder Right

 Elbow Up

 Handflip

TRANSMIT

Bei TRANSMIT wird die Adresse STAT benutzt, um die Mehrdeutigkeit hinsichtlich des Pols 
aufzulsen.

Wenn die Rundachse um 180 drehen muss bzw. die Kontur bei CP durch den Pol fhren 
wrde, gilt:

Bit 0

Nur relevant bei $MC_TRANSMIT_POLE_SIDE_FIX_1/2 = 1 bzw. 2:

= 0

= 1

Rundachse verfhrt um +180 bzw. dreht im Uhrzeigersinn.

Rundachse verfhrt um -180 bzw. dreht gegen den Uhrzeigersinn.

Bit 1

Nur relevant bei $MC_TRANSMIT_POLE_SIDE_FIX_1/2 = 0:

= 0

= 1

Es wird durch den Pol gefahren. Die Rundachse dreht nicht.

Es wird um den Pol gedreht. Dabei ist Bit 0 von STAT relevant.

3.9.9.3

Vorzeichen der Achswinkel angeben (TU)

Um bei rotatorischen Achsen auch Achswinkel, die grer +180 oder kleiner -180 sind, ohne 
besondere Verfahrstrategie (z. B. Zwischenpunkte) anfahren zu knnen, mssen unter der 
einstellbaren Adresse TU die Vorzeichen der Achswinkel angegeben werden. 

Hinweis

Die Steuerung bercksichtigt programmierte TU-Werte nur bei PTP-Bewegungen. Bei CP-
Bewegungen werden sie ignoriert.

Syntax

TU=<Wert>

692

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:61)(cid:59)(cid:60)Arbeitsvorbereitung

3.9 Transformationen

Bedeutung

TU:

Einstellbare Adresse zur Angabe der Achswinkelvorzeichen

<Wert>:

Binr- oder Dezimalwert

Fr jede Achse, die in die Transformation eingeht, gibt es ein Bit, das das Vorzeichen 
des Achswinkels () und damit die Verfahrrichtung anzeigt.

Bit

= 0

= 1

Achswinkelvorzeichen: +

Achswinkelbereich: 0   < 360

Achswinkelvorzeichen: - 

Achswinkelbereich: - 360 <  < 0

Beispiel: 6-achsiger Knickarmroboter

Bit

Bedeutung

Wert

Achswinkel
vorzeichen

Achswinkel

Bit 0 1)

Vorzeichen fr den Achswinkel von A1

Bit 1 1)

Vorzeichen fr den Achswinkel von A2

Bit 2 1)

Vorzeichen fr den Achswinkel von A3

Bit 3 1)

Vorzeichen fr den Achswinkel von A4

Bit 4 1)

Vorzeichen fr den Achswinkel von A5

= 0

= 1

= 0

= 1

= 0

= 1

= 0

= 1

= 0

= 1

+

-

+

-

+

-

+

-

+

-

 0

< 0

 0

< 0

 0

< 0

 0

< 0

 0

< 0

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

693

(cid:36)(cid:20)(cid:36)(cid:21)(cid:36)(cid:22)(cid:36)(cid:23)(cid:36)(cid:24)(cid:36)(cid:25)Arbeitsvorbereitung

3.9 Transformationen

Bit

Bedeutung

Bit 5 1)

Vorzeichen fr den Achswinkel von A6

Wert

= 0

= 1

Achswinkel
vorzeichen

Achswinkel

+

-

 0

< 0

1) Die tatschlichen TU-Bitnummern ergeben sich aus den Kanalachsnummern der Roboterachsen! Im 
Beispiel sind die Roboterachsen (A1 bis A6) die ersten sechs Achsen im Kanal, folglich werden die TU-
Bits 0 ... 5 verwendet. Bei einer anderen Kanalachszuordnung der Roboterachsen wrden sich die TU-
Bitnummern der Roboterachsen entsprechend ndern (z. B.: Roboterachsen sind die 3. bis 8. 
Kanalachse, d. h. es werden die TU-Bits 2 ... 7 fr die Roboterachsen verwendet).

TU=19 (entspricht TU='B010011) wrde also bedeuten:

Wert
= 1
= 1
= 0
= 0
= 1
= 0

Achswinkel
A1 < 0
A2 < 0
A3  0
A4  0
A5 < 0
A6  0








Bit
0
1
2
3
4
5

Hinweis

Bei Achsen mit einem Verfahrbereich > 360 wird immer auf krzestem Weg verfahren, da die 
Achsstellung durch die TU-Information nicht eindeutig bestimmbar ist.

Wird bei einer Position kein TU programmiert, wird in Abhngigkeit von MD30455 
$MA_MISC_FUNCTION_MASK der krzere oder lngere Weg verfahren.

TRANSMIT

Beim PTP-Fahren bei aktivem TRANSMIT ist die Adresse TU ohne Bedeutung!

694

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
Beispiel

Die in der folgenden Abbildung angegebene Rundachsposition kann in negativer oder in 
positiver Richtung angefahren werden. Unter der Adresse A1 wird die Winkelposition 
programmiert. Erst durch die TU-Angabe wird die Verfahrrichtung eindeutig.

Arbeitsvorbereitung

3.9 Transformationen

3.9.9.4

Beispiel 1: PTP-Fahren eines 6-Achs-Roboters mit ROBX-Transformation

Im folgenden Anwendungsbeispiel werden das kartesische PTP-Fahren und die damit im 
Zusammenhang stehenden NC-Befehle exemplarisch gezeigt.

Bild 3-6

6-achsiger Knickarmroboter mit Frsspindel

N1 G90

N2 T=T8MILLD20 D1 M6

N3 TRAORI

;$P_UIFR[1]=CTRANS(X,1500,Y,0,Z,400):CROT(X,0,Y,0,Z,-90)

N4 G54

N5 M3 S20000

N6 ORIWKS

N7 ORIVIRT1 

N8 CYCLE832(0.01,_FINISH,1)

;HOME

N9 TRAFOOF

N10 G0 RA1=0.0000 RA2=-90.0000 RA3=90.0000 A=0.0000 B=90.0000 C=0.0000

N11 TRAORI

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

695

(cid:61)(cid:76)(cid:72)(cid:79)(cid:83)(cid:82)(cid:86)(cid:76)(cid:87)(cid:76)(cid:82)(cid:81)(cid:36)(cid:81)(cid:73)(cid:68)(cid:81)(cid:74)(cid:86)(cid:83)(cid:82)(cid:86)(cid:76)(cid:87)(cid:76)(cid:82)(cid:81)(cid:81)(cid:72)(cid:74)(cid:68)(cid:87)(cid:76)(cid:89)(cid:72)(cid:3)(cid:53)(cid:76)(cid:70)(cid:75)(cid:87)(cid:88)(cid:81)(cid:74)(cid:29)(cid:36)(cid:20)(cid:32)(cid:20)(cid:22)(cid:24)(cid:114)(cid:3)(cid:55)(cid:56)(cid:16)(cid:37)(cid:76)(cid:87)(cid:32)(cid:20)(cid:83)(cid:82)(cid:86)(cid:76)(cid:87)(cid:76)(cid:89)(cid:72)(cid:3)(cid:53)(cid:76)(cid:70)(cid:75)(cid:87)(cid:88)(cid:81)(cid:74)(cid:29)(cid:36)(cid:20)(cid:32)(cid:21)(cid:21)(cid:24)(cid:114)(cid:3)(cid:55)(cid:56)(cid:16)(cid:37)(cid:76)(cid:87)(cid:32)(cid:19)(cid:61)(cid:59)(cid:60)Arbeitsvorbereitung

3.9 Transformationen

N12 G54

N13 G0 PTP X1369.2426 Y956.7528 Z502.5517 A=135.5761 B=-33.2223 
C=161.1435 STAT='B010' TU='B001011'

N14 G0 X1355.1242 Y1014.9394 Z424.9695 A=135.8491 B=-33.1439 
C=160.9941 STAT='B010' TU='B001011'

N15 G1 CP X1354.8361 Y1016.1269 Z423.3862 A=136.0635 B=-33.0819 C=160.8770 
F1000

N16 G1 X1336.4283 Y1016.1269 Z426.6311 A=136.0484 B=-32.2151 C=160.9643 
F2000

N17 G1 X1317.9831 Y1016.1269 Z429.6730 A=136.0175 B=-31.3394 C=161.0655

;HOME

N18 TRAFOOF

N19 G0 RA1=0.0000 RA2=-90.0000 RA3=90.0000 A=0.0000 B=90.0000 C=0.0000

N20 M30

3.9.9.5

Beispiel 2: PTP-Fahren bei generischer 5-Achs-Transformation

Annahme: Es liegt eine rechtwinklige CA-Kinematik zu Grunde.

Programmcode

TRAORI

PTP

N10 A3=0 B3=0 C3=1

N20 A3=1 B3=0 C3=1

N30 A3=1 B3=0 C3=0

Kommentar

; Transformation CA-Kinematik ein

; PTP-Fahren einschalten

; Rundachspositionen C=0 A=0

; Rundachspositionen C=90 A=45

; Rundachspositionen C=90 A=90

N40 A3=1 B3=0 C3=1 STAT=1

; Rundachspositionen C=270 A=45

Eindeutige Anfahrstellung der Rundachsposition auswhlen:

Im Satz N40 fahren dabei die Rundachsen durch die Programmierung von STAT=1 den 
lngeren Weg von ihrem Startpunkt (C=90, A=90) zum Endpunkt (C=270, A=45). Mit STAT=0 
wrden die Rundachsen dagegen den krzeren Weg zum Endpunkt (C=90, A=45) fahren.

696

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

3.9.9.6

Beispiel 3: PTPG0 und TRANSMIT

Umfahren des Pols mit PTPG0 und TRANSMIT

Arbeitsvorbereitung

3.9 Transformationen

Programmcode

Kommentar

N001 G0 X30 Z0 F10000 T1 D1 G90

; Ausgangsstellung Absolutma

N002 SPOS=0

N003 TRANSMIT

N010 PTPG0

N020 G0 X30 Y20

N030 X-30 Y-20

N120 G1 X30 Y20

N110 X30 Y0

M30

; Transformation TRANSMIT

; Zu jedem G0-Satz automatisch PTP und da-
nach wieder CP.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

697

(cid:49)(cid:19)(cid:22)(cid:19)(cid:3)(cid:59)(cid:16)(cid:22)(cid:19)(cid:3)(cid:60)(cid:16)(cid:21)(cid:19)(cid:49)(cid:19)(cid:21)(cid:19)(cid:3)(cid:42)(cid:19)(cid:3)(cid:59)(cid:22)(cid:19)(cid:3)(cid:60)(cid:21)(cid:19)(cid:60)(cid:59)(cid:16)(cid:22)(cid:19)(cid:16)(cid:21)(cid:19)(cid:16)(cid:20)(cid:19)(cid:22)(cid:19)(cid:21)(cid:19)(cid:20)(cid:19)(cid:20)(cid:19)(cid:21)(cid:19)(cid:22)(cid:19)(cid:16)(cid:20)(cid:19)(cid:16)(cid:21)(cid:19)(cid:16)(cid:22)(cid:19)PTPCP 
 
 
 
 
 
Arbeitsvorbereitung

3.9 Transformationen

Herausfahren aus dem Pol mit PTPG0 und TRANSMIT

Programmierung

Kommentar

N001 G0 X90 Z0 F10000 T1 D1 G90

; Ausgangsstellung

; Transformation TRANSMIT

; Zu jedem G0-Satz automatisch PTP und da-
nach wieder CP.

N002 SPOS=0

N003 TRANSMIT

N010 PTPG0

N020 G0 X90 Y60

N030 X-90 Y-60

N040 X-30 Y-20

N050 X10 Y0

N060 X0 Y0

N070 X-20 Y2

N170 G1 X0 Y0

N160 X10 Y0

N150 X-30 Y-20

M30

3.9.10

Randbedingungen bei der Anwahl einer Transformation

Funktion

698

Die Anwahl von Transformationen ist ber Teileprogramm bzw. MDA mglich. Dabei ist zu 
beachten: 

 Ein Bewegungszwischensatz wird nicht eingefgt (Fasen/Radien).

 Eine Spline-Satzfolge muss abgeschlossen sein; wenn nicht, erscheint eine Meldung.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

N070 X20 Y210102020-10-20-30-10-20-30N060 X0 Y0N050 X10 Y0PTPCP3030(cid:60)(cid:59) 
 
 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.9 Transformationen

 Werkzeugfeinkorrektur muss abgewhlt sein (FTOCOF); wenn nicht, erscheint eine 

Meldung.

 Werkzeugradiuskorrektur muss abgewhlt sein (G40); wenn nicht, erscheint eine Meldung.

 Eine aktivierte Werkzeuglngenkorrektur wird von der Steuerung in die Transformation 

bernommen.

 Der vor der Transformation wirksame aktuelle Frame wird von der Steuerung abgewhlt.

 Eine aktive Arbeitsfeldbegrenzung wird fr die von der Transformation betroffenen Achsen 

von der Steuerung abgewhlt (entspricht WALIMOF).

 Schutzbereichsberwachung wird abgewhlt.

 Bahnsteuerbetrieb und berschleifen werden unterbrochen.

 Alle in dem Maschinendatum angegebenen Achsen mssen satzbezogen synchronisiert 

sein.

 Getauschte Achsen werden zurckgetauscht; wenn nicht, erscheint eine Meldung.

 Bei abhngigen Achsen wird eine Meldung ausgegeben.

Werkzeugwechsel

Ein Werkzeugwechsel ist nur bei abgewhlter Werkzeugradiuskorrektur zulssig.

Ein Wechsel der Werkzeuglngenkorrektur und eine An-/Abwahl der Werkzeugradiuskorrektur 
darf nicht im selben Satz programmiert sein.

Framewechsel

Alle Anweisungen, die sich nur auf das Basis-Koordinatensystem beziehen, sind erlaubt 
(FRAME, Werkzeugradiuskorrektur). Ein Framewechsel bei G91 (Kettenma) wird aber  
anders als bei inaktiver Transformation  nicht gesondert behandelt. Das zu fahrende 
Inkrement wird im Werkstck-Koordinatensystem des neuen Frames ausgewertet  
unabhngig davon, welches Frame im Vorgngersatz wirkte.

Ausschlsse

Von der Transformation betroffene Achsen knnen nicht verwendet werden:

 als Preset-Achse (Alarm),

 fr das Fixpunktanfahren (Alarm),

 zum Referenzieren (Alarm).

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

699

Arbeitsvorbereitung

3.9 Transformationen

3.9.11

Transformation abwhlen (TRAFOOF)

Mit der vordefinierten Prozedur TRAFOOF werden alle aktiven Transformationen und Frames 
ausgeschaltet.  

Hinweis

Fr die Abwahl der Transformation gelten dieselben Randbedingungen (Seite 698) wie fr die 
Anwahl.

Danach bentigte Frames mssen durch erneute Programmierung aktiv geschaltet werden.

Syntax

Bedeutung

...

TRAFOOF

TRAFOOF:

Alle aktiven Transformationen/Frames ausschalten

700

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
Arbeitsvorbereitung

3.10 Kinematische Ketten

3.10

Kinematische Ketten

3.10.1

Lschen von Komponenten (DELOBJ)

Die Funktion DELOBJ() "lscht" Komponenten durch Zurcksetzen der zugeordneten 
Systemvariablen auf ihren Defaultwert:

 Elemente von kinematischen Ketten

 Schutzbereiche, Schutzbereichselemente und Kollisionspaare

 Transformationsdaten

Syntax

[<RetVal>=] DELOBJ(<CompType>[,,,<NoAlarm>)])
[<RetVal>=] DELOBJ(<CompType>,<Index1>[,,<NoAlarm>])
[<RetVal>=] DELOBJ(<CompType>[,<Index1>][,<Index2>][,<NoAlarm>])

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

701

Arbeitsvorbereitung

3.10 Kinematische Ketten

Bedeutung

DELOBJ:

Lschen von Elementen von kinematischen Ketten, Schutzbereichen, Schutzbe
reichselementen, Kollisionspaaren und Transformationsdaten

<CompType>:

Typ der zu lschenden Komponente

Datentyp:

STRING

Wert: "KIN_CHAIN_ELEM"
Bedeutung: Systemvariablen aller kinematischen Elemente: $NK_... 

Wert: "KIN_CHAIN_SWITCH"
Bedeutung: Systemvariable $NK_SWITCH[<i>]

Wert: "KIN_CHAIN_ALL"

Bedeutung: Alle kinematischen Elemente und Schalter.

Gleichbedeutend mit dem sukzessiven Aufruf von DELOBJ mit 
"KIN_CHAIN_ELEM" und "KIN_CHAIN_SWITCH"

Wert: "PROT_AREA"
Bedeutung: Systemvariablen der Schutzbereiche:

 $NP_PROT_NAME

 $NP_CHAIN_NAME

 $NP_CHAIN_ELEM

 $NP_1ST_PROT

Wert: "PROT_AREA_ELEM"
Bedeutung: Systemvariablen der Schutzbereichselemente von Maschinenschutz
bereichen und/oder automatischen Werkzeugschutzbereichen:

 $NP_NAME

 $NP_NEXT 

 $NP_NEXTP 

 $NP_COLOR 

 $NP_D_LEVEL 

 $NP_USAGE 

 $NP_TYPE 

 $NP_FILENAME 

 $NP_PARA 

 $NP_OFF 

 $NP_DIR 

 $NP_ANG

Wert: "PROT_AREA_COLL_PAIRS"
Bedeutung: Systemvariablen der Kollisionspaare:

 $NP_COLL_PAIR

 $NP_SAFETY_DIST

Wert: "PROT_AREA_ALL"
Bedeutung: Alle Schutzbereiche, Schutzbereichselemente und Kollisionspaare 
(Systemvariablen $NP_... )

Gleichbedeutend mit dem sukzessiven Aufruf von DELOBJ mit "PROT_AREA", 
"PROT_AREA_ELEM" und "PROT_AREA_COLL_PAIRS"

Wert: "TRAFO_DATA"
Bedeutung: Systemvariablen aller Transformationen $NT_...

702

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.10 Kinematische Ketten

<Index1>:

Index der ersten zu lschenden Komponente (optional)

Datentyp:

Defaultwert:

INT

-1

Wertebereich:

-1  x  (maximale Anzahl projektierter Komponenten -1)

Wert

Bedeutung

0, 1, 2, ....

Index der zu lschenden Komponente.

-1

Alle Komponenten des angegebenen Typs werden gelscht. <In
dex2> wird nicht ausgewertet.

<Index2>:

Index der letzten zu lschenden Komponenten (optional)

Ist <Index2> nicht programmiert, werden nur die Systemvariablen der in <Index1> 
referenzierten Komponente gelscht.

Datentyp:

INT

Defaultwert:

Nur die Systemvariablen der in <Index1> referenzierten Kompo
nente werden gelscht.

Wertebereich: <Index1> < x  (max. Anzahl projektierter Komponenten -1)

<NoAlarm>:

Alarmunterdrckung (optional) 

Datentyp:

BOOL

Defaultwert:

FALSE

Wert

FALSE

TRUE

Bedeutung

Im Fehlerfall (<RetVal> < 0) wird die Programmabarbeitung an
gehalten und ein Alarm angezeigt.

Im Fehlerfall wird die Programmabarbeitung nicht angehalten und 
es wird kein Alarm angezeigt.

Anwendungsfall: Anwenderspezifische Reaktion entsprechend 
Rckgabewert

<RetVal>:

Rckgabewert der Funktion

Datentyp:

INT

Wertebereich: 0, -1, -2, ... -7

Wert

Bedeutung

0

-1

-2

-3

-4

-5

-6

-7

Kein Fehler aufgetreten.

Aufruf der Funktion ohne Parameter. Mindestens der Parameter 
<CompType> muss angegeben werden.

<CompType> bezeichnet unbekannte Komponente

<Index1> ist kleiner als -1

<Index1> ist grer als die projektierte Anzahl Komponenten

<Index1> hat beim Lschen einer Komponentengruppe einen 
Wert ungleich -1

<Index2> ist kleiner als <Index1>

<Index2> ist grer als die projektierte Anzahl Komponenten

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

703

Arbeitsvorbereitung

3.10 Kinematische Ketten

3.10.2

Indexermittlung per Namen (NAMETOINT)

In Systemvariablenfeldern vom Typ STRING sind anwenderspezifische Namen eingetragen. 
Anhand des Bezeichners der Systemvariablen und des Namens, ermittelt die 
Funktion NAMETOINT() den zum Namen gehrenden Indexwert, unter dem er im 
Systemvariablenfeld abgelegt ist.

Syntax

Bedeutung

<RetVal> = NAMETOINT(<SysVar>,<Name>[,<NoAlarm>])

NAMETOINT:

<SysVar>:

Ermittlung des Systemvariablenindex

Name des Systemvariablenfeldes vom Typ STRING

Datentyp:

STRING

Wertebereich: Namen aller Systemvariablenfelder der NC vom Typ STRING 

<Name>:

Zeichenkette bzw. Name, zu dem der Systemvariablenindex ermittelt werden soll.

Datentyp:

STRING

<NoAlarm>:

Alarmunterdrckung (optional) 

Datentyp:

BOOL

Defaultwert:

FALSE

Wert

TRUE

Bedeutung

Im Fehlerfall wird die Programmabarbeitung nicht angehalten und 
es wird kein Alarm angezeigt.

Anwendungsfall: Anwenderspezifische Reaktion entsprechend 
Rckgabewert

FALSE

Im Fehlerfall (<RetVal> < 0) wird die Programmabarbeitung an
gehalten und ein Alarm angezeigt.

<RetVal>:

Systemvariablenindex oder Fehlermeldung

Datentyp:

INT

Wertebereich:

 -1  x  (max. Anzahl projektierter Komponenten -1)

Wert

 0

-1

Bedeutung

Der gesuchte Name wurde unter dem angegebenen Systemvari
ablenindex gefunden.

Der gesuchte Name wurde nicht gefunden bzw. es ist ein Fehler 
aufgetreten.

Beispiel

704

Programmcode

DEF INT INDEX

$NP_PROT_NAME[27] = "Abdeckung"

...

Kommentar

INDEX = NAMETOINT("$NP_PROT_NAME","Abdeckung")

; INDEX == 27

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
3.11 Kollisionsvermeidung mit kinematischen Ketten

Arbeitsvorbereitung

3.11

Kollisionsvermeidung mit kinematischen Ketten

Hinweis

Schutzbereiche

Die in den nachfolgenden Kapiteln genannten Schutzbereiche beziehen sich auf die Funktion 
"Geometrische Maschinenmodellierung".

Informationen zu dieser Funktion siehe Funktionshandbuch berwachen und Kompensieren.

3.11.1

Prfen auf Kollisionspaar (COLLPAIR)

Die Funktion COLLPAIR(...) ermittelt, ob zwei Schutzbereiche ein Kollisionspaar bilden.

Syntax

Bedeutung

[<RetVal> =] COLLPAIR(<Name_1>,<Name_2>[,<NoAlarm>)])

COLLPAIR:

<RetVal>:

Prfen auf Zugehrigkeit zu einem Kollisionspaar

Rckgabewert der Funktion

Datentyp:

Wert:

INT

 0

-1

-2

-3

-4

-5

Die beiden Schutzbereiche bilden ein Kollisionspaar.

Rckgabewert == Kollisionspaarindex m (siehe 
$NP_COLL_PAIR)

Es wurden entweder weniger als zwei Strings angege
ben, oder mindestens einer der beiden ist der Null-
String.

Der im ersten Parameter angegebene Schutzbereich 
wurde nicht gefunden.

Der im zweiten Parameter angegebene Schutzbereich 
wurde nicht gefunden.

Keiner der beiden angegebenen Schutzbereiche wur
de gefunden.

Beide angegebenen Schutzbereiche wurden gefun
den, aber nicht gemeinsam in einem Kollisionspaar.

<Name_1>:

Name des ersten Schutzbereichs

Datentyp:

STRING

Wertebereich:

Parametrierte Schutzbereichsnamen

<Name_2>:

Name des zweiten Schutzbereichs

Datentyp:

STRING

Wertebereich:

Parametrierte Schutzbereichsnamen

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

705

 
Arbeitsvorbereitung

3.11 Kollisionsvermeidung mit kinematischen Ketten

<NoAlarm>:

Alarmunterdrckung (optional)

Datentyp:

BOOL

Wert:

FALSE (Default)

TRUE

Im Fehlerfall (<RetVal> < 0) wird die Program
mabarbeitung angehalten und ein Alarm an
gezeigt.

Im Fehlerfall wird die Programmabarbeitung 
nicht angehalten und es wird kein Alarm an
gezeigt.

Anwendungsfall: Anwenderspezifische Reak
tion entsprechend Rckgabewert

3.11.2

Neuberechnung des Maschinenmodells der Kollisionsvermeidung anfordern 
(PROTA)

Werden Systemvariable der kinematischen Kette $NK_..., der geometrischen 
Maschinenmodellierung oder der Kollisionsvermeidung $NP_... im Teileprogramm 
geschrieben, muss anschlieend die Prozedur PROTA aufgerufen werden, damit die nderung 
im NC-internen Maschinenmodell der Kollisionsvermeidung wirksam wird.

Syntax

Bedeutung

PROTA[(<Par>)]

PROTA:

Neuberechnung des Maschinenmodells der Kollisionsvermeidung anfordern

 Lst Vorlaufstopp aus.

 Muss alleine im Satz stehen.

<Par>:

Parameter (optional)

Datentyp:

Wert:

STRING

---

Ohne Parameter.

Es wird eine Neuberechnung des Maschinenmodells 
durchgefhrt. Die Stati der Schutzbereiche bleiben erhal
ten.

"R"

Es wird eine Neuberechnung des Maschinenmodells 
durchgefhrt. Die Schutzbereiche werden in ihren Initial
isierungsstatus entsprechend $NP_INIT_STAT versetzt.

Randbedingungen

Simulation

Die Prozedur PROTA darf in Teileprogrammen nicht im Zusammenhang mit der Simulation 
(simNC) verwendet werden.

706

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
3.11 Kollisionsvermeidung mit kinematischen Ketten

Arbeitsvorbereitung

Beispiel: Vermeidung des Aufrufs von PROTA, whrend die Simulation aktiv ist.

Programmcode

Kommentar

...

IF $P_SIM == FALSE

; IF Simulation nicht aktiv

   PROTA

ENDIF

...

; THEN Kollisionsmodell neu berechnen

; ENDIF

Siehe auch

Schutzbereichszustand setzen (PROTS) (Seite 707)

3.11.3

Schutzbereichszustand setzen (PROTS)

Die Prozedur PROTS(...) setzt den Status von Schutzbereichen auf den angegebenen Wert.

Syntax

Bedeutung

PROTS(<State>[,<Name_1>,...,<Name_n>])

PROTS:

Status von Schutzbereichen setzen

 Muss alleine im Satz stehen.

<State>:

Status, auf den die angegebenen Schutzbereiche gesetzt werden sollen

Datentyp:

CHAR

Wert:

"A"oder "a"

Status: Aktiv

"I"oder "i"

Status: Inaktiv

"P"oder "p"

Status: Voraktiviert bzw. PLC-gesteuert 1)

"R"oder "r"

Status: NC-interner Wert des Initialisierungs
status 2)

<Name_1> ... 
<Name_n>:

Name eines oder mehrerer Schutzbereiche, die auf den angegebenen Status ge
setzt werden sollen (optional)

Ist kein Name angegeben, wird der angegebenen Status fr alle definierten 
Schutzbereiche gesetzt.

Datentyp:

STRING

Wertebereich:

Parametrierte Schutzbereichsnamen

Hinweis
Die maximale Anzahl von Schutzbereichen, die als Parameter angegeben werden 
knnen, ist nur abhngig von der maximal mglichen Anzahl von Zeichen pro 
Programmzeile.

1) Die Aktivierung / Deaktivierung erfolgt ber: DB10.DBX234.0 - DBX241.7
2) Der Status wird auf den NC-internen Wert des Initialisierungsstatus gesetzt, d. h. auf den Wert, den 
die Systemvariable $NP_INIT_STAT zum Zeitpunkt des letzten Aufrufs von PROTA(...) (Seite 706) 
hatte.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

707

 
 
Arbeitsvorbereitung

3.11 Kollisionsvermeidung mit kinematischen Ketten

3.11.4

Abstandsbestimmung zweier Schutzbereiche (PROTD)

Die Funktion PROTD(...) berechnet den Abstand von zwei Schutzbereichen.

Funktionseigenschaften:

 Die Abstandsberechnung erfolgt unabhngig vom Status der Schutzbereiche (aktiviert, 

deaktiviert, voraktiviert).

 Zur Abstandsberechnung zweier Schutzbereiche werden nur solche 

Schutzbereichselemente herangezogen, welche mit $NP_USAGE = "C" oder "A" 
gekennzeichnet sind. Schutzbereichselemente des Schutzbereichs, die mit $NP_USAGE 
= "V" gekennzeichnet sind, werden nicht betrachtet.

 Schutzbereiche, bei denen alle Schutzbereichselemente des Schutzbereichs mit 
$NP_USAGE = "V" gekennzeichnet sind, knnen nicht zur Abstandsberechnung 
herangezogen werden.

 Die Abstandsberechnung erfolgt mit den am Ende des Vorgngersatzes gltigen 

Positionen.

 berlagerungen, die im Hauptlauf eingerechnet werden, z. B. DRF-Verschiebung oder 
externe Nullpunktverschiebungen, gehen mit den zum Interpretationszeitpunkt der 
Funktion gltigen Werten in die Abstandsberechnung ein.

Hinweis

Synchronisation

Bei Anwendung der Funktion PROTD(...) liegt es ausschlielich in der Verantwortung des 
Anwenders, Haupt- und Vorlauf gegebenenfalls mittels Vorlaufstopp STOPRE zu 
synchronisieren.

Kollision

Liegt zwischen den angegebenen Schutzbereichen eine Kollision vor, liefert die Funktion einen 
Abstand von 0,0. Eine Kollision liegt vor, wenn sich die beiden Schutzbereiche berhren oder 
durchdringen.

Der Sicherheitsabstand fr die Kollisionsprfung (MD10622 
$MN_COLLISION_SAFETY_DIST) wird bei der Abstandsberechnung nicht bercksichtigt.

[<RetVal> =] PROTD([<Name_1>],[<Name_2>],VAR <Vector>[,<System>])

PROTD:

Abstand der beiden angegebenen Schutzbereiche berechnen

 Muss alleine im Satz stehen.

<RetVal>:

Rckgabewert der Funktion: Absolutwert des Abstandes der beiden Schutzbereiche 
oder 0,0 bei Kollision (siehe oben: Absatz Kollision)

Datentyp:

REAL

Wertebereich:

0,0  x  +max. REAL-Wert

Syntax

Bedeutung

708

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

3.11 Kollisionsvermeidung mit kinematischen Ketten

Arbeitsvorbereitung

<Name_1>, 
<Name_2>:

Namen der beiden Schutzbereiche, deren Abstand zueinander berechnet werden 
soll (optional)

Datentyp:

STRING

Wertebereich:

Parametrierte Schutzbereichnamen

Defaultwert:

"" (Leerstring)

Sind keine Schutzbereiche angegeben, berechnet die Funktion 
den aktuell kleinsten Abstand aus allen im Kollisionsmodell ent
haltenen aktivierten und voraktivierten Schutzbereichen.

<Vector>:

Rckgabewert: 3-dimensionaler Abstandsvektor von Schutzbereich <Name_2> zu 
Schutzbereich <Name_1> mit:

 <Vector>[0]: X-Koordinate im Weltkoordinatensystem

 <Vector>[1]: Y-Koordinate im Weltkoordinatensystem

 <Vector>[2]: Z-Koordinate im Weltkoordinatensystem

Bei Kollision: <Vector> == Nullvektor

Datentyp:

VAR REAL [3]

Wertebereich:

<Vector> [n]: 0,0  x  max. REAL-Wert

<System>:

Masystem (inch / metrisch) fr Abstand und Abstandsvektor (optional)

Datentyp:

Wert:

BOOL

FALSE (Default) Masystem entsprechend dem aktuell akti
ven G-Befehl aus G-Gruppe 13 (G70, G71, 
G700, G710).

TRUE

Masystem entsprechend des eingestell
ten Grundsystems:

MD52806 $MN_ISO_SCALING_SYSTEM

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

709

Arbeitsvorbereitung

3.12 Transformationen mit kinematischen Ketten

3.12

Transformationen mit kinematischen Ketten

3.12.1

Transformation einschalten (TRAFOON)

Eine mit kinematischen Ketten definierte Transformation wird mit der vordefinierten Prozedur 
TRAFOON aktiviert. Der Aufruf muss alleine in einem Satz stehen.

Hinweis

Alternativ kann eine mit kinematischen Ketten definierte Transformation auch ber 
konventionelle Sprachbefehle wie z. B. TRAORI oder TRANSMIT aktiviert werden. Dazu muss 
in der Systemvariablen $NT_TRAFO_INDEX ein entsprechender Wert ungleich null 
eingetragen sein.

Weitere Informationen zu $NT_TRAFO_INDEX siehe "Listenhandbuch Systemvariablen".

Syntax

Bedeutung

TRAFOON(<Trafoname>,<Diameter>,<k>)

TRAFOON:

Prozedur zur Aktivierung einer mit kinematischen Ketten definierten Transforma
tion 

<Trafoname>:

Name des Transformationsdatensatzes

Datentyp:

STRING

Wertebereich:

Alle ber $NT_NAME definierte Namen von Transformations
datenstzen 

Hinweis:
Der Name des Transformationsdatensatzes muss eindeutig sein. Er darf in 
$NT_NAME nur einmal vorkommen.

<Diameter>:

Bezugs- bzw. Arbeitsdurchmesser (nur TRACYL)

Datentyp:

REAL

Der Wert muss > 1 sein.

<k>:

Definiert die Verwendung der Nutwandkorrektur (nur TRACYL).

Datentyp:

BOOL

Wert:

FALSE

ohne Nutwandkorrektur

TRUE

mit Nutwandkorrektur

Entspricht dem TRACYL-Transformationstyp 514 (Nutwandkorrektur program
mierbar). Ist <k> nicht angegeben, wirkt die parametrierte Einstellung von Bit 10 in 
$NT_CNTRL[<n>]. 

Beispiel

710

Programmcode

Kommentar

TRAFOON["Trans_1"]

Aktiviert die Transformation mit dem Namen Trans_1.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
3.12 Transformationen mit kinematischen Ketten

Arbeitsvorbereitung

3.12.2

Orientierungstransformation nach Maschinenvermessung modifizieren 
(CORRTRAFO)

Bei Maschinen mit Orientierungstransformationen, die mittels kinematischer Ketten definiert 
wurden, kann der Anwender die vordefinierte Funktion CORRTRAFO verwenden, um nach 
einer Maschinenvermessung die Offsetvektoren oder die Richtungsvektoren der 
Orientierungsachsen im kinematischen Modell der Maschine zu modifizieren. 

Hinweis

Die mit der Funktion CORRTRAFO eingeschriebenen Korrekturwerte sind nicht sofort in der 
Transformation wirksam. Erst nach Transformationsabwahl, NEWCONF und 
Transformationsanwahl sind die Korrekturwerte wirksam.

Syntax

<Corr_Status> = CORRTRAFO(<Corr_Vect>, <Corr_Index>, <Corr_Mode>, 
[ <No_Alarm>])

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

711

Arbeitsvorbereitung

3.12 Transformationen mit kinematischen Ketten

Bedeutung

CORRTRAFO:

Funktionsaufruf

712

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

3.12 Transformationen mit kinematischen Ketten

Arbeitsvorbereitung

<Corr_Status>:

Rckgabewert der Funktion

Datentyp:

INT

Werte:

0 Die Funktion wurde ohne Fehler ausgefhrt.

1 Es ist keine Transformation aktiv.

2 Die aktuell aktive Transformation ist keine Orientierungstrans

formation.

3 Die aktive Orientierungstransformation wurde nicht mit kine

matischen Ketten definiert.

10 Der Aufrufparameter <Corr_Index> ist negativ.

11 Der Aufrufparameter <Corr_Mode> ist negativ.

12 Ungltiger Verweis auf einen Abschnitt einer Teilkette (1er-

Stelle von <Corr_Index>). Der Wert darf nicht grer sein 
als die Zahl der Orientierungsachsen in der Teilkette.

13 Ungltiger Verweis auf die Orientierungsachse einer Teilkette 
(1er-Stelle von <Corr_Index>). Der Wert muss kleiner sein 
als die Zahl der Orientierungsachsen in der Teilkette.

14 Ungltiger Verweis auf eine Teilkette (10er-Stelle 

von <Corr_Index>). Es sind nur die Werte 0 und 1 zulssig 
(Verweis auf Part- bzw. Tool-Kette). Diese Fehlernummer tritt 
auch auf, wenn die Teilkette, auf die <Corr_Index> verweist, 
nicht existiert.

15 Im Abschnitt, auf den mit Parameter <Corr_Index> verwie

sen wird, ist kein Korrekturelement definiert 
($NT_CORR_ELEM_P bzw. $NT_CORR_ELEM_T).

20 Ungltiger Korrekturmodus (1er-Stelle von <Corr_Mode>). 

Es sind nur die Werte 0 und 1 zulssig.

21 Ungltiger Korrekturmodus (10er- und/oder 100er-Stelle 

von <Corr_Mode>). Beim Schreiben einer Achsrichtung darf 
nur die 1er-Stelle ungleich null sein.

30 Die 100er-Stelle von <Corr_Mode> ist ungltig. Es sind nur 

die Werte 0 und 1 zulssig.

31 Die 1000er-Stelle von <Corr_Mode> ist ungltig. Es sind nur 

die Werte 0 und 1 zulssig.

40 Der Richtungsvektor, der als Achsrichtung bernommen wer
den soll, ist der Nullvektor. Dieser Fehler kann nur auftreten, 
wenn die 1000er-Stelle von <Corr_Mode> gleich 0 ist. Ist die 
1000er-Stelle dieses Parameters gleich 1 (berwachung der 
maximalen Korrektur deaktiviert), kann auch der Nullvektor 
geschrieben werden.

41 Bei der Korrektur eines Offsetvektors ist die Abweichung ge

genber dem aktuellen Werte in mindestens einer Koordinate 
grer als der durch das Settingdatum SD41610 
$SN_CORR_TRAFO_LIN_MAX vorgegebene Maximalwert. 
Der Parameter <Corr_Vect> wird durch einen Fehlervektor 
berschrieben. Das gilt auch dann, wenn die Bearbeitung mit 
Alarm abgebrochen wird (siehe Parameter <No_Alarm>).

Der Fehlervektor enthlt in den Komponenten, deren Korrek
turwert das zulssige Limit berschritten hat, die vorzeichen
richtige Differenz zwischen dem ermittelten Korrekturwert und 
dem Limit.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

713

Arbeitsvorbereitung

3.12 Transformationen mit kinematischen Ketten

Der Inhalt der Komponenten, die ihr Limit nicht berschritten 
haben, ist null.

42 Bei der Korrektur eines Richtungsvektors ist die Winkelabwei
chung gegenber der aktuellen Richtung grer als der durch 
das Settingdatum SD41611 $SN_CORR_TRAFO_DIR_MAX 
vorgegebene Maximalwert.

43 Der Versuch, eine Systemvariable zu beschreiben, wurde we

gen fehlender Schreibrechte abgewiesen.

<Corr_Vect>:

Korrekturvektor

Der Inhalt des Korrekturvektors wird durch die nachfolgenden Parameter 
<Corr_Index> und <Corr_Mode> definiert.

Ist <Corr_Status> = 41, wird der Inhalt des Vektors berschrieben (s. o.).

Datentyp: REAL

<Corr_Index>:

Abschnitt, dessen Korrekturelement modifiziert werden soll /
Index der Orientierungsachse, deren Richtungsvektor modifiziert werden soll

Datentyp:

INT

Der Parameter <Corr_Index> ist dezimalcodiert (1er- bis 10er-Stelle):

1er-
Stelle:

10er-
Stelle:

Enthlt den Index des Abschnitts bzw. der Orientierungsachse in 
der Teilkette.

Verweist auf die Teilkette.

0x Werkstck-Kette

1x Werkzeug-Kette

714

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

3.12 Transformationen mit kinematischen Ketten

Arbeitsvorbereitung

<Corr_Mode>:

Korrekturmodus

Datentyp:

INT

Der Parameter <Corr_Mode> ist dezimalcodiert (1er- bis 1000er-Stelle):

1er-
Stelle:

Bestimmt, welches Element korrigiert werden soll.

xxx0 Korrektur eines linearen Offsetvektors

xxx1 Korrektur des Richtungsvektors einer Orientierungsachse

10er-
Stelle:

Bestimmt, wie das Korrekturelement, auf das der Inhalt 
von <Corr_Index> verweist, modifiziert werden soll.

xx0x Der Korrekturvektor wird unmittelbar in das Korrekturele

ment geschrieben.

Diese Variante kann dazu verwendet werden, das Korrek
turelement unmittelbar zu beschreiben, ohne dass der In
dex <n> des betreffenden Systemdatums 
($NK_OFF_DIR[<n>, ...]) bekannt sein muss.

xx1x Wie 0, jedoch mit dem Unterschied, dass der bergebene 
Korrekturwert in Weltkoordinaten interpretiert wird.

Ein Unterschied zwischen den Varianten 0 und 1 kann im
mer dann entstehen, wenn die kinematische Kette in Grund
stellung (Positionen aller Orientierungsachsen gleich 0) 
weitere Drehungen enthlt.

xx2x Wie 1, jedoch mit dem Unterschied, dass sich der Korrek
turwert auf den gesamten Abschnitt bezieht, d. h., in das 
Korrekturelement wird ein solcher Wert eingetragen, dass 
der gesamte Abschnitt die durch den Korrekturwert defi
nierte Lnge erreicht.

Hinweis:
Die Werte 1 und 2 sind beim Beschreiben des Richtungsvektors 
einer Orientierungsachse nicht erlaubt.

100er-
Stelle:

Bestimmt, wie der Inhalt des Parameters <Corr_Vect> zu inter
pretieren ist.

x0xx Der bergebene Korrekturvektor <Corr_Vect> enthlt die 
gesamte neue Lnge des Korrekturelements bzw. des Ab
schnitts, auf den <Corr_Index> in Verbindung mit der 
10er-Stelle von <Corr_Mode> verweist (absolute Korrek
tur).

x1xx Der bergebene Korrekturvektor <Corr_Vect> enthlt nur 

die Differenz gegenber der aktuellen Lnge des Korrek
turelements bzw. des Abschnitts, auf den <Corr_Index> 
in Verbindung mit der 10er-Stelle von <Corr_Mode> ver
weist (inkrementelle Korrektur).

Hinweis:
Bei der Korrektur des Richtungsvektors einer Orientierungsachse 
muss der Inhalt der 100er-Stelle 0 sein.

1000er-
Stelle:

Bestimmt, ob die Korrektur durch folgenden Maximalwert begrenzt 
werden soll:

 SD41610 $SN_CORR_TRAFO_LIN_MAX

bzw.

 SD41611 $SN_CORR_TRAFO_DIR_MAX

0xxx berwachung der maximalen Korrektur ist aktiv.

1xxx berwachung der maximalen Korrektur ist nicht aktiv.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

715

Arbeitsvorbereitung

3.12 Transformationen mit kinematischen Ketten

<No_Alarm>:

Verhalten im Fehlerfall (Rckgabewert > 0) (optional) 

Datentyp:

BOOL

Wert:

FALSE 
(Default)

Im Fehlerfall wird die Programmabarbeitung angehalten 
und Alarm 14103 angezeigt.

TRUE

Im Fehlerfall wird die Programmabarbeitung nicht ange
halten und es wird kein Alarm angezeigt.

Anwendungsfall: Anwenderspezifische Reaktion ent
sprechend Rckgabewert

Hinweis

Falls beim Aufruf der Funktion ein Fehler auftritt, wird entweder ein Alarm ausgegeben oder 
eine Fehlernummer zurckgegeben (siehe Parameter <No_Alarm>), sodass der Anwender 
selbst geeignet auf den Fehlerzustand reagieren kann. Die Fehlerursache wird durch einen 
Alarmparameter nher bezeichnet. Eine an Stelle eines Alarms zurckgegebene 
Fehlernummer ist identisch mit dem Alarmparameter.

Weitere Informationen zu CORRTRAFO

Die kinematische Struktur einer Maschine mit Orientierungstransformation wird durch eine 
oder zwei kinematische Ketten (Teilketten) beschrieben, die vom Nullpunkt des 
Weltkoordinatensystems ausgehen. Eine der beiden Ketten, die Werkzeug-Kette, endet am 
Bezugspunkt des Werkzeugs, die andere, die Werkstck-Kette im Nullpunkt des 
Basiskoordinatensystems.

Die Funktion CORRTRAFO schreibt Hebelarmlngen und Achsrichtungen bei Maschinen mit 
Orientierungstransformation in spezielle Korrekturelemente. Eine kinematische Kette wird 
unter anderem mit Elementen vom Typ OFFSET beschrieben, die ber $NK_TYPE definiert 
werden. 

CORRTRAFO arbeitet mit Abschnitten

Die beiden Teilketten knnen sich jeweils in maximal vier Abschnitte aufteilen:

 Abschnitt 1 beginnt am Startpunkt der Kette und endet an der ersten Orientierungsachse. 

 Abschnitt 2 ist der Abschnitt zwischen Orientierungsachse 1 und Orientierungsachse 2.

 Abschnitt 3 ist der Abschnitt zwischen Orientierungsachse 2 und Orientierungsachse 3.

 Abschnitt 4 ist der Abschnitt zwischen Orientierungsachse 3 und dem Ende der Werkzeug- 

bzw. Werkstck-Kette.

Die Abschnitte knnen jeweils konstante Kettenelemente des Typs OFFSET oder 
ROT_CONST enthalten.

Die folgende Grafik zeigt eine Orientierungstransformation mit 2 Orientierungsachsen.

716

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

3.12 Transformationen mit kinematischen Ketten

Arbeitsvorbereitung

Bild 3-7

CORRTRAFO Beispiel

Die Abschnitte sind eindeutig definiert: Durchluft man die kinematische Teil-Kette von ihrem 
Startpunkt bis zum Endpunkt, so hat der erste Abschnitt den Index 0, der nchste den Index 1 
usw. Der Index des letzten Abschnitts ist dann immer gleich der Zahl der Orientierungsachsen.

Korrekturelemente

Auf jeweils ein konstantes kinematisches Kettenelement (Kettenelement des Typs 
$NK_TYPE[<n>] = "OFFSET") in jedem dieser Abschnitte kann mit der Systemvariablen 
$NT_CORR_ELEM_T[<n>, 0 ... 3] bzw. $NT_CORR_ELEM_P[<n>, 0 ... 3] verwiesen werden. 
In diese so bezeichneten Elemente werden mithilfe der Funktion CORRTRAFO die 
Korrekturwerte geschrieben, die bei der Maschinenvermessung ermittelt wurden.

Beispiel mit Transformations-Index = 1:

 $NT_CORR_ELEM_T[1,0] = "C_AXIS_OFFSET"; Offset der C-Achse (Orientierungsachse 

1) in Abschnitt 1 ist als Korrekturelement definiert.

 $NT_CORR_ELEM_T[1,1] = "B_AXIS_OFFSET"; Offset der B-Achse (Orientierungsachse 

2) in Abschnitt 2 ist als Korrekturelement definiert.

 $NT_CORR_ELEM_T[1,2] = "BASE_TOOL_OFFSET"; Offset von der B-Achse zum 

Werkzeugbezugspunkt in Abschnitt 3 ist als Korrekturelement definiert. 

Die Reihenfolge der Verweise in $NT_CORR_ELEM_T/P[<n>, 0 ... 3] muss mit den oben 
beschriebenen Abschnitten korrespondieren, d. h. in $NT_CORR_ELEM_T/P [<n>, 0] kann nur 
ein Kettenelement stehen, das vor der ersten Orientierungsachse liegt usw..

Die Funktion CORRTRAFO schreibt in die so definierten Korrekturelemente die Werte, die 
ber die Vermessung der Maschine bestimmt wurden. Die Modifizierung der Korrekturwerte 
wird in CORRTRAFO ber den Parameter <Corr_Mode> definiert.

Kette schlieen

Sind Bit 7 oder Bit 8 in der Systemvariablen $NT_CNTRL[<n>] gesetzt, werden am Ende der 
Werkstck-Kette (Bit 7) bzw. vor dem Startpunkt der Werkzeug-Kette (Bit 8) intern automatisch 
zustzliche konstante Kettenelemente eingefgt, die eine Verbindung vom Endpunkt der Kette 
zum Maschinennullpunkt herstellen ("Kette schlieen").

Diese automatisch eingefgten Elemente knnen von extern nicht beschrieben, sondern nur 
gelesen werden (siehe dazu die Systemvariablen $AC_TRAFO_CORR_ELEM_P/T).

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

717

(cid:44)(cid:21)(cid:3)(cid:32)(cid:3)(cid:36)(cid:69)(cid:86)(cid:70)(cid:75)(cid:81)(cid:76)(cid:87)(cid:87)(cid:3)(cid:20)(cid:44)(cid:22)(cid:3)(cid:32)(cid:3)(cid:36)(cid:69)(cid:86)(cid:70)(cid:75)(cid:81)(cid:76)(cid:87)(cid:87)(cid:3)(cid:21)(cid:44)(cid:23)(cid:3)(cid:32)(cid:3)(cid:36)(cid:69)(cid:86)(cid:70)(cid:75)(cid:81)(cid:76)(cid:87)(cid:87)(cid:3)(cid:22)(cid:89)(cid:20)(cid:15)(cid:3)(cid:734)(cid:20)(cid:89)(cid:21)(cid:15)(cid:3)(cid:734)(cid:21)(cid:49)(cid:88)(cid:79)(cid:79)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:3)(cid:71)(cid:72)(cid:86)(cid:3)(cid:58)(cid:72)(cid:79)(cid:87)(cid:78)(cid:82)(cid:82)(cid:85)(cid:71)(cid:76)(cid:81)(cid:68)(cid:16)(cid:87)(cid:72)(cid:81)(cid:86)(cid:92)(cid:86)(cid:87)(cid:72)(cid:80)(cid:86)(cid:58)(cid:72)(cid:85)(cid:78)(cid:86)(cid:87)(cid:190)(cid:70)(cid:78)(cid:69)(cid:72)(cid:93)(cid:88)(cid:74)(cid:86)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:3)(cid:11)(cid:58)(cid:72)(cid:85)(cid:78)(cid:86)(cid:87)(cid:190)(cid:70)(cid:78)(cid:16)(cid:46)(cid:72)(cid:87)(cid:87)(cid:72)(cid:12)(cid:3)(cid:32)(cid:3)(cid:40)(cid:81)(cid:71)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:3)(cid:71)(cid:72)(cid:85)(cid:3)(cid:78)(cid:76)(cid:81)(cid:72)(cid:80)(cid:68)(cid:87)(cid:76)(cid:86)(cid:70)(cid:75)(cid:72)(cid:81)(cid:3)(cid:46)(cid:72)(cid:87)(cid:87)(cid:72)Arbeitsvorbereitung

3.12 Transformationen mit kinematischen Ketten

Punkt zum Schlieen der Werkzeug-Kette

Ist die Systemvariable $NT_CLOSE_CHAIN_T nicht leer, wird die Werkzeug-Kette nicht am 
Endpunkt der Kette, sondern am Endpunkt des bezeichneten Kettenelements geschlossen. 
Weitere Kettenelemente, die hinter diesem Punkt liegen, fhren dann beim Aktivieren der 
Transformation zu einer entsprechenden Nullpunktverschiebung.

Index einer Orientierungsachse

Auer den konstanten Offsets zwischen den Orientierungsachsen knnen mit der Funktion 
CORRTRAFO auch die Richtungsvektoren der Orientierungsachsen beschrieben werden. 
Unter dem Index einer Orientierungsachse wird hier der Index verstanden, der sich ergibt, 
wenn man die kinematische Teilkette vom Ursprung bis zu ihrem Ende durchluft, wobei die 
Zhlung bei null beginnt. Der Index einer Orientierungsachse ist deshalb immer gleich dem 
Index des davorliegenden Abschnitts.

Der Index einer Orientierungsachse kann auch mit der Systemvariablen 
$AC_TRAFO_ORIAX_LOC ermittelt werden.

Maximal zulssige Vernderung eines Kettenelements

Die maximal zulssige Vernderung eines Kettenelements kann durch die beiden Settingdaten 
SD41610 $SN_CORR_TRAFO_LIN_MAX fr Offsetvektoren und SD41611 
$SN_CORR_TRAFO_DIR_MAX fr die Richtungsvektoren von Orientierungsachsen begrenzt 
werden. SD41610 $SN_CORR_TRAFO_LIN_MAX gibt an, um welchen Betrag jede einzelne 
Vektorkomponente gegenber ihrem Bezugswert maximal verndert werden darf. SD41611 
$SN_CORR_TRAFO_DIR_MAX gibt an, um welchen Winkel sich die Richtung des 
Achsvektors maximal gegenber ihrem Bezugswert verndern darf. Der Bezugswert ist dabei 
immer der entsprechende Wert, der in der beim Aufruf von CORRTRAFO aktiven 
Transformation wirksam ist. D. h., dass eventuell nach der Aktivierung der Transformation 
vernderte Inhalte der Kinematikdaten in der Datenhaltung keinen Einfluss auf die 
Wirkungsweise der Funktion CORRTRAFO haben.

718

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

3.13

Werkzeugkorrekturen

3.13.1

Korrekturspeicher

Aufbau des Korrekturspeichers

Jedes Datenfeld ist mit einer T- und D-Nummer aufrufbar und enthlt neben den 
geometrischen Angaben fr das Werkzeug noch weitere Eintrge, z. B. den Werkzeugtyp. 

Anwender-Schneidendaten

ber Maschinendatum knnen Anwender-Schneidendaten konfiguriert werden. Bitte 
beachten Sie die Angaben des Maschinenherstellers.

Werkzeugparameter       

Hinweis

Einzelne Werte im Korrekturspeicher

Die einzelnen Werte des Korrekturspeichers P1 bis P25 sind ber Systemvariable vom 
Programm les- und schreibbar. Alle brigen Parameter sind reserviert.

Die Werkzeugparameter $TC_DP6 bis $TC_DP8, $TC_DP10 und $TC_DP11 sowie 
$TC_DP15 bis $TC_DP17, $TC_DP19 und $TC_DP20 haben abhngig vom Werkzeugtyp 
eine andere Bedeutung.

Werkzeugparameter Num
mer (DP)

Bedeutung der Systemvariablen

Bemerkung

$TC_DP1 

$TC_DP2 

Geometrie

$TC_DP3 

$TC_DP4 

$TC_DP5 

Geometrie

$TC_DP6 1)
$TC_DP6 2) 

$TC_DP7 1)
$TC_DP7 2) 

$TC_DP8 1)
$TC_DP8 2) 

$TC_DP9 1) 3) 

$TC_DP10 1) 

$TC_DP11 1) 

Verschlei

Werkzeugtyp

Schneidenlage

Lngenkorrektur

Lnge 1

Lnge 2

Lnge 3

Radius

Radius 1 / Lnge 1
Durchmesser d

Lnge 2 / Eckenradius kegelige Frser
Nutbreite b Eckenradius

Verrundungsradius 1 fr Frswerkzeuge
berstand k

Verrundungsradius 2

Winkel 1 Stirnseite des Werkzeugs

Winkel 2 Werkzeug-Lngsachse

Lngen- und Radiuskorrektur

bersicht siehe Liste

nur fr Drehwerkzeuge

Verrechnung nach

Typ und Ebene

Frs-/Dreh-/Schleifwerkz. 
Nutsge

Frswerkzeuge 
Nutsge

Frswerkzeuge
Nutsge

reserviert

kegelige Frswerkzeuge

kegelige Frswerkzeuge

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

719

 
 
 
 
Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Werkzeugparameter Num
mer (DP)

Bedeutung der Systemvariablen

Bemerkung

$TC_DP12 

$TC_DP13 

$TC_DP14 

$TC_DP15 1)
$TC_DP15 2) 

$TC_DP16 1)
$TC_DP16 3) 

$TC_DP17 1)
$TC_DP17 2) 

$TC_DP18 1) 3) 

$TC_DP191) 

$TC_DP201) 

Lnge 1

Lnge 2

Lnge 3

Radius 1 / Lnge 1 
Durchmesser d

Frs-/Dreh-/Schleifwerkz.
Nutsge

Lnge 2 / Eckenradius kegelige Frser Nutbreite b 
Eckenradius

Frswerkzeuge 
Nutsge

Verrundungsradius 1 fr Frswerkzeuge 
berstand k

Verrundungsradius 2

Winkel 1 Stirnseite des Werkzeugs

Winkel 2 Werkzeug-Lngsachse

Frsen / 3D Stirnfrsen 
Nutsge

reserviert

kegelige Frswerkzeuge

kegelige Frswerkzeuge

Basisma/Adapter

Lngenkorrekturen

$TC_DP21 

$TC_DP22 

$TC_DP23 

Technologie

$TC_DP24 

$TC_DP25 

Lnge 1

Lnge 2

Lnge 3

Freiwinkel

1)  Gilt auch bei Frswerkzeugen fr das 3D-Stirnfrsen
2)  Bei Nutsge Werkzeugtyp
3) 

reserviert

Anmerkungen

nur fr Drehwerkzeuge

reserviert

Fr die geometrischen Gren (z. B. Lnge 1 oder Radius) bestehen mehrere 
Eintragskomponenten. Diese werden zu einer resultierenden Gre additiv verrechnet (z. B. 
Gesamtlnge 1, Gesamtradius), die dann zur Wirkung kommt.

Nicht bentigte Korrekturen sind mit dem Wert Null zu belegen.

Werkzeugparameter $TC-DP1 bis $TC-DP23 mit Konturwerkzeugen

Hinweis

Die Werkzeugparameter, die in der Tabelle nicht aufgefhrt sind wie z. B. $TC_DP7, werden 
nicht ausgewertet, d. h. ihr Inhalt ist bedeutungslos.

Werkzeugparameter 
Nummer (DP)

Bedeutung

$TC_DP1

$TC_DP2

Geometrie

Werkzeugtyp

Schneidenlage

Lngenkorrektur

Schneiden Dn

Bemerkung

400 bis 599

720

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Werkzeugparameter 
Nummer (DP)

Bedeutung

Schneiden Dn

Bemerkung

Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

$TC_DP3

$TC_DP4

$TC_DP5

Geometrie

$TC_DP6

Geometrie

$TC_DP10

$TC_DP11

Verschlei

$TC_DP12

$TC_DP13

$TC_DP14

$TC_DP15

Verschlei

$TC_DP19

$TC_DP20

Lnge 1

Lnge 2

Lnge 3

Radius

Radius

Grenzwinkel

minimaler Grenzwinkel

maximaler Grenzwinkel

Lngen- und Radiuskorrektur

Verschlei Lnge 1

Verschlei Lnge 2

Verschlei Lnge 3

Verschlei Radius

Grenzwinkel

Verschlei min. Grenzwinkel

Verschlei max. Grenzwinkel

Basisma/Adapter

Lngenkorrekturen

$TC_DP21

$TC_DP22

$TC_DP23

Lnge 1

Lnge 2

Lnge 3

Grundwert und Verschleiwert

Die resultierenden Gren ergeben sich jeweils als Summe aus Grundwert und Verschleiwert 
(z. B. $TC_DP6 + $TC_DP15 fr den Radius). Zur Werkzeuglnge der ersten Schneide wird 
auerdem noch das Basisma ($TC_DP21  $TC_DP23) addiert. Zustzlich wirken auf diese 
Werkzeuglnge alle anderen Gren, die auch bei einem herkmmlichen Werkzeug die 
effektive Werkzeuglnge beeinflussen knnen (Adapter, orientierbarer Werkzeugtrger, 
Settingdaten).

Grenzwinkel 1 und 2

Die Grenzwinkel 1 bzw. 2 beziehen sich jeweils auf den Vektor vom Schneidenmittelpunkt zum 
Schneidenbezugspunkt und werden im Gegenuhrzeigersinn gezhlt.

3.13.2

Additive Korrekturen

3.13.2.1

Additive Korrekturen anwhlen (DL)

Additive Korrekturen knnen als in der Bearbeitung programmierbare Prozesskorrekturen 
betrachtet werden. Sie beziehen sich auf die geometrischen Daten einer Schneide und sind 
somit Bestandteil der Werkzeugschneidendaten.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

721

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Anwendung

Syntax

Bedeutung

Die Daten einer additiven Korrektur werden ber eine DL-Nummer angesprochen (DL: 
Location dependent; Korrekturen bezglich des jeweiligen Einsatzorts) und ber die 
Bedienoberflche eingegeben. 

Durch additive Korrekturen knnen einsatzortbedingte Mafehler ausgeglichen werden.

DL=<Nummer>

DL:

<Nummer>:

Hinweis

Befehl zur Aktivierung einer additiven Korrektur

ber den Parameter <Nummer> wird der zu aktivierende additive Werkzeugkorrek
turdatensatz angegeben

Die Festlegung von Anzahl und Aktivierung der additiven Korrekturen erfolgt ber 
Maschinendaten ( Angaben des Maschinenherstellers beachten!).

Beispiel

Die gleiche Schneide wird fr 2 Lagersitze verwendet:

Programmcode

N110 T7 D7

N120 G0 X10 Z1

N130 G1 Z-6

Kommentar

; Der Revolver wird auf Platz 7 positioniert. D7 und DL=1 
werden aktiviert und im nchsten Satz herausgefahren.

722

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:40)(cid:76)(cid:81)(cid:86)(cid:68)(cid:87)(cid:93)(cid:82)(cid:85)(cid:87)(cid:3)(cid:20)(cid:40)(cid:76)(cid:81)(cid:86)(cid:68)(cid:87)(cid:93)(cid:82)(cid:85)(cid:87)(cid:3)(cid:21)(cid:16)(cid:21)(cid:19)(cid:16)(cid:20)(cid:24)(cid:16)(cid:24)(cid:20)(cid:19)(cid:59)(cid:61)(cid:39)(cid:26)(cid:3)(cid:39)(cid:47)(cid:32)(cid:21)(cid:39)(cid:26)(cid:3) 
 
Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Programmcode

Kommentar

N140 G0 DL=2 Z-14

N150 G1 Z-21

; Additiv zu D7 wird DL=2 aktiviert und im nchsten Satz 
herausgefahren.

N160 G0 X200 Z200

; Werkzeugwechselpunkt anfahren.

...

3.13.2.2

Verschlei- und Einrichtewerte festlegen ($TC_SCPxy[t,d], $TC_ECPxy[t,d])

Verschlei- und Einrichtewerte knnen ber Systemvariablen gelesen und geschrieben 
werden. Dabei orientiert sich die Logik an der Logik der entsprechenden Systemvariablen fr 
Werkzeuge und Schneiden. 

Systemvariablen

$TC_SCPxy[<t>,<d>]:

$TC_ECPxy[<t>,<d>]:

Verschleiwerte, die ber xy dem jeweiligen Geometrieparameter zu
geordnet sind, wobei x die Nummer des Verschleiwerts entspricht 
und y den Bezug zum Geometrieparameter herstellt.

Einrichtewerte, die ber xy dem jeweiligen Geometrieparameter zu
geordnet sind, wobei x die Nummer des Einrichtewerts entspricht und 
y den Bezug zum Geometrieparameter herstellt.

<t>: T-Nummer des Werkzeugs

<d>: D-Nummer der Schneide des Werkzeugs

Hinweis

Die festgelegten Verschlei- und Einrichtewerte werden zu den Geometrieparametern und den 
brigen Korrekturparametern (D-Nummer) addiert.

Beispiel

Der Verschleiwert der Lnge 1 wird fr die Schneide <d> des Werkzeugs <t> auf den Wert 1.0 
festgelegt.

Parameter: $TC_DP3 (Lnge 1, bei Drehwerkzeugen)

Verschleiwerte: $TC_SCP13 bis $TC_SCP63

Einrichtewerte: $TC_ECP13 bis $TC_ECP63

$TC_SCP43 [<t>,<d>] = 1.0

3.13.2.3

Additive Korrekturen lschen (DELDL)

Mit dem Befehl DELDL werden additive Korrekturen fr die Schneide eines Werkzeugs 
gelscht (Freigabe von Speicher). Dabei werden sowohl die festgelegten Verschleiwerte als 
auch die Einrichtewerte gelscht. 

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

723

 
 
Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Syntax

DELDL[<t>,<d>]
DELDL[<t>]
DELDL
<Status>=DELDL[<t>,<d>]

Bedeutung

DELDL:

<t>:

<d>:

Befehl zum Lschen additiver Korrekturen

T-Nummer des Werkzeugs

D-Nummer der Schneide des Werkzeugs

DELDL[<t>,<d>]:

Es werden alle additiven Korrekturen der Schneide <d> des Werkzeugs <t> 
gelscht.

DELDL[<t>]:

DELDL:

Es werden alle additiven Korrekturen aller Schneiden des Werkzeugs <t> 
gelscht.

Es werden alle additiven Korrekturen aller Schneiden aller Werkzeuge der 
TOEinheit gelscht (fr den Kanal, in dem der Befehl programmiert wird).

<Status>:

Lsch-Status

Wert:

Bedeutung:

0

-

Das Lschen wurde erfolgreich durchgefhrt.

Das Lschen wurde nicht durchgefhrt (wenn die Parametrierung 
genau eine Schneide bezeichnet), oder das Lschen erfolgte nicht 
vollstndig (wenn die Parametrierung mehrere Schneiden bezeich
net).

Hinweis

Verschlei- und Einrichtewerte aktiver Werkzeuge knnen nicht gelscht werden (verhlt sich 
analog zum Lschverhalten von D bzw. Werkzeugdaten).

3.13.3

Werkzeugkorrektur - Sonderbehandlung

Mit den Settingdaten SD42900 bis SD42960 lsst sich die Bewertung der Vorzeichen fr 
Werkzeuglnge und Verschlei steuern.

Das gilt ebenfalls fr das Verhalten der Verschleikomponenten beim Spiegeln von 
Geometrieachsen oder beim Wechsel der Bearbeitungsebene und auch zur 
Temperaturkompensation in Werkzeugrichtung.

Verschleiwerte

Wenn im Folgenden auf Verschleiwerte Bezug genommen wird, ist darunter jeweils die 
Summe aus den eigentlichen Verschleiwerten ($TC_DP12 bis $TC_DP20) und den 
Summenkorrekturen mit den Verschleiwerten ($SCPX3 bis $SCPX11) und Einrichtewerten 
($ECPX3 bis $ECPX11) zu verstehen.

Informationen zu den Summenkorrekturen siehe Funktionshandbuch Werkzeugverwaltung.

724

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Settingdaten

Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

SD42900 $SC_MIRROR_TOOL_LENGTH

SD42910 $SC_MIRROR_TOOL_WEAR

SD42920 $SC_WEAR_SIGN_CUTPOS

Spiegeln von Werkzeuglngenkomponenten und 
Komponenten des Basismaes.

Spiegeln von Verschleiwerten der Werkzeugln
genkomponenten.

Vorzeichenbewertung der Verschleikomponen
ten in Abhngigkeit von der Schneidenlage.

SD42930 $SC_WEAR_SIGN

Invertiert die Vorzeichen der Verschleimae.

SD42935 $SC_WEAR_TRANSFORM

Transformation der Verschleiwerte.

SD42940 $SC_TOOL_LENGTH_CONST

SD42950 $SC_TOOL_LENGTH_TYPE

SD42960 $SC_TOOL_TEMP_COMP

Zuordnung der Werkzeuglngenkomponenten zu 
den Geometrieachsen.

Zuordnung der Werkzeuglngenkomponenten un
abhngig vom Werkzeugtyp.

Temperaturkompensationswert in Werkzeugrich
tung. Ist auch bei vorhandener Werkzeugorientie
rung wirksam.

Weitere Informationen

Wirksamwerden der vernderten Settingdaten

Die Neubewertung von Werkzeugkomponenten bei einer nderung der beschriebenen 
Settingdaten wird erst wirksam, wenn das nchste Mal eine Werkzeugschneide angewhlt 
wird. Ist ein Werkzeug bereits aktiv und die Bewertung der Daten dieses Werkzeugs soll 
verndert wirksam werden, muss dieses Werkzeug erneut angewhlt werden.

Entsprechendes gilt fr den Fall, dass sich die resultierende Werkzeuglnge ndert, weil der 
Spiegelungszustand einer Achse gendert wurde. Das Werkzeug muss nach dem 
Spiegelbefehl erneut angewhlt werden, damit die genderten Werkzeuglngenkomponenten 
wirksam werden.

Orientierbare Werkzeugtrger und neue Settingdaten

Die Settingdaten SD42900 bis SD42940 wirken nicht auf die Komponenten eines eventuell 
aktiven orientierbaren Werkzeugtrgers. Ein Werkzeug geht jedoch immer mit seiner 
gesamten resultierenden Lnge (Werkzeuglnge + Verschlei + Basisma) in die Berechnung 
mit einem orientierbaren Werkzeugtrger ein. Bei der Berechnung der resultierenden 
Gesamtlnge werden alle nderungen bercksichtigt, die durch die Settingdaten verursacht 
wurden; d.h. Vektoren des orientierbaren Werkzeugtrgers sind unabhngig von der 
Bearbeitungsebene.

Hinweis

Hufig wird es beim Einsatz orientierbarer Werkzeugtrger sinnvoll sein, alle Werkzeuge fr 
ein nicht gespiegeltes Grundsystem zu definieren, auch diejenigen, die nur bei 
Spiegelbearbeitung verwendet werden. Bei Bearbeitung mit gespiegelten Achsen wird dann 
der Werkzeugtrger so gedreht, dass die tatschliche Lage des Werkzeugs richtig beschrieben 
wird. Alle Werkzeuglngenkomponenten wirken dann automatisch in der richtigen Richtung, so 
dass sich eine Steuerung der Bewertung einzelner Komponenten ber Settingdaten abhngig 
vom Spiegelungszustand einzelner Achsen erbrigt.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

725

Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Weitere Anwendungsmglichkeiten

Die Verwendung der Funktionalitt orientierbarer Werkzeugtrger kann auch dann sinnvoll 
sein, wenn an der Maschine physikalisch keine Mglichkeit vorgesehen ist, Werkzeuge zu 
drehen, Werkzeuge aber mit verschiedenen Orientierungen fest installiert sind. Die 
Werkzeugvermaung kann dann einheitlich in einer Grundorientierung vorgenommen werden, 
und die fr die Bearbeitung relevanten Mae ergeben sich durch Drehungen eines virtuellen 
Werkzeugtrgers.

3.13.3.1

Werkzeuglngen spiegeln

Mit gesetzten Settingdaten SD42900 $SC_MIRROR_TOOL_LENGTH und 
SD42910 $SC_MIRROR_TOOL_WEAR ungleich Null knnen Sie 
Werkzeuglngenkomponenten und Komponenten der Basismae mit Verschleiwerten deren 
zugehrigen Achsen spiegeln.  

SD42900 $SC_MIRROR_TOOL_LENGTH

Settingdatum ungleich Null:

Es werden die Werkzeuglngenkomponenten ($TC_DP3, $TC_DP4 und $TC_DP5) und die 
Komponenten der Basismae ($TC_DP21, $TC_DP22 und $TC_DP23), deren zugehrige 
Achsen gespiegelt sind, ebenfalls gespiegelt - durch Vorzeicheninvertierung.

Die Verschleiwerte werden nicht mitgespiegelt. Sollen diese ebenfalls gespiegelt werden, 
muss das Settingdatum SD42910 $SC_MIRROR_TOOL_WEAR gesetzt sein.

SD42910 $SC_MIRROR_TOOL_WEAR

Settingdatum ungleich Null:

Es werden die Verschleiwerte der Werkzeuglngenkomponenten, deren zugehrige Achsen 
gespiegelt sind, ebenfalls gespiegelt - durch Vorzeicheninvertierung.

3.13.3.2

Vorzeichenbewertung Verschlei

Mit gesetzten Settingdaten SD42920 $SC_WEAR_SIGN_CUTPOS und 
SD42930 $SC_WEAR_SIGN ungleich Null knnen Sie die Vorzeichenbewertung der 
Verschleikomponenten invertieren.

726

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

ZWZMW11XMWKS 1D13 mit SL3XWKS 2D13 mit SL4D13Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

SD42920 $SC_WEAR_SIGN_CUTPOS

Settingdatum ungleich Null:

Bei Werkzeugen mit relevanter Schneidenlage (Dreh- und Schleifwerkzeuge, 
Werkzeugtypen 400) hngt die Vorzeichenbewertung der Verschleikomponenten in der 
Bearbeitungsebene von der Schneidenlage ab. Bei Werkzeugtypen ohne relevanter 
Schneidenlage ist dieses Settingdatum bedeutungslos.

In folgender Tabelle sind die Mae durch ein X gekennzeichnet, deren Vorzeichen ber das 
SD42920 (ungleich 0) invertiert wird:

Schneidenlage

Lnge 1

Lnge 2

1

2

3

4

5

6

7

8

9

Hinweis

X

X

X

X

X

X

Die Vorzeichenbewertung durch SD42920 und SD42910 sind voneinander unabhngig. Wenn 
z. B. das Vorzeichen einer Maangabe durch beide Settingdaten gendert wird, bleibt das 
resultierende Vorzeichen unverndert.

SD42930 $SC_WEAR_SIGN

Settingdatum ungleich Null:

Das Vorzeichen aller Verschleimae wird invertiert. Es wirkt sowohl auf die Werkzeuglnge 
als auch auf die brigen Gren wie Werkzeugradius, Verrundungsradius usw. 

Wird ein positives Verschleima eingegeben, wird somit das Werkzeug "krzer" und 
"dnner", siehe Kapitel "Werkzeugkorrektur, Sonderbehandlung", Wirksamwerden der 
vernderten Settingdaten".

3.13.3.3

Koordinatensystem der aktiven Bearbeitung (TOWSTD, TOWMCS, TOWWCS, 
TOWBCS, TOWTCS, TOWKCS)

Abhngig von der Kinematik der Maschine oder vom Vorhandensein eines orientierbaren 
Werkzeugtrgers werden die in einem dieser Koordinatensysteme gemessenen 
Verschleiwerte in ein geeignetes Koordinatensystem berfhrt bzw. transformiert. 

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

727

 
 
 
 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Koordinatensysteme der aktiven Bearbeitung

Aus den folgenden Koordinatensystemen knnen Offsets der Werkzeuglnge hervorgehen, 
welche die Werkzeuglngenkomponente Verschlei ber den entsprechenden G-Befehl der 
Gruppe 56 in ein aktives Werkzeug einrechnet: 

 Maschinenkoordinatensystem (MKS)

 Basiskoordinatensystem (BKS)

 Werkstckkoordinatensystem (WKS)

 Werkzeugkoordinatensystem (TCS)

 Werkzeugkoordinatensystem der kinematischen Transformation (KCS)

Syntax

Bedeutung

TOWSTD
TOWMCS
TOWWCS
TOWBCS
TOWTCS
TOWKCS

TOWSTD:

TOWMCS:

TOWWCS:

TOWBCS:

TOWTCS:

Grundstellungswert fr Korrekturen in der Werkzeuglnge Verschleiwert

Korrekturen in der Werkzeuglnge im MKS

Korrekturen in der Werkzeuglnge im WKS

Korrekturen in der Werkzeuglnge im BKS

Korrekturen der Werkzeuglnge am Werkzeugtrgerbezugspunkt (orientierbarer 
Werkzeugtrger)

TOWKCS:

Korrekturen der Werkzeuglnge des Werkzeugkopfs (kinematischer Transformation)

Weitere Informationen

Unterscheidungsmerkmale

In der folgenden Tabelle sind die wichtigsten Unterscheidungsmerkmale dargestellt:

G-Befehl

Verschleiwert

Aktiver orientierbarer Werkzeugtr
ger

TOWSTD

Grundstellungswert, Werkzeuglnge Verschleiwerte unterliegen der 

TOWMCS

TOWWCS

Verschleiwert Im MKS. TOWMCS 
ist mit TOWSTD identisch, wenn kein 
orientierbarer Werkzeugtrger aktiv 
ist.

Der Verschleiwert wird Im WKS auf 
das MKS umgerechnet.

Drehung.

Es dreht nur der Vektor der resultier
enden Werkzeuglnge ohne Be
rcksichtigung des Verschleies.

Der Werkzeugvektor wird ohne Be
rcksichtigung des Verschleies 
wie bei TOWMCS berechnet.

728

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

TOWBCS

TOWTCS

Der Verschleiwert wird Im BKS auf 
das MKS umgerechnet.

Der Werkzeugvektor wird ohne Be
rcksichtigung des Verschleies 
wie bei TOWMCS berechnet.

Der Verschleiwert wird Im Werk
zeugkoordinatensystem auf das MKS 
umgerechnet.

Der Werkzeugvektor wird ohne Be
rcksichtigung des Verschleies 
wie bei TOWMCS berechnet.

TOWWCS, TOWBCS, TOWTCS: Der Verschleivektor wird zum Werkzeugvektor addiert.

Lineare Transformation

Die Werkzeuglnge ist im MKS nur sinnvoll definierbar, wenn das MKS aus dem BKS durch 
eine lineare Transformation hervorgeht.

Nicht lineare Transformation

Ist z. B. mit TRANSMIT eine nicht lineare Transformation aktiv, dann wird bei Angabe des MKS 
als gewnschtes Koordinatensystem automatisch das BKS verwendet.

Keine kinematische Transformation und kein orientierbarer Werkzeugtrger

Ist weder eine kinematische Transformation noch ein orientierbarer Werkzeugtrger aktiv, 
dann fallen bis auf das WKS alle weiteren vier Koordinatensysteme zusammen. Damit 
unterscheidet sich nur das WKS von den brigen. Da ausschlielich Werkzeuglngen zu 
bewerten sind, haben Translationen zwischen den Koordinatensystemen keine Bedeutung.

Einrechnung der Verschleiwerte

Das Settingdatum SD42935 $SC_WEAR_TRANSFORM legt fest, welche der drei 
Verschleikomponenten:

 Verschlei

 Summenkorrekturen fein

 Summenkorrekturen grob

einer Drehung durch eine Adaptertransformation oder einen orientierbaren Werkzeugtrger 
unterworfen werden soll, wenn einer der folgenden G-Befehle aktiv ist:

 TOWSTD

Grundstellung. Fr Korrekturen in der Werkzeuglnge.

 TOWMCS

Verschleiwerte im Maschinenkoordinatensystem (MKS).

 TOWWCS

Verschleiwerte im Werkstckkoordinatensystem (WKS).

 TOWBCS

Verschleiwerte im Basiskoordinatensystem (BKS).

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

729

Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

 TOWTCS

Verschleiwerte im Werkzeugkoordinatensystem an der Werkzeughalteraufnahme (T 
Werkzeugtrgerbezug).

 TOWKCS

Verschleiwerte im Koordinatensystem des Werkzeugkopfs bei kinetischer Transformation.

Hinweis

Die Bewertung der einzelnen Verschleikomponenten (Zuordnung zu den 
Geometrieachsen, Vorzeichenbewertung) wird durch folgende Faktoren beeinflusst:

 Aktive Ebene

 Adaptertransformation

 Settingdaten:

 SD42910 $SC_MIRROR_TOOL_WEAR

 SD42920 $SC_WEAR_SIGN_CUTPOS

 SD42930 $SC_WEAR_SIGN

 SD42940 $SC_TOOL_LENGTH_CONST

 SD42950 $SC_TOOL_LENGTH_TYPE

3.13.3.4

Werkzeuglnge und Ebenenwechsel

Mit gesetzten Settingdaten SD42940 $SC_TOOL_LENGTH_CONST ungleich Null knnen Sie 
Werkzeuglngenkomponenten wie Lnge, Verschlei und Basisma zu den 
Geometrieachsen fr Dreh- und Schleifwerkzeuge bei einen Ebenenwechsel zuordnen.

SD42940 $SC_TOOL_LENGTH_CONST

Settingdatum ungleich Null:

Die Zuordnung der Werkzeuglngenkomponenten (Lnge, Verschlei und Basisma) zu den 
Geometrieachsen beim Wechsel der Bearbeitungsebene (G17 - G19) wird nicht verndert.

Folgende Tabelle zeigt die Zuordnung der Werkzeuglngenkomponenten zu den 
Geometrieachsen fr Dreh- und Schleifwerkzeuge (WZ-Typ 400 bis 599):

Inhalt

Lnge 1

Lnge 2

Lnge 3

17

*)

19

-17

-18

-19

Y

X

Z

X

Z

Y

X

Z

Y

Y

X

Z

Z

Y

X

Z

Y

X

*)  Jeder Wert ungleich 0, der nicht gleich einem der sechs aufgefhrten Werte ist, wird wie der Wert 18 

bewertet.

Folgende Tabelle zeigt die Zuordnung der Werkzeuglngenkomponenten zu den 
Geometrieachsen fr alle anderen Werkzeuge (WZ-Typ < 400 bzw. > 599):

Bearbeitungsebene

Lnge 1

*)

Z

Lnge 2

Y

Lnge 3

X

730

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

18

19

-17

-18

-19

Y

X

Z

Y

X

X

Z

X

Z

Y

Z

Y

Y

X

Z

*)  Jeder Wert ungleich 0, der nicht gleich einem der sechs aufgefhrten Werte ist, wird wie der Wert 17 

bewertet.

Hinweis

Bei der Darstellung in den Tabellen wird davon ausgegangen, dass die Geometrieachsen bis 
3 mit X, Y, Z bezeichnet werden. Fr die Zuordnung einer Korrektur zu einer Achse ist nicht der 
Achsbezeichner, sondern die Achsreihenfolge magebend.

3.13.4

Online-Werkzeugkorrektur

3.13.4.1

Polynom-Funktion definieren (FCTDEF)

Bestimmte Abrichtstrategien (z. B. Abrichtrolle) zeichnen sich dadurch aus, dass die 
Schleifscheibe kontinuierlich (linear) mit der Zustellung der Abrichtrolle am Radius abnimmt. 
Hierfr bentigt man eine lineare Funktion zwischen der Zustellung der Abrichtrolle und dem 
Schreiben des Verschleiwerts der jeweiligen Lnge. Die Definition der linearen Funktion 
erfolgt ber die vordefinierte Prozedur FCTDEF(...) fr Polynom-Funktionen bis maximal 
dritten Grades.

Geradengleichung

y = f(x) = a0 + a1*x1

a1: Steigung der Geraden, mit a1= x / y

a0: Verschiebung der Geraden entlang der X-Achse, mit a0 = -a1 * XV

Syntax

FCTDEF(<Func>,<LLimit>,<ULimit>,<a0>,<a1>,<a2>,<a3>)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

731

(cid:706)(cid:92)(cid:706)(cid:91)(cid:60)(cid:59)(cid:59)(cid:57)Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Bedeutung

FCTDEF(...):

<Func>:

<LLimit>:

<ULimit>:

Definition einer Polynom-Funktion fr PUTFTOCF(...):
y = f(x) = a0 + a1*x + a2*x2 + a3*x3
Funktionsnummer

Datentyp:

Wertebereich:

INT

1, 2, 3

Unterer Begrenzungswert

Datentyp:

REAL

Oberer Begrenzungswert

Datentyp:

REAL

<a0>,<a1>,<a2>,<a3>:

Koeffizienten der Polynom-Funktion

Datentyp:

REAL

Beispiel

Festlegungen

 Funktionsnummer: 1

 Unterer und Oberer Begrenzungswert: -100, 100

 Steigung der Kennlinie: a1 = 1

 Der Arbeitspunkt soll in der Mitte der Kennlinie liegen. Die Kennlinie muss dazu anhand der 
Sollposition der Achse XA im WKS zum Zeitpunkt der Funktionsdefinition im NC-Programm 
in negativer Y-Richtung verschoben werden: a0 = -a1 * XAD = -1 * $AA_IW

 a2 = a3 = 0

Kennlinie

UL

LL

XAD

Oberer Begrenzungswert

Unterer Begrenzungswert

Sollwert der Achse XA zum Zeitpunkt der Funktionsdefinition im NC-Programm

732

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:60)(cid:59)(cid:36)(cid:39)(cid:47)(cid:47)(cid:56)(cid:47)(cid:59)(cid:36)Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Programmierung

Programmcode

Kommentar

FCTDEF(1,-100,100,-$AA_IW[XA],1)

; Funktionsdefinition

3.13.4.2

Online-Werkzeugkorrektur schreiben, kontinuierlich (PUTFTOCF)

Mit der vordefinierten Prozedur PUTFTOCF(...) wird eine Online-Werkzeugkorrektur ber eine 
zuvor mit  FCTDEF(...) (Seite 731) definierte Polynom-Funktion vorgenommen.

Hinweis

Die Online-Werkzeugkorrektur kann auch ber eine Synchronaktion erfolgen.

Weitere Informationen siehe Funktionshandbuch Synchronaktionen.

Syntax

Bedeutung

PUTFTOCF(<Func>,<RefVal>,<ToolPar>,<Chan>,<Sp>)

PUTFTOCF(...): Online-WZK schreiben, kontinuierlich satzweise anhand der mit FCTDEF(...) de

finierten Polynom-Funktion

<Func>:

Funktionsnummer, festgelegt bei der Funktionsdefinition mit FCTDEF(...)

Datentyp:

INT

Wertebereich:

1, 2, 3

<RefVal>:

Bezugswert, von dem die Korrektur abgeleitet werden soll (z. B. Sollwert einer 
Achse)

Datentyp:

VAR REAL

<ToolPar>:

Nummer des Verschleiparameters (Lnge 1, 2 oder 3), in dem der Korrekturwert 
verrechnet werden soll

Datentyp:

INT

<Chan>:

Nummer des Kanals, in dem die Online-WZK wirksam werden soll

Hinweis:
Nur erforderlich, wenn die Korrektur nicht im aktiven Kanal wirksam werden soll.

Datentyp:

INT

<Sp>:

Nummer der Spindel, fr die die Online-WZK wirksam werden soll

Hinweis:
Nur erforderlich, wenn statt dem aktiven, im Einsatz befindlichen Werkzeug eine 
nicht aktive Schleifscheibe korrigiert werden soll.

Datentyp:

INT

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

733

Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

3.13.4.3

Online-Werkzeugkorrektur schreiben, diskret (PUTFTOC)

Funktion

Syntax

Bedeutung

Mit der vordefinierten Prozedur PUTFTOC(...) wird eine Online-Werkzeugkorrektur mit einem 
festen Korrekturwert vorgenommen.

PUTFTOC(<CorrVal>,<ToolPar>,<Chan>,<Sp>)

PUTFTOC(...): Online-WZK schreiben

<CorrVal>:

Korrekturwert, der zum Verschleiparameter addiert wird

Datentyp:

REAL

<ToolPar>:

Nummer des Verschleiparameters (Lnge 1, 2 oder 3), in dem der Korrekturwert 
verrechnet werden soll

Datentyp:

INT

<Chan>:

Nummer des Kanals, in dem die Online-WZK wirksam werden soll

Hinweis:
Nur erforderlich, wenn die Korrektur nicht im aktiven Kanal wirksam werden soll.

Datentyp:

INT

<Sp>:

Nummer der Spindel, fr die die Online-WZK wirksam werden soll

Hinweis:
Nur erforderlich, wenn statt dem aktiven, im Einsatz befindlichen Werkzeug eine 
nicht aktive Schleifscheibe korrigiert werden soll.

Datentyp:

INT

3.13.4.4

Online-Werkzeugkorrektur ein-/ausschalten (FTOCON/FTOCOF)

Mit den G-Befehlen FTOCON und FTOCOF wird die Online-Werkzeugkorrektur ein- bzw. 
ausgeschaltet.

Syntax

FTOCON

...

FTOCOF

734

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Bedeutung

FTOCON:

Online-Werkzeugkorrektur einschalten

Der Befehl muss in dem Kanal programmiert werden, in dem die Online-Werk
zeugkorrektur eingeschaltet werden soll.

FTOCOF:

Online-Werkzeugkorrektur ausschalten

Der Befehl muss in dem Kanal programmiert werden, in dem die Online-Werk
zeugkorrektur ausgeschaltet werden soll.

Hinweis:
Mit FTOCOF wird die Werkzeugkorrektur nicht weiter herausgefahren. In den 
schneidenspezifischen Korrekturdaten bleibt aber der mit PUTFTOC/PUTFTOCF 
eingerechnete Wert erhalten.

Zum endgltigen Deaktivieren der Online-WZK muss nach FTOCOF noch eine 
An-/Abwahl des Werkzeugs (T...) erfolgen.

3.13.5

3D-Werkzeugradiuskorrektur

3.13.5.1

3D-Werkzeugradiuskorrektur fr das 3D-Umfangsfrsen anwhlen (CUT3DC, 
CUT3DCD, ISD)

Die 3D-Werkzeugradiuskorrektur (3D-WRK) fr das 3D-Umfangsfrsen ohne 
Bercksichtigung von Begrenzungsflchen wird mit dem modal wirksamen G-Befehl CUT3DC 
bzw. CUT3DCD angewhlt.

Die eigentliche Aktivierung erfolgt mit G41 bzw. G42. Ausgeschaltet wird die 
Werkzeugradiuskorrektur mit G40.

Syntax

Bedeutung

G41/G42 ORIC/ORID ISD=... CUT3DC/CUT3DCD CDOF2 X... Y... Z...

...

G40 X... Y... Z...

CUT3DC:

CUT3DCD:

3D-WRK fr das Umfangsfrsen (nur bei aktiver 5-Achs-Transfor
mation) 

Auf ein Differenzwerkzeug bezogene 3D-WRK fr das Umfangs
frsen (nur bei aktiver 5-Achs-Transformation)

Die Radiusdifferenz wird durch den WZ-Parameter $TC_DP15 
festgelegt.

G41/G42 X... Y... Z... :

Werkzeugradiuskorrektur einschalten

G41:

G42:

Werkzeugradiuskorrektur links von der Kontur

Werkzeugradiuskorrektur rechts von der Kontur

Hinweis:
Das Einschalten muss in einem Linearsatz (G0/G1) erfolgen.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

735

 
 
 
Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

CDOF2:

ORIC/ORID:

ISD=<Value>:

Kollisionsberwachung fr 3D-Umfangsfrsen ausschalten

ber die G-Befehle ORIC und ORID wird das Verhalten bei Orien
tierungsnderungen an Auenecken festgelegt.

ORIC:

ORID:

Orientierungsnderungen an Auenecken werden 
dem einzufgenden Kreissatz berlagert.

Orientierungsnderungen an Auenecken werden 
vor dem einzufgenden Kreissatz ausgefhrt.

Mit der Adresse ISD kann beim Umfangsfrsen und aktiver 3D-
Werkzeugradiuskorrektur die Eintauchtiefe des Werkzeugs gen
dert werden.

<Value>:

Lnge der Eintauchtiefe

G40 X... Y... Z... :

Werkzeugradiuskorrektur ausschalten

Hinweis:
Das Ausschalten muss in einem Linearsatz (G0/G1) mit Geomet
rieachsbewegungen erfolgen.

Hinweis

Die G-Befehle zur Anwahl der 3D-WRK werden im Anfahrsatz ausgewertet, d. h. 
typischerweise in dem Satz, der G41 oder G42 enthlt.

G41 bzw. G42 kann auch in Stzen ohne Verfahrbewegung in den fr die Korrektur relevanten 
Geometrieachsen programmiert sein. In diesem Fall ist der Anfahrsatz der erste auf einen 
solchen Satz folgende Verfahrsatz.

Ein Wechsel der 3D-WRK-Variante bei aktiver Werkzeugradiuskorrektur wird ohne Alarm 
ignoriert.

Beispiel

Programmcode

Kommentar

$TC_DP1[1,1]=120

$TC_DP3[1,1]=20

$TC_DP6[1,1]=8

; Definition des Werkzeugs D1:

; Typ (Schaftfrser)

; Lngenkorrekturvektor

; Radius

N10 X0 Y0 Z0 T1 D1 F12000

; Anwahl des Werkzeugs.

N20 TRAORI(1)

; Einschalten der Transformation.

N30 G42 ORIC ISD=10 CUT3DC G64 X30

; Aktivieren des 3D-Umfangsfrsens,

; Orientierungsnderungen an Auenecken kontinuierlich,

; Eintauchtiefe: 10mm

N40 ORIWKS A30 B15

; Orientierungsnderung an einer Ecke durch Angabe von Achspositi-
onen.

N50 Y20 A3=1 C3=1

; Verfahrsatz mit Orientierungsnderung,

N60 X50 Y30

; Verfahrsatz mit konstanter Orientierung.

N70 Y50 A3=0.5 B3=1 C3=5

; Verfahrsatz mit Orientierungsnderung.

N80 M63

; Satz ohne Verfahrinformation.

; Angabe der Orientierung mit Richtungsvektor.

736

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Programmcode

N90 X0 ISD=20

N100 G40 Y0

N110 M30

Kommentar

; Verfahrsatz mit nderung der Eintauchtiefe.

; Deaktivieren der Werkzeugradiuskorrektur.

Weitere Informationen

Bahn und Orientierung

Die hier benutzte Variante des Umfangsfrsens ist durch die Vorgabe einer Bahn (Leitlinie) und 
der zugehrigen Orientierung realisiert. Bei dieser Art der Bearbeitung ist auf der Bahn die 
Werkzeugform ohne Bedeutung. Entscheidend ist allein der Radius am 
Werkzeugeingriffspunkt.

Bild 3-8

Umfangsfrsen

Anfahrverhalten

Das Anfahrverhalten ist bei den 3D-Varianten der Werkzeugradiuskorrektur immer NORM. 

Verhalten an Auenecken

An Auenecken werden beim Umfangsfrsen mit 3D-WRK analog zu den Verhltnissen bei 
der 2D-WRK die G-Befehle der Gruppe 18 (Eckenverhalten Werkzeugkorrektur) 
ausgewertet:

 G450: bergangskreis (Werkzeug umfhrt Werkstckecken auf einer Kreisbahn)

Im Gegensatz zur Lsung bei der 2D-WRK ist das eingefgte Konturelement an einer 
Auenecke immer ein Kreis mit dem Radius 0, auf den die Werkzeugradiuskorrektur so 
wirkt wie auf jede andere programmierte Bahn auch. Es ist nicht mglich, an Stelle der 
Kreise Kegelschnitte einzufgen. Die Adresse DISC hat deshalb in diesem Fall keine 
Bedeutung und wird nicht ausgewertet.

 G451: Schnittpunkt der quidistanten (Werkzeug schneidet in der Werkstckecke frei)
Der Schnittpunkt wird bestimmt, indem die Offsetkurven der beiden beteiligten Stze 
verlngert werden und deren Schnittpunkt in der Ebene senkrecht zur 
Werkzeugorientierung an der Ecke bestimmt wird.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

737

(cid:59)(cid:60)(cid:61)(cid:37)(cid:36) 
Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Das Schnittpunktverfahren (G451) wird nicht verwendet, wenn zwischen den beteiligten 
Verfahrstzen mindestens ein Satz eingefgt ist, der eine nderung der Werkzeugorientierung 
enthlt. In einem solchen Fall wird an der Ecke immer ein Kreis eingefgt.

Verhalten bei Orientierungsnderungen an Auenecken

ber die G-Befehle ORIC und ORID kann festgelegt werden, ob Orientierungsnderungen, die 
zwischen den beiden die Ecke bildenden Verfahrstzen programmiert wurden, vor Beginn des 
eingefgten Kreissatzes (ORID) oder gleichzeitig mit diesem (ORIC) ausgefhrt werden.

Eintauchtiefe

Die Eintauchtiefe des Frsers ist der Abstand des Frserhilfspunkts von der Werkzeugspitze. 

Der Frserhilfspunkt ist die senkrechte Projektion des Frserbearbeitungspunkts auf der 
programmierten Bahn auf die Werkzeuglngsachse.

Mit der Eintauchtiefe wird somit die Lage des Bearbeitungspunkts auf der Mantelflche des 
Werkzeugs eingestellt.

 Programmierte Bahn
 Frserbearbeitungspunkt
 Frserhilfspunkt
 Frserspitze
ISD
Bild 3-9

Eintauchtiefe

Eintauchtiefe (InSertion Depth)

Werkzeugradiuskorrektur bezogen auf ein Differenzwerkzeug

Die auf ein Differenzwerkzeug bezogene 3D-WRK fr das Umfangsfrsen wird durch den 
Befehl CUT3DCD aktiviert. Sie ist anzuwenden, wenn sich die programmierte Kontur auf die 
Mittelpunktsbahn eines Normwerkzeugs bezieht und die Bearbeitung mit einem davon 
abweichenden Werkzeug erfolgt. Bei der Berechnung der 3D-Werkzeugradiuskorrektur 
werden dann nur der Verschleiwert des Radius des aktiven Werkzeugs ($TC_DP15) und die 
gegebenenfalls programmierten Werkzeugkorrekturoffsets OFFN und TOFFR/TOFFLR 
eingerechnet. Der Grundradius ($TC_DP6) des aktiven Werkzeugs wird nicht eingerechnet.

738

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:21)(cid:20)(cid:22)(cid:23)(cid:44)(cid:54)(cid:39)(cid:28)(cid:19)(cid:114)(cid:28)(cid:19)(cid:114)Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Taschenfrsen mit schrgen Seitenwnden fr Umfangsfrsen mit CUT3DC

Bei dieser 3D-Werkzeugradiuskorrektur wird eine Abweichung des Frserradius kompensiert, 
indem in Richtung der Flchennormalen der zu bearbeitenden Flche zugestellt wird. Dabei 
bleibt die Ebene, in der die Stirnseite des Frsers liegt unverndert, wenn die Eintauchtiefe ISD 
gleich geblieben ist. Ein Frser mit z. B. kleinerem Radius gegenber einem Normwerkzeug 
wrde dann den Taschenboden, der auch die Begrenzungsflche darstellt, nicht erreichen. Fr 
eine automatische Zustellung des Werkzeugs muss der Steuerung diese Begrenzungsflche 
bekannt sein, siehe Kapitel "3D-Umfangsfrsen unter Bercksichtigung einer 
Begrenzungsflche (CUT3DCC, CUT3DCCD) (Seite 745)".

Advanced Surface / Top Surface

Hinweis

Bei Verwendung der Werkzeugradiuskorrektur CUT3DCD in Kombination mit der 
lizenzpflichtigen Option "Advanced Surface" oder "Top Surface" sind die Einstellempfehlungen 
bezglich "Advanced Surface" / "Top Surface" zu beachten!

Zur berprfung der eingestellten Daten steht ber das SIOS-Portal ein spezielles 
Prfprogramm zur Verfgung.

 Prfprogramm fr Advanced Surface / Top Surface (https://
support.industry.siemens.com/cs/ww/de/view/109738423) 

3.13.5.2

3D-Werkzeugradiuskorrektur fr das 3D-Stirnfrsen anwhlen (CUT3DF, CUT3DFS, 
CUT3DFF, CUT3DFD)

Die 3D-Werkzeugradiuskorrektur (3D-WRK) fr das 3D-Stirnfrsen wird mit dem modal 
wirksamen G-Befehl CUT3DF, CUT3DFS, CUT3DFF bzw. CUT3DFD angewhlt.

Die eigentliche Aktivierung erfolgt mit G41 bzw. G42.

Um die Werkzeugradiuskorrektur berechnen zu knnen, ist beim 3D-Stirnfrsen die Definition 
der Flchennormale der zu bearbeitenden Ebene erforderlich. Diese muss im Satz mit G41 
bzw. G42 ber die Adressen A4, B4, C4 und A5, B5, C5 erfolgen. 

Ausgeschaltet wird die Werkzeugradiuskorrektur mit G40.

Syntax

G41/G42 ORIC/ORID CUT3DF/CUT3DFS/CUT3DFF/CUT3DFD X... Y... Z... A4=... B4=... 
C4=... A5=... B5=... C5=...

...

G40 X... Y... Z...

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

739

 
 
 
Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Bedeutung

CUT3DFS:

CUT3DFF:

CUT3DF:

CUT3DFD:

3D-WRK fr das Stirnfrsen mit konstanter Orientierung. Die 
Werkzeugorientierung ist durch G17 - G19 festgelegt und 
wird durch Frames nicht beeinflusst.

3D-WRK fr das Stirnfrsen mit konstanter Orientierung. Die 
Werkzeugorientierung ist die durch G17 - G19 festgelegte 
und gegebenenfalls durch einen Frame gedrehte Richtung.

3D-WRK fr das Stirnfrsen mit Orientierungsnderung (nur 
bei aktiver 5-Achs-Transformation)

Auf ein Differenzwerkzeug bezogene 3D-WRK fr das Stirnf
rsen mit Orientierungsnderung (nur bei aktiver 5-Achs-
Transformation) 

Die Radiusdifferenz wird durch den WZ-Parameter 
$TC_DP15 festgelegt.

Hinweis:
CUT3DFD ist nur in Kombination mit der "Glttung der Fl
chennormalen beim 3D-Stirnfrsen" mglich. Diese wird ak
tiviert ber den Aufruf der lizenzpflichtigen Funktion "Top 
Surface" mittels CYCLE832(...).

G41/G42 X... Y... Z... :

Werkzeugkorrektur einschalten

Das Verhalten bei G41 und bei G42 ist beim 3D-Stirnfrsen 
identisch.

Hinweis:
Das Einschalten muss in einem Linearsatz (G0/G1) erfolgen.

A4/5=... B4/5=... C4/5=...:

Definition der Flchenormale der zu bearbeitenden Ebene

ORIC/ORID:

A4=... B4=... C4=...: Definition am Satzanfang

A5=... B5=... C5=...: Definition am Satzende

ber die G-Befehle ORIC und ORID wird das Verhalten bei 
Orientierungsnderungen an Auenecken festgelegt.

ORIC:

ORID:

Orientierungsnderungen an Auenecken wer
den dem einzufgenden Kreissatz berlagert.

Orientierungsnderungen werden vor dem 
Kreissatz ausgefhrt.

G40 X... Y... Z... :

Werkzeugradiuskorrektur ausschalten

Hinweis:
Das Ausschalten muss in einem Linearsatz (G0/G1) mit Ge
ometrieachsbewegungen erfolgen.

Hinweis

G41 bzw. G42 kann auch in Stzen ohne Verfahrbewegung in den fr die Korrektur relevanten 
Geometrieachsen programmiert sein. In diesem Fall ist der Anfahrsatz der erste auf einen 
solchen Satz folgende Verfahrsatz.

Ein Wechsel der 3D-WRK-Variante bei aktiver Werkzeugradiuskorrektur wird ohne Alarm 
ignoriert.

740

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Beispiele

Beispiel 1: 3D-Stirnfrsen mi CUT3DF

Programmcode

N10

N20 $TC_DP1[1,1]=121

N30 $TC_DP3[1,1]=20

N40 $TC_DP6[1,1]=5

N50 $TC_DP7[1,1]=3

N60

N70

Kommentar

; Definition des Werkzeugs D1:

; Werkzeugtyp (Torusfrser)

; Lngenkorrektur

; Radius

; Verrundungsradius

N80 X0 Y0 Z0 A0 B0 C0 G17 T1 D1 F12000

; Anwahl des Werkzeugs.

N90 TRAORI(1)

N100 B4=-1 C4=1

; Orientierungstransformation anwhlen.

; Definition der Ebene. 

N110 G41 ORID CUT3DF G64 X10 Y0 Z0

; Werkzeugkorrektur einschalten.

N120 X30

N130 Y20 A4=1 C4=1

N140 B3=1 C3=5

N150 B3=1 C3=1

N160 X-10 A5=1 C5=2 ORIC

N170 A3=-2 C3=1

N180 A3=-1 C3=1

N190 Y-10 A4=-1 C4=3

N200 X-20 Y-20 Z10

N210 X-30 Y10 A4=1 C4=1

N220 A3=1 B3=0.5 C3=1.7

N230 X-20 Y30 A4=1 B4=-2 C4=3 ORID

N240 A3 = 0.5 B3=-0.5 C3=1

N250 X0 Y30 C4=1

N260 BSPLINE X20 Z15

N270 X30 Y25 Z18

N280 X40 Y20 Z13

N290 X45 Y0 PW=2 Z8

N300 Y-20

; Auenecke, Neudefinition der Ebene.

; Orientierungsnderung mit ORID.

; Orientierungsnderung mit ORID.

; Orientierungsnderung mit ORIC

; Orientierungsnderung mit ORIC

; Neudefinition der Ebene.

; Innenecke mit Vorgngersatz.

; Innenecke, Neudefinition der Ebene.

; Orientierungsnderung mit ORIC.

; Orientierungsnderung.

; Bahnbewegung, neue Ebene, 

; Orientierung mit Relativprogrammierung.

; Splinebeginn, Relativprogrammierung der Orien-
tierung

; bleibt whrend Spline aktiv.

N310 G2 ORIMKS A30 B45 I-20 X25 Y-40 Z0

; Helix, Orientierung mit Achsprogrammierung.

N320 G1 X0 A3=-0.123 B3=0.456 C3=2.789 B4=-1 C4=5 
B5=-1 C5=2

; Bahnbewegung, Orientierung, nicht konstante Ebe-
ne.

N330 X-20 G40

N340 M30

Programmcode

N01 G710

; Ausschalten der Werkzeugradiuskorrektur.

Beispiel 2: Aus einem CAD-System erzeugtes NC-Programm (Ausschnitt) mit CUT3DFD

Kommentar

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

741

 
 
 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Programmcode

N03 T="12" 

N06 S5305 M03 

N07 G642

Kommentar

; Anfahren der Startposition im MKS unter Bercksichtigung der Werkzeuglnge.

G00 G90 X-250.62787 Y-38.37944 A=DC(253.12719) 
B-12.49543

G00 G90 Z251.80052 

; Ende der Positionierung im MKS.

;

TRAORI(1)

G500

D1

; Orientierungstransformation anwhlen.

CYCLE832(0.01, _TOP_SURFACE_SMOOTH_ON + _ORI_FI-
NISH, 1)

; Aufruf CYCLE832 mit:

; Konturtoleranz = 0,01 mm,

; Bearbeitungsart: Top Surface mit Glttung,

; Schlichten mit Eingabe einer Orientierungsto-
leranz,

; Orientierungstoleranz = 1 Grad

CUT3DFD

N08 G90 G94

N09 G00 X-269.21195 Y128.32027 Z1.18577
        A3=-.216361688 B3=.934284397 C3=-.283373051 

; Die Stze N09 bis N10 sind der schnelle Anteil 
der Anfahrbewegung an das Werkstck mit konstan-
ter Orientierung.

N10 G00 X-251.90301 Y53.57752 Z23.85561 

N11 G01 X-247.57578 Y34.89183 Z29.52308 F50000.00000 ; In den Stzen N11 bis N21 wird der langsame An-
teil der Anfahrbewegung realisiert. Das Werkzeug 
befindet sich bereits nahe am Werkstck, auer-
dem sind jetzt die Formenbau-Einstellungen (z.B. 
COMPSURF) aus dem CYCLE832 aktiv (wegen aktivem 
G01). Der Bahnweg dieser sog. Einschwingphase 
fr das Formenbau-Verhalten sollte etwa das 1000-
fache der Konturtoleranz betragen (in diesem Bei-
spiel also 10 mm). 

N12 X-247.69126 Y33.82182 Z24.78219 F1061.00000 

N13 X-247.76560 Y33.13299 Z21.73022 

N14 X-247.82755 Y32.55897 Z19.18691 

N15 X-247.87918 Y32.08062 Z17.06748 

N16 X-247.92220 Y31.68200 Z15.30129 

N17 X-247.95805 Y31.34981 Z13.82947
    A3=-.216361686 B3=.934284391 C3=-.283373071 

N18 X-247.98792 Y31.07299 Z12.60295
    A3=-.216360662 B3=.934280801 C3=-.283385691

N19 X-248.01282 Y30.84230 Z11.58085
    A3=-.216336015 B3=.934194446 C3=-.283689030 

N20 X-248.03357 Y30.65006 Z10.72910
    A3=-.216233089 B3=.933833626 C3=-.284952647 

742

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Programmcode

Kommentar

Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

; Ab N22 ist die Flchennormale erstmals voll-
stndig ber den gesamten Satz definiert (d.h., 
Flchennormale am Ende des Vorgngersatzes N21 
ist vorhanden, somit die Flchennormale am An-
fang des Satzes N22 und die Flchennormale am En-
de des Satzes N22). Damit ist die Voraussetzung 
fr das Einschalten der Werkzeugkorrektur mit 
G41/G42 erfllt.

N21 X-248.05086 Y30.48986 Z10.01931
    A5=-.060687572 B5=.974940255 C5=-.214029243
    A3=-.215712821 B3=.932005189 C3=-.291263295 

N22 G41 X-248.06237 Y30.32400 Z9.36695
        A5=-.060431854 B5=.973045457 C5=-.222554556
        A3=-.214974689 B3=.929398552 C3=-.300007025 
F1061.03295 

N23 X-248.07130 Y30.15119 Z8.71082
    A5=-.060165696 B5=.971048883 C5=-.231179920
    A3=-.214177198 B3=.926684940 C3=-.308841625

N24 X-248.07829 Y29.97126 Z8.05094
    A5=-.059884286 B5=.968941717 C5=-.239928784
    A3=-.213318480 B3=.923853466 C3=-.317789237 

N25 X-248.08317 Y29.78487 Z7.38844
    A5=-.059584206 B5=.966718449 C5=-.248807482
    A3=-.212397895 B3=.920898045 C3=-.326854594 

N26 X-248.08578 Y29.59254 Z6.72679
    A5=-.059263963 B5=.964380907 C5=-.257793037
    A3=-.211418355 B3=.917822366 C3=-.336012474 

...

Hinweis

Beim 3D-Stirnfrsen mit CUT3DFD ist fr das Einschalten der Werkzeugkorrektur mit G41/G42 
die Definition der Flchennormalen erforderlich. Die Programmierung von G41/G42 ohne 
Definition der Flchennormalen fhrt zur Ausgabe eines Alarms.

Siehe auch

CYCLE832 - High Speed Settings (Seite 1067)

Weitere Informationen

3D-Stirnfrsen

Fr diese Art des 3D-Frsens wird die zeilenweise Beschreibung der 3D-Bahnen auf der 
Werkstckoberflche bentigt. Die Berechnungen werden unter Bercksichtigung der 
Werkzeugform und Werkzeugabmessungen blicherweise im CAM durchgefhrt. Der 
Postprozessor schreibt in das Teileprogramm  neben den NC-Stzen  die 
Werkzeugorientierungen (bei aktiver 5-Achstransformation) und den G-Befehl fr die 
gewnschte 3D-Werkzeugkorrektur. Hierdurch hat der Maschinenbediener die Mglichkeit  
abweichend von dem fr die Berechnung der NC-Bahnen verwendeten Werkzeug  
geringfgig kleinere Werkzeuge einzusetzen.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

743

 
 
 
 
 
 
Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Bild 3-10

Stirnfrsen

Anfahrverhalten

Das Anfahrverhalten ist bei den 3D-Varianten der Werkzeugradiuskorrektur immer NORM. 

Verhalten an Auenecken

Auenecken werden beim Stirnfrsen als Kreise mit dem Radius 0 behandelt, wobei die 
Kreisebene von der Endtangente des ersten und der Starttangente des zweiten Satzes 
aufgespannt wird. Damit ist auch eine Orientierungsnderung beim Satzbergang mglich. An 
einer Auenecke wird somit immer ein Kreis als Konturelement eingefgt. Das 
Schnittpunktverfahren steht beim Stirnfrsen nicht zur Verfgung.

Verhalten bei Orientierungsnderungen an Auenecken

ber die G-Befehle ORIC und ORID kann festgelegt werden, ob Orientierungsnderungen, die 
zwischen den beiden die Ecke bildenden Verfahrstzen programmiert wurden, vor Beginn des 
eingefgten Kreissatzes (ORID) oder gleichzeitig mit diesem (ORIC) ausgefhrt werden.

Werkzeugradiuskorrektur bezogen auf ein Differenzwerkzeug

Die auf ein Differenzwerkzeug bezogene 3D-Werkzeugradiuskorrektur wird durch den Befehl 
CUT3DFD angewhlt. Sie ist anzuwenden, wenn sich die programmierte Kontur auf die 
Mittelpunktsbahn eines Normwerkzeugs bezieht und die Bearbeitung mit einem davon 
abweichenden Werkzeug erfolgt. Bei der Berechnung der 3D-Werkzeugradiuskorrektur 
werden dann nur der Verschleiwert des Radius des aktiven Werkzeugs ($TC_DP15) und die 
gegebenenfalls programmierten Werkzeugkorrekturoffsets OFFN und TOFFR/TOFFLR 
eingerechnet. Der Grundradius ($TC_DP6) des aktiven Werkzeugs wird nicht eingerechnet.

Das 3D-Stirnfrsen mit CUT3DFD ist nur in Kombination mit der "Glttung der 
Flchennormalen beim 3D-Stirnfrsen" mglich. Diese wird aktiviert ber den Aufruf der 
lizenzpflichtigen Funktion "Top Surface" mittels CYCLE832(...). Die Aktivierung muss vor dem 
Einschalten der Werkzeugkorrektur mit G41/G42 erfolgen, und zwar nicht direkt vor dem 
Werkzeugeingriff, sondern schon eine Bahnweglnge vorher, die etwa dem 1000-fachen der 
Konturtoleranz entspricht (z. B. 1000 x 0,01 mm = 10 mm). Die Deaktivierung muss in 
umgekehrter Reihenfolge ablaufen: erst Ausschalten der Werkzeugkorrektur mit G40, dann, 
nach einer Bahnweglnge, die etwa dem 1000-fachen der Konturtoleranz entspricht, die 
Deaktivierung durch z. B. CUT2D (o. .).

Um die "Glttung der Flchennormalen beim 3D-Stirnfrsen" anwenden zu knnen, ist 
zustzlich die Freischaltung der Funktion "Interpolation der Flchennormalen ber Polynome" 
erforderlich:

744

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

MD28291 $MC_MM_SMOOTH_SURFACE_NORMALS = TRUE

Hinweis

Fr das 3D-Stirnfrsen mit CUT3DFD in Kombination mit "Top Surface" sind die 
Einstellempfehlungen bezglich "Top Surface" zu beachten! 

Zur berprfung der eingestellten Daten steht ber das SIOS-Portal spezielles Prfprogramm 
zur Verfgung.

 Prfprogramm fr Top Surface (https://support.industry.siemens.com/cs/ww/de/view/
109738423)

Siehe auch

CYCLE832 - High Speed Settings (Seite 1067)

3.13.5.3

3D-Umfangsfrsen unter Bercksichtigung einer Begrenzungsflche (CUT3DCC, 
CUT3DCCD)

Beim 3D-Umfangsfrsen mit kontinuierlicher oder konstanter Vernderung der 
Werkzeugorientierung wird hufig die Werkzeugmittelpunktsbahn fr ein definiertes 
Normwerkzeug programmiert. Da in der Praxis oft nicht die passenden Normwerkzeuge zur 
Verfgung stehen, kann ein von einem Normwerkzeug nicht allzu stark abweichendes 
Werkzeug ( 5 %) eingesetzt werden. 

Mit CUT3DCCD wird fr ein reales Differenzwerkzeug eine Begrenzungsflche bercksichtigt, 
die das programmierte Normwerkzeug beschreiben wrde. Das NC-Programm beschreibt die 
Mittelpunkbahn des Normwerkzeugs.

Mit CUT3DCC wird bei Verwendung von zylindrischen Werkzeugen eine Begrenzungsflche 
bercksichtigt, die das programmierte Normwerkzeug erreicht htte. Das NC-Programm 
beschreibt die Kontur auf der Bearbeitungsflche.

Der Flchennormalenvektor der Begrenzungsflche wird wie beim 3D-Stirnfrsen mit A4, B4, 
C4 und A5, B5, C5 angegeben.

Syntax

G41/G42 CUT3DCCD/CUT3DCC CDOF2 X... Y... Z... A4=... B4=... C4=... A5=... B5=... 
C5=...

...

G40 X... Y... Z...

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

745

 
 
 
Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Bedeutung

CUT3DCCD:

CUT3DCC:

3D-WRK fr das Umfangsfrsen unter Bercksichtigung einer Be
grenzungsflche mit Differenzwerkzeug auf der Werkzeugmittel
punktbahn: Zustellung zur Begrenzungsflche

3D-WRK fr das Umfangsfrsen unter Bercksichtigung einer Be
grenzungsflche mit 3D-Radiuskorrektur: Kontur an der Bearbei
tungsflche

G41/G42 X... Y... Z... : Werkzeugradiuskorrektur einschalten

G41:

G42:

Werkzeugradiuskorrektur links von der Kontur

Werkzeugradiuskorrektur rechts von der Kontur

Hinweis:
Das Einschalten muss in einem Linearsatz (G0/G1) erfolgen.

CDOF2:

Kollisionsberwachung fr 3D-Umfangsfrsen ausschalten

A4/5=... B4/5=... 
C4/5=...:

Definition der Flchenormale der Begrenzungsflche

A4=... B4=... C4=...: Definition am Satzanfang

A5=... B5=... C5=...: Definition am Satzende

G40 X... Y... Z... :

Werkzeugradiuskorrektur ausschalten

Hinweis:
Das Ausschalten muss in einem Linearsatz (G0/G1) mit Geomet
rieachsbewegungen erfolgen.

Hinweis

Die G-Befehle zur Anwahl der 3D-WRK werden im Anfahrsatz ausgewertet, d. h. 
typischerweise in dem Satz, der G41 oder G42 enthlt.

G41 bzw. G42 kann auch in Stzen ohne Verfahrbewegung in den fr die Korrektur relevanten 
Geometrieachsen programmiert sein. In diesem Fall ist der Anfahrsatz der erste auf einen 
solchen Satz folgende Verfahrsatz.

Ein Wechsel der 3D-WRK-Variante bei aktiver Werkzeugradiuskorrektur wird ohne Alarm 
ignoriert.

Beispiel

Programmcode

N10 $TC_DP1[1,1]=120

N20 $TC_DP6[1,1]=10

N30 $TC_DP15[1,1]=-3

...

Kommentar

; Zylinderfrser

; Bearbeitung mit Zylinderfrser und CUT3DCCD

N110 TRAORI

N120 A4=0 B4=0 C4=1

N130 X0 Y0 Z0 A0 C0 T1 D1 F20000

N140 X10 Y0 Z0 G41 CUT3DCCD CDOF2 G64

; Einschalten der Transformation.

; Definition der Flchenormale der Begren-
zungsflche am Satzanfang.

; Aktivieren des 3D-Umfangsfrsens unter 
Bercksichtigung der Begrenzungsflche + 
Ausschalten der Kollisionsberwachung.

746

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Programmcode

N150 X20             

Kommentar

N160 X30 A45

N170 X40 A-45

N180 X55

N190 Y10 Z10

N200 Y20

N210 C45

N220 Y30 C90

; Stumpfer Winkel ==> keine Zustellung

; Spitzer Winkel ==> Zustellung

; Bewegung in Werkzeugrichtung.

; Reine Orientierungsnderung.

N230 A5=-1 B5=0 C5=2 Y40 

; nderung der Oberflche.

N240 Y50 G40

...

Weitere Informationen

Werkzeugtyp

; Deaktivieren der Werkzeugradiuskorrek-
tur.

Der Werkzeugtyp (Werkzeugparameter $TC_DP1) wird ausgewertet. Es sind nur 
Frswerkzeuge mit zylindrischem Schaft (Zylinder- oder Schaftfrser, Torusfrser und als 
Grenzfall der zylindrische Gesenkfrser) zugelassen. Das entspricht den Werkzeugtypen 1 -
 399 mit Ausnahme der Nummern 111 und 155 bis 157.

Normwerkzeuge mit Eckenverrundung

Die Eckenverrundung des Normwerkzeugs wird durch den Werkzeugparameter $TC_DP7 
beschrieben. Aus dem Werkzeugparameter $TC_DP16 ergibt sich die Abweichung der 
Eckenverrundung des realen Werkzeugs gegenber dem Normwerkzeug.

Beispiel: Torusfrser mit verringertem Radius gegenber dem Normwerkzeug

Werkzeugtyp

Normwerkzeug mit Eckenverrun
dung

Schaftradius (R)

R = $TC_DP6

Eckenradius (r)

r = $TC_DP7

Reales Werkzeug mit Eckenver
rundung

R' = $TC_DP6 + $TC_DP15 + 
OFFN

r' = $TC_DP7 + $TC_DP16

Werkzeugtypen 121 und 131 To
rusfrser
(Schaftfrser mit Eckenverrun
dung)

In diesem Beispiel sind sowohl $TC_DP15 + OFFN als auch $TC_DP16 negativ.

3D-WRK mit CUT3DCCD: Werkzeugmittelpunktsbahn mit Zustellung bis zur 
Begrenzungsflche

Wird ein Werkzeug verwendet, welches im Vergleich zum passenden Normwerkzeug einen 
kleineren Radius aufweist, dann wird ein in Lngsrichtung zugestellter Frser soweit weiter 
gefhrt, bis dieser den Taschenboden wieder berhrt. Damit wird die Ecke, die von der 
Bearbeitungs- und der Begrenzungsflche gebildet wird, so weit ausgerumt, wie dies das 
Werkzeug zulsst. Es handelt sich dabei um eine gemischte Bearbeitungsweise aus Umfangs- 

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

747

 
 
 
 
 
Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

und Stirnfrsen. Analog zu einem Werkzeug mit verringertem Radius, wird beim Werkzeug mit 
vergrerten Radius in die entgegengesetzte Richtung entsprechend zugestellt.

 Normwerkzeug
 Werkzeug mit kleinerem Radius zugestellt bis zur Begrenzungsflche
 Begrenzungsflche
 Bearbeitungsflche

Gegenber allen anderen Werkzeugkorrekturen der G-Gruppe 22 hat ein fr CUT3DCCD 
angegebener Werkzeugparameter $TC_DP6 keine Bedeutung fr den Werkzeugradius und 
beeinflusst die resultierende Korrektur nicht. Der Korrekturoffset ergibt sich aus der Summe 
des Verschleiwerts des Werkzeugradius (Werkzeugparameter $TC_DP15) und einem zur 
Berechnung des senkrechten Offsets zur Begrenzungsflche programmierten Werkzeugoffset 
OFFN.

Ob die zu bearbeitende Flche links oder rechts von der Bahn liegt, kann aus dem erzeugten 
Teileprogramm nicht entnommen werden. Es wird deshalb von einem positiven Radius und 
einem negativen Verschleiwert des Originalwerkzeugs ausgegangen. Ein negativer 
Verschleiwert beschreibt immer ein Werkzeug mit verringertem Durchmesser.

Verwendung von zylindrischen Werkzeugen

Bei der Verwendung von zylindrischen Werkzeugen ist eine Zustellung nur dann erforderlich, 
wenn die Bearbeitungsflche und die Begrenzungsflche einen spitzen Winkel (kleiner als 90 
Grad) bilden. Werden Torusfrser (Schaftfrser mit Eckverrundung) verwendet, dann erfordert 
dies sowohl bei spitzen als auch bei stumpfen Winkeln eine Zustellung in Lngsrichtung des 
Werkzeugs.

3D-WRK mit CUT3DCC: Kontur an der Bearbeitungsflche

Ist CUT3DCC mit einem Torusfrser aktiv, so bezieht sich die programmierte Bahn auf einen 
fiktiven Zylinderfrser gleichen Durchmessers. Der hieraus resultierende Bahnbezugspunkt ist 
bei Verwendung eines Torusfrser im folgenden Bild dargestellt.

748

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:21)(cid:20)(cid:23)(cid:22)Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

 Torusfrser
 Begrenzungsflche
 Bahnbezugspunkt
 Bearbeitungsflche
R

Schaftradius (Werkzeugradius)

Es ist zulssig, dass der Winkel zwischen Bearbeitungs- und Begrenzungsflche auch 
innerhalb eines Satzes von einem spitzen in einem stumpfen Winkel oder umgekehrt bergeht.

Gegenber dem Normwerkzeug darf das verwendete reale Werkzeug sowohl grer als auch 
kleiner sein. Dabei darf der resultierende Eckenradius nicht negativ werden und das 
Vorzeichen des resultierenden Werkzeugradius muss erhalten bleiben.

Bei CUT3DCC bezieht sich das NC-Teileprogramm auf die Kontur an der Bearbeitungsflche. 
Es wird hierbei wie bei der herkmmlichen Werkzeugradienkorrektur der Gesamtradius 
herangezogen, der sich aus folgenden Komponenten zusammensetzt:

 Werkzeugradius (Werkzeugparameter $TC_DP6)

 Verschleiwert (Werkzeugparameter $TC_DP15)

 Einem zur Berechnung des senkrechten Offsets zur Begrenzungsflche programmierten 

Werkzeugoffset OFFN

Die Lage der Begrenzungsflche wird aus folgender Differenz bestimmt:

Abmessungen des Normwerkzeugs - Werkzeugradius (WZ-Parameter $TC_DP6)

Advanced Surface / Top Surface

Hinweis

Bei Verwendung der Werkzeugradiuskorrektur CUT3DCC / CUT3DCCD in Kombination mit 
der lizenzpflichtigen Funktion "Advanced Surface" oder "Top Surface" sind die 
Einstellempfehlungen bezglich "Advanced Surface" / "Top Surface" zu beachten! Zur 
berprfung der eingestellten Daten steht ber das SIOS-Portal ein spezielles Prfprogramme 
zur Verfgung.

 Prfprogramm fr Advanced Surface / Top Surface (https://
support.industry.siemens.com/cs/ww/de/view/109738423) 

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

749

(cid:21)(cid:20)(cid:23)(cid:22)(cid:53)Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

3.13.6

Werkzeugorientierung (ORIC, ORID, OSOF, OSC, OSS, OSSE, ORIS, OSD, 
OST)

Unter Werkzeugorientierung versteht man die geometrische Ausrichtung des Werkzeugs im 
Raum. Bei einer 5-Achs-Bearbeitungsmaschine ist die Werkzeugorientierung ber 
Programmbefehle einstellbar.

Programmierung

Mit OSD und OST aktivierte berschleifbewegungen der Orientierung werden je nach 
Interpolationsart fr die Werkzeugorientierung unterschiedlich gebildet.

Bei aktiver Vektorinterpolation wird der geglttete Orientierungsverlauf auch mittels 
Vektorinterpolation interpoliert. Dagegen wird bei aktiver Rundachsinterpolation die 
Orientierung direkt mittels Rundachsbewegungen geglttet.  

Programmierung der Orientierungsnderung:

Eine Orientierungsnderung des Werkzeugs kann programmiert werden durch:

 direkte Programmierung der Rundachsen A, B, C (Rundachsinterpolation)

 Euler- oder RPY-Winkel

 Richtungsvektor (Vektorinterpolation durch Angabe von A3 oder B3 oder C3)

 LEAD/TILT (Stirnfrsen)

Das Bezugskoordinatensystem ist entweder das Maschinenkoordinatensystem (ORIMKS) 
oder das aktuelle Werkstckkoordinatensystem (ORIWKS).

750

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Richtungs-vektorXYZArbeitsvorbereitung

3.13 Werkzeugkorrekturen

Programmierung der Werkzeugorientierung:

Orientierung und Bahnbewegung parallel

Orientierung und Bahnbewegung nacheinander

keine Orientierungsglttung

Orientierung konstant

Orientierungsglttung nur am Satzanfang

Orientierungsglttung am Satzanfang und -ende

Geschwindigkeit der Orientierungsnderung bei eingeschalteter Orientierungsglttung 
in Grad pro mm (gilt fr OSS und OSSE)

berschleifen der Orientierung durch Vorgabe der berschleiflnge mit dem Setting
datum:

SD42674 $SC_ORI_SMOOTH_DIST

berschleifen der Orientierung durch Vorgabe der Winkeltoleranz in Grad bei Vekto
rinterpolation mit dem Settingdatum:

SD42676 $SC_ORI_SMOOTH_TOL

Bei Rundachsinterpolation wird die vorgegebene Toleranz als maximale Abweichung 
der Orientierungsachsen angenommen.

ORIC:

ORID:

OSOF:

OSC:

OSS:

OSSE:

ORIS:

OSD:

OST:

Hinweis

Alle Befehle zum berschleifen der Werkzeugorientierung (OSOF, OSC, OSS, OSSE, OSD 
und OST) sind in der G-Gruppe 34 zusammengefasst. Sie sind modal wirksam, d. h. es kann 
immer nur einer dieser Befehle wirken.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

751

(cid:50)(cid:85)(cid:76)(cid:72)(cid:81)(cid:87)(cid:76)(cid:72)(cid:85)(cid:88)(cid:81)(cid:74)(cid:86)(cid:16)(cid:166)(cid:81)(cid:71)(cid:72)(cid:85)(cid:88)(cid:81)(cid:74)Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Beispiele

Beispiel 1: ORIC

Sind zwischen den Verfahrstzen N10 und N20 zwei oder mehrere Stze mit 
Orientierungsnderungen (z. B. A2=... B2=... C2=...) programmiert und ORIC ist aktiv, 
so wird der eingefgte Kreissatz entsprechend dem Betrag der Winkelnderungen auf diese 
Zwischenstze aufgeteilt.

Kommentar

; Der Kreissatz, der an der Auenecke eingefgt wird, 
verteilt sich auf N12 und N14, entsprechend der Ori-
entierungsnderung. Kreisbewegung und Orientierungs-
nderung werden hierbei parallel ausgefhrt.

Programmcode

ORIC

N8 A2= B2= C2=

N10 X Y Z

N12 C2= B2=

N14 C2= B2=

N20 X =Y= Z= G1 F200

Beispiel 2: ORID

Ist ORID aktiv, so werden alle Stze zwischen den beiden Verfahrstzen am Ende des ersten 
Verfahrsatzes ausgefhrt. Der Kreissatz mit konstanter Orientierung wird unmittelbar vor dem 
zweiten Verfahrsatz ausgefhrt.

752

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

N20N14N12N10 
 
 
 
Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Programmcode

Kommentar

ORID

N8 A2= B2= C2=

N10 X Y Z

N12 A2= B2= C2=

N14 M20

N20 X Y Z

Hinweis

; Der Satz N12 und N14 wird am Ende von N10 ausgefhrt. 
Danach wird der Kreissatz mit der aktuellen Orientierung 
ausgefahren.

; Hilfsfunktionen etc.

Fr die Art der Orientierungsnderung an einer Auenecke ist der Programmbefehl 
magebend, welcher im ersten Verfahrsatz einer Auenecke aktiv ist.

Ohne Orientierungsnderung: Wird die Orientierung an der Satzgrenze nicht verndert, so ist 
der Werkzeugquerschnitt ein Kreis, der die beiden Konturen berhrt.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

753

N12 und N14 ausf(cid:190)hrenN20N10 
 
 
 
Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Beispiel 3: nderung der Orientierung an einer Innenecke

Programmcode

ORIC

N10 X Y Z G1 F500

N12 X Y Z A2= B2= C2=

N15 X Y Z A2= B2= C2=

Weitere Informationen

Verhalten an Auenecken

An einer Auenecke wird immer ein Kreissatz mit dem Radius des Frsers eingefgt.

Mit den Programmbefehlen ORIC bzw. ORID kann festgelegt werden, ob 
Orientierungsnderungen, die zwischen Satz N1 und N2 programmiert wurden, vor Beginn des 
eingefgten Kreissatzes oder gleichzeitig mit diesem ausgefhrt werden.

754

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

N15N12N10WRK 
 
 
 
 
Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Ist an Auenecken eine Orientierungsnderung notwendig, so kann diese wahlweise parallel 
zur Interpolation oder getrennt mit der Bahnbewegung erfolgen.

Bei ORID werden zunchst die eingefgten Stze ohne Bahnbewegung ausgefhrt. Der 
Kreissatz wird unmittelbar vor dem zweiten der beiden Verfahrstze eingefgt, durch welche 
die Ecke gebildet wird.

Sind an einer Auenecke mehrere Orientierungsstze eingefgt und ORIC ist angewhlt, so 
wird die Kreisbewegung entsprechend den Betrgen der Orientierungsnderungen der 
einzelnen eingefgten Stze auf diese verteilt.

berschleifen der Orientierung mit OSD bzw. OST

Beim berschleifen mit G642 kann die maximale Abweichung fr die Konturachsen und die 
Orientierungsachsen nicht sehr unterschiedlich sein. Die kleinere Toleranz von beiden 
bestimmt die Form der berschleifbewegung bzw. Winkeltoleranz, den Orientierungsverlauf 
relativ stark zu gltten, ohne dabei grere Konturabweichungen hinnehmen zu mssen.

Durch Aktivierung von OSD bzw. OST ist es mglich, mit einer vorgegebenen berschleiflnge 
bzw. Winkeltoleranz sehr geringe Abweichungen des Orientierungsverlaufs ohne gravierende 
Konturabweichungen "grozgig" zu gltten.

Hinweis

Im Unterschied zum berschleifen der Kontur (und dem Orientierungsverlauf) mit G642 wird 
beim berschleifen der Orientierung mit OSD bzw. OST kein eigener Satz gebildet, sondern die 
berschleifbewegung wird direkt in die programmierten Originalstze eingefgt.

Mit OSD bzw. OST knnen keine Satzbergnge berschliffen werden bei denen ein Wechsel 
der Interpolationsart fr die Werkzeugorientierung (Vektor  Rundachse, 
Rundachse  Vektor) stattfindet. Diese Satzbergnge knnen gegebenenfalls mit den 
herkmmlichen berschleiffunktionen G641, G642 bzw. G643 berschliffen werden.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

755

Zwischen dem Satz N1 und N2wird ein Kreissatz eingef(cid:190)gtN2RN1Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

3.13.7

Freie D-Nummernvergabe, Schneidennummer

3.13.7.1

Freie D-Nummernvergabe, Schneidennummer (Adresse CE)

D-Nummer

Die D-Nummern knnen als Korrekturnummern verwendet werden. Zustzlich kann ber die 
Adresse CE die Nummer der Schneide adressiert werden. ber die Systemvariable 
$TC_DPCE kann die Schneidenummer beschrieben werden.

Voreinstellung: Korrekturnr. == Schneidennr.

ber Maschinendaten werden die maximale Anzahl der D-Nummern (Schneidennummern) 
und die maximale Schneidenanzahl pro Werkzeug festgelegt ( Maschinenhersteller). Die 
folgenden Befehle sind nur sinnvoll, wenn die maximale Schneidennummer (MD18105) grer 
als die Anzahl der Schneiden pro Werkzeug (MD18106) festgelegt wurde. Beachten Sie die 
Angaben des Maschinenherstellers.

Weitere Informationen

Funktionshandbuch Werkzeuge

3.13.7.2

Freie D-Nummernvergabe: D-Nummern prfen (CHKDNO)

Mit dem Befehl CKKDNO prfen Sie, ob die vorhandenen DNummern eindeutig vergeben 
worden sind. Die D-Nummern aller innerhalb einer TO-Einheit definierten Werkzeuge drfen 
nur einmal auftreten. Ersatzwerkzeuge werden dabei nicht bercksichtigt.  

Syntax

Bedeutung

state=CHKDNO(Tno1,Tno2,Dno)

state:

=TRUE:

=FALSE:

Die D-Nummern wurden fr den berprften Bereich 
eindeutig vergeben.

Es erfolgte eine D-Nummernkollision oder die Para
metrierung ist ungltig. ber Tno1, Tno2 und Dno 
werden die Parameter bergeben, die zur Kollision 
fhrten. Diese Daten knnen im Teileprogramm aus
gewertet werden.

CHKDNO(Tno1,Tno2):

Es werden alle D-Nummern der genannten Werkzeuge geprft.

CHKDNO(Tno1):

CHKDNO:

Es werden alle D-Nummern von Tno1 gegen alle anderen Werkzeuge 
geprft.

Es werden alle D-Nummern aller Werkzeuge gegen alle anderen 
Werkzeuge geprft.

756

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

3.13.7.3

Freie D-Nummernvergabe: D-Nummern umbenennen (GETDNO, SETDNO)

D-Nummern mssen eindeutig vergeben werden. Zwei verschiedene Schneiden eines 
Werkzeuges knnen nicht dieselbe D-Nummer haben.

GETDNO

Dieser Befehl liefert die D-Nummer einer bestimmten Schneide (ce) eines Werkzeuges mit der 
T-Nummer t. Existiert keine D-Nummer zu den eingegebenen Parametern, wird d=0 gesetzt. 
Ist die DNummer ungltig wird ein Wert grer 32000 zurckgegeben.   

SETDNO

Mit diesem Befehl weisen Sie den Wert d der DNummer einer Schneide ce des Werkzeuges 
t zu. ber state wird das Ergebnis dieser Anweisung zurckgegeben (TRUE oder FALSE). 
Existiert kein Datensatz zu den eingegebenen Parametern wird FALSE zurckgegeben. 
Syntaxfehler erzeugen einen Alarm. Die D-Nummer kann nicht explizit auf 0 gesetzt werden.  

Syntax

Bedeutung

d = GETDNO (t,ce) 

state = SETDNO (t,ce,d) 

d:

t:

ce:

D-Nummer der Schneide des Werkzeuges

T-Nummer des Werkzeuges

Schneidennummer (CE-Nummer) des Werkzeuges

state:

Gibt an, ob der Befehl fehlerfrei ausgefhrt werden konnte (TRUE oder FALSE).

Beispiel Umbenennen einer D-Nummer

Programmierung

$TC_DP2[1,2] = 120

$TC_DP3[1,2] = 5.5

$TC_DPCE[1,2] = 3

...

N10 def int DNrAlt, DNrNeu = 17

N20 DNrAlt = GETDNO(1,3)

N30 SETDNO(1,3,DNrNeu)

Kommentar

; Schneidennummer CE

Damit wird der Schneide CE=3 der neue D-Wert 17 zugewiesen. Jetzt werden die Daten dieser 
Schneide ber die DNummer 17 angesprochen; sowohl ber die Systemvariablen als auch in 
der Programmierung mit der NC-Adresse.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

757

 
 
 
 
 
 
Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

3.13.7.4

Freie D-Nummernvergabe: T-Nummer zur vorgegebenen D-Nummer ermitteln 
(GETACTTD)

Die vordefinierte Funktion GETACTTD ermittelt zu einer absoluten DNummer die 
dazugehrige T-Nummer. Es erfolgt keine Prfung auf Eindeutigkeit. Gibt es mehrere gleiche 
D-Nummern innerhalb einer TO-Einheit, wird die T-Nummer des ersten gefundenen 
Werkzeugs zurckgegeben.

Syntax

Bedeutung

<status>=GETACTTD(<TNr>,<DNr>)

GETACTTD():

Funktionsaufruf 

<DNr>:

D-Nummer, fr die die T-Nummer gesucht werden soll.

Datentyp:

INT

<TNr>:

Gefundene T-Nummer

Datentyp:

VAR  INT

<status>:

Ergebnis

Datentyp:

INT

Wert:

0

-1

-2

-5

Die T-Nummer wurde gefunden. <TNr> erhlt den Wert der T-
Nummer.

Zur angegebenen D-Nummer existiert keine T-Nummer, 
<TNr>=0.

Die D-Nummer ist nicht absolut. <TNr> erhlt den Wert des 
ersten gefundenen Werkzeugs, das die D-Nummer mit dem 
Wert <DNr> enthlt.

Die Funktion konnte aus einem anderen Grund nicht ausge
fhrt werden.

3.13.7.5

Freie D-Nummernvergabe: D-Nummern ungltig setzen (DZERO)

Der Befehl DZERO dient zur Untersttzung whrend dem Umrsten. So gekennzeichnete 
Korrekturdatenstze werden nicht mehr vom Befehl CHKDNO geprft. Um sie wieder zugnglich 
zu machen, muss die DNummer wieder mit SETDNO gesetzt werden.

Syntax

DZERO

Bedeutung

DZERO:

Kennzeichnet alle D-Nummern der TO-Einheit als ungltig.

758

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

3.13.8

Werkzeugtrgerkinematik

Voraussetzungen

Ein Werkzeugtrger kann ein Werkzeug nur dann in alle mglichen Raumrichtungen 
orientieren, wenn

 zwei Drehachsen V1 und V2 vorhanden sind.

 die Drehachsen aufeinander senkrecht stehen.

 die Werkzeuglngsachse senkrecht auf der zweiten Drehachse V2 steht.

Zustzlich gilt bei Maschinen, bei denen alle mglichen Orientierungen einstellbar sein 
mssen, folgende Forderung:

 die Werkzeugorientierung muss senkrecht auf der ersten Drehachse V1 stehen.

Funktion  

Die Werkzeugtrgerkinematik mit maximal zwei Drehachsen v1 oder v2 wird ber die 17 
Systemvariablen $TC_CARR1[m] bis $TC_CARR17[m] beschrieben. Die Beschreibung des 
Werkzeugtrgers besteht aus:     

 dem vektoriellen Abstand von der ersten Drehachse zum Bezugspunkt des 

Werkzeugtrgers I1, dem vektoriellen Abstand von erster zu zweiter Drehachse I2, dem 
vektoriellen Abstand von zweiter Drehachse zum Bezugspunkt des Werkzeugs I3.  

 den Richtungsvektoren beider Drehachsen V1, V2.  

 den Drehwinkeln 1, 2 um die beiden Achsen. Die Drehwinkel werden mit Blickrichtung in 

Richtung der Drehachsvektoren im Uhrzeigersinn positiv gezhlt.  

Fr Maschinen mit aufgelster Kinematik (sowohl Werkzeug als auch Werkstck sind drehbar) 
wurden die Systemvariablen um die Eintrge $TC_CARR18[m] bis $TC_CARR23[m] 
erweitert.   

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

759

3l2l1l212V1VArbeitsvorbereitung

3.13 Werkzeugkorrekturen

Parameter

Funktion der Systemvariablen fr orientierbare Werkzeugtrger

Bezeichnung

x-Komponente

l1 Offsetvector
l2 Offsetvector
v1 Drehachse
v2 Drehachse
1 Drehwinkel
2 Drehwinkel
l3 Offsetvector

$TC_CARR1[m]

$TC_CARR4[m]

$TC_CARR7[m]

$TC_CARR10[m]

$TC_CARR13[m]
$TC_CARR14[m]

$TC_CARR15[m]

y-Komponente

$TC_CARR2[m]

$TC_CARR5[m]

$TC_CARR8[m]

z-Komponente

$TC_CARR3[m]

$TC_CARR6[m]

$TC_CARR9[m]

$TC_CARR11[m]

$TC_CARR12[m]

$TC_CARR16[m]

$TC_CARR17[m]

Erweiterungen der Systemvariablen fr orientierbare Werkzeugtrger

Bezeichnung

x-Komponente

y-Komponente

z-Komponente

l4 Offsetvector
Achsbezeichner 
Drehachse v1
Drehachse v2
Kinematiktyp

Tool
Part
Mixed mode

Offset der
Drehachse v1
Drehachse v2
Winkeloffset der 
Drehachse v1
Drehachse v2
Winkelinkrem. 
v1 Drehachse
v2 Drehachse
Min.-Position 
Drehachse v1
Drehachse v2
Max.-Position 
Drehachse v1
Drehachse v2
Werkzeugtrger 
Name

Anwender:
Achsname 1
Achsname 2
Kennung

Position

Feinver- 
schiebung

$TC_CARR18[m]

$TC_CARR19[m]

$TC_CARR20[m]

Achsbezeichner der Drehachsen v1und v2 (Vorbelegung ist Null)
$TC_CARR21[m]
$TC_CARR22[m]

$TC_CARR23[m]

Kinematiktyp-T -> 

Kinematiktyp-P -> 

Kinematiktyp-M 

Nur das Werkzeug ist 
drehbar (Vorbelegung)

Nur das Werkstck ist 
drehbar

Werkstck & Werkzeug 
sind drehbar

Winkel in Grad der Drehachsen v1und v2 bei Einnahme der Grundstellung
$TC_CARR24[m]
$TC_CARR25[m]

Offset der Hirth-Verzahnung in Grad der Drehachsen v1und v2
$TC_CARR26[m]
$TC_CARR27[m]

Inkrement der Hirth-Verzahnung in Grad der Drehachsen v1und v2
$TC_CARR28[m]
$TC_CARR29[m]

Software-Limit fr Minimalposition der Drehachsen v1und v2
$TC_CARR30[m]
$TC_CARR31[m]

Software-Limits fr Maximalposition der Drehachsen v1und v2
$TC_CARR32[m]
$TC_CARR33[m]

Anstelle einer Zahl kann ein Werkzeugtrger einem Namen bekommen. 
$TC_CARR34[m]

Beabsichtigte Verwendung innerhalb der Messzyklen vom Anwender. 
$TC_CARR35[m]
$TC_CARR36[m]
$TC_CARR37[m]

$TC_CARR38[m]

$TC_CARR39[m]

$TC_CARR40[m]

Parameter, die zu den Werten 
in den Basisparameternaddiert werden knnen.

l1 Offsetvector
l2 Offsetvector

$TC_CARR41[m]

$TC_CARR44[m]

$TC_CARR42[m]

$TC_CARR45[m]

$TC_CARR43[m]

$TC_CARR46[m]

760

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Erweiterungen der Systemvariablen fr orientierbare Werkzeugtrger

Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

$TC_CARR56[m]

$TC_CARR59[m]

$TC_CARR57[m]

$TC_CARR60[m]

l3 Offsetvector
l4 Offsetvector
v1 Drehachse
v2 Drehachse

$TC_CARR55[m]

$TC_CARR58[m]

$TC_CARR64[m]

$TC_CARR65[m]

Hinweis

Erklrungen zu den Parametern

Mit "m" wird jeweils die Nummer des zu beschreibenden Werkzeugtrgers angegeben.

$TC_CARR47 bis $TC_CARR54 sowie $TC_CARR61 bis $TC_CARR63 sind nicht definiert 
und fhren beim Versuch hierauf lesend oder schreiben zuzugreifen, zu einem Alarm.

Die Anfangs- bzw. Endpunkte der Abstandsvektoren auf den Achsen knnen frei gewhlt 
werden. Die Drehwinke 1, 2 um die beiden Achsen werden im Grundzustand des 
Werkzeugtrgers mit 0 definiert. Die Kinematik eines Werkzeugtrgers kann so auf beliebig 
viele Mglichkeiten beschrieben werden.

Werkzeugtrger mit nur einer oder keiner Drehachse knnen durch Nullsetzen der 
Richtungsvektoren einer oder beider Drehachsen beschrieben werden. 
Bei einem Werkzeugtrger ohne Drehachse wirken die Abstandsvektoren wie zustzliche 
Werkzeugkorrekturen, deren Komponenten beim Umschalten der Bearbeitungsebenen (G17 
bis G19) nicht beeinflusst werden.

Erweiterungen der Parameter

Parameter der Drehachsen

Die Systemvariablen wurden um die Eintrge $TC_CARR24[m] bis $TC_CARR33[m] erweitert 
und wie folgt beschrieben:

Den Offset der Dreh
achsen v1, v2 
Den Winkeloffset/ 
Winkelinkrement 
Drehachsen v1, v2 
Minimal- und Maxi
malposition Dreh
achsen v1, v2

Vernderung der Position der Drehachse v1 oder v2 bei Grundstellung des ori
entierbaren Werkzeugtrgers.

Offset oder Winkelinkrement der Hirth-Verzahnung der Drehachsen v1 und v2. 
Programmierter oder berechneter Winkel wird auf den nchstliegenden Wert 
gerundet, der sich bei ganzzahligem n aus phi = s + n * d ergibt.

Der Minimalposition/Maximalposition der Drehachse Grenzwinkel (Software-Li
mit) der Drehachse v1 und v2.

Parameter fr den Anwender

$TC_CARR34 bis $TC_CARR40 enthalten Parameter, die den Anwender zur freien Verfgung 
stehen und bis zum SW 6.4 standardmig innerhalb der NCK nicht weiter ausgewertet 
werden oder keine Bedeutung haben.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

761

Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Parameter der Feinverschiebung

$TC_CARR41 bis $TC_CARR65 enthalten Feinverschiebungsparameter, die zu den Werten 
in den Basisparametern addiert werden knnen. Der einem Basisparameter zugeordnete 
Feinverschiebungswert ergibt sich, wenn zur Parameternummer der Wert 40 addiert wird.

Beispiel

Der im folgenden Beispiel verwendete Werkzeugtrger lsst sich durch eine Drehung um die 
Y-Achse vollstndig beschreiben.

Programmcode

N10 $TC_CARR8[1]=1

N20 $TC_DP1[1,1]=120

N30 $TC_DP3[1,1]=20

N40 $TC_DP6[1,1]=5

N50 ROT Y37

Kommentar

; Definition der Y-Komponente der 
ersten Drehachse des Werkzeugtr-
gers 1.

; Definition eines Schaftfrsers.

; Definition eines Schaftfrsers 
mit Lnge 20 mm.

; Definition eines Schaftfrsers 
mit Radius 5 mm.

; Framedefinition mit Drehung von 
37 um die Y-Achse.

N60 X0 Y0 Z0 F10000

; Ausgangsposition anfahren.

N70 G42 CUT2DF TCOFR TCARR=1 T1 D1 X10

N80 X40

N90 Y40

; Radiuskorrektur, Werkzeuglngen-
korrektur im gedrehten Frame ein-
stellen, Werkzeugtrger 1, Werk-
zeug 1 anwhlen.

; Bearbeitung unter einer Drehung 
von 37 durchfhren.

762

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

ZXXYzZXXYYz 
Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Kommentar

Programmcode

N100 X0

N110 Y0

N120 M30

Weitere Informationen

Aufgelste Kinematik      

Fr Maschinen mit aufgelster Kinematik (sowohl Werkzeug als auch Werkstck sind drehbar) 
wurden die Systemvariablen um die Eintrge $TC_CARR18[m] bis $TC_CARR23[m] erweitert 
und wie folgt beschrieben: 

Der drehbare Werkzeugtisch bestehend aus:

 dem vektoriellen Abstand der zweiten Drehachse V2 zum Bezugspunkt eines drehbaren 

Werkzeugtisches I4 der dritten Drehachse.

Die Rundachsen bestehend aus:

 den beiden Kanalbezeichnern fr den Bezug der Drehachsen V1und V2, auf deren Position 
gegebenenfalls bei der Bestimmung der Orientierung des orientierbaren Werkzeugtrgers 
zugegriffen wird.

Der Kinematiktyp mit einem der Werte T, P oder M:

 Kinematiktyp T: Nur das Werkzeug ist drehbar.

 Kinematiktyp P: Nur das Werkstck ist drehbar.

 Kinematiktyp M: Werkzeug und Werkstck sind drehbar.

Lschen der Werkzeugtrgerdaten

Mit $TC_CARR1[0]=0 knnen die Daten aller Werkzeugtrgerdatenstze gelscht werden.

Der Kinematiktyp $TC_CARR23[T]=T muss mit einen der drei zulssigen Gro- oder 
Kleinbuchstaben (T,P,M) belegt werden und sollte aus diesen Grund nicht gelscht werden.

ndern der Werkzeugtrgerdaten

Jeder der beschriebenen Werte kann durch Zuweisung eines neuen Wertes im Teileprogramm 
verndert werden. Jedes andere Zeichen als T, P oder M fhrt bei dem Versuch, den 
orientierbaren Werkzeugtrger zu aktivieren, zu einen Alarm. 

Lesen der Werkzeugtrgerdaten

Jeder der beschriebenen Werte kann durch Zuweisung an eine Variable im Teileprogramm 
gelesen werden.

Feinverschiebungen

Ein unzulssiger Feinverschiebungswert wird erst erkannt, wenn ein orientierbarer 
Werkzeugtrger aktiviert wird, der solch einen Wert enthlt und gleichzeitig das Settingdatum 
SD42974 $SC_TOCARR_FINE_CORRECTION = TRUE ist.

Der Betrag der zulssigen Feinverschiebung wird ber Maschinendaten auf einen maximal 
zulssigen Wert begrenzt.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

763

 
 
 
Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

3.13.9

Werkzeuglngenkorrektur fr orientierbare Werkzeugtrger (TCARR, TCOABS, 
TCOFR, TCOFRX, TCOFRY, TCOFRZ)

Mit vernderter Raumorientierung des Werkzeugs ndern sich auch dessen 
Werkzeuglngenkomponenten.

Nach Umrsten, z. B. durch manuelle Einstellung oder Wechsel des Werkzeugtrgers mit 
fester rumlicher Ausrichtung, mssen daher die Werkzeuglngenkomponenten neu ermittelt 
werden. Dies erfolgt mit den Wegbefehlen TCOABS und TCOFR.

Bei einem orientierbaren Werkzeugtrger eines aktiven Frames kann bei Werkzeuganwahl mit 
TCOFRZ, TCOFRY und TCOFRX die Richtung, in die das Werkzeug zeigen soll, bestimmt 
werden.

Syntax

Bedeutung

TCARR=[<m>]
TCOABS
TCOFR
TCOFRZ
TCOFRY
TCOFRX

TCARR=[<m>]:

Werkzeugtrger mit der Nummer "m" anfordern

TCOABS:

TCOFR:

TCOFRZ:

Werkzeuglngenkomponenten aus der aktuellen Werkzeugtrgerorientierung 
berechnen

Werkzeuglngenkomponenten aus der Orientierung des aktiven Frames be
stimmen

Orientierbarer Werkzeugtrger aus aktiven Frame, dessen Werkzeug in Z-Rich
tung zeigt

764

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

XX<<ZZ<<IIIArbeitsvorbereitung

3.13 Werkzeugkorrekturen

TCOFRY:

TCOFRX:

Orientierbarer Werkzeugtrger aus aktiven Frame, dessen Werkzeug in Y-Rich
tung zeigt

Orientierbarer Werkzeugtrger aus aktiven Frame, dessen Werkzeug in X-Rich
tung zeigt

Weitere Informationen

Werkzeuglngenkorrektur aus Trgerorientierung (TCOABS)

TCOABS berechnet die Werkzeuglngenkorrektur aus den aktuellen Orientierungswinkeln des 
Werkzeugtrgers; abgelegt in den Systemvariablen $TC_CARR13 und $TC_CARR14.

Zur Definition der Werkzeugtrgerkinematik mit Systemvariablen siehe 
" Werkzeugtrgerkinematik (Seite 759) ".

Zur Neuberechnung der Werkzeuglngenkorrektur bei Frame-Wechsel muss das Werkzeug 
nochmals angewhlt werden.

Werkzeugrichtung aus aktiven Frame

Der orientierbare Werkzeugtrger kann so eingestellt werden, dass das Werkzeug in folgende 
Richtungen zeigt:

 mit TCOFR bzw. TCOFRZ in Z-Richtung

 mit TCOFRY in Y-Richtung

 mit TCOFRX in X-Richtung

Ein Umschalten zwischen TCOFR und TCOABS bewirkt eine Neuberechnung der 
Werkzeuglngenkorrektur.

Werkzeugtrger anfordern (TCARR)

Mit TCARR werden mit der Werkzeugtrgernummer m dessen Geometriedaten angefordert 
(Korrekturspeicher).

Mit m=0 wird der aktive Werkzeugtrger abgewhlt.

Die Geometriedaten des Werkzeugtrgers werden erst nach Aufruf eines Werkzeugs aktiv. 
Das angewhlte Werkzeug bleibt ber den Wechsel eines Werkzeugtrgers hinaus aktiv.

Die aktuellen Geometriedaten des Werkzeugtrgers knnen auch im Teileprogramm ber die 
entsprechenden Systemvariablen definiert werden.

Neuberechnung der Werkzeuglngenkorrektur (TCOABS) bei Frame-Wechsel

Zur Neuberechnung der Werkzeuglngenkorrektur bei Frame-Wechsel muss das Werkzeug 
nochmals angewhlt werden.

Hinweis

Die Werkzeugorientierung muss dem aktiven Frame manuell angepasst werden.

Bei der Berechnung der Werkzeuglngenkorrektur werden in einem Zwischenschritt auch die 
Drehwinkel des Werkzeugtrgers berechnet. Da bei Werkzeugtrgern mit zwei Drehachsen im 
Allgemeinen zwei Drehwinkelpaare existieren, mit denen die Werkzeugorientierung dem 
aktiven Frame angepasst werden kann, mssen die in den Systemvariablen abgelegten 

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

765

Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Drehwinkelwerte zumindest annhernd den mechanisch eingestellten Drehwinkeln 
entsprechen.

Hinweis

Werkzeugorientierung

Die Steuerung kann die ber die Frame-Orientierung berechneten Verdrehwinkel nicht auf die 
Einstellbarkeit an der Maschine berprfen.

Sind die Drehachsen des Werkzeugtrgers konstruktiv so angeordnet, dass die durch die 
Frame-Orientierung berechnete Werkzeugorientierung nicht erreicht werden kann, wird ein 
Alarm ausgegeben.

Die Kombination von Werkzeugfeinkorrektur und den Funktionalitten zur 
Werkzeuglngenkorrektur bei beweglichen Werkzeugtrgern ist nicht zulssig. Beim Versuch 
beide Funktionen gleichzeitig aufzurufen, erfolgt eine Fehlermeldung.

Mit TOFRAME ist es mglich, einen Frame aufgrund der Orientierungsrichtung des angewhlten 
Werkzeugtrgers zu definieren. Genauere Informationen siehe Kapitel "Frames".

Bei aktiver Orientierungstransformation (3-, 4-, 5-Achstransformation) kann ein 
Werkzeugtrger mit von der Null-Lage abweichender Orientierung angewhlt werden, ohne 
dass dabei ein Alarm ausgegeben wird.

bergabeparameter von Standard- und Messzyklen

Fr die bergabeparameter von Standard- und Messzyklen gelten definierte Wertebereiche.

Bei Winkelwerten ist der Wertebereich wie folgt festgelegt:

 Drehung um 1. Geometrieachse: -180 Grad bis +180 Grad

 Drehung um 2. Geometrieachse: -90 Grad bis +90 Grad

 Drehung um 3. Geometrieachse: -180 Grad bis +180 Grad

Siehe Kapitel Frames, "Programmierbare Drehung (ROT, AROT, RPL)".

Hinweis

Bei der bergabe von Winkelwerten an einen Standard- oder Messzyklus ist zu beachten:

Werte kleiner als die Rechenfeinheit der NC sind auf Null zu runden!

Die Rechenfeinheit der NC fr Winkelpositionen ist festgelegt im Maschinendatum:

MD10210 $MN_INT_INCR_PER_DEG

3.13.10

Orientierbare Werkzeugtrger nach Maschinenvermessung modifizieren 
(CORRTC)

Mit der Funktion CORRTC knnen gemessene kinematische Kettenelemente eines Toolcarriers 
in spezielle Korrekturelemente geschrieben werden. 

766

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Hinweis

Die mit der Funktion CORRTC eingeschriebenen Korrekturwerte sind nicht sofort im 
ToolCarrier wirksam. Erst nach Abwahl des ToolCarriers, NEWCONF und Anwahl des 
ToolCarriers sind die Korrekturwerte wirksam.

<_Corr_Status> = CORRTC(<_Corr_Vect>, <_Corr_Index>, <_Corr_Mode>, 
[ <_No_Alarm>])

Syntax

Bedeutung

CORRTC:

Funktionsaufruf

<_Corr_Status>:

Rckgabewert der Funktion

Datentyp:

INT

Werte:

0 Die Funktion wurde ohne Fehler ausgefhrt.

1 Es ist kein Toolcarrier aktiv.

2 Der aktive Toolcarrier wurde nicht mit kinematischen Ketten definiert.

10 Der Aufrufparameter <_Corr_Index> ist negativ.

11 Der Aufrufparameter <_Corr_Mode> ist negativ.

12 Ungltiger Verweis auf den Abschnitt einer Teilkette (_CORR_INDEX).

13 In dem Abschnitt, auf den mit dem Parameter _CORR_INDEX verwiesen 
wird, ist kein Korrekturelement definiert ($TC_CARR_CORR_ELEM).

20 Die 100er-Stelle von _CORR_MODE ist ungltig. Es sind nur die Werte 0 

und 1 zulssig.

21 Die 1000er-Stelle von _CORR_MODE ist ungltig. Es sind nur die Werte 0 

und 1 zulssig.

30 Bei der Korrektur eines Offsetvektors ist die Abweichung gegenber dem 

aktuellen Wert in mindestens einer Koordinate grer als der durch das 
Settingdatum SD41612 $SN_CORR_TOCARR_LIN_MAX vorgegebene 
Maximalwert.

31 Der Versuch, eine Systemvariable zu beschreiben, wurde wegen fehlender 

Schreibrechte abgewiesen.

<_Corr_Vect>:

Korrekturvektor

Der Inhalt des Korrekturvektors wird durch die nachfolgenden Parameter <Corr_Index> 
und <_Corr_Mode> definiert.

Ist <_Corr_Status> = 30, wird der Inhalt des Vektors berschrieben (s. o.).

Datentyp:

REAL

<_Corr_Index>:

Bezeichnet den Abschnitt, fr den der Richtungsvektor des Korrekturelements korrigiert werden 
soll.

Datentyp:

INT

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

767

Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

<_Corr_Mode>:

Korrekturmodus

Datentyp:

INT

Der Parameter <Corr_Mode> ist dezimalcodiert (1er- bis 1000er-Stelle):

1er-
Stelle:

10er-
Stelle:

Reserviert

Bestimmt, wie das Korrekturelement, auf das der Inhalt von <_Corr_Index> ver
weist, modifiziert werden soll.

xx0x Der Korrekturvektor wird unmittelbar in das Korrekturelement geschrie

ben.

Diese Variante kann dazu verwendet werden, das Korrekturelement un
mittelbar zu beschreiben, ohne dass der Index <n> des betreffenden 
Systemdatums ($NK_OFF_DIR[<n>, ...]) bekannt sein muss.

xx1x Wie 0, jedoch mit dem Unterschied, dass der bergebene Korrekturwert 

in Weltkoordinaten interpretiert wird.

Ein Unterschied zwischen den Varianten 0 und 1 kann immer dann ent
stehen, wenn die kinematische Kette in Grundstellung (Positionen aller 
Rundachsen gleich 0) weitere Drehungen enthlt.

xx2x Wie 1, jedoch mit dem Unterschied, dass sich der Korrekturwert auf den 
gesamten Abschnitt bezieht, d. h., in das Korrekturelement wird ein sol
cher Wert eingetragen, dass der gesamte Abschnitt die durch den Kor
rekturwert definierte Lnge erreicht.

100er-
Stelle:

Bestimmt, wie der Inhalt des Parameters <_Corr_Vect> zu interpretieren ist.

x0xx Der bergebene Korrekturvektor <_Corr_Vect> enthlt die gesamte 

neue Lnge des Korrekturelements bzw. des Abschnitts, auf 
den <_Corr_Index> in Verbindung mit der 10er-Stelle 
von <_Corr_Mode> verweist (absolute Korrektur).

x1xx Der bergebene Korrekturvektor <_Corr_Vect> enthlt nur die Diffe
renz gegenber der aktuellen Lnge des Korrekturelements bzw. des 
Abschnitts, auf den <_Corr_Index> in Verbindung mit der 10er-Stelle 
von <_Corr_Mode> verweist (inkrementelle Korrektur).

1000er-
Stelle:

Bestimmt, ob die maximal zulssige Korrektur durch das Settingdatum $SN_ 
CORR_TOCARR_LIN_MAX begrenzt werden soll oder nicht.

0xxx Die Grenzwertberwachung ist aktiv.

1xxx Die Grenzwertberwachung wird unterdrckt.

<_No_Alarm>:

Verhalten im Fehlerfall (Rckgabewert > 0) (optional) 

Datentyp:

BOOL

Wert:

FALSE 
(Default)

TRUE

Im Fehlerfall wird die Programmabarbeitung angehalten und ein 
Alarm wird ausgegeben.

Im Fehlerfall wird die Programmabarbeitung nicht angehalten und es 
wird kein Alarm angezeigt. 

Anwendungsfall: Anwenderspezifische Reaktion entsprechend 
Rckgabewert

768

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Weitere Informationen zu CORRTC

Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Die kinematische Struktur eines Toolcarriers wird durch eine (Typ T und Typ P) oder zwei (Typ 
M) kinematische Ketten (Teilketten) beschrieben, die vom dazugehrigen Bezugspunkt 
Maschinenbezugspunkt oder Werkzeugtrgerbezugspunkt) ausgehen. Eine der beiden 
Ketten, die Werkzeug-Kette, endet am Bezugspunkt des Werkzeugs, die andere, die 
Werkstck-Kette im Nullpunkt des Basiskoordinatensystems.

Die Funktion CORRTC schreibt Achsrichtungen bei Maschinen mit ToolCarriern in spezielle 
Korrekturelemente. Eine kinematische Kette wird unter anderem mit Elementen vom Typ 
OFFSET beschrieben, die ber $NK_TYPE definiert werden. 

CORRTC arbeitet mit Abschnitten

Die beiden Teilketten knnen sich jeweils in maximal vier Abschnitte aufteilen:

 Abschnitt 1 beginnt am Startpunkt der Kette und endet an der ersten Rundsachse. 

 Abschnitt 2 ist der Abschnitt zwischen Rundachse 1 und Rundachse 2.

 Abschnitt 3 ist der Abschnitt zwischen Rundachse 2 und dem Ende der Kette.

Die folgende Grafik zeigt einen orientierbaren Werkzeugtrger mit 2 Rundachsen.

Bild 3-11

CORRTC Beispiel

Die Abschnitte sind eindeutig definiert: Durchluft man die kinematische Teil-Kette von ihrem 
Startpunkt bis zum Endpunkt, so hat der erste Abschnitt den Index 1, der nchste den Index 2 
usw.

Korrekturelemente

Auf jeweils ein konstantes kinematisches Kettenelement (Kettenelement des Typs 
$NK_TYPE[<n>] = "OFFSET") in jedem dieser Abschnitte kann mit der Systemvariablen 
$TC_CARR_CORR_ELEM [, 0 ... 3] verwiesen werden. In diese so bezeichneten Elemente 
werden mithilfe der Funktion CORRTC die Korrekturwerte geschrieben, die bei der 
Maschinenvermessung ermittelt wurden.

Die Reihenfolge der Verweise in $TC_CARR_CORR_ELEM[m, 0..3] muss mit den oben 
beschriebenen Abschnitten korrespondieren, d.h. in $TC_CARR_CORR_ELEM[m, 0] kann nur 
ein Kettenelement stehen, das zu dem Offsetvektor l1 gehrt, usw..

Der Bezugswert ist dabei immer der entsprechende Wert, der in dem beim Aufruf von CORRTC 
aktiven Toolcarrier wirksam ist. Nach der Anwahl des Toolcarriers vernderte Inhalte der 

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

769

(cid:44)(cid:21)(cid:3)(cid:32)(cid:3)(cid:36)(cid:69)(cid:86)(cid:70)(cid:75)(cid:81)(cid:76)(cid:87)(cid:87)(cid:3)(cid:20)(cid:44)(cid:22)(cid:3)(cid:32)(cid:3)(cid:36)(cid:69)(cid:86)(cid:70)(cid:75)(cid:81)(cid:76)(cid:87)(cid:87)(cid:3)(cid:21)(cid:44)(cid:23)(cid:3)(cid:32)(cid:3)(cid:36)(cid:69)(cid:86)(cid:70)(cid:75)(cid:81)(cid:76)(cid:87)(cid:87)(cid:3)(cid:22)(cid:89)(cid:20)(cid:15)(cid:3)(cid:734)(cid:20)(cid:89)(cid:21)(cid:15)(cid:3)(cid:734)(cid:21)(cid:49)(cid:88)(cid:79)(cid:79)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:3)(cid:71)(cid:72)(cid:86)(cid:3)(cid:58)(cid:72)(cid:79)(cid:87)(cid:78)(cid:82)(cid:82)(cid:85)(cid:71)(cid:76)(cid:81)(cid:68)(cid:16)(cid:87)(cid:72)(cid:81)(cid:86)(cid:92)(cid:86)(cid:87)(cid:72)(cid:80)(cid:86)(cid:58)(cid:72)(cid:85)(cid:78)(cid:86)(cid:87)(cid:190)(cid:70)(cid:78)(cid:69)(cid:72)(cid:93)(cid:88)(cid:74)(cid:86)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:3)(cid:11)(cid:58)(cid:72)(cid:85)(cid:78)(cid:86)(cid:87)(cid:190)(cid:70)(cid:78)(cid:16)(cid:46)(cid:72)(cid:87)(cid:87)(cid:72)(cid:12)(cid:3)(cid:32)(cid:3)(cid:40)(cid:81)(cid:71)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:3)(cid:71)(cid:72)(cid:85)(cid:3)(cid:78)(cid:76)(cid:81)(cid:72)(cid:80)(cid:68)(cid:87)(cid:76)(cid:86)(cid:70)(cid:75)(cid:72)(cid:81)(cid:3)(cid:46)(cid:72)(cid:87)(cid:87)(cid:72)Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Kinematikdaten in der Datenhaltung haben keinen Einfluss auf die Wirkungsweise der 
Funktion CORRTC.

3.13.11

Online-Werkzeuglngenkorrektur (TOFFON, TOFFOF)

ber die Systemvariable $AA_TOFF[<n> ] knnen die effektiven Werkzeuglngen 
entsprechend der drei Werkzeugrichtungen dreidimensional in Echtzeit berlagert werden.   

Als Index <n> werden die drei Geometrieachsbezeichner verwendet. Damit ist die Anzahl der 
aktiven Korrekturrichtungen durch die zur selben Zeit aktiven Geometrieachsen festgelegt.

Alle Korrekturen knnen gleichzeitig aktiv sein. 

Die Funktion Online-Werkzeuglngenkorrektur ist anwendbar bei:

 Orientierungstransformation TRAORI

 Orientierbare Werkzeugtrger TCARR

Hinweis

Die Online-Werkzeuglngenkorrektur ist eine Option, die vorher frei geschaltet werden 
muss. Nur in Verbindung mit einer aktiven Orientierungstransformation oder einem aktiven 
orientierbaren Werkzeugtrger ist diese Funktion sinnvoll.

Syntax

Bedeutung

TRAORI

TOFFON(<Korrekturrichtung>[,<Offsetwert>])

WHEN TRUE DO $AA_TOFF[<Korrekturrichtung>]

; In Synchronaktionen.

...

TOFFOF(<Korrekturrichtung>)

TOFFON:

Online-Werkzeuglngenkorrektur aktivieren

<Korrekturrichtung>:

<Offsetwert>:

Werkzeugrichtung (X, Y, Z), in der die Online-Werk
zeuglngenkorrektur wirksam sein soll.

Bei der Aktivierung kann fr die entsprechende Kor
rekturrichtung ein Offsetwert angegeben werden, der 
sofort herausgefahren wird.

TOFFOF:

Online-Werkzeuglngenkorrektur zurcksetzen

Die Korrekturwerte in der angegebenen Korrekturrichtung werden zurckgesetzt und 
es wird ein Vorlaufstopp ausgelst.

770

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Beispiele

Beispiel 1: Anwahl der Werkzeuglngenkorrektur

Programmcode

Kommentar

MD21190 $MC_TOFF_MODE =1

; Absolute Werte werden angefahren.

MD21194 $MC_TOFF_VELO[0] =1000

MD21196 $MC_TOFF_VELO[1] =1000

MD21194 $MC_TOFF_VELO[2] =1000

MD21196 $MC_TOFF_ACCEL[0] =1

MD21196 $MC_TOFF_ACCEL[1] =1

MD21196 $MC_TOFF_ACCEL[2] =1

N5 DEF REAL XOFFSET

N10 TRAORI(1)

N20 TOFFON(Z)

N30 WHEN TRUE DO $AA_TOFF[Z]=10 G4 F5

...

N100 XOFFSET=$AA_TOFF_VAL[X]

N120 TOFFON(X,-XOFFSET) G4 F5

Beispiel 2: Abwahl der Werkzeuglngenkorrektur

Programmcode

N10 TRAORI(1)

N20 TOFFON(X)

N30 WHEN TRUE DO $AA_TOFF[X]=10 G4 F5

...

N80 TOFFOF(X)

; Transformation ein.

; Aktivierung der Online-WZL-Korrek-
tur fr die Z-Werkzeugrichtung.

; Fr die Z-Werkzeugrichtung wird ei-
ne WZL-Korrektur von 10 interpoliert.

; Aktuelle Korrektur in X-Richtung 
zuweisen. 

; Fr die X-Werkzeugrichtung wird die 
WZL-Korrektur wieder zu 0 zurckge-
fahren.

Kommentar

; Transformation ein.

; Aktivierung der Online-WZL-Korrek-
tur fr die X-Werkzeugrichtung.

; Fr die X-Werkzeugrichtung wird ei-
ne WZL-Korrektur von 10 interpoliert.

; Positionsoffset der X-Werkzeugrich-
tung wird gelscht:

...$AA_TOFF[X]=0

Es wird keine Achse verfahren.

Zur aktuellen Position im WKS wird 
der Positionsoffset entsprechend der 
aktuellen 
Orientierung hinzugerechnet.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

771

 
 
 
Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Weitere Informationen

Satzaufbereitung

Bei der Satzaufbereitung im Vorlauf wird der im Hauptlauf wirksame aktuelle 
Werkzeuglngenoffset mit bercksichtigt. Um die maximal zulssigen Achsgeschwindigkeiten 
weitgehend ausnutzen zu knnen, ist es erforderlich, die Satzaufbereitung mit einem 
Vorlaufstopp STOPRE anzuhalten, whrend ein Werkzeugoffset aufgebaut wird.

Der Werkzeugoffset ist zum Vorlaufzeitpunkt auch immer dann bekannt, wenn die 
Werkzeuglngenkorrekturen nach Programmstart nicht mehr verndert werden, oder wenn 
nach einer Vernderung der Werkzeuglngenkorrekturen mehr Stze abgearbeitet wurden als 
der IPO-Buffer zwischen Vorlauf und Hauptlauf aufnehmen kann.

Variable $AA_TOFF_PREP_DIFF

Das Ma fr die Differenz zwischen der aktuellen im Interpolator wirksamen Korrektur und der 
Korrektur, die zum Zeitpunkt der Satzaufbereitung wirksam war, kann in der Variablen 
$AA_TOFF_PREP_DIFF[<n>] abgefragt werden.

Maschinendaten und Settingdaten einstellen

Fr die Online-Werkzeuglngenkorrektur stehen folgende Systemdaten zur Verfgung:

 MD20610 $MC_ADD_MOVE_ACCEL_RESERVE (Beschleunigungsreserve fr 

berlagerte Bewegung)

 MD21190 $MC_TOFF_MODE

Inhalt der Systemvariable $AA_TOFF[<n>] wird als absoluter Wert herausgefahren oder 
aufintegriert.

 MD21194 $MC_TOFF_VELO (Geschwindigkeit der Online-Werkzeuglngenkorrektur)

 MD21196 $MC_TOFF_ACCEL (Beschleunigung der Online-Werkzeuglngenkorrektur)

 Settingdatum zur Vorgabe von Grenzwerten: 

SD42970 $SC_TOFF_LIMIT (Obergrenze des Werkzeuglngenkorrekturwertes)

3.13.12

Modifikation der Korrekturdaten bei drehbaren Werkzeugen

3.13.12.1

Orientierungen berechnen (ORISOLH)

Die vordefinierte Funktion ORISOLH untersttzt den Anwender dabei, die Rundachspositionen 
einer Maschine so einzustellen, dass ein Drehwerkzeug in eine definierte, 
kinematikunabhngige Lage relativ zum Werkstck gebracht wird. Voraussetzung ist, dass 
eine 6-Achstransformation aktiv ist, die mit kinematischen Ketten parametriert ist.

772

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Es stehen zwei Grundfunktionen zur Verfgung:

 Werkzeug ausrichten

Die beiden Winkel  und  werden vorgegeben. Die Funktion berechnet die dazu ntigen 
Winkel der drei Orientierungsachsen.

 Werkzeug ausrichten direkt

Die Winkel der zweiten und dritten Orientierungsachse werden vorgegeben. Die Funktion 
berechnet daraus die zugehrigen Winkel  und , sowie den Winkel der noch fehlenden 
ersten Orientierungsachse.

Hinweis

Reihenfolge der Orientierungsachsen

Durchluft man die kinematische Kette, die den Aufbau der Maschine beschreibt, vom 
Werkstck bis zum Werkzeug, dann gelten fr die Reihenfolge der drei Orientierungsachsen 
einer 6-Achstransformation folgende Festlegungen:
 Die Orientierungsachse, die am nchsten am Werkstck liegt, ist die erste 

Orientierungsachse.

 Die Orientierungsachse, die am nchsten am Werkzeug liegt, ist die dritte 

Orientierungsachse.

Die erste Orientierungsachse wird in der Regel eine Spindel sein, und die entsprechende 
Drehung wird deshalb in diesen Fllen durch einen drehenden Frame realisiert.

Syntax

<RetVal> = ORISOLH(<Cntrl>,<W1>,<W2>)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

773

Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Bedeutung

ORISOLH:

Funktionsaufruf

<RetVal>:

Rckgabewert der Funktion

Datentyp:

INT

Wertebereich:

0, -2, -3, ..., -17

Werte:

0 Funktion wurde ohne Fehler beendet.

-2 Es ist keine gltige Transformation (6-Achs-Orientierungs

transformation) aktiv.

-3 Der erste Parameter (<Cntrl>) ist negativ.

-4 Die 1er-Stelle des ersten Parameters (<Cntrl>) ist ungltig.

Es sind nur die Werte 0 und 1 zulssig.

-5 Die 10er-Stelle des ersten Parameters (<Cntrl>) ist ungltig.

Es sind nur die Werte 0 bis 3 zulssig.

-6 Die 100er-Stelle des ersten Parameters (<Cntrl>) ist ungltig.

Es sind nur die Werte 0 und 1 zulssig.

-7 Die 1000er-Stelle des ersten Parameters (<Cntrl>) ist ungl

tig.

Es sind nur die Werte 0 bis 3 zulssig.

-8 Bei der Funktion "Werkzeug ausrichten direkt" ist der Win

kel  zu gro.

-9 Bei der Funktion "Werkzeug ausrichten direkt" verletzt min
destens eine der vorgegebenen Achspositionen eine Achs
grenze.

-10 Es ist kein Werkzeug aktiv.

-11 Die verlangte Orientierung ist nicht einstellbar.

-12 Die Anpassung der freien Achswinkel bei Hirthverzahnung ist 

fr die erste oder einzige Lsung nicht mglich.

-13 Die Anpassung der freien Achswinkel bei Hirthverzahnung ist 

fr die zweite Lsung nicht mglich.

-14 Die Anpassung der freien Achswinkel bei Hirthverzahnung ist 

fr keine der beiden Lsungen mglich.

-15 Die erste Orientierungsachse ist als Hirthachse parametriert.

-16 Sowohl die zweite als auch die dritte Rundachse ist als Hirt

hachse parametriert. Es darf nur maximal eine der beiden 
Achsen Hirthachse sein.

-17 Bei der Funktion "Schwenken direkt" ist mindestens eine der 
vorgegebenen Achspositionen nicht mit der zugehrigen 
Hirthverzahnung kompatibel.

774

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

<Cntrl>:

Steuert das Verhalten der Funktion

Datentyp:

INT

Der Parameter <Cntrl> ist dezimalcodiert (1er- bis 1000er-Stelle):

1er-Stelle:

Die 1er-Stelle steuert das Verhalten bei Fehlern.

xxx0 Im Fehlerfall (Rckgabewert < 0) wird die Programmbearbei
tung abgebrochen und der Alarm 14106 ausgegeben.

Hinweis:
Der Alarm wird unabhngig vom Wert der 1er-Stelle auch 
dann ausgegeben, wenn der Parameter <Cntrl> negativ ist.

xxx1 Im Fehlerfall (Rckgabewert < 0) wird kein Alarm ausgege

ben. Der Anwender hat im Programm die Mglichkeit, selbst 
geeignet zu reagieren.

10er-Stelle:

Steuert das Verhalten bei Vorhandensein einer Orientierungsachse 
mit Hirthverzahnung.

Hinweis:
Dieser Parameter wird nur bei der Funktion "Werkzeug ausrichten" 
ausgewertet (d. h., wenn die 100er-Stelle den Wert "0" hat).

xx0x Die Achsposition wird auf die nchstgelegene Position ge

rundet.

xx1x Die Achspositionen werden so gerundet, dass die Abwei

chung des Winkels  von seinem programmierten Wert mini
mal wird.

xx2x Die Achspositionen werden so gerundet, dass der Winkel  
gleich dem grten mglichen Wert wird, der kleiner als der 
programmierte Wert ist ( wird abgerundet).

xx3x Die Achspositionen werden so gerundet, dass der Winkel  
gleich dem kleinsten mglichen Wert wird, der grer als der 
programmierte Wert ist ( wird aufgerundet).

100er-Stelle:

Gibt an, welche Funktion ausgefhrt werden soll, bzw. welche Be
deutung die beiden nachfolgenden Parameter <W1> und <W2> ha
ben.

x0xx Funktion "Werkzeug ausrichten"

Parameter <W1> und <W2> haben folgende Bedeutung:

 <W1> = 

 <W2> =  

Es werden die zugehrigen Winkel der Orientierungsachsen 
berechnet.

x1xx Funktion "Werkzeug ausrichten direkt"

<W1> ist die Positionsvorgabe fr die zweite Orientierung
sachse, <W2> die Positionsvorgabe fr die dritte Orientie
rungsachse einer 6-Achstransformation. Es werden die Po
sition der ersten Orientierungsachse und die Winkel  und  
bestimmt, die mit den beiden Positionsvorgaben kompatibel 
sind.

Falls kein Fehler auftritt, werden in der Systemvariablen 
$P_ORI_POS[<n>, <m>] immer zwei Lsungen ausgege
ben. Dabei verweist der erste Index <n> (0 oder 1) auf die 
Lsung und der zweite Index <m> (0 ... 2) auf die Orientie
rungsachse:

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

775

Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

 $P_ORI_POS[0/1, 0]: Position der ersten Orientierung

sachse

 $P_ORI_POS[0/1, 1]: Winkel 

 $P_ORI_POS[0/1, 2]: Winkel 

Es wird berprft, ob die Positionsvorgaben <W1> und <W2> 
mit eventuell aktiven Hirthverzahnungen oder aktiven Soft
warelimits kompatibel sind. Ist das nicht der Fall, wird eine 
entsprechende Fehlernummer zurckgegeben (siehe Para
meter <RetVal>).

Bei einer beliebigen Wahl der beiden Winkel <W1> und 
<W2> liegt die Schneide des Werkzeugs im Allgemeinen 
nicht in der Bearbeitungsebene. Der Winkel , um den die 
Schneide aus der Bearbeitungsebene gedreht ist, darf nicht 
grer sein als der Grenzwert, der durch das Settingdatum 
SD42999 $SC_ORISOLH_INCLINE_TOL bestimmt wird.

1000er-Stelle:

Gibt an, wie die Positionen der Lsungen gegebenenfalls modifiziert 
werden, wenn die 100er-Stelle den Wert "0" hat, d. h. bei der Funktion 
"Werkzeug ausrichten".

0xxx Die berechneten Achspositionen sollen mglichst nahe bei 

den aktuellen Maschinenachspositionen liegen.

1xxx Die berechneten Achspositionen sollen bei Moduloachsen 

mglichst nahe bei der Mitte des Modulobereichs liegen, bei 
anderen Achsen mglichst nahe bei 0. Fr Nicht-Moduloach
sen bedeutet das, dass die Achspositionen auf den Bereich 
-180  +180 reduziert werden.

2xxx Die berechneten Achspositionen sollen unabhngig vom 
Achstyp auf den Bereich -180  +180 reduziert werden.

<W1>:

Erster Winkel

Die Bedeutung ergibt sich aus der 100er-Stelle des Parameters <Cntrl>.

Datentyp:

REAL

<W1>:

Zweiter Winkel

Die Bedeutung ergibt sich aus der 100er-Stelle des Parameters <Cntrl>.

Datentyp:

REAL

Hinweis

Nicht programmierte Parameter haben den Standardwert "0".

776

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Weitere Informationen

Die Anzahl gefundener Lsungen zusammen mit weiteren Statusinformationen beim 
Ausfhren der Funktion ORISOLH knnen ber folgende Systemvariablen gelesen werden:

Systemvariable

Bedeutung

$P_ORI_POS
[<n>, <m>]

Liefert die Winkel der Orientierungsachsen, die sich bei Orientierungsprogrammie
rung ergeben.

<n>:

Index der Lsung 

Wertebereich:

0, 1

<m>:

Index der Orientierungsachse

Wertebereich:

0 ... 2

Die Reihenfolge der Orientierungsachsen (1 ... 3) be
zieht sich auf die Definition der Achsen in 
$NT_ROT_AX_NAME.

Beim Aufruf der Funktion ORISOLH im Modus "Werkzeug ausrichten direkt" ent
halten die Variablen $P_ORI_POS[0/1, 1] und P_ORI_POS[0/1, 2] die zu den beiden 
Lsungen gehrenden Werte der beiden Winkel  und .

Die erste in $P_ORI_POS[<n>, <m>] eingetragene Lsung, d. h. mit dem Index <n> 
= 0, ist immer die, die von der Steuerung gewhlt wird, wenn man die verlangte 
Orientierung direkt anfhrt. Der zweite Index <m> bezieht sich dabei auf die Orien
tierungsachse, d. h. auf $NT_ROT_AX_NAME.

Die in $P_ORI_POS[<n>, <m>] eingetragenen Achspositionen bercksichtigen die 
Offsets, die in $NK_OFF und $NK_OFF_FINE eingetragen sind, d. h., diese Achs
winkel knnen in nachfolgenden Stzen ohne weitere Modifikation dazu verwendet 
werden, die gewnschte Orientierung einzustellen.

Ist eine Rundachse eine Hirthachse, werden die Lsungspositionen auf die nchst
gelegene Raststellung der Hirthverzahnung gerundet. In der Systemvariablen 
$P_ORI_DIFF knnen fr Hirth-verzahnte Rundachsen die Differenzen der Achs
positionen fr die exakten Lsungen und die an die Hirth-Rasterung angepassten 
Lsungen gelesen werden.

$P_ORI_DIFF
[<n>, <m>]

Liefert die Differenz zwischen den exakten und den in $P_ORI_POS zur Verfgung 
gestellten Positionen der Orientierungsachsen, die sich bei Orientierungsprogram
mierung ergeben.

<n>:

Index der Lsung 

Wertebereich:

0, 1

<m>:

Index der Orientierungsachse

Wertebereich:

0 ... 2

Die Reihenfolge der Orientierungsachsen (1 ... 3) be
zieht sich auf die Definition der Achsen in 
$NT_ROT_AX_NAME.

Der Inhalt kann nur dann ungleich Null sein, wenn die Positionen gerastert werden 
(Hirth-Verzahnung), d. h. wenn das Systemdatum $NT_HIRTH_INCR der betreff
enden Achse ungleich Null ist und wenn diese Achse eine manuelle Rundachse ist.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

777

Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Systemvariable

Bedeutung

$P_ORI_SOL

Werden bei einer Orientierungstransformation mit mehr als einer Orientierungsach
se die Achswinkel berechnet, die zu einer vorgegebenen Orientierung fhren sollen, 
gibt es im Allgemeinen mehr als eine Lsung. In der Systemvariablen $P_ORI_SOL 
ist die Anzahl der gltigen Lsungen zusammen mit zustzlichen Statusinformatio
nen enthalten.

Der Inhalt von $P_ORI_SOL ist folgendermaen codiert:

Werte < 0

Allgemeine Fehlerzustnde

-1 Fr die aktive Transformation wurden noch keine Lsungen 

berechnet (fehlender Aufruf von ORISOLH).

-2 Es ist keine Transformation aktiv, oder die aktive Transforma
tion ist keine Orientierungstransformation (6-Achs-Transfor
mation), die Positionen zu einer vorgegebenen Orientierungs
programmierung liefern kann.

-4 Die gewnschte Orientierung ist mit der gegebenen Kinematik 

nicht einstellbar.

-5 Beim Aufruf der Funktion ORISOLH im Modus "Werkzeug 

ausrichten direkt" wurde keine Lsung gefunden.

-6 Beim Aufruf der Funktion ORISOLH im Modus "Werkzeug 

ausrichten direkt" ist der Winkel  zu gro.

-7 Beim Aufruf der Funktion ORISOLH im Modus "Werkzeug 

ausrichten direkt" wurde ein Winkel vorgegeben, der aufgrund 
der Hirthverzahnung nicht einstellbar ist.

-8 Die erste Orientierungsachse (Frameachse) darf nicht als Hirt

hachse parametriert sein.

-9 Sowohl die zweite als auch die dritte Rundachse ist als Hirt

hachse parametriert. Es darf nur max. eine der beiden Achsen 
Hirthachse sein.

-10 Es wurde keine Anpassung der Lsung(en) an die Hirthachs

verzahnung gefunden.

Werte > 0

1er-Stelle

Anzahl der mathematisch mglichen Lsungen ohne Bercksichti
gung von Achsgrenzen und evtl. Fehlerbedingungen.

0 Es existiert keine Lsung, d. h., die verlangte Orientierung ist 

nicht einstellbar.

Dieser Fall kann drei verschiedene Ursachen haben:

 Die verlangte Orientierung ist aufgrund der Maschinenki
nematik (nicht rechtwinkelig angeordnete Orientierungs
achsen) auch bei beliebigem Verfahrbereich der Orientie
rungsachsen prinzipiell nicht erreichbar. In diesem Fall 
sind die 10er- und 100er-Stelle von $P_ORI_SOL beide 
null, die den Orientierungsachsen zugeordneten Status
variablen $P_ORI_STAT enthalten den Wert "-4".

 Die berechneten Lsungen sind nicht erreichbar, weil die
se die Achsbegrenzungen verletzen wrden. Die Positio
nen der Orientierungsachsen, die sich ohne Achsbegren
zungen ergeben wrden, knnen in $P_ORI_POS gelesen 
werden.

 Beim Aufruf der Funktion ORISOLH im Modus "Werkzeug 
ausrichten direkt" wurden Achspositionen derart vorgege
ben, dass entweder der Orientierungsvektor oder der Ori

778

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Systemvariable

Bedeutung

Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

entierungsnormalenvektor des Werkzeugs parallel zur ers
ten Orientierungsachse, deren Position berechnet werden 
soll, ausgerichtet ist. Die Position dieser Achse ist in die
sen Fllen nicht definiert.

1 Es existiert eine Lsung.

Dieser Fall kann drei verschiedene Ursachen haben:

 Es gibt aufgrund der vorgegebenen Orientierung und der 
Maschinenkinematik auch ohne Bercksichtigung der 
Achsgrenzen nur eine Lsung (mathematisch gesehen 
handelt es sich um zwei zusammenfallende Lsungen). 
Dieser Fall tritt bei nicht rechtwinkeligen Kinematiken am 
Rand des Orientierungsbereichs auf. $P_ORI_POS ent
hlt beide (identischen) Lsungen.

 Es gibt nur eine Lsung, weil eine zweite Lsung aufgrund 
verletzter Achsgrenzen ungltig ist. Die gltige Lsung ist 
dann immer die erste Lsung in $P_ORI_POS. Die zweite 
Lsung, die sich ohne Bercksichtigung der Achsgrenzen 
ergeben wrde, ist in $P_ORI_POS ebenfalls lesbar.

 Beim Aufruf der Funktion ORISOLH im Modus "Werkzeug 
ausrichten direkt" ist das der Normalfall. Zu den vorgege
benen Achspositionen zweier Orientierungsachsen gibt es 
im Allgemeinen nur eine gltige Position der zu berechn
enden fehlenden Orientierungsachse.

2 Es existieren zwei Lsungen.

8 Es existieren unendlich viele Lsungen d. h. die Position einer 
Orientierungsachse (der Polachse) ist beliebig. Von den bei
den mglichen Stellungen der anderen Achse(n) ist jedoch 
eine aufgrund verletzter Achsgrenzen ausgeschlossen.

9 Es existieren unendlich viele Lsungen, d. h. die Position einer 
Orientierungsachse (der Polachse) ist unbestimmt. Die unbe
stimmte Achse kann aus der 100er-Stelle oder aus der Sys
temvariablen $P_ORI_STAT ermittelt werden.

Werte > 0

10er-Stelle

Bitcodierte Anzeige fr verletzte Achsgrenzen. Die genaue Fehlerur
sache kann aus der Systemvariablen $P_ORI_STAT ermittelt wer
den.

Bit 0 (Wert 10):

Bit 1 (Wert 20):

Bit 2 (Wert 40):

Fr mindestens eine Lsung ist mindestens eine 
Achsgrenze der 1. Orientierungsachse verletzt.

Fr mindestens eine Lsung ist mindestens eine 
Achsgrenze der 2. Orientierungsachse verletzt.

Fr mindestens eine Lsung ist mindestens eine 
Achsgrenze der 3. Orientierungsachse verletzt.

Werte > 0

100er-Stelle

Bitcodierte Anzeige fr nicht-definierte Achspositionen (kann nur auf
treten, wenn es unendlich viele Lsungen gibt, d. h., wenn die 1er-
Stelle gleich "9" ist).

Bit 0 (Wert 100): Die Position der 1. Orientierungsachse ist nicht 

definiert.

Bit 1 (Wert 200): Die Position der 2. Orientierungsachse ist nicht 

definiert.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

779

Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Systemvariable

Bedeutung

Bit 2 (Wert 400): Die Position der 3. Orientierungsachse ist nicht 

definiert.

Die Bezeichnungen 1., 2. und 3. Orientierungsachse beziehen sich auf die Definition 
der Achsen in $NT_ROT_AX_NAME.

780

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Systemvariable

Bedeutung

$P_ORI_STAT
[<n>]

Liefert fr jede der maximal 3 Orientierungsachsen den Status nach Aufruf von 
ORISOLH.

<n>:

Index der Orientierungsachse

(entspricht dem Index der betreffenden Orientierungsachse in 
$NT_ROT_AX_NAME)

Wertebereich:

0 ... 2

Die Reihenfolge der Orientierungsachsen (1 ... 3) be
zieht sich auf die Definition der Achsen in 
$NT_ROT_AX_NAME.

Der Inhalt von $P_ORI_STAT ist folgendermaen codiert:

Werte < 0

Allgemeine Fehlerzustnde

-1 Der Status ist nicht definiert (fehlender Aufruf von ORISOLH).

-2 Es ist keine Transformation aktiv, oder die aktive Transforma
tion ist keine Orientierungstransformation (6-Achs-Transfor
mation), die Positionen zu einer vorgegebenen Orientierungs
programmierung liefern kann.

-3 Die Achse ist in der aktiven Transformation nicht enthalten.

-4 Die Position der Achse kann nicht berechnet werden, weil mit 
der gegebenen Kinematik die verlangte Orientierung auch bei 
beliebig angenommenem Verfahrbereich der Achse nicht er
reichbar ist. 

-5 Beim Aufruf der Funktion ORISOLH im Modus "Werkzeug 

ausrichten direkt" wurden Achspositionen derart vorgegeben, 
dass entweder der Orientierungsvektor oder der Orientie
rungsnormalenvektor des Werkzeugs parallel zur ersten Ori
entierungsachse, deren Position berechnet werden soll, aus
gerichtet ist. Die Position dieser Achse ist in diesen Fllen 
nicht definiert.

-6 Beim Aufruf der Funktion ORISOLH im Modus "Werkzeug 

ausrichten direkt" ist der Winkel  zu gro.

-7 Beim Aufruf der Funktion ORISOLH im Modus "Werkzeug 

ausrichten direkt" wurde ein Winkel vorgegeben, der aufgrund 
der Hirthverzahnung nicht einstellbar ist.

-8 Die erste Orientierungsachse (Frameachse) darf nicht als Hirt

hachse parametriert sein.

-9 Sowohl die zweite als auch die dritte Rundachse ist als Hirt

hachse parametriert. Es darf nur max. eine der beiden Achsen 
Hirthachse sein.

-10 Es wurde keine Anpassung der Lsung(en) an die Hirthachs

verzahnung gefunden.

Werte > 0

Bitcodierte Anzeige fr verletzte Achsgrenzen der ersten Lsung. 

1er-Stelle

Bit 0 (Wert 1):

Die erste Lsung verletzt die untere Achsgrenze. 

Bit 1 (Wert 2):

Die erste Lsung verletzt die obere Achsgrenze.

Werte > 0

Bitcodierte Anzeige fr verletzte Achsgrenzen der zweiten Lsung.

10er-Stelle

Bit 0 (Wert 10):

Die zweite Lsung verletzt die untere Achsgren
ze.

Bit 1 (Wert 20):

Die zweite Lsung verletzt die obere Achsgren
ze.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

781

 
Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Systemvariable

Bedeutung

Werte > 0

Anzeige einer nicht-definierten Achsposition.

100er-Stelle

Bit 0 (Wert 100): Die Position der Orientierungsachse ist nicht de
finiert, d. h., die verlangte Orientierung wird mit 
jeder beliebigen Einstellung der Rundachse er
reicht (Polstellung). Diese Information ist auch in 
der Systemvariablen $P_ORI_SOL enthalten.

Von den Fehlernummern, die eine Verletzung der Achsgrenzen anzeigen, knnen 
mehrere gleichzeitig auftreten. Da bei der Verletzung einer Achsgrenze versucht 
wird, durch Addition bzw. Subtraktion von Vielfachen von 360 eine Position inner
halb der erlaubten Achsgrenzen zu erreichen, ist  falls dies nicht mglich ist  nicht 
eindeutig definiert, ob die untere oder die obere Achsgrenze verletzt wurde.

Gibt es fr die verlangte Orientierung keine Lsung ($P_ORI_SOL = 0), ist der 
Status der in der Transformation enthaltenen Orientierungsachsen "0".

Hinweis

$NT_ROT_AX_NAME 

Mit dieser Systemvariablen wird auf maximal 3 Achsen verwiesen, die zur Einstellung der 
Orientierung dienen. Sie enthlt die Namen der Kettenglieder ($NK_NAME), die diejenigen 
Maschinenachsen (Rundachsen) definieren, die die Orientierungsbewegungen ausfhren 
mssen, die sich aus einer kinematischen Transformation ergeben. Die Reihenfolge, in der die 
maximal drei Rundachsen in dieser Systemvariablen enthalten sind, ist fr die 
Maschinenkinematik bedeutungslos, da diese aus der Struktur der kinematischen Ketten 
abgeleitet wird. Da sie aber die Reihenfolge definiert, mit der andere Variablen auf die 
Rundachsen zugreifen, muss die Reihenfolge der Orientierungsachsen in 
$NT_ROT_AX_NAME mit der Kinematikbeschreibung bereinstimmen.  

Hinweis

Statusinformationen

Die Statusinformationen, die z. B. anzeigen, dass eine Orientierung nicht erreichbar ist oder 
nur unter Verletzung der relevanten Achsgrenzen erreichbar wre, fhren nicht zu einem NC-
Alarm. Es liegt in der Verantwortung des Anwenders, auf die genannten Bedingungen geeignet 
zu reagieren.

782

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

3.13.12.2

Modifikation der Korrekturdaten bei drehbaren Werkzeugen aktivieren (CUTMOD, 
CUTMODK)

Die Modifikation der Korrekturdaten bei drehbaren Werkzeugen wird im NC-Programm ber 
den Sprachbefehl CUTMOD (in Verbindung mit orientierbaren Werkzeugtrgern) bzw. 
CUTMODK (fr Orientierungstransformationen, die mittels kinematischer Ketten definiert 
wurden) aktiviert.

Hinweis

Da orientierbare Werkzugtrger und Orientierungstransformationen, die mittels kinematischer 
Ketten definiert wurden, nicht gleichzeitig aktiv sein knnen, kommt es nicht zu Konflikten 
zwischen beiden Varianten.

Syntax

CUTMOD = <Value> 

bzw.

CUTMODK = <Command> 

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

783

Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Bedeutung

CUTMOD:

Funktionsaufruf in Verbindung mit orientierbaren Werkzeugtrgern

<Value>:

Zugewiesener Wert

Datentyp:

INT

Wert:

0 Die Funktion ist deaktiviert.

Die von den Systemvariablen $P_AD... gelieferten Werte sind 
gleich den korrespondierenden Werkzeugparametern.

> 0 Die Funktion wird aktiviert, falls ein orientierbarer Werkzeugtrger 
mit der angegebenen Nummer aktiv ist, d. h., die Aktivierung ist an 
einen bestimmten orientierbaren Werkzeugtrger gebunden.

Die von den Systemvariablen $P_AD... gelieferten Werte sind ge
genber den korrespondierenden Werkzeugparametern abhngig 
von der aktiven Drehung gegebenenfalls modifiziert.

Die Deaktivierung des bezeichneten orientierbaren Werkzeugtr
gers deaktiviert die Funktion temporr, die Aktivierung eines an
deren orientierbaren Werkzeugtrgers deaktiviert sie permanent. 
Im ersten Fall wird die Funktion deshalb bei erneuter Anwahl des 
gleichen orientierbaren Werkzeugtrgers wieder aktiviert, im zwei
ten Fall ist eine erneute Anwahl notwendig, auch dann, wenn zu 
einem spteren Zeitpunkt der orientierbare Werkzeugtrger mit 
der angegebenen Nummer erneut aktiviert wird.

Die Funktion wird durch Reset nicht beeinflusst.

-1 Die Funktion wird immer aktiviert, falls ein orientierbarer Werk

zeugtrger aktiv ist.

Beim Wechsel des Werkzeugtrgers oder bei dessen Abwahl und 
einer spteren erneuten Anwahl muss CUTMOD nicht erneut ge
setzt werden.

-2 Die Funktion wird immer aktiviert, falls ein orientierbarer Werk

zeugtrger aktiv ist, dessen Nummer gleich der des aktuell aktiven 
orientierbaren Werkzeugtrgers ist.

Ist kein orientierbarer Werkzeugtrger aktiv, ist das gleichbedeu
tend mit CUTMOD=0.

Ist ein orientierbarer Werkzeugtrger aktiv, ist das gleichbedeu
tend mit der unmittelbaren Angabe der aktuellen Werkzeugtrger
nummer.

< -2 Werte kleiner 2 werden ignoriert, d. h., dieser Fall wird so behan

delt, als wre CUTMOD nicht programmiert.

Hinweis:
Dieser Wertebereich sollte nicht verwendet werden, weil er fr 
eventuelle sptere Erweiterungen reserviert ist.

CUTMODK:

Funktionsaufruf in Verbindung mit Orientierungstransformationen, die mittels kinemati
scher Ketten definiert wurden

784

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

<Command>: Zugewiesenes Kommando

Datentyp:

STRING

Wert:

"NEW" 

Es werden die fr die "Modifikation der Korrekturdaten" re
levanten Zustnde einer aktiven mit kinematischen Ketten 
definierten Transformation, der Name der Transformation 
und der aktuelle Konturframe abgespeichert.

Hinweis:
Dieses Kommando ist nur zulssig, wenn eine geeignete 
Transformation (TRAORI_DYN, TRAORI_STAT oder 
TRAANG_K) aktiv ist.

"OFF" 

Schaltet die aktive "Modifikation der Korrekturdaten" aus. 
Die zuvor mit "NEW abgelegten Daten bleiben erhalten.

"ON" 

Hinweis:
Dieses Kommando ist auch zulssig, wenn CUTMODK nicht 
aktiv ist. Es bleibt dann ohne Auswirkung. Ein eventuell vor
handener Datensatz zur "Modifikation der Korrekturdaten" 
bleibt erhalten.

Mit diesem Kommando wird die "Modifikation der Korrektur
daten" mit einem zuvor mit dem Kommando "NEW" gespei
cherten Datensatz erneut aktiviert.

Ist bei Ausfhrung dieses Kommandos eine Transformation 
mit dem Namen des gespeicherten Datensatzes aktiv, wird 
die "Modifikation der Korrekturdaten" sofort wirksam. An
dernfalls wird die Aktivierung verzgert, bis eine aktive 
Transformation aktiviert wird.

"CLEAR" 

Schaltet wie das Kommando "OFF" die "Modifikation der 
Korrekturdaten" aus und lscht zustzlich den abgespei
cherten Datensatz.

Hinweis:
Dieses Kommando ist auch zulssig, wenn CUTMODK nicht 
aktiv ist.

Hinweis

SD42984 $SC_CUTDIRMOD 

Die ber den Befehl CUTMOD bzw. CUTMODK aktivierbare Funktion ersetzt die ber das 
Settingdatum SD42984 $SC_CUTDIRMOD aktivierbare Funktion. Diese Funktion steht jedoch 
weiterhin unverndert zur Verfgung. Da es aber nicht sinnvoll ist, beide Funktionen parallel zu 
nutzen, kann sie nur aktiviert werden, wenn CUTMOD gleich Null und CUTMODK gleich dem 
Nullstring ist.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

785

Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Weitere Informationen

Modifizierte Korrekturdaten lesen

Die modifizierten Korrekturdaten werden in den folgenden Systemvariablen und BTSS-
Variablen zur Verfgung gestellt:

Bedeutung

Schneidenlage

Halterwinkel

Schnittrichtung

Freiwinkel

Systemvariable

$P_AD[2] 

$P_AD[10]

$P_AD[11]

$P_AD[24]

BTSS-Variable

cuttEdgeParam2

cuttEdgeParam10

cuttEdgeParam11

cuttEdgeParam24

Die Daten sind gegenber den korrespondierenden Werkzeugparametern 
($TC_DP2[..., ...], ...) immer dann modifiziert, wenn die Funktion "Modifikation der 
Korrekturdaten bei drehbaren Werkzeugen" mit dem Befehl CUTMOD bzw. CUTMODK aktiviert 
wurde und das Werkzeug durch einen orientierbaren Werkzeugtrger bzw. eine geeignete 
Orientierungstransformation gedreht wurde.

Weitere funktionsrelevante Systemvariablen

Systemvariable

Bedeutung

$P_CUTMOD_ANG /

$AC_CUTMOD_ANG

Liefert den Winkel, um den ein Werkzeug in der aktiven Bearbeitungsebene 
gedreht wurde und der der Ermittlung modifizierter Schneidendaten bei den 
Funktionen CUTMOD bzw. CUTMODK zugrunde liegt.

$P_CUTMOD /

$AC_CUTMOD

$P_CUTMODK /

$AC_CUTMODK

Liest den aktuell gltigen Wert, der zuletzt mit dem Befehl CUTMOD program
miert wurde (Nummer des Werkzeugtrgers, fr den die Modifikation der Kor
rekturdaten aktiviert werden soll).

War der letzte programmierte Wert CUTMOD=-2 (Aktivierung mit dem aktuell 
aktiven orientierbaren Werkzeugtrger), wird in der Systemvariablen nicht der 
Wert "-2", sondern die Nummer des zum Zeitpunkt der Programmierung akti
ven orientierbaren Werkzeugtrgers zurckgeliefert.

Liest den Namen der Transformation, unter dem der aktuell gltige Datensatz 
zur "Modifikation der Korrekturdaten" angelegt wurde.

786

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Systemvariable

Bedeutung

$P_CUT_INV /

$AC_CUT_INV

Liefert den Wert TRUE, wenn das Werkzeug so gedreht ist, dass die Spindel
drehrichtung invertiert werden muss. Dazu mssen in dem Satz, auf den sich 
die jeweilige Leseoperation bezieht, die folgenden vier Bedingungen erfllt 
sein:

1. Es ist ein Dreh- oder Schleifwerkzeug aktiv
(Werkzeugtypen 400 bis 599 und / oder 
SD42950 $SC_TOOL_LENGTH_TYPE = 2).

2. Die Modifikation der Korrekturdaten wurde mit dem Befehl CUTMOD 

bzw. CUTMODK aktiviert.

3. Es ist ein orientierbarer Werkzeugtrger bzw. eine mit kinematischen Ket
ten definierte Orientierungstransformation aktiv, der/die durch den Befehl 
CUTMOD bzw. CUTMODK selektiert wurde.

4. Das Werkzeug wird durch den orientierbaren Werkzeugtrger bzw. durch 
die kinematische Orientierungstransformation so gedreht, dass die resul
tierende Normale der Werkzeugschneide gegenber der Ausgangslage 
um mehr als 90 (typischerweise 180) gedreht ist.

Ist mindestens eine der genannten vier Bedingungen nicht erfllt, liefert die 
Variable den Wert FALSE. Fr Werkzeuge, deren Schneidenlage nicht defi
niert ist, ist der Wert der Variablen immer FALSE.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

787

Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Systemvariable

Bedeutung

$P_CUTMOD_ERR

Fehlerzustand nach dem letzten Aufruf der CUTMOD-Funktion

Die CUTMOD-Funktion kann auch implizit bei Werkzeugwechsel aufgerufen 
werden. Die Variable wird bei Reset auf null zurckgesetzt. Sie wird bei jedem 
Werkzeugwechsel zunchst zurckgesetzt und gegebenenfalls neu beschrie
ben.

Die Variable ist Bit-codiert. Die Bits haben folgenden Bedeutungen:

Bit 0:

Fr das aktive Werkzeug ist keine gltige Schnittrichtung definiert.

Bit 1: Die Schneidenwinkel (Freiwinkel und Halterwinkel) des aktiven Werk

zeugs sind beide null.

Bit 2: Der Freiwinkel des aktiven Werkzeugs hat einen unzulssigen Wert 

(< 0 oder > 180).

Bit 3: Der Halterwinkel des aktiven Werkzeugs hat einen unzulssigen Wert 

(< 0 oder > 90).

Bit 4: Der Plattenwinkel des aktiven Werkzeugs hat einen unzulssigen 

Wert (< 0 oder > 90).

Bit 5: Die Kombination Schneidenlage - Halterwinkel des aktiven Werk

zeugs ist unzulssig (bei den Schneidenlagen 1 bis 4 muss der Hal
terwinkel  90 sein, bei den Schneidenlagen 5 bis 8 muss er  90 
sein).

Bit 6: Unzulssige Drehung des aktiven Werkzeugs.

Das Werkzeug wurde um  90 (mit einer Toleranz von etwa 1) aus 
der aktiven Bearbeitungsebene herausgedreht. Dadurch ist die 
Schneidenlage in der Bearbeitungsebene nicht mehr definiert.

Bit 7: Die Schneidplatte liegt nicht in der Bearbeitungsebene, und der Win
kel zwischen Schneidplatte und Bearbeitungsebene berschreitet die 
mit dem Settingdatum SD42998 $SC_CUTMOD_PLANE_TOL vor
gegebene Obergrenze.

Bit 8: Die Schneidplatte liegt nicht in der Bearbeitungsebene. Der Betrag 

des Winkels  ist grer als 1. Der Winkel  ist der Drehwinkel um die 
Koordinatenachse, die sowohl auf der Drehachse des Winkels  als 
auch auf der Drehachse des Winkels  senkrecht steht (bei G18 die X-
Achse).

$P_...: Vorlaufvariablen

$AC_...: Hauptlaufvariablen

Alle Hauptlaufvariablen knnen in Synchronaktionen gelesen werden. Ein Lesezugriff aus dem 
Vorlauf generiert einen Vorlaufstopp.

Ebenenwechsel

Fr die Bestimmung von modifizierter Schneidenlage, Schnittrichtung und Halter- bzw. 
Freiwinkel ist die Betrachtung der Schneide in der jeweils aktiven Ebene (G17 - G19) 
magebend.

Enthlt jedoch das Settingdatum SD42940 $SC_TOOL_LENGTH_CONST (Wechsel der 
Werkzeuglngenkomponenten bei Ebenenwechsel) einen gltigen Wert ungleich Null (plus 
oder minus 17, 18 oder 19), so bestimmt dessen Inhalt die Ebene, in der die relevanten Gren 
betrachtet werden.

Diese Vorrangregel der Settingdaten ber den G-Code kann durch Setzten von Bit 18 des 
Maschinendatums $MC_TOOL_PARAMETER_DEF_MASK auer Kraft gesetzt werden. D. h., 
wenn dieses Bit gesetzt ist, gilt immer die mit dem G-Befehl der Gruppe 6 definierte Ebene.

788

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Wirksamkeit der modifizierten Schneidendaten

Die modifizierte Schneidenlage und der modifizierte Schneidenbezugspunkt werden bei 
Programmierung auch fr ein bereits aktives Werkzeug sofort wirksam. Eine 
Werkzeugneuanwahl ist dazu nicht notwendig.

Beispiel

Bei einem Werkzeug mit der Schneidenlage 3 und einem orientierbaren Werkzeugtrger, der 
das Werkzeug um die B-Achse drehen kann, soll mit Hilfe des CUTMOD-Befehls die 
Schneidenlage nach einer Werkzeugdrehung modifiziert werden.

S:

P:

Schneidenmittelpunkt

Schneidenbezugspunkt

SL:

Schneidenlage

Programmcode

N10 $TC_DP1[1,1]=500

N20 $TC_DP2[1,1]=3

N30 $TC_DP3[1,1]=12

N40 $TC_DP4[1,1]=1

N50 $TC_DP6[1,1]=6

N60 $TC_DP10[1,1]=110

N70 $TC_DP11[1,1]=3

N80 $TC_DP24[1,1]=25

Kommentar

; Schneidenlage

; Halterwinkel

; Schnittrichtung

; Freiwinkel

N90 $TC_CARR7[2]=0 $TC_CARR8[2]=1 $TC_CARR9[2]=0

; BAchse

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

789

(cid:54)(cid:54)(cid:47)(cid:22)(cid:51)(cid:22)(cid:19)(cid:114)(cid:21)(cid:24)(cid:114)(cid:20)(cid:20)(cid:19)(cid:114)(cid:14)(cid:59)(cid:14)(cid:61)(cid:37) 
 
 
 
 
 
Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Programmcode

N100 $TC_CARR10[2]=0 $TC_CARR11[2]=0 
$TC_CARR12[2]=1

Kommentar

; CAchse

N110 $TC_CARR13[2]=0

N120 $TC_CARR14[2]=0

N130 $TC_CARR21[2]=X

N140 $TC_CARR22[2]=X

N150 $TC_CARR23[2]="M"

N160 TCOABS CUTMOD=0

N170 G18 T1 D1 TCARR=2

N180 X0 Y0 Z0 F10000

N190 $TC_CARR13[2]=30

N200 TCARR=2

N210 X0 Y0 Z0

N220 G42 Z10

N230 Z20

N240 X10

N250 G40 X20 Z0

N260 CUTMOD=2 X0 Y0 Z0

N270 G42 Z10

N280 Z20

N290 X10

N300 G40 X20 Z0

N310 M30

; X        Y         Z

; 12.000   0.000     1.000

; 10.892   0.000    -5.134

;  8.696   0.000   17.330

;  8.696   0.000   21.330

; 12.696   0.000   21.330

; 30.892   0.000    5.134

;  8.696   0.000    7.330

;  8.696   0.000   17.330

;  8.696   0.000   21.330

; 12.696   0.000   21.330

; 28.696   0.000    7.330

Die Zahlenwerte in den Kommentaren geben jeweils die Satzendpositionen in Maschinenkoordinaten 
(MKS) in der Reihenfolge X  Y  Z an.

Erluterungen

In Satz N180 wird zunchst das Werkzeug bei CUTMOD=0 und nicht gedrehtem orientierbaren 
Werkzeugtrger angewhlt. Da alle Offsetvektoren des orientierbaren Werkzeugtrgers 0 
sind, wird die Position angefahren, die den in $TC_DP3[1,1] und $TC_DP4[1,1] 
angegebenen Werkzeuglngen entspricht.

In Satz N200 wird der orientierbare Werkzeugtrger mit einer Drehung von 30 um die B-Achse 
aktiviert. Da die Schneidenlage wegen CUTMOD=0 nicht modifiziert wird, ist nach wie vor der 
alte Schneidenbezugspunkt magebend. Deshalb wird in Satz N210 die Position angefahren, 
die den alten Schneidenbezugspunkt im Nullpunkt beibehlt (d. h. der Vektor (1, 12) wird in der 
Z/X-Ebene um 30 gedreht).

In Satz N260 ist im Unterschied zu Satz N200 CUTMOD=2 wirksam. Aufgrund der Drehung des 
orientierbaren Werkzeugtrgers wird die modifizierte Schneidenlage 8. Daraus folgen auch 
abweichende Achspositionen.

In den Stzen N220 bzw. N270 wird jeweils die Werkzeugradiuskorrektur (WRK) aktiviert. Die 
unterschiedliche Schneidenlage in beiden Programmstcken hat auf die Endpositionen der 

790

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Stze, in denen die WRK aktiv ist, keinen Einfluss, die entsprechenden Positionen sind 
deshalb identisch. Erst in den Abwahlstzen N260 bzw. N300 wirken sich die 
unterschiedlichen Schneidenlagen wieder aus.

3.13.13

Mit Werkzeugumgebungen arbeiten

bersicht Funktionen

 Werkzeugumgebung speichern (TOOLENV) (Seite 791)

 Werkzeugumgebung lschen (DELTOOLENV) (Seite 794)

 T-, D- und DL-Nummer lesen (GETTENV) (Seite 795)

 Werkzeuglngen bzw. -lngenkomponenten lesen (GETTCOR) (Seite 796)

 Werkzeugkomponenten ndern (SETTCOR) (Seite 803)

bersicht Systemvariablen

 Informationen zu gespeicherten Werkzeugumgebungen lesen ($P_TOOLENVN, 

($P_TOOLENV) (Seite 796)

3.13.13.1

Werkzeugumgebung speichern (TOOLENV)

Die Funktion TOOLENV dient dazu, alle aktuellen Zustnde zu speichern, die fr die 
Bewertung der im Speicher abgelegten Werkzeugdaten von Bedeutung sind.

Das sind im Einzelnen die folgenden Daten:

 Der aktive G-Befehl der Gruppe:

 6 (G17, G18, G19)

 56 (TOWSTD, TOWMCS, TOWWCS, TOWBCS, TOWTCS, TOWKCS)

 Die aktive Planachse

 Die Maschinendaten:

 MD18112 $MN_MM_KIND_OF_SUMCORR (Eigenschaften der Summenkorrekturen 

im TO-Bereich)

 MD20360 $MC_TOOL_PARAMETER_DEF_MASK (Definition der WZ-Parameter)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

791

Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

 Die Settingdaten:

 SD42900 $SC_MIRROR_TOOL_LENGTH (Vorzeichenwechsel Werkzeuglnge beim 

Spiegeln)

 SD42910 $SC_MIRROR_TOOL_WEAR (Vorzeichenwechsel Werkzeugverschlei 

beim Spiegeln)

 SD42920 $SC_WEAR_SIGN_CUTPOS (Vorzeichen des Verschleies bei Werkzeugen 

mit Schneidenanlagen)

 SD42930 $SC_WEAR_SIGN (Vorzeichen des Verschleies)

 SD42935 $SC_WEAR_TRANSFORM (Transformationen fr Werkzeugkomponenten)

 SD42940 $SC_LENGTH_CONST (Wechsel der Werkzeuglngenkomponenten bei 

Ebenenwechsel)

 SD42942 $SC_TOOL_LENGTH_CONST_T (Wechsel der 

Werkzeuglngenkomponenten fr Drehwerkzeuge bei Ebenenwechsel)

 SD42950 $SC_TOOL_LENGTH_TYPE (Zuordnung der Werkzeuglngenkomponenten 

unabhngig vom Werkzeugtyp)

 SD42954 $SC_TOOL_ORI_CONST_M (Wechsel der 

Werkzeugorientierungskomponenten fr Frswerkzeuge bei Ebenenwechsel)

 SD42956 $SC_TOOL_ORI_CONST_T (Wechsel der 

Werkzeugorientierungskomponenten fr Drehwerkzeuge bei Ebenenwechsel)

 Der Orientierungsanteil des aktuellen Gesamtframes (Drehungen und Spiegelungen, keine 

Nullpunktverschiebungen oder Skalierungen)

 Der Orientierungsanteil und die resultierende Lnge des aktiven orientierbaren 

Werkzeugtrgers

 Der Orientierungsanteil und die resultierende Lnge einer aktiven Transformation

Auer den genannten Daten, die die Umgebung des Werkzeugs beschreiben, werden auch T-
Nummer, D-Nummer und DL-Nummer des aktiven Werkzeugs mit abgelegt, damit spter auf 
dieses Werkzeug in der gleichen Umgebung wie beim Aufruf von TOOLENV zugegriffen 
werden kann, ohne das Werkzeug erneut bezeichnen zu mssen.

Syntax

Bedeutung

<Status> = TOOLENV(<Name>)

TOOLENV(...):

Vordefinierte Funktion zum Speichern einer Werkzeugumgebung

Alleine im Satz:

ja

792

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

<Status>:

Rckgabewert der Funktion. Negative Werte zeigen Fehlerzustnde an.

Datentyp:

INT

Wert:

0

-1

-2

-3

-4

Funktion OK

Kein Speicherplatz fr Werkzeugumgebungen reserviert:

MD18116 $MN_MM_NUM_TOOL_ENV = 0

D. h., die Funktionalitt "Werkzeugumgebungen" ist nicht vor
handen.

Keine freien Speicherpltze fr Werkzeugumgebungen mehr 
vorhanden.

Nullstring als Name einer Werkzeugumgebung ist nicht zuls
sig.

Kein Parameter (<Name>) angegeben.

Name, unter dem der aktuelle Datensatz abgelegt werden soll

Ist ein Datensatz mit dem gleichen Namen bereits vorhanden, wird dieser ber
schrieben. Der Status ist in diesem Fall "0".

Datentyp:

STRING

Parameter

1 <Name>:

3.13.13.2

Werkzeugumgebung speichern (TOOLENV): Weitere Informationen

Weitere Informationen

Basisma/Adapterma - Werkzeuglngenkorrektur

Die Adapterlnge oder das Basisma (schneidenspezifische Parameter $TC_DP21, 
$TC_DP22 und $TC_DP23) gehen in die Berechnung der Werkzeuglnge ein.

Resultierende Lnge von orientierbaren Werkzeugtrgern und Transformationen

Hinweis

Sowohl bei orientierbaren Werkzeugtrgern als auch bei Transformationen gibt es 
Systemvariablen bzw. Maschinendaten, die wie zustzliche Werkzeuglngenkomponenten 
wirken, und die ganz oder teilweise den von diesen ausfhrbaren Drehungen unterworfen 
werden. Die zustzlichen Werkzeuglngenanteile, die sich dadurch ergeben, mssen beim 
Aufruf von TOOLENV mit abgelegt werden, da sie einen Teil der Umgebung bilden, in der das 
Werkzeug eingesetzt wird.

Adaptertransformation

Die Adaptertransformation ist eine Eigenschaft des Werkzeugadapters und damit des 
Gesamtwerkzeugs. Sie ist deshalb nicht Bestandteil einer Werkzeugumgebung, die auf ein 
anderes Werkzeug angewendet werden kann.

Durch das Abspeichern der gesamten fr die Bestimmung der Werkzeuggesamtlnge 
erforderlichen Daten ist es mglich, zu einem spteren Zeitpunkt die effektive Lnge eines 
Werkzeugs zu berechnen, auch wenn es zu diesem Zeitpunkt nicht mehr aktiv ist bzw. wenn 
sich die Umgebungsbedingungen (z. B. G-Befehle oder Settingdaten) gendert haben. 
Ebenso kann die effektive Lnge eines anderen Werkzeugs berechnet werden mit der 

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

793

Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Annahme, es wrde unter den gleichen Bedingungen eingesetzt wie das Werkzeug, fr das der 
Status abgespeichert wurde.

Maximale Anzahl Datenstze fr Werkzeugumgebungen

Mit dem Maschinendatum MD18116 $MN_MM_NUM_TOOL_ENV wird festgelegt, wie viele 
Datenstze zur Beschreibung von Werkzeugumgebungen maximal abgelegt werden knnen. 
Die Daten liegen im TOA-Bereich. Sie bleiben auch beim Ausschalten der Steuerung erhalten.

Eine Datensicherung ist nicht mglich. Das bedeutet, dass diese Daten nicht zwischen 
verschiedenen Steuerungen bertragen werden knnen.

3.13.13.3

Werkzeugumgebung lschen (DELTOOLENV)

Mit der Funktion DELTOOLENV knnen Datenstze zur Beschreibung von 
Werkzeugumgebungen gelscht werden. Lschen bedeutet, dass auf den unter einem 
bestimmten Namen abgelegten Datensatz nicht mehr zugegriffen werden kann (ein 
Zugriffsversuch fhrt zu einem Alarm).

Hinweis

Datenstze knnen nur mit der Funktion DELTOOLENV, durch einen INITIAL.INI-Download 
oder durch einen Kaltstart (NC-Hochlauf mit Standard-Maschinendaten) gelscht werden. Es 
gibt keine weiteren automatischen Lschvorgnge.

Syntax

Bedeutung

<Status> = DELTOOLENV(<Name>)
<Status> = DELTOOLENV()

DELTOOLENV(...): Vordefinierte Funktion zum Lschen einer Werkzeugumgebung

Alleine im Satz:

ja

<Status>:

Rckgabewert der Funktion. Negative Werte zeigen Fehlerzustnde an.

Datentyp:

INT

Wert:

0

-1

-2

Funktion OK

Kein Speicherplatz fr Werkzeugumgebungen reserviert:

MD18116 $MN_MM_NUM_TOOL_ENV = 0

D. h., die Funktionalitt "Werkzeugumgebungen" ist nicht 
vorhanden.

Ein Werkzeugumgebung mit dem angegebenen Namen 
existiert nicht.

Parameter

1 <Name>:

Name des zu lschenden Datensatzes

Datentyp:

STRING

DELTOOLENV():

DELTOOLENV() ohne Angabe eines Namens lscht alle Datenstze zur Be
schreibung von Werkzeugumgebungen

794

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
3.13.13.4

T-, D- und DL-Nummer lesen (GETTENV)

Die Funktion GETTENV dient dazu, die in einer Werkzeugumgebung abgelegte T-, D- und DL-
Nummer zu lesen.

Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Syntax

Bedeutung

<Status> = GETTENV(<Name>, <TDDL>)

GETTENV(...):

Vordefinierte Funktion zum Lesen von T-, D- und DL-Nummern in einem Daten
satz zur Beschreibung einer Werkzeugumgebung

Alleine im Satz:

ja

<Status>:

Rckgabewert der Funktion. Negative Werte zeigen Fehlerzustnde an.

Parameter

1

<Name>:

2

<TDDL>:

Datentyp:

INT

Wert:

0

-1

-2

Funktion OK

Kein Speicherplatz fr Werkzeugumgebungen reserviert:

MD18116 $MN_MM_NUM_TOOL_ENV = 0

D. h., die Funktionalitt "Werkzeugumgebungen" ist nicht vor
handen.

Ein Werkzeugumgebung mit dem angegebenen Namen exis
tiert nicht.

Name der Datensatzes, aus dem die T-, D- und DL-Nummer gelesen werden 
sollen

Datentyp:

STRING

Das Feld dieses Ergebnisparameters enthlt die T-, D- und DL-Nummer des 
Werkzeugs, dessen Werkzeugumgebung im angegebenen Datensatz abgelegt 
ist:

 <TDDL> [0]: T-Nummer

 <TDDL> [1]: D-Nummer

 <TDDL> [2]: DL-Nummer

Datentyp:

INT[3]

GETTENV(,<TDDL>),
GETTENV("",<TDDL>):

Es ist zulssig, beim Aufruf der Funktion GETTENV den ersten Para
meter wegzulassen oder als ersten Parameter den Nullstring zu ber
geben. In diesen beiden Sonderfllen werden in <TDDL> die T-, D- und 
DL-Nummern des aktiven Werkzeugs zurckgeliefert.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

795

 
Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

3.13.13.5

Informationen zu gespeicherten Werkzeugumgebungen lesen ($P_TOOLENVN, 
($P_TOOLENV)

Informationen zu gespeicherten Werkzeugumgebungen sind ber folgende Systemvariablen 
lesbar:

$P_TOOLENVN:

Liefert die Anzahl der mittels TOOLENV definierten (und noch nicht gelschten) 
Datenstze zur Beschreibung von Werkzeugumgebungen

Syntax:

<n> = $P_TOOLENVN 

Bedeutung:

<n>:

Anzahl der definierten Datenstze

Datentyp:

INT

Wertebereich:

0 ... MD18116 
$MN_MM_NUM_TOOL_ENV

Der Zugriff auf diese Systemvariable ist auch dann zulssig, wenn keine Werk
zeugumgebungen mglich sind (MD18116 = 0). In diesem Fall ist der Rckgabe
wert "0".

$P_TOOLENV:

Liefert den Namen des <i>-ten Datensatzes zur Beschreibung einer Werkzeu
gumgebung

Syntax:

<Name> = $P_TOOLENV[<i>] 

Bedeutung:

<Name>:

Name des Datensatzes mit der Nummer <i>

Datentyp:

STRING

<i>:

Nummer des Datensatzes

Datentyp:

INT

Wertebereich:

1 ... $P_TOOLENVN

Die Zuordnung der Nummern zu den Datenstzen ist nicht fix, sondern kann sich 
durch das Lschen oder Neuanlegen von Datenstzen verndern. Die Numme
rierung der Datenstze wird intern vorgenommen.

Verweist <i> auf einen nicht definierten Datensatz, wird der Nullstring zurckge
liefert.

Ist der Index <i> ungltig, d. h. <i> ist kleiner 1 oder grer als die maximale Anzahl 
Datenstze fr Werkzeugumgebungen (MD18116 $MN_MM_NUM_TOOLENV), 
wird folgender Alarm ausgegeben:

Alarm 17020 "unerlaubter Array-Index1"

3.13.13.6

Werkzeuglngen bzw. -lngenkomponenten lesen (GETTCOR)

Die Funktion GETTCOR dient dazu, Werkzeuglngen bzw. Werkzeuglngenkomponenten 
auszulesen.

Dabei kann durch Parametrierung angegeben werden, welche Komponenten bercksichtigt 
werden sollen, und unter welchen Einsatzbedingungen das Werkzeug betrachtet werden soll.

Syntax

796

<Status> = GETTCOR(<Len>[, <Comp>, <Stat>, <T>, <D>, <DL>])

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Bedeutung

GETTCOR(...):

Vordefinierte Funktion zum Lesen von Werkzeuglngen bzw. Werkzeuglngen
komponenten

Alleine im Satz:

ja

<Status>:

Rckgabewert der Funktion. Negative Werte zeigen Fehlerzustnde an.

Datentyp:

INT

Wert:

0

-1

-2

-3

-4

-5

-6

-7

-8

-9

Funktion OK

Kein Speicherplatz fr Werkzeugumgebungen reserviert:

MD18116 $MN_MM_NUM_TOOL_ENV = 0

D. h., die Funktionalitt "Werkzeugumgebungen" ist nicht vor
handen.

Eine Werkzeugumgebung mit dem unter <Stat> angegebenen 
Namen existiert nicht.

Ungltiger String im Parameter <Comp>.

Ursache dieses Fehlers knnen ungltige oder doppelt pro
grammierte Zeichen sein.

Ungltige T-Nummer

Ungltige D-Nummer

Ungltige DL-Nummer

Zugriffsversuch auf nicht vorhandenes Speichermodul.

Zugriffsversuch auf eine nicht vorhandene Option (z. B. pro
grammierbare Werkzeugorientierung, Werkzeugverwaltung).

Der String <Comp> enthlt einen Doppelpunkt (Kennung fr die 
Spezifikationen eines Koordinatensystems), es folgt jedoch 
kein gltiges Zeichen zur Bezeichnung des verlangten Koordi
natensystems.

Parameter

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

797

 
Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

1

<Len>:

Ergebnisvektor

Datentyp:

REAL[11]

Die Vektorkomponenten sind in folgender Reihenfolge angeordnet:

 <Len> [0]: Werkzeugtyp

 <Len> [1]: Schneidenlage

 <Len> [2]: Abszisse

 <Len> [3]: Ordinate

 <Len> [4]: Applikate

 <Len> [5]: Werkzeugradius

Als Bezugskoordinatensystem fr die Lngenkomponenten gilt das in <Comp> 
und <Stat> definierte Koordinatensystem. Ist in <Comp> kein Koordinatensystem 
definiert, werden die Werkzeuglngen im Maschinenkoordinatensystem darge
stellt.

Die Zuordnung von Abszisse, Ordinate und Applikate zu den Geometrieachsen ist 
abhngig von der in der verwendeten Werkzeugumgebung aktiven Ebene. D. h., 
bei G17 ist die Abszisse parallel zu X, bei G18 zu Z usw.

Die Komponenten <Len>[6] bis <Len>[10] enthalten die zustzlichen Parameter, 
die fr die Geometriebeschreibung eines Werkzeugs angegeben werden knnen 
(z. B. $TC_DP7 bis $TC_DP11 fr die Geometrie bzw. die entsprechenden Kom
ponenten fr Verschlei bzw. Summen- und Einrichtekorrekturen).

Diese 5 zustzlichen Elemente und der Werkzeugradius sind nur fr die Kompo
nenten E, G, S und W definiert. Deren Bewertung hngt nicht von <Stat> ab. Die 
entsprechenden Werte in <Len>[6] bis <Len>[10] knnen deshalb nur dann un
gleich null sein, wenn an der Werkzeuglngenberechnung mindestens eine der 
vier genannten Komponenten beteiligt ist. Die brigen Komponenten haben kei
nen Einfluss auf das Ergebnis. Die Maangaben beziehen sich auf das Grund
system der Steuerung (inch bzw. metrisch).

798

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

2

<Comp>:

Werkzeuglngenkomponenten (optional)

Datentyp:

STRING

Die Zeichenkette besteht aus zwei Teilstrings, die durch einen Doppelpunkt von
einander getrennt sind.

Allg. Form: "<SubStr_1> [: <SubStr_2]"

<SubStr_1>:

Der erste Teilstring bezeichnet die Werkzeuglngenkomponen
ten, die bei der Werkzeuglngenberechnung bercksichtigt 
werden sollen.

Die Reihenfolge der Zeichen im Teilstring sowie deren Schreib
weise (gro oder klein) ist beliebig. Zwischen den Zeichen kn
nen beliebig viele Leerzeichen oder Tabulatorzeichen (white 
spaces) eingefgt werden. 

Hinweis:
Die Zeichen im Teilstring drfen nicht doppelt programmiert 
werden!

Zeichen: 

- 

Minuszeichen (nur als erstes Zeichen zuls
sig!)

Es wird die gesamte Werkzeuglnge abzglich 
der Komponenten berechnet, die im nachfol
genden String spezifiziert sind.

C  Adapterma oder Basisma (diejenige der bei
den alternativ existierenden Komponenten, die 
fr das verwendete Werkzeug aktiv ist)

E  Einrichtkorrekturen

G  Geometrie

K  Kinematische Transformation (wird nur bei ge
nerischer 3-, 4- und 5-Achs-Transformation 
ausgewertet!)

S  Summenkorrekturen

T  Orientierbarer Werkzeugtrger

W  Verschlei

Ist der erste Teilstring (mit Ausnahme von white spaces) leer, so 
bedeutet das, dass die gesamte Werkzeuglnge unter Berck
sichtigung aller Komponenten berechnet werden soll. Gleiches 
gilt auch dann, wenn der Parameter <Comp> nicht angegeben 
wird.

<Substr_2>:

Der optionale zweite Teilstring bezeichnet das Koordinatensys
tem, in dem die Werkzeuglnge ausgegeben werden soll.

Der zweite Teilstring besteht nur aus einem einzigen relevanten 
Zeichen. 

Zeichen:

A  Einstellbares Koordinatensystem (ACS)

B  Basiskoordinatensystem (BKS)

K  Werkzeugkoordinatensystem der kinemati

schen Transformation (KCS)

M  Maschinenkoordinatensystem (MKS)

T  Werkzeugkoordinatensystem (TCS)

W  Werkstckkoordinatensystem (WKS)

Wird kein Koordinatensystem angegeben, erfolgt die Bewer
tung im Maschinenkoordinatensystem (MKS). Die gegebenen

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

799

 
 
Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

3

<_Stat>:

Name des Datensatzes zur Beschreibung einer Werkzeugumgebung (optional)

falls zu bercksichtigenden Drehungen werden durch die in 
<Stat> definierte Werkzeugumgebung festgelegt.

Datentyp:

STRING

Ist der Wert dieses Parameters der Nullstring ("") oder wird er nicht angeben, wird 
der aktuelle Zustand verwendet. Ist kein Werkzeug spezifiziert, wird das aktuelle 
Werkzeug verwendet.

4

<T>:

Interne T-Nummer des Werkzeugs (optional)

Datentyp:

INT

Ist dieser Parameter nicht angegeben oder ist sein Wert "0", wird das in <Stat> 
abgelegte Werkzeug verwendet.

Ist der Wert dieses Parameters "-1", wird die T-Nummer des aktiven Werkzeugs 
verwendet. Es ist auch zulssig, die Nummer des aktiven Werkzeugs explizit an
zugeben.

Hinweis:
Ist <Stat> nicht angegeben, wird als Werkzeugumgebung der aktuelle Zustand 
verwendet. Da mit <T> = 0 auf die in der Werkzeugumgebung gespeicherte T-
Nummer verwiesen wird, wird in dieser das aktive Werkzeug verwendet, d. h. die 
Angaben <T> = 0 und <T> = -1 sind in diesem Sonderfall gleichbedeutend.

5

<D>:

Schneidennummer des Werkzeugs (optional)

Datentyp:

INT

Ist dieser Parameter nicht angegeben oder ist sein Wert "0", richtet sich die ver
wendetet D-Nummer nach der Quelle der T-Nummer. Wird die T-Nummer aus der 
Werkzeugumgebung verwendet, wird auch die D-Nummer der Werkzeugumge
bung gelesen, andernfalls die des aktuell aktiven Werkzeugs.

6

<DL>:

Nummer der ortsabhngigen Korrektur (optional)

Datentyp:

INT

Ist dieser Parameter nicht angegeben, richtet sich die verwendete DL-Nummer 
nach der Quelle der T-Nummer. Wird die T-Nummer aus der Werkzeugumgebung 
verwendet, wird auch die D-Nummer der Werkzeugumgebung gelesen, andern
falls die des aktuell aktiven Werkzeugs.

Beispiele

GETTCOR(_LEN) 

GETTCOR(_LEN,"CGW:W") 

Berechnet die Werkzeuglnge des aktuellen akti
ven Werkzeugs im Maschinenkoordinatensystem 
unter Bercksichtigung aller Komponenten.

Es wird die Werkzeuglnge bestehend aus Adap
ter- bzw. Basisma, Geometrie und Verschlei fr 
das aktive Werkzeug berechnet. Weitere Anteile 
wie z. B. orientierbarer Werkzeugtrger oder kine
matische Transformationen werden nicht berck
sichtigt. Die Ausgabe erfolgt im Werkstckkoordi
natensystem.

800

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

GETTCOR (_LEN,"-K:B") 

GETTCOR (_LEN,":M","Testenv1",,3) 

Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Es wird die gesamte Werkzeuglnge des aktiven 
Werkzeugs ohne Bercksichtigung der Lngen
komponenten einer eventuell aktiven kinemati
schen Transformation berechnet. Ausgabe im Ba
siskoordinatensystem.

Es wird die gesamte Werkzeuglnge fr das in der 
Werkzeugumgebung mit dem Namen "Testenv1" 
abgelegte Werkzeug im Maschinenkoordinaten
system berechnet. Die Berechnung erfolgt jedoch 
unabhngig von der abgelegten Schneidennum
mer fr die Schneidennummer D3.

Weitere Informationen

Adaptertransformation / Orientierbare Werkzeugtrger / Kinematische Transformation

Die Drehungen und Komponentenvertauschungen, die gegebenenfalls von der 
Adaptertransformation, dem orientierbaren Werkzeugtrger und einer kinematischen 
Transformation ausgefhrt werden, sind Bestandteil der Werkzeugumgebung. Sie werden 
deshalb immer ausgefhrt, auch dann, wenn die entsprechende Lngenkomponente nicht 
bercksichtigt werden soll. Ist das nicht gewnscht, mssen Werkzeugumgebungen definiert 
werden, bei denen die entsprechenden Transformationen nicht aktiv sind. In vielen Fllen 
(nmlich immer dann, wenn an einer Maschine keine Transformationen bzw. orientierbare 
Werkzeugtrger eingesetzt werden), erfllen die abgespeicherten Datenstze fr 
Werkzeugumgebungen diese Bedingungen automatisch, sodass sie vom Anwender nicht 
speziell beachtet werden mssen.

Dreh- und Schleifwerkzeuge: Berechnung der Werkzeuglnge in Abhngigkeit von MD20360 
$MC_TOOL_PARAMETER_DEF_MASK

Wie bei Dreh- und Schleifwerkzeugen der Verschlei bzw. die Werkzeuglnge in einer 
eventuell vorhandenen Durchmesserachse zu bewerten ist, wird festgelegt im 
Maschinendatum:

MD20360 $MC_TOOL_PARAMETER_DEF_MASK (Definition der WZ-Parameter)

Bit

0

1

Wert

Bei Dreh- und Schleifwerkzeugen wird der Verschleiparameter der Planachse als Durchmes
serwert eingerechnet:

= 0 (Default)

nein

= 1

ja

Bei Dreh- und Schleifwerkzeugen wird die Werkzeuglngenkomponente der Planachse als 
Durchmesserwert eingerechnet:

= 0 (Default)

nein

= 1

ja

Sind die betreffenden Bits gesetzt, wird der zugehrige Eintrag mit dem Faktor 0,5 bewertet. 
Diese Bewertung schlgt sich auch in der von GETTCOR gelieferten Werkzeuglnge nieder.

Beispiel:

MD20360 $MC_TOOL_PARAMETER_DEF_MASK = 3

MD20100 $MC_DIAMETER_AX_DEF (Geometrieachse mit Planachsfunktion) = "X" 

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

801

 
Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

X ist Durchmesserachse (Standard-Drehmaschinenkonfiguration)

Programmcode

N30 $TC_DP1[1,1]=500

N40 $TC_DP2[1,1]=2

N50 $TC_DP3[1,1]=3.0

N60 $TC_DP4[1,1]=4.0

N70 $TC_DP5[1,1]=5.0

N80 $TC_DP12[1,1]=12.0

N90 $TC_DP13[1,1]=13.0

N100 $TC_DP14[1,1]=14.0

N110 T1 D1 G18

N120 R1=GETTCOR(_LEN,"GW")

N130 R3=_LEN[2]

N140 R4=_LEN[3]

N150 R5=_LEN[4]

N160 M30

Kommentar

; Geometrie L1

; Verschlei L1

; 17.0 (= 4.0 + 13.0)

; 7.5 (= 0.5 * 3.0 + 0.5 * 12.0)

; 19.0 (= 5.0 + 14.0)

Lngenkomponenten von kinematischer Transformation und orientierbarem Werkzeugtrger

Wird bei der Werkzeuglngenberechnung ein orientierbarer Werkzeugtrger bercksichtigt, 
gehen folgende Vektoren in die Werkzeuglngenberechnung ein:

Typ

M

T

P

Vektoren

l1 und l2

l1, l2 und l3

Werkzeuglnge wird durch den orientierbaren Werkzeugtrger nicht beeinflusst.

Bei der generischen 5-Achstransformation gehen bei den Trafotypen 24 und 56 folgende 
Maschinendaten in die Werkzeuglngenberechnung ein:

Trafotyp

Maschinendaten

24

56

MD24550/24650 $MC_TRAFO5_BASE_TOOL_1/2

MD24560/24660 $MC_TRAFO5_JOINT_OFFSET_1/2

MD24558/24658 $MC_TRAFO5_PART_OFFSET_1/2

MD24550/24650 $MC_TRAFO5_BASE_TOOL_1/2

MD24560/24660 $MC_TRAFO5_JOINT_OFFSET_1/2

Der Trafotyp 56 (bewegliches Werkzeug und bewegliches Werkstck) entspricht dem Typ M 
beim orientierbaren Werkzeugtrger.

Bei dieser 5-Achs-Transformation entspricht in den bisherigen Softwarestnden der Vektor 
MD24560/24660 $MC_TRAFO5_JOINT_OFFSET_1/2 (Vektor des kinematischen Versatzes 
der 1./2. 5-Achstransformation im Kanal) der Summe der beiden Vektoren l1 und l3 beim 
orientierbaren Werkzeugtrger vom Typ M.

Fr die Transformation ist in beiden Fllen nur die Summe relevant. Die Art der 
Zusammensetzung aus den beiden Einzelkomponenten ist bedeutungslos. Bei der 
Berechnung der Werkzeuglnge ist es jedoch von Bedeutung, welcher Anteil dem Werkzeug 
und welcher dem Werkzeugtisch zuzuordnen ist. Deshalb wurde das Maschinendatum 
MD24558/24658 $MC_TRAFO5_JOINT_OFFSET_PART_1/2 (Vektor kinematischer Versatz 

802

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

im Tisch) eingefhrt. Es entspricht dem Vektor l3. Das Maschinendatum MD24560/24660 
$MC_TRAFO5_JOINT_OFFSET_1/2 entspricht jetzt nicht mehr der Summe aus l1 und l3, 
sondern nur noch dem Vektor l1. Ist das Maschinendatum MD24558/24658 
$MC_TRAFO5_JOINT_OFFSET_PART_1/2 gleich null, so ist das Verhalten identisch zum 
bisherigen Verhalten.

Kompatibilitt

Die Funktion GETTCOR dient zusammen mit den Funktionen TOOLENV und SETTCOR unter 
anderem dazu, Teile der Funktionalitt zu ersetzen, die bisher extern in den Messzyklen 
realisiert war.

In den Messzyklen wurde nur ein Teil der Parameter ausgewertet, die letztlich die effektive 
Werkzeuglnge bestimmen. Die genannten Funktionen knnen so parametriert werden, dass 
das Verhalten der Messzyklen bezglich der Werkzeuglngenberechnung reproduziert 
werden kann.

3.13.13.7

Werkzeugkomponenten ndern (SETTCOR)

Die Funktion SETTCOR dient dazu, Werkzeugkomponenten unter Bercksichtigung aller 
Randbedingungen, die in die Bewertung der einzelnen Komponenten eingehen knnen, zu 
verndern.

Hinweis

Zur Terminologie: Wenn im Folgenden im Zusammenhang mit der Werkzeuglnge von 
Werkzeugkomponenten die Rede ist, sind die vektoriell betrachteten Komponenten gemeint, 
aus denen sich die gesamte Werkzeuglnge zusammensetzt (z. B. Geometrie oder 
Verschlei). Eine solche Komponente setzt sich deshalb aus drei Einzelwerten (L1, L2, L3) 
zusammen, die im Folgenden als Koordinatenwerte bezeichnet werden.

Die Werkzeugkomponente "Geometrie" besteht somit beispielsweise aus den drei 
Koordinatenwerten $TC_DP3 bis $TC_DP5.

Syntax

Bedeutung

<Status> = SETTCOR(<CorVal>, <Comp>, [<CorComp>, <CorMode>, <GeoAx>, 
<Stat>, <T>, <D>, <DL>])

SETTCOR(...):

Vordefinierte Funktion zum ndern von Werkzeugkomponenten

Alleine im Satz:

ja

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

803

Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

<Status>:

Rckgabewert der Funktion. Negative Werte zeigen Fehlerzustnde an.

Datentyp:

INT

Wert:

0

-1

-2

-3

-4

-5

-6

-7

-8

-9

Funktion OK

Kein Speicherplatz fr Werkzeugumgebungen reserviert:

MD18116 $MN_MM_NUM_TOOL_ENV = 0

D. h., die Funktionalitt "Werkzeugumgebungen" ist nicht vor
handen.

Eine Werkzeugumgebung mit dem unter <Stat> angegebenen 
Namen existiert nicht.

Ungltiger String im Parameter <Comp>.

Ursache dieses Fehlers knnen ungltige oder doppelt pro
grammierte Zeichen sein.

Ungltige T-Nummer.

Ungltige D-Nummer.

Ungltige DL-Nummer.

Zugriffsversuch auf nicht vorhandenes Speichermodul.

Zugriffsversuch auf eine nicht vorhandene Option (z. B. pro
grammierbare Werkzeugorientierung, Werkzeugverwaltung).

Unzulssiger Zahlenwert fr den Parameter <CorComp>.

-10 Unzulssiger Zahlenwert fr den Parameter <CorMode>.

-11 Die Inhalte der Parameter <Comp> und <CorComp> sind wi

dersprchlich.

-12 Die Inhalte der Parameter <Comp> und <CorMode> sind wi

dersprchlich.

-13 Der Inhalt des Parameters <GeoAx> bezeichnet keine Geomet

rieachse.

-14

Schreibversuch auf nicht vorhandene Einrichtekorrektur.

Parameter

1

<CorVal>:

Korrekturvektor

In dem durch <Stat> definierten Werkstckkoordinatensystem (WKS) gilt folgende 
Zuordnung:

 <CorVal> [0]: Abszisse

 <CorVal> [1]: Ordinate

 <CorVal> [2]: Applikate

Soll nur eine Werkzeugkomponente korrigiert werden (d. h. keine vektorielle Kor
rektur, siehe Parameter <CorMode>), steht der Korrekturwert immer in <Cor
Val>[0], gleichgltig auf welche Achse er wirkt. Der Inhalt der beiden brigen 
Komponenten wird dann nicht ausgewertet.

Bezieht sich <CorVal> bzw. eine Komponente von <CorVal> auf die Planachse, so 
wird die Angabe als Radiusma bewertet. Das bedeutet, dass ein Werkzeug z. B. 
um das angegebene Ma "lnger" wird, was entsprechend zu einer doppelt so 
groen nderung des Werkstckdurchmessers fhrt.

Die Maangaben beziehen sich auf das Grundsystem (inch bzw. metrisch) der 
Steuerung.

Datentyp:

REAL[3]

804

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

2

<Comp>:

Werkzeugkomponente(n)

Datentyp:

STRING

Die Zeichenkette besteht aus zwei Teilstrings, die durch einen Doppelpunkt von
einander getrennt sind.

Allg. Form: "<SubStr_1> [: <SubStr_2]"

<SubStr_1>:

Der erste Teilstring muss immer vorhanden sein und kann ent
weder aus ein oder zwei Zeichen bestehen. Dabei steht das 
erste oder einzige Zeichen fr die 1. Komponente (Val1) und das 
zweite Zeichen fr die 2. Komponente (Val2), die entsprechend 
den nachfolgenden Parametern <CorComp> und <CorMode>  
bearbeitet werden.

Zeichen:

C 

Adapterma oder Basisma (diejenige der 
beiden alternativ existierenden Komponen
ten, die fr das verwendete Werkzeug aktiv 
ist)

E 

G 

S 

W 

Einrichtkorrekturen

Geometrie

Summenkorrekturen

Verschlei

<Substr_2>:

Der zweite Teilstring ist optional. Er kann alternativ aus dem 
(einzigen) Buchstaben "W" oder "T" bestehen.

Zeichen:

W 

T 

Ist der zweite Teilstring leer oder enthlt er 
den Buchstaben "W", werden die Korrek
turwerte so verrechnet, als seien sie im 
Werkstckkoordinatensystem (WKS) ver
messen worden.

Enthlt der zweite Teilstring den Buchsta
ben "T", werden Korrekturwerte werden so 
verrechnet, als seien sie im Werkzeugkoor
dinatensystem (Tool Coordinate System, 
TCS) vermessen worden.

Die Schreibweise der Zeichen im String (gro oder klein) ist beliebig. Es knnen 
beliebig viele Leerzeichen oder Tabulatorzeichen (white spaces) eingefgt wer
den.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

805

Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

3

<CorComp>:

Spezifiziert die Komponente(n) des Werkzeugdatensatzes, die beschrieben wer
den sollen (optional)

Datentyp:

INT

Wert:

0 

Der Korrekturwert <CorVal>[0] bezieht sich auf die im Parame
ter <GeoAx> bergebene Geometrieachse im Werkstckkoor
dinatensystem oder im Werkzeugkoordinatensystem (siehe da
zu die Beschreibung des Parameters <Comp>). D. h., der Kor
rekturwert muss in die bezeichneten Werkzeugkomponenten 
so eingerechnet werden, dass sich unter Bercksichtigung aller 
Parameter, die die Werkzeuglngenberechnung beeinflussen 
knnen, als Ergebnis eine nderung der gesamten Werkzeug
lnge in der gegebenen Achsrichtung um den vorgegebenen 
Wert ergibt.

Diese nderung soll erreicht werden durch die Korrektur der 
unter <Comp> angegebenen Komponente und der unter <Cor
Mode> (siehe nachfolgenden Parameter) angegebenen sym
bolischen Rechenvorschrift. Die resultierende Korrektur kann 
sich deshalb in allen drei Achskomponenten auswirken.

1  Wie "0", jedoch vektoriell. Der Inhalt des Vektors <CorVal> be
zieht sich auf Abszisse, Ordinate und Applikate im Werkstck
koordinatensystem oder Werkzeugkoordinatensystem (siehe 
dazu die Beschreibung des Parameters <Comp>).

Der nachfolgende Parameter <GeoAx> wird nicht ausgewertet.

2 

Vektorielle Korrektur, d. h. L1, L2 und L3 knnen simultan ver
ndert werden.

Im Gegensatz zu den Varianten "0" und "1" beziehen sich die in 
<CorVal> enthaltenen Korrekturwerte jedoch auf die Koordina
ten der Val1-Komponente (siehe nachfolgenden Parameter 
<CorMode>) des Werkzeugs.

Eine eventuell vorhandene Schrgstellung des Werkzeugs ge
genber dem Werkstckkoordinatensystem hat keinen Einfluss 
auf die Korrektur. 

3 - 5  Korrektur der Werkzeuglnge L1 bis L3 ($TC_DP3 bis 

$TC_DP5) bzw. der entsprechenden Werte bei Verschlei, Ein
richte- oder Summenkorrekturen.

Der Korrekturwert ist in <CorVal>[0] enthalten. Er ist in den Ko
ordinaten der Val1-Komponente (siehe nachfolgenden Parame
ter <CorMode>) des Werkzeugs gemessen. Eine eventuell vor
handene Schrgstellung des Werkzeugs gegenber dem Werk
stckkoordinatensystem hat keinen Einfluss auf die Korrektur. 

Korrektur des Werkzeugradius ($TC_DP6) bzw. der entsprech
enden Werte bei Verschlei, Einrichte- oder Summenkorrektu
ren. Die Bits 10 und 11 (Bewertung der Durchmesser- bzw. 
Durchmesserverschleiangabe wahlweise als Radius- oder 
Durchmesserangabe) im Maschinendatum 
MD20360 $MC_TOOL_PARAMETER_DEF_MASK werden be
rcksichtigt.

6 

7 
 11 

Korrektur von $TC_DP7 bis $TC_DP11 bzw. der entsprechen
den Werte bei Verschlei, Einrichte- oder Summenkorrekturen. 
Diese Parameter werden wie der Werkzeugradius behandelt.

Ist dieser Parameter nicht angeben, ist sein Wert "0".

806

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

4

<CorMode>:

Spezifiziert die Art der auszufhrenden Schreiboperation (optional)

Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Datentyp:

INT

Wert:

0 

1 

2 

3 

Val1neu = <CorVal>
Val1neu = Val1alt + <CorVal>
Val1neu = <CorVal>
Val2neu = 0
Val1neu = Val1alt + Val2alt + <CorVal>
Val2neu = 0

Die Schreibweise Val1alt + Val2alt ist symbolisch zu verstehen. Werden die beiden 
Komponenten (aufgrund des Zustandes von <_Stat>) unterschiedlich bewertet, 
d. h. ist zwischen beiden Komponenten eine Drehung wirksam, so wird Val2alt vor 
der Addition so transformiert, dass die resultierende Werkzeuglnge nach dem 
Lschen von Val2neu und vor der Addition von <CorVal> unverndert bleibt.
<CorVal> bezieht sich immer auf Val1. <CorVal> ist ein Wert, der abhngig vom 
zweiten Teils des Parameters <Comp> im Werkstckkoordinatensystem (WKS) 
oder im Werkzeugkoordinatensystem (TCS) gemessen wird. Er ist deshalb ge
genber der Werkzeugkomponente, in die er eingerechnet werden soll, gegebe
nenfalls bereits transformiert. Er kann somit nicht unmittelbar mit dem abgespei
cherten Wert verrechnet werden, sondern muss vor der Addition zu Val1 bzw. Val2 
zurcktransformiert werden. Das kann zur Folge haben, dass sich die Korrektur in 
einer anderen als in der durch <CorComp> definierten Achse auswirkt, bzw. dass 
diese auf mehrere Achsen wirkt.

Fr den Fall <CorComp> = 0, d. h., wenn <CorVal> keinen Vektor, sondern nur 
einen Einzelwert enthlt, werden die beschriebene Operationen in den Koordina
ten ausgefhrt, in denen <CorVal> gemessen wurde (WKS / TCS). Insbesondere 
gilt das auch fr das Nullsetzen von Val2neu in den Varianten 2 und 3. Dieses Er
gebnis wird dann in die Koordinaten des Werkzeugs zurcktransformiert. Das 
kann zur Folge haben, dass keine der nullzusetzenden Koordinatenwerte (L1, L2, 
L3) Null wird bzw. dass Koordinatenwerte, die vorher Null waren, nun ungleich Null 
sind. Werden die entsprechenden Operationen jedoch sukzessive fr alle drei 
Geometrieachsen ausgefhrt, ist gewhrleistet, dass auch alle drei Koordinaten
werte der zu lschenden Komponente Null werden. Ist das Werkzeug gegenber 
dem Werkstckkoordinatensystem nicht gedreht, oder aber so gedreht, dass alle 
Werkzeugkomponenten parallel zu den Koordinatenachsen bleiben (Achsvertau
schungen), ist gewhrleistet, dass sich jeweils auch nur eine Werkzeugkoordinate 
ndert.

Die sukzessive Ausfhrung der gleichen Operation (<CorMode>) mit <Cor
Comp> = 0 fr alle drei Koordinatenachsen in beliebiger Reihenfolge ist identisch 
zu der einmaligen Ausfhrung der gleichen Operation mit <CorComp>=1. 

Fr die Parameterwerte "0" und "1" muss der Parameter <Comp> einen und fr die 
Parameterwerte "2" und "3" zwei Zeichen enthalten.

Beispiel:

<Comp> enthlt den String "ES", <CorMode> den Wert "2"

 Einrichtkorrekturneu = <CorVal>, Summenkorrekturneu = 0
Ist der Parameter <CorMode> nicht angeben, ist sein Wert "0".

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

807

Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

5

<GeoAx>:

Gibt den Index der Geometrieachse an, in der der Korrekturwert <CorVal>[0] ge
messen wurde (optional)

Datentyp:

INT

Wertebereich:

0 ... 2

Die Indizes 0 bis 2 beziehen sich auf Abszisse, Ordinate und Applikate in der 
wirksamen Ebene (G17/G18/G19) der aktuellen Werkzeugumgebung.

Der Inhalt dieses Parameters wird nur dann ausgewertet, wenn der Parameter 
<CorComp> den Wert "0" hat.

6

<Stat>:

Name des Datensatzes zur Beschreibung einer Werkzeugumgebung (optional)

Datentyp:

STRING

Ist der Wert dieses Parameters der Nullstring ("") oder wird er nicht angeben, wird 
der aktuelle Zustand verwendet. Ist kein Werkzeug spezifiziert, wird das aktuelle 
Werkzeug verwendet.

7

<T>:

Interne T-Nummer des Werkzeugs (optional)

Datentyp:

INT

Ist dieser Parameter nicht angegeben oder ist sein Wert "0", wird das in <Stat> 
abgelegte Werkzeug verwendet.

Ist der Wert dieses Parameters "-1", wird die T-Nummer des aktiven Werkzeugs 
verwendet. Es ist auch zulssig, die Nummer des aktiven Werkzeugs explizit an
zugeben.

Hinweis:
Ist <Stat> nicht angegeben, wird als Werkzeugumgebung der aktuelle Zustand 
verwendet. Da mit <T> = 0 auf die in der Werkzeugumgebung gespeicherte T-
Nummer verwiesen wird, wird in dieser das aktive Werkzeug verwendet, d. h. die 
Angaben <T> = 0 und <T> = -1 sind in diesem Sonderfall gleichbedeutend.

8

<D>:

Schneidennummer des Werkzeugs (optional)

Datentyp:

INT

Ist dieser Parameter nicht angegeben oder ist sein Wert "0", richtet sich die ver
wendetet D-Nummer nach der Quelle der T-Nummer. Wird die T-Nummer aus der 
Werkzeugumgebung verwendet, wird auch die D-Nummer der Werkzeugumge
bung gelesen, andernfalls die des aktuell aktiven Werkzeugs.

9

<TL>:

Nummer der ortsabhngigen Korrektur (optional)

Datentyp:

INT

Ist dieser Parameter nicht angegeben, richtet sich die verwendete DL-Nummer 
nach der Quelle der T-Nummer. Wird die T-Nummer aus der Werkzeugumgebung 
verwendet, wird auch die D-Nummer der Werkzeugumgebung gelesen, andern
falls die des aktuell aktiven Werkzeugs. Spezifizieren T, D und DL ein Werkzeug 
ohne ortsabhngige Korrekturen, drfen im Parameter <Comp> keine Summen- 
oder Einrichtkorrekturen spezifiziert werden (Fehlercode in <Status>).

Hinweis

Nicht alle mglichen Kombinationen der drei Parameter <Comp>, <CorComp> und 
<CorMode> sind sinnvoll. Beispielsweise erfordert die Rechenvorschrift 3 in <CorComp> die 
Angabe von zwei Zeichen in <Comp>. Wird eine unzulssige Parameterkombination 
angegeben, wird im <Status> ein entsprechender Fehlercode zurckgegeben.

808

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Beispiele

Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Beispiel 1

Programmcode

N10 DEF REAL _CORVAL[3]

N20 $TC_DP1[1,1]=120

N30 $TC_DP3[1,1]=10.0

N40 $TC_DP12[1,1]=1.0

N50 _CORVAL[0]=0.333

N60 T1 D1 G17 G0

N70 R1=SETTCOR(_CORVAL,"G",0,0,2)

N80 T1 D1 X0 Y0 Z0

N90 M30

Kommentar

; Frswerkzeug

; Geometrie L1

; Verschlei L1

; ==> MKS-Position X0.000 Y0.000 Z1.333

<CorComp> ist "0", deshalb wird der in Z-Richtung wirkende Koordinatenwert der Geometrie-
Komponente durch den Korrekturwert 0,333 ersetzt.

Die resultierende Werkzeuggesamtlnge ist somit: L1 = 0,333 + 1,000 = 1,333

Beispiel 2

Programmcode

N10 DEF REAL _CORVAL[3]

N20 $TC_DP1[1,1]=120

N30 $TC_DP3[1,1]=10.0

N40 $TC_DP12[1,1]=1.0

N50 _CORVAL[0]=0.333

N60 T1 D1 G17 G0

N70 R1=SETTCOR(_CORVAL,"W",0,1,2)

N80 T1 D1 X0 Y0 Z0

N90 M30

Kommentar

; Frswerkzeug

; Geometrie L1

; Verschlei L1

; ==> MKS-Position X0.000 Y0.000 Z11.333

<CorComp> ist "1", deshalb wird der in Z-Richtung wirkende Korrekturwert von 0,333 zum 
Verschleiwert von 1,0 addiert.

Die resultierende Werkzeuggesamtlnge ist somit: L1 = 10,0 + 1,333 = 11,333

Beispiel 3

Programmcode

N10 DEF REAL _CORVAL[3]

N20 $TC_DP1[1,1]=120

N30 $TC_DP3[1,1]=10.0

N40 $TC_DP12[1,1]=1.0

N50 _CORVAL[0]=0.333

N60 T1 D1 G17 G0

Kommentar

; Frswerkzeug

; Geometrie L1

; Verschlei L1

N70 R1=SETTCOR(_CORVAL,"GW",0,2,2)

N80 T1 D1 X0 Y0 Z0

N90 M30

; ==> MKS-Position X0.000 Y0.000 Z0.333

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

809

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

<CorComp> ist "2", deshalb wird die in Z-Richtung wirkende Korrektur in die Geometrie-
Komponente eingetragen (der alte Wert wird berschrieben), und der Verschleiwert wird 
gelscht.

Die resultierende Werkzeuggesamtlnge ist somit: L1 = 0,333 + 0,0 = 0,333

Beispiel 4

Programmcode

N10 DEF REAL _CORVAL[3]

N20 $TC_DP1[1,1]=120

N30 $TC_DP3[1,1]=10.0

N40 $TC_DP12[1,1]=1.0

N50 _CORVAL[0]=0.333

N60 T1 D1 G17 G0

Kommentar

; Frswerkzeug

; Geometrie L1

; Verschlei L1

N70 R1=SETTCOR(_CORVAL,"GW",0,3,2)

N80 T1 D1 X0 Y0 Z0

N90 M30

; ==> MKS-Position X0.000 Y0.000 Z11.333

<CorComp> ist "3", deshalb werden Verschleiwert und Korrekturwert zur Geometrie-
Komponente addiert und die Verschleikomponente gelscht.

Die resultierende Werkzeuggesamtlnge ist somit: L1 = 11,333 + 0,0 = 11,333.

Beispiel 5

Programmcode

N10 DEF REAL _CORVAL[3]

N20 $TC_DP1[1,1]=120

N30 $TC_DP3[1,1]=10.0

N40 $TC_DP12[1,1]=1.0

N50 _CORVAL[0]=0.333

N60 T1 D1 G17 G0

Kommentar

; Frswerkzeug

; Geometrie L1

; Verschlei L1

N70 R1=SETTCOR(_CORVAL,"GW",0,3,0)

N80 T1 D1 X0 Y0 Z0

N90 M30

; ==> MKS-Position X0.333 Y0.000 Z11.000

<CorComp> ist "3" wie im vorigen Beispiel, die Korrektur wirkt jetzt jedoch auf die 
Geometrieachse mit dem Index "0" (X-Achse), der wegen G17 bei einem Frswerkzeug die 
Werkzeugkomponente L3 zugeordnet ist. Der Aufruf von SETTCOR beeinflusst deshalb die 
Werkzeugparameter $TC_DP3 und $TC_DP12 nicht. Der Korrekturwert wird stattdessen in 
$TC_DP5 eingetragen.

Beispiel 6

Programmcode

N10 DEF REAL _CORVAL[3]

N20 $TC_DP1[1,1]=500

N30 $TC_DP3[1,1]=10.0

N40 $TC_DP4[1,1]=15.0

N50 $TC_DP12[1,1]=10.0

Kommentar

; Drehwerkzeug

; Geometrie L1

; Geometrie L2

; Verschlei L1

810

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Programmcode

N60 $TC_DP13[1,1]=0.0

N70 _CORVAL[0]=5.0

N80 ROT Y-30

N90 T1 D1 G18 G0

Kommentar

; Verschlei L2

N100 R1=SETTCOR(_CORVAL,"GW",0,3,1)

N110 T1 D1 X0 Y0 Z0

; ==> MKS-Position X24.330 Y0.000 Z17.500

N120 M30

Das Werkzeug ist ein Drehwerkzeug. In Satz N80 wird eine Framedrehung aktiviert, sodass 
das Basiskoordinatensystem (BKS) gegenber dem Werkstckkoordinatensystem (WKS) 
gedreht ist. Der Korrekturwert (N70) wirkt im WKS auf die Geometrieachse mit dem Index "1", 
d. h., da G18 aktiv ist, auf die X-Achse. Da <CorMode> = 3 gilt, muss der Werkzeugverschlei 
in Richtung der X-Achse des WKS nach dem Ausfhren von N100 null werden.

Der Inhalt der relevanten Werkzeugparameter ist deshalb am Programmende:

$TC_DP3[1,1] : 21.830 ; Geometrie L1

$TC_DP4[1,1] : 21.830 ; Geometrie L2

$TC_DP12[1,1] : 2.500 ; Verschlei L1

$TC_DP13[1,1] : -4.330  ; Verschlei L2

Die geometrischen Verhltnisse sind im folgenden Bild dargestellt. Der gesamte Verschlei 
einschlielich _CORVAL wird auf die X'-Richtung im WKS projiziert. Das ergibt den Punkt P2. 
Die Koordinaten dieses Punkts (gemessen in X-Y-Koordinaten) werden in die 
Geometriekomponente des Werkzeugs eingetragen. Im Verschlei bleibt der Differenzvektor 
P2 - P1 brig. Damit hat der Verschlei keine Komponente mehr in Richtung von _CORVAL.

Setzt man das Beispielprogramm nach N110 mit den folgenden Anweisungen fort, wird der 
restliche Verschlei vollstndig in die Geometrie bernommen, da die Korrektur jetzt in der Z'-
Achse wirkt (Parameter <GeoAx> = 0):

N120 _CORVAL[0]=0.0

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

811

(cid:66)(cid:38)(cid:50)(cid:53)(cid:57)(cid:36)(cid:47)(cid:3)(cid:32)(cid:3)(cid:24)(cid:15)(cid:3)(cid:90)(cid:76)(cid:85)(cid:78)(cid:86)(cid:68)(cid:80)(cid:3)(cid:76)(cid:81)(cid:3)(cid:53)(cid:76)(cid:70)(cid:75)(cid:87)(cid:88)(cid:81)(cid:74)(cid:3)(cid:59)(cid:10)(cid:42)(cid:72)(cid:82)(cid:80)(cid:72)(cid:87)(cid:85)(cid:76)(cid:72)(cid:3)(cid:47)(cid:20)(cid:32)(cid:20)(cid:19)(cid:15)(cid:3)(cid:47)(cid:21)(cid:32)(cid:20)(cid:24)(cid:57)(cid:72)(cid:85)(cid:86)(cid:70)(cid:75)(cid:79)(cid:72)(cid:76)(cid:161)(cid:3)(cid:47)(cid:20)(cid:32)(cid:20)(cid:19)(cid:15)(cid:3)(cid:47)(cid:21)(cid:32)(cid:19)(cid:88)(cid:85)(cid:86)(cid:83)(cid:85)(cid:190)(cid:81)(cid:74)(cid:79)(cid:76)(cid:70)(cid:75)(cid:72)(cid:3)(cid:58)(cid:72)(cid:85)(cid:78)(cid:93)(cid:72)(cid:88)(cid:74)(cid:79)(cid:166)(cid:81)(cid:74)(cid:72)(cid:93)(cid:91)(cid:91)(cid:10)(cid:20)(cid:19)(cid:19)(cid:20)(cid:19)(cid:21)(cid:19)(cid:22)(cid:19)(cid:22)(cid:19)(cid:21)(cid:19)(cid:51)(cid:19) 
 
 
 
 
Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

N130 R1=SETTCOR(_CORVAL,"GW",0,3,0)

N140 T1 D1 X0 Y0 Z0 ; ==> MKS-Position X24.330 Y0.000 Z17.500

Da der neue Korrekturwert "0" ist, darf sich die Werkzeuggesamtlnge und damit auch die in 
N140 angefahrene Position nicht verndern. Wre _CORVAL in N120 ungleich "0", wrde sich 
eine neue Werkzeuggesamtlnge und damit auch eine vernderte Position in N140 ergeben, 
der Verschleianteil der Werkzeuglnge wre jedoch in jedem Fall null, d. h., die gesamte 
Werkzeuglnge ist anschlieend in jedem Fall im Geometrieanteil des Werkzeugs enthalten.

Das gleiche Ergebnis wie mit dem zweimaligen Aufruf der Funktion SETTCOR mit dem 
Parameter <CorComp> = 0 erreicht man auch durch einmaligen Aufruf mit <CorComp> = 1 
(vektorielle Korrektur):

Kommentar

; Drehwerkzeug

; Geometrie L1

; Geometrie L2

; Verschlei L1

; Verschlei L2

Programmcode

N10 DEF REAL _CORVAL[3]

N20 $TC_DP1[1,1]=500

N30 $TC_DP3[1,1]=10.0

N40 $TC_DP4[1,1]=15.0

N50 $TC_DP12[1,1]=10.0

N60 $TC_DP13[1,1]=0.0

N70 _CORVAL[0]=0.0

N71 _CORVAL[1]=5.0

N72 _CORVAL[2]=0.0

N80 ROT Y-30

N90 T1 D1 G18 G0

N100 R1=SETTCOR(_CORVAL,"GW",1,3,1)

N110 T1 D1 X0 Y0 Z0

; ==> MKS-Position X24.330 Y0.000 Z17.500

N120 M30

In diesem Fall sind alle Verschleikomponenten des Werkzeugs sofort nach dem ersten Aufruf 
von SETTCOR in N100 gleich null.

Beispiel 7

Programmcode

N10 DEF REAL _CORVAL[3]

N20 $TC_DP1[1,1]=500

N30 $TC_DP3[1,1]=10.0

N40 $TC_DP4[1,1]=15.0

N50 $TC_DP12[1,1]=10.0

N60 $TC_DP13[1,1]=0.0

N70 _CORVAL[0]=5.0

N80 ROT Y-30

N90 T1 D1 G18 G0

Kommentar

; Drehwerkzeug

; Geometrie L1

; Geometrie L2

; Verschlei L1

; Verschlei L2

N100 R1=SETTCOR(_CORVAL,"GW",3,3)

N110 T1 D1 X0 Y0 Z0

; ==> MKS-Position X25.000 Y0.000 Z15.000

N120 M30

Gegenber Beispiel 6 ist hier der Parameter <CorComp> = 3, deshalb kann die Angabe des 
Parameters <GeoAx> entfallen. Der in _CORVAL[0] enthaltene Wert wirkt jetzt unmittelbar auf 

812

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

die Werkzeugkomponente L1, die Drehung in N80 hat auf das Ergebnis keinen Einfluss, die 
Verschleikomponenten in $TC_DP12 wird zusammen mit _CORVAL[0] in den 
Geometrieanteil bernommen, sodass wegen $TC_DP13 die gesamte Werkzeuglnge bereits 
nach dem ersten Aufruf von SETTCOR in N100 im Geometrieteil des Werkzeugs steht.

Beispiel 8

Programmcode

N10 DEF REAL _CORVAL[3]

N20 $TC_DP1[1,1]=500

N30 $TC_DP3[1,1]=10.0

N40 $TC_DP4[1,1]=15.0

N50 $TC_DP5[1,1]=20.0

N60 $TC_DP12[1,1]=10.0

N70 $TC_DP13[1,1]=0.0

N80 $TC_DP14[1,1]=0.0

N90 $SC_WEAR_SIGN=TRUE

N100 _CORVAL[0]=10.0

N110 _CORVAL[1]=15.0

N120 _CORVAL[2]=5.0

N130 ROT Y-30

N140 T1 D1 G18 G0

Kommentar

; Drehwerkzeug

; Geometrie L1

; Geometrie L2

; Geometrie L3

; Verschlei L1

; Verschlei L2

; Verschlei L3

N150 R1=SETTCOR(_CORVAL,"W",1,1)

N160 T1 D1 X0 Y0 Z0

; ==> MKS-Position X7.990 Y25.000 Z31.160

N170 M30

In N90 ist das Settingdatum SD42930 $SC_WEAR_SIGN gesetzt, d. h., der Verschlei muss 
mit negativem Vorzeichen bewertet werden. Die Korrektur ist vektoriell (<CorComp> = 1), und 
der Korrekturvektor muss zum Verschlei addiert werden (<CorMode> = 1). Die 
geometrischen Verhltnisse in der Z-X-Ebene sind im folgenden Bild dargestellt:

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

813

(cid:57)(cid:72)(cid:85)(cid:86)(cid:70)(cid:75)(cid:79)(cid:72)(cid:76)(cid:161)(cid:3)(cid:47)(cid:20)(cid:32)(cid:20)(cid:19)(cid:15)(cid:3)(cid:47)(cid:21)(cid:32)(cid:19)(cid:11)(cid:81)(cid:72)(cid:74)(cid:68)(cid:87)(cid:76)(cid:89)(cid:3)(cid:69)(cid:72)(cid:90)(cid:72)(cid:85)(cid:87)(cid:72)(cid:87)(cid:12)(cid:88)(cid:85)(cid:86)(cid:83)(cid:85)(cid:190)(cid:81)(cid:74)(cid:79)(cid:76)(cid:70)(cid:75)(cid:72)(cid:3)(cid:58)(cid:72)(cid:85)(cid:78)(cid:93)(cid:72)(cid:88)(cid:74)(cid:79)(cid:166)(cid:81)(cid:74)(cid:72)(cid:53)(cid:72)(cid:86)(cid:88)(cid:79)(cid:87)(cid:76)(cid:72)(cid:85)(cid:72)(cid:81)(cid:71)(cid:72)(cid:85)(cid:3)(cid:57)(cid:72)(cid:85)(cid:86)(cid:70)(cid:75)(cid:79)(cid:72)(cid:76)(cid:161)(cid:68)(cid:81)(cid:16)(cid:87)(cid:72)(cid:76)(cid:79)(cid:42)(cid:72)(cid:82)(cid:80)(cid:72)(cid:87)(cid:85)(cid:76)(cid:72)(cid:47)(cid:20)(cid:32)(cid:20)(cid:19)(cid:15)(cid:3)(cid:47)(cid:21)(cid:32)(cid:20)(cid:24)(cid:51)(cid:19)(cid:22)(cid:19)(cid:21)(cid:19)(cid:20)(cid:19)(cid:61)(cid:61)(cid:10)(cid:51)(cid:21)(cid:51)(cid:20)(cid:20)(cid:19)(cid:22)(cid:19)(cid:21)(cid:19)(cid:59)(cid:10)(cid:59)(cid:66)(cid:38)(cid:50)(cid:53)(cid:57)(cid:36)(cid:47)(cid:3)(cid:60)(cid:10)(cid:32)(cid:3)(cid:24)(cid:15)(cid:3)(cid:59)(cid:10)(cid:3)(cid:32)(cid:3)(cid:20)(cid:24)(cid:15)(cid:3)(cid:61)(cid:10)(cid:32)(cid:20)(cid:19) 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Wegen <CorMode> = 1 bleibt der Geometrieanteil des Werkzeugs unverndert. Der im WKS 
(Drehung um y-Achse) definierte Korrekturvektor muss so in den Verschleianteil 
bernommen werden, dass die gesamte Werkzeuglnge in Bild 3 auf den Punkt P2 verweist. 
Der resultierende Verschleianteil des Werkzeugs ist deshalb durch die Distanz der beiden 
Punkte P1 und P2 gegeben.
Da der Verschlei wegen des Settingdatums SD42930 $SC_WEAR_SIGN aber negativ 
bewertet wird, muss die so ermittelte Korrektur mit negativem Vorzeichen in den 
Korrekturspeicher eingetragen werden. Der Inhalt der relevanten Werkzeugparameter ist am 
Programmende deshalb:

$TC_DP3[1,1] : 10.000 ; Geometrie L1 (unverndert)

$TC_DP4[1,1] : 15.000 ; Geometrie L2 (unverndert)

$TC_DP5[1,1] : 10.000 ; Geometrie L3 (unverndert)

$TC_DP12[1,1] : 2.010 ; Verschlei L1 (= 10 - 15 * cos(30) + 10 * sin(30))

$TC_DP13[1,1] : -16.160 ; Verschlei L2 (= -15 * sin(30) - 10 * cos(30))

$TC_DP14[1,1] : -5.000 ; Verschlei L3

An der L3-Komponente in Y-Richtung lsst sich die Wirkung des Settingdatums SD42930 
$SC_WEAR_SIGN ohne die zustzliche Komplizierung durch die Framedrehung erkennen.

Weitere Informationen

Dreh- / Schleifwerkzeuge: Berechnung der Werkzeuglnge in Abhngigkeit von MD20360 
$MC_TOOL_PARAMETER_DEF_MASK

Wie bei Dreh- / Schleifwerkzeugen der Verschlei bzw. die Werkzeuglnge in einer eventuell 
vorhandenen Durchmesserachse zu bewerten ist, wird festgelegt im Maschinendatum:

MD20360 $MC_TOOL_PARAMETER_DEF_MASK.<Bit> = <Wert>

<Bit>

<Wert> Bedeutung

0

1

0

1

0

1

Bei Dreh- / Schleifwerkzeugen wird der Verschleiparameter der Planachse 
im Radiuswert eingerechnet:

Bei Dreh- / Schleifwerkzeugen wird der Verschleiparameter der Planachse 
als Durchmesserwert eingerechnet:

Bei Dreh- / Schleifwerkzeugen wird die Werkzeuglngenkomponente der Plan
achse als Radiuswert eingerechnet:

Bei Dreh- / Schleifwerkzeugen wird die Werkzeuglngenkomponente der Plan
achse als Durchmesserwert eingerechnet:

Sind die betreffenden Bits gesetzt, wird der zugehrige Eintrag mit dem Faktor 0,5 bewertet. 
Die Korrektur mittels SETTCOR wird so ausgefhrt, dass die gesamte effektive 
Werkzeuglngennderung gleich dem in <CorVal> bergebenen Wert ist. Wird eine Lnge auf 
Grund des Maschinendatums MD20360 $MC_TOOL_PARAMETER_DEF_MASK bei der 
Lngenberechnung mit dem Faktor 0,5 bewertet, muss die Korrektur dieser Komponente 
deshalb mit dem doppelten bergebenen Wert erfolgen.

Beispiel

MD20360 $MC_TOOL_PARAMETER_DEF_MASK = 2 (Werkzeuglnge muss in der 
Durchmesserachse mit dem Faktor 0,5 bewertet werden)

814

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Achse X ist die Durchmesserachse.

Programmcode

N10 DEF REAL _LEN[11]

N20 DEF REAL _CORVAL[3]

N30 $TC_DP1[1,1]=500

N40 $TC_DP2[1,1]=2

N50 $TC_DP3[1,1]=3.

N60 $TC_DP4[1,1]=4.

N70 $TC_DP5[1,1]=5.

N80 _CORVAL[0]=1.

N90 _CORVAL[1]=1.

N100 _CORVAL[2]=1.

Kommentar

; Werkzeugtyp

; Schneidenlage

; Geometrie - Lnge 1

; Geometrie - Lnge 2

; Geometrie - Lnge 3

N110 T1 D1 G18 G0 X0 Y0 Z0

; ==> MKS-Position X1.5 Y5 Z4

N120 R1=SETTCOR(_CORVAL,"G",1,1)

N130 T1 D1 X0 Y0 Z0

N140 R3=$TC_DP3[1,1]

N150 R4=$TC_DP4[1,1]

N160 R5=$TC_DP5[1,1]

N170 M30

; ==> MKS-Position X2.5 Y6 Z5

; = 5. = (3.000 + 2.*1.000)

; = 5. = (4.000 + 1.000)

; = 6. = (5.000 + 1.000)

Die Korrektur der Werkzeuglnge soll in jeder Achse 1 mm sein (N80 bis N100). In den Lngen 
L2 und L3 wird deshalb zur Originallnge jeweils 1 mm addiert. Zur Originalwerkzeuglnge in 
L1 wird dagegen der doppelte Korrekturwert (2 mm) addiert, damit sich die 
Gesamtwerkzeuglnge wie verlangt um 1 mm ndert. Im Vergleich der angefahrenen 
Positionen in den Stzen N110 und N130 erkennt man, dass sich jede Achsposition um 1 mm 
verndert hat.

3.13.14

Zuordnung der Werkzeuglngen L1, L2, L3 zu den Koordinatenachsen lesen 
(LENTOAX)

Die Funktion LENTOAX liefert Informationen ber die Zuordnung der Werkzeuglngen L1, L2 
und L3 des aktiven Werkzeugs zu Abszisse, Ordinate und Applikate. Die Zuordnung von 
Abszisse, Ordinate und Applikate zu den Geometrieachsen wird durch Frames und die aktive 
Ebene (G17 - G19) beeinflusst.

Betrachtet wird dabei nur der Geometrieanteil eines Werkzeugs ($TC_DP3[<t>,<d>] bis 
$TC_DP5[<t>,<d>]), d. h., eine gegebenenfalls davon abweichende Achszuordnung weiterer 
Komponenten (z. B. Verschlei) hat auf das Ergebnis keinen Einfluss.

Syntax

<Status> = LENTOAX(<AxInd>, <Matrix>[, <Coord>])

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

815

 
 
 
 
 
 
 
Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Prinzip

LENTOAX(...):

Vordefinierte Funktion zum Lesen der Zuordnung der Werkzeuglngen L1, L2 und 
L3 des aktiven Werkzeugs zu den Koordinatenachsen

Alleine im Satz:

ja

<Status>:

Rckgabewert der Funktion. Negative Werte zeigen Fehlerzustnde an.

Datentyp:

INT

Wert:

0

Funktion OK

Information in <AxInd> reicht zur Beschreibung aus (alle 
Werkzeuglngenkomponenten sind parallel zu Geometrie
achsen). 

Funktion ist OK, zu einer korrekten Beschreibung muss aber 
der Inhalt von <Matrix> ausgewertet werden (die Werkzeug
lngenkomponenten sind nicht parallel zu den Geometrie
achsen).

Ungltiger String im Parameter <Coord>.

Kein Werkzeug aktiv.

1

-1

-2

Parameter

1

<AxInd>:

Sind die Werkzeuglngenkomponenten parallel zu den Geometrieachsen, wer
den die Achsindizes, die den Lngenkomponenten L1 bis L3 zugeordnet sind, im 
Feld <AxInd> zurckgeliefert:

 <AxInd> [0]: Abszisse

 <AxInd> [1]: Ordinate

 <AxInd> [2]: Applikate

Datentyp:

INT[3]

Wert:

0

Keine Zuordnung vorhanden (Achse existiert nicht)

1 ... 3

bzw.

-1 ... -3

Nummer der Lnge, die in der entsprechende Koordinaten
achse wirkt.

Das Vorzeichen ist negativ, wenn die Werkzeuglngenkom
ponente in negative Koordinatenrichtung zeigt.

Sind nicht alle Lngenkomponenten parallel bzw. antiparallel zu den Geometrie
achsen, wird in <AxInd> jeweils der Index der Achse zurckgegeben, die den 
grten Anteil einer Werkzeuglngenkomponente enthlt. In diesem Fall (falls die 
Funktion nicht aus einem anderen Grund einen Fehler liefert) ist der Rckgabe
wert <Status> = 1. Die Abbildung der Werkzeuglngenkomponenten L1 bis L3 auf 
die Geometrieachsen 1 bis 3 wird dann durch den Inhalt des 2. Parameters <Mat
rix> vollstndig beschrieben.

Matrix, die den Vektor der Werkzeuglngen (L1=1, L2=1, L3=1) in den Vektor der 
Koordinatenachsen (Abszisse, Ordinate, Applikate) abbildet, d. h., den Spalten 
sind die Werkzeuglngenkomponenten in der Reihenfolge L1, L2, L3 zugeordnet, 
den Zeilen die Achsen in der Reihenfolge Abszisse, Ordinate, Applikate.

Datentyp:

REAL

In der Matrix sind immer alle Elemente gltig, auch dann, wenn die zu einer Ko
ordinatenachse gehrende Geometrieachse nicht vorhanden ist, d. h. wenn der 
entsprechende Eintrag in <AxInd> null ist.

2

<Matrix>:

816

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

3

<Coord>:

Koordinatensystem, fr das die Zuordnung gilt (optional)

Datentyp:

STRING

Zei
chen:

MCS

M

BCS

B

WCS

W

KCS

K

TCS

T

Abbildung der Werkzeuglnge in das Maschinenkoordina
tensystem

Abbildung der Werkzeuglnge in das Basiskoordinatensys
tem

Abbildung der Werkzeuglnge in das Werkstckkoordina
tensystem (Default)

Abbildung der Werkzeuglnge in das Werkzeugkoordinaten
system der kinematischen Transformation

Abbildung der Werkzeuglnge in das Werkzeugkoordinaten
system

Die Schreibweise der Zeichen im String (gro oder klein) ist beliebig.

Wird der Parameter <Coord> nicht angegeben, wird das WKS verwendet (De
fault).

Hinweis

Im TCS sind immer alle Werkzeuglngenkomponenten parallel oder antiparallel zu den 
Achsen.

Antiparallel knnen die Komponenten nur dann sein, wenn Spiegeln aktiv ist und das folgende 
Settingdatum gesetzt ist:

SD42900 $SC_MIRROR_TOOL_LENGTH (Vorzeichenwechsel Werkzeuglnge beim 
Spiegeln)

Beispiel

Standardfall Frswerkzeug bei G17.

L1 wirkt in Z (Applikate), L2 wirkt in Y (Ordinate), L3 wirkt in X (Abszisse).

Aufruf der Funktion in der Form:
<Status>=LENTOAX(<AxInd>,<Matrix>,"WCS")

Der Ergebnisparameter <AxInd> enthlt dann die Werte:

<AxInd>[0] = 3

<AxInd>[1] = 2

<AxInd>[2] = 1

oder kurz: ( 3, 2, 1)

Die zugehrige Matrix (<Matrix>) ist in diesem Fall:

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

817

(cid:31)(cid:48)(cid:68)(cid:87)(cid:85)(cid:76)(cid:91)(cid:33)(cid:3)(cid:32)(cid:3)(cid:20)(cid:19)(cid:19)(cid:19)(cid:20)(cid:19)(cid:19)(cid:19)(cid:20)Arbeitsvorbereitung

3.13 Werkzeugkorrekturen

Ein Wechsel von G17 nach G18 oder G19 ndert am Ergebnis nichts, da die Zuordnung der 
Lngenkomponenten zu den Geometrieachsen sich in gleicher Weise ndert wie die 
Zuordnung von Abszisse, Ordinate und Applikate.

Es wird nun bei aktivem G17 eine Framedrehung um Z von 60 Grad programmiert, z. B.:
ROT Z60

Die Richtung der Applikate (Z-Richtung) bleibt unverndert, der Hauptanteil von L2 liegt nun in 
Richtung der neuen X-Achse, der Hauptanteil von L1 in Richtung der negativen Y-Achse. Der 
Rckgabewert (<Status>) ist deshalb "1", <AxInd> enthlt die Werte (2, -3, 1).

Die zugehrige Matrix (<Matrix>) ist in diesem Fall:

818

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:31)(cid:48)(cid:68)(cid:87)(cid:85)(cid:76)(cid:91)(cid:33)(cid:3)(cid:32)(cid:3)(cid:20)(cid:19)(cid:19)(cid:19)(cid:70)(cid:82)(cid:86)(cid:3)(cid:25)(cid:19)(cid:114)(cid:86)(cid:76)(cid:81)(cid:3)(cid:25)(cid:19)(cid:114)(cid:19)(cid:16)(cid:3)(cid:86)(cid:76)(cid:81)(cid:3)(cid:25)(cid:19)(cid:114)(cid:70)(cid:82)(cid:86)(cid:3)(cid:25)(cid:19)(cid:114)Arbeitsvorbereitung

3.14 Bahnverhalten

3.14

Bahnverhalten

3.14.1

Vorschubverlauf (FNORM, FLIN, FCUB, FPO)

Zur flexibleren Vorgabe des Vorschubverlaufs wird die Vorschubprogrammierung nach 
DIN 66025 um lineare und kubische Verlufe erweitert. 

Die kubischen Verlufe knnen direkt oder als interpolierende Splines programmiert werden. 
Hierdurch lassen sich - abhngig von der Krmmung des zu bearbeitenden Werkstcks - 
kontinuierlich glatte Geschwindigkeitsverlufe programmieren.

Diese Geschwindigkeitsverlufe ermglichen ruckfreie Beschleunigungsnderungen und 
hierdurch Fertigung gleichmiger Werkstckoberflchen.

Syntax

Bedeutung

F FNORM
F FLIN
F FCUB
F=FPO(,,)

FNORM:

Grundeinstellung. Der Vorschubwert wird ber den Bahnweg des Satzes vorgegeben 
und gilt danach als modaler Wert.

FLIN:

Bahngeschwindigkeitsprofil linear: 

Der Vorschubwert wird vom aktuellen Wert am Satzanfang bis zum Satzende ber den 
Bahnweg linear eingefahren und gilt danach als modaler Wert. Dieses Verhalten kann 
mit G93 und G94 kombiniert werden.

FCUB:

Bahngeschwindigkeitsprofil kubisch:

Die satzweise programmierten F-Werte werden - bezogen auf den Satzendpunkt - 
durch einen Spline verbunden. Der Spline beginnt und endet tangential zur vorhergeh
enden bzw. nachfolgenden Vorschubangabe und wirkt mit G93 und G94.

Fehlt in einem Satz die F-Adresse, so wird hierfr der zuletzt programmierte F-Wert 
verwendet.

F=FPO :

Bahngeschwindigkeitsprofil ber Polynom:

Die F-Adresse bezeichnet den Vorschubverlauf ber ein Polynom vom aktuellen Wert 
bis zum Satzende. Der Endwert gilt danach als modaler Wert.

Vorschuboptimierung bei gekrmmten Bahnstcken

Vorschub-Polynom F=FPO und Vorschubspline FCUB sollten immer mit konstanter 
Schnittgeschwindigkeit CFC abgefahren werden. Hierdurch lsst sich ein 
beschleunigungsstetiges Sollvorschubprofil erzeugen.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

819

Arbeitsvorbereitung

3.14 Bahnverhalten

Beispiel: Verschiedene Vorschubprofile

In diesem Beispiel finden Sie die Programmierung und grafische Darstellung verschiedener 
Vorschubprofile.

Programmcode

Kommentar

N1 F1000 FNORM G1 X8 G91 G64

; Konstantes Vorschubprofil, Kettenmaangabe

N2 F2000 X7

; Sprunghafte Sollgeschwindigkeitsnderung

N3 F=FPO(4000, 6000, -4000)

N4 X6

N5 F3000 FLIN X5

N6 F2000 X8

N7 X5

N8 F1000 FNORM X5

N9 F1400 FCUB X8

N10 F2200 X6

N11 F3900 X7

N12 F4600 X7

N13 F4900 X5

N14 FNORM X5

N15 X20

; Vorschubprofil ber Polynom mit Vorschub 
4000 am Satzende.

; Polynomvorschub 4000 gilt als modaler Wert.

; Lineares Vorschubprofil

; Lineares Vorschubprofil

; Linearer Vorschub gilt als modaler Wert

; Konstantes Vorschubprofil mit sprunghafter 
Beschleunigungsnderung.

; Alle folgenden satzweise programmierten F-
Werte werden mit Splines verbunden.

; Splineprofil ausschalten.

Weitere Informationen

FNORM

Die Vorschubadresse F bezeichnet den Bahnvorschub als konstanten Wert nach DIN 66025.

820

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

50004000300020001000N1N2N3N4N5N6N7N8N9N10N11N12N13N14N15Vor-schubBahn-weg 
 
 
 
 
Arbeitsvorbereitung

3.14 Bahnverhalten

FLIN

Der Vorschubverlauf wird vom aktuellen Vorschubwert zum programmierten F-Wert linear bis 
Satzende eingefahren.

Beispiel:

N30 F1400 FLIN X50

FCUB

Der Vorschub wird vom aktuellen Vorschubwert zum programmierten F-Wert bis Satzende im 
kubischen Verlauf eingefahren. Die Steuerung verbindet alle mit aktivem FCUB satzweise 

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

821

Vor-schubBahn-wegVor-schubBahn-wegArbeitsvorbereitung

3.14 Bahnverhalten

programmierten Vorschubwerte durch Splines. Die Vorschubwerte dienen hier als Sttzpunkte 
zur Berechnung der Splineinterpolation.

Beispiel:

N50 F1400 FCUB X50

N60 F2000 X47

N70 F3800 X52

F=FPO(,,)

Der Vorschubverlauf wird ber ein Polynom direkt programmiert. Die Angabe der 
Polynomkoeffizienten erfolgt analog zur Polynominterpolation.

Beispiel:

F=FPO(endfeed, quadf, cubf)

endfeed, quadf und cubf sind vorher definierte Variable.

endfeed:

quadf:

cubf:

Vorschub am Satzende

Quadratischer Polynomkoeffizient

Kubischer Polynomkoeffizient

Bei aktivem FCUB schliet der Spline am Satzanfang und Satzende tangential an den ber 
FPO festgelegten Verlauf an.

822

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Vor-schubBahn-wegArbeitsvorbereitung

3.14 Bahnverhalten

Randbedingungen

 Unabhngig vom programmierten Vorschubverlauf gelten die Funktionen zur 

Programmierung des Bahnfahrverhaltens.

 Der programmierbare Vorschubverlauf gilt grundstzlich absolut - unabhngig von G90 

oder G91.

 Der Vorschubverlauf FLIN und FCUB wirkt mit G93 und G94, nicht bei G95, G96/G961 und 

G97/G971.

 Bei aktivem Kompressor COMP... und Zusammenfassung mehrerer Stze zu einem 

Splinesegment gilt Folgendes:

FNORM:

FLIN:

FCUB:

Fr das Splinesegment gilt das F-Wort des letzten zugehrigen Satzes.

Fr das Splinesegment gilt das F-Wort des letzten zugehrigen Satzes. 
Der programmierte F-Wert gilt zum Ende des Segments und wird dann linear 
angefahren.

Der erzeugte Vorschubspline weicht maximal um den im Maschinendatum 
MD20172 $MC_COMPRESS_VELO_TOL definierten Wert von den program
mierten Endpunkten ab.

F=FPO(,,): Diese Stze werden nicht komprimiert.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

823

Vor-schubBahn-wegArbeitsvorbereitung

3.14 Bahnverhalten

3.14.2

Beschleunigungsverhalten

3.14.2.1

Beschleunigungsmodus (BRISK, BRISKA, SOFT, SOFTA, DRIVE, DRIVEA)

Zur Programmierung des Beschleunigungsmodus stehen folgende Teileprogrammbefehle zur 
Verfgung:  

 "BRISK, BRISKA"

Die Einzelachsen bzw. die Bahnachsen verfahren mit maximaler Beschleunigung bis zum 
Erreichen der programmierten Vorschubgeschwindigkeit (Beschleunigung ohne 
Ruckbegrenzung).

 "SOFT, SOFTA"

Die Einzelachsen bzw. die Bahnachsen verfahren mit stetiger Beschleunigung bis zum 
Erreichen der programmierten Vorschubgeschwindigkeit (Beschleunigung mit 
Ruckbegrenzung).

 "DRIVE, DRIVEA"

Die Einzelachsen bzw. die Bahnachsen verfahren mit maximaler Beschleunigung bis zu 
einer projektierten Geschwindigkeitsgrenze (MD-Einstellung!). Danach erfolgt eine 
Beschleunigungsreduktion (MD-Einstellung!) bis zum Erreichen der programmierten 
Vorschubgeschwindigkeit.

Bild 3-12

Verlauf der Bahngeschwindigkeit bei BRISK und SOFT

824

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:3)(cid:3)(cid:3)(cid:37)(cid:53)(cid:44)(cid:54)(cid:46)(cid:11)(cid:93)(cid:72)(cid:76)(cid:87)(cid:82)(cid:83)(cid:87)(cid:76)(cid:80)(cid:68)(cid:79)(cid:12)(cid:3)(cid:3)(cid:3)(cid:3)(cid:3)(cid:54)(cid:50)(cid:41)(cid:55)(cid:3)(cid:11)(cid:86)(cid:70)(cid:75)(cid:82)(cid:81)(cid:72)(cid:81)(cid:71)(cid:3)(cid:73)(cid:190)(cid:85)(cid:3)(cid:48)(cid:72)(cid:70)(cid:75)(cid:68)(cid:81)(cid:76)(cid:78)(cid:12)(cid:54)(cid:82)(cid:79)(cid:79)(cid:90)(cid:72)(cid:85)(cid:87)(cid:37)(cid:68)(cid:75)(cid:81)(cid:74)(cid:72)(cid:86)(cid:70)(cid:75)(cid:90)(cid:76)(cid:81)(cid:71)(cid:76)(cid:74)(cid:78)(cid:72)(cid:76)(cid:87)(cid:61)(cid:72)(cid:76)(cid:87)Arbeitsvorbereitung

3.14 Bahnverhalten

Bild 3-13

Verlauf der Bahngeschwindigkeit bei DRIVE

Syntax

Bedeutung

BRISK
BRISKA(<Achse1>,<Achse2>,)
SOFT
SOFTA(<Achse1>,<Achse2>,)
DRIVE
DRIVEA(<Achse1>,<Achse2>,)

BRISK:

BRISKA:

SOFT:

SOFTA:

DRIVE:

DRIVEA:

(<Achse1>,<Achse2>,):

Befehl zum Einschalten der "Beschleunigung ohne Ruckbegren
zung" fr die Bahnachsen.

Befehl zum Einschalten der "Beschleunigung ohne Ruckbegren
zung" fr Einzelachsbewegungen (JOG, JOG/INC, Positionier
achse, Pendelachse, etc.).

Befehl zum Einschalten der "Beschleunigung mit Ruckbegren
zung" fr die Bahnachsen.

Befehl zum Einschalten der "Beschleunigung mit Ruckbegren
zung" fr Einzelachsbewegungen (JOG, JOG/INC, Positionier
achse, Pendelachse, etc.).

Befehl zum Einschalten der reduzierten Beschleunigung ober
halb einer projektierten Geschwindigkeitsgrenze 
(MD35220 $MA_ACCEL_REDUCTION_SPEED_POINT) fr die 
Bahnachsen.

Befehl zum Einschalten der reduzierten Beschleunigung ober
halb einer projektierten Geschwindigkeitsgrenze 
(MD35220 $MA_ACCEL_REDUCTION_SPEED_POINT) fr 
Einzelachsbewegungen (JOG, JOG/INC, Positionierachse, Pen
delachse, etc.).

Einzelachsen, fr die der aufgerufene Beschleunigungsmodus 
gelten soll.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

825

(cid:37)(cid:68)(cid:75)(cid:81)(cid:74)(cid:72)(cid:86)(cid:70)(cid:75)(cid:90)(cid:76)(cid:81)(cid:71)(cid:76)(cid:74)(cid:78)(cid:72)(cid:76)(cid:87)(cid:61)(cid:72)(cid:76)(cid:87)(cid:42)(cid:85)(cid:72)(cid:81)(cid:93)(cid:72)(cid:3)(cid:71)(cid:72)(cid:85)(cid:78)(cid:82)(cid:81)(cid:86)(cid:87)(cid:68)(cid:81)(cid:87)(cid:72)(cid:81)(cid:37)(cid:72)(cid:86)(cid:70)(cid:75)(cid:79)(cid:72)(cid:88)(cid:81)(cid:76)(cid:74)(cid:88)(cid:81)(cid:74)(cid:54)(cid:82)(cid:79)(cid:79)(cid:90)(cid:72)(cid:85)(cid:87)Arbeitsvorbereitung

3.14 Bahnverhalten

Randbedingungen

Wechsel des Beschleunigungsmodus whrend Bearbeitung

Wenn in einem Teileprogramm der Beschleunigungsmodus whrend der Bearbeitung 
gewechselt wird (BRISK  SOFT), dann erfolgt auch bei Bahnsteuerbetrieb am bergang ein 
Satzwechsel mit Genauhalt am Satzende.

Beispiele

Beispiel 1: SOFT und BRISKA

Programmcode

N10 G1 X Y F900 SOFT

N20 BRISKA(AX5,AX6)

...

Beispiel 2: DRIVE und DRIVEA

Programmcode

N05 DRIVE

N10 G1 X Y F1000

N20 DRIVEA (AX4, AX6)

...

3.14.2.2

Beeinflussung der Beschleunigung bei Folgeachsen (VELOLIMA, ACCLIMA, 
JERKLIMA)

Bei Achskopplungen (Seite 871) (Tangentiale Nachfhrung, Mitschleppen, Leitwertkopplung, 
Elektronisches Getriebe) werden Folgeachsen/-spindeln abhngig von einer oder mehreren 
Leitachsen/-spindeln verfahren.

Die Dynamikbegrenzungen der Folgeachsen/-spindeln knnen mit den Funktionen 
VELOLIMA, ACCLIMA und JERKLIMA aus dem Teileprogramm oder aus Synchronaktionen 
beeinflusst werden, auch bei bereits aktiver Achskopplung.  

Hinweis

Die Funktion JERKLIMA ist nicht fr alle Kopplungsarten verfgbar.

VELOLIMA(<Achse>)=<Wert>
ACCLIMA(<Achse>)=<Wert>
JERKLIMA(<Achse>)=<Wert>

Syntax

826

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
Bedeutung

Beispiele

Arbeitsvorbereitung

3.14 Bahnverhalten

VELOLIMA:

ACCLIMA:

JERKLIMA:

<Achse>:

<Wert>:

Befehl zur Korrektur der parametrierten Maximalgeschwindigkeit

Befehl zur Korrektur der parametrierten Maximalbeschleunigung

Befehl zur Korrektur des parametrierten Maximalrucks

Folgeachse, deren Dynamikbegrenzungen korrigiert werden sollen

Prozentualer Korrekturwert

Beispiel 1: Korrektur der Dynamikbegrenzungen fr eine Folgeachse (AX4)

Programmcode

Kommentar

...

VELOLIMA[AX4]=75

ACCLIMA[AX4]=50

JERKLIMA[AX4]=50

...

; Begrenzungskorrektur auf 75% der im Maschinendatum hin-
terlegten axialen Maximalgeschwindigkeit.

; Begrenzungskorrektur auf 50% der im Maschinendatum hin-
terlegten axialen Maximalbeschleunigung.

; Begrenzungskorrektur auf 50% des im Maschinendatum hin-
terlegten axialen Maximalrucks bei Bahnbewegung.

Beispiel 2: Elektronisches Getriebe

Achse 4 wird ber eine Kopplung "Elektronisches Getriebe" an Achse X gekoppelt. Das 
Beschleunigungsvermgen der Folgeachse wird auf 70 % der maximalen Beschleunigung 
begrenzt. Die maximal zulssige Geschwindigkeit wird auf 50 % der maximalen 
Geschwindigkeit begrenzt. Nach erfolgter Einschaltung der Kopplung wird die maximal 
zulssige Geschwindigkeit wieder auf 100 % gesetzt.

Programmcode

...

N120 ACCLIMA[AX4]=70

N130 VELOLIMA[AX4]=50

...

Kommentar

; Reduzierte maximale Beschleunigung.

; Reduzierte maximale Geschwindigkeit.

N150 EGON(AX4,"FINE",X,1,2)

; Einschalten der EG-Kopplung.

...

N200 VELOLIMA[AX4]=100

; Volle Maximalgeschwindigkeit.

...

Beispiel 3: Leitwertkopplung per statische Synchronaktion beeinflussen

Achse 4 wird mittels Leitwertkopplung an X gekoppelt. Das Beschleunigungsverhalten wird per 
statische Synchronaktion 2 ab Position 100 auf 80 % begrenzt.

Programmcode

...

N120 IDS=2 WHENEVER $AA_IM[AX4] > 
100 DO ACCLIMA[AX4]=80

Kommentar

; Synchronaktion

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

827

 
 
 
 
 
 
 
Arbeitsvorbereitung

3.14 Bahnverhalten

Programmcode

N130 LEADON(AX4, X, 2)

...

Kommentar

; Leitwertkopplung ein

3.14.2.3

Aktivierung von Technologie-spezifischen Dynamikwerten (DYNNORM, DYNPOS, 
DYNROUGH, DYNSEMIFIN, DYNFINISH, DYNPREC)

Mit den Befehlen der G-Gruppe 59 "Dynamikmodus fr Bahninterpolation" kann fr 
unterschiedliche technologische Bearbeitungsschritte die dazu passende Dynamik aktiviert 
werden.

Dynamikwerte und G-Befehle sind projektierbar und damit von Maschinendateneinstellungen 
abhngig.   

Weitere Informationen: Funktionshandbuch Basisfunktionen

Syntax

Bedeutung

Dynamikwerte aktivieren:
DYNNORM/DYNPOS/DYNROUGH/DYNSEMIFIN/DYNFINISH/DYNPREC

Hinweis

Die Dynamikwerte werden bereits in dem Satz wirksam, in dem der zugehrige G-Befehl 
programmiert wird. Es folgt kein Bearbeitungsstopp.

Bestimmtes Feldelement lesen oder schreiben:
R<m>=$MA...[n,X]
$MA...[n,X]=<Wert>

DYNNORM:

DYNPOS:

DYNROUGH:

DYNSEMIFIN:

DYNFINISH:

DYNPREC:

Normale Dynamik aktivieren

Dynamik fr Positionierbetrieb, Gewindebohren aktivieren

Dynamik fr Schruppen aktivieren

Dynamik fr Vorschlichten aktivieren

Dynamik fr Schlichten aktivieren

Dynamik fr Feinschlichten aktivieren

R<m>:

Rechenparameter mit Nummer <m>

$MA...[n,X]:

Maschinendatum mit dynamikbestimmendem Feldelement

828

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
Arbeitsvorbereitung

3.14 Bahnverhalten

<n>:

Feldindex

Wertebereich:

0 ... 5

0

1

2

3

4

5

Normale Dynamik (DYNNORM)

Dynamik fr Positionierbetrieb (DYNPOS)

Dynamik fr Schruppen (DYNROUGH)

Dynamik fr Vorschlichten (DYNSEMIFIN)

Dynamik fr Schlichten (DYNFINISH)

Dynamik fr Feinschlichten (DYNPREC)

<X>:

<Wert>:

Achsadresse

Dynamikwert

Beispiele

Beispiel 1: Dynamikwerte aktivieren

Programmcode

DYNNORM G1 X10

Kommentar

; Grundstellung

DYNPOS G1 X10 Y20 Z30 F

; Positionierbetrieb, Gewindebohren

DYNROUGH G1 X10 Y20 Z30 F10000

; Schruppen

DYNSEMIFIN G1 X10 Y20 Z30 F2000

; Vorschlichten

DYNFINISH G1 X10 Y20 Z30 F1000

; Schlichten

DYNPREC G1 X10 Y20 Z30 F600

; Feinschlichten

Beispiel 2: Bestimmtes Feldelement lesen oder schreiben

Maximale Beschleunigung fr das Schruppen, Achse X.

Programmcode

R1=$MA_MAX_AX_ACCEL[2,X]

Kommentar

; Lesen

$MA_MAX_AX_ACCEL[2,X]=5

; Schreiben

3.14.3

Fahren mit Vorsteuerung (FFWON, FFWOF)

Durch die Vorsteuerung wird der geschwindigkeitsabhngige Nachlaufweg beim Bahnfahren 
gegen Null reduziert. Fahren mit Vorsteuerung ermglicht hhere Bahngenauigkeit und damit 
bessere Fertigungsergebnisse. 

Syntax

FFWON

FFWOF

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

829

Arbeitsvorbereitung

3.14 Bahnverhalten

Bedeutung

Befehl zum Einschalten der Vorsteuerung

Befehl zum Ausschalten der Vorsteuerung

FFWON:

FFWOF:

Hinweis

ber Maschinendaten wird die Art der Vorsteuerung festgelegt und welche Bahnachsen 
vorgesteuert verfahren werden sollen.

Standard: Geschwindigkeitsabhngige Vorsteuerung

Option: Beschleunigungsabhngige Vorsteuerung

Beispiel

Programmcode

N10 FFWON

N20 G1 X Y F900 SOFT

3.14.4

Programmierbare Konturgenauigkeit (CPRECON, CPRECOF)

Die Funktion "Programmierbare Konturgenauigkeit" reduziert den Bahnfehler an gekrmmten 
Konturen durch automatische Anpassung der Geschwindigkeit.

Die einzuhaltende Konturgenauigkeit wird abhngig von der Projektierung der Maschine 
(MD20470 $MC_MC_CPREC_WITH_FFW; siehe Angaben des Maschinenherstellers) 
entweder ber das Settingdatum $SC_CONTPREC oder ber die programmierte 
Konturtoleranz CTOL vorgegeben. Je kleiner der Wert und je kleiner der KV-Faktor der 
Geometrieachsen, umso strker wird der Bahnvorschub auf gekrmmten Konturen abgesenkt. 

Die Funktion "Programmierbare Konturgenauigkeit" wird ber die Anweisungen CPRECON und 
CPRECOF im NC-Programm ein- bzw. ausgeschaltet.  

Syntax

Bedeutung

CPRECON

...

CPRECOF

CPRECON:

G-Befehlsaufruf: "Programmierbare Konturgenauigkeit" einschalten

Wirksamkeit:

modal

CPRECOF:

G-Befehlsaufruf: "Programmierbare Konturgenauigkeit" ausschalten

Wirksamkeit:

modal

830

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.14 Bahnverhalten

CPRECON und CPRECOF bilden zusammen die G-Funktionsgruppe 39 (Programmierbare 
Konturgenauigkeit).

Hinweis

ber das Settingdatum $SC_MINFEED (Mindestbahnvorschub bei CPRECON) kann der 
Anwender eine Mindestgeschwindigkeit fr den Bahnvorschub vorgeben.   

Der Vorschub wird nicht unter diesen Wert begrenzt, es sei denn, ein niedrigerer F-Wert wurde 
programmiert oder die dynamischen Begrenzungen der Achsen erzwingen eine niedrigere 
Bahngeschwindigkeit.

Hinweis

Die Funktion "Programmierbare Konturgenauigkeit" betrachtet nur die Geometrieachsen der 
Bahn. Auf die Geschwindigkeiten von Positionierachsen hat sie keinen Einfluss.

Beispiel

Programmcode

N10 G0 X0 Y0 

N20 CPRECON

Kommentar

; Einschalten der "Programmierbaren 
Konturgenauigkeit".

N30 G1 G64 X100 F10000

; Bearbeitung mit 10 m/min im Bahnsteuerbetrieb.

N40 G3 Y20 J10

; Automatische Vorschubbegrenzung im Kreissatz.

N50 G1 X0

...

N100 CPRECOF

N110 G0 ...

; Vorschub wieder ohne Begrenzung (10 m/min).

; Ausschalten der "Programmierbaren 
Konturgenauigkeit".

Siehe auch

Kontur-/Orientierungtoleranz programmieren (CTOL, OTOL, ATOL) (Seite 850)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

831

 
 
 
Arbeitsvorbereitung

3.14 Bahnverhalten

3.14.5

Programmablauf mit Vorlaufspeicher (STOPFIFO, STARTFIFO, FIFOCTRL, 
STOPRE) 

Je nach Ausbaustufe verfgt die Steuerung ber eine bestimmte Menge sog. Vorlaufspeicher, 
die fertig aufbereitete Stze vor der Abarbeitung speichern und im Fertigungsablauf als 
schnelle Satzfolgen ausgeben. Hierdurch lassen sich kurze Wege mit hohen 
Geschwindigkeiten abfahren. Soweit die Restzeit der Steuerung es zulsst, wird der 
Vorlaufspeicher grundstzlich gefllt.  

Bearbeitungsabschnitt kennzeichnen

Der Bearbeitungsabschnitt, der im Vorlaufspeicher zwischengespeichert werden soll, wird im 
Teileprogramm am Anfang mit "STOPFIFO" und am Ende mit "STARTFIFO" gekennzeichnet. 
Die Abarbeitung der aufbereiteten und zwischengespeicherten Stze beginnt erst nach dem 
Befehl "STARTFIFO" oder wenn der Vorlaufspeicher voll ist.

Automatische Vorlaufspeichersteuerung

Die automatische Vorlaufspeichersteuerung wird mit dem Befehl "FIFOCTRL" aufgerufen. 
"FIFOCTRL" wirkt zunchst genauso wie "STOPFIFO". Bei jeder Programmierung wird 
gewartet, bis der Vorlaufspeicher voll ist, dann beginnt die Abarbeitung. Unterschiedlich ist 
dagegen das Verhalten beim Leerlaufen des Vorlaufspeichers: mit "FIFOCTRL" wird ab einem 
Fllstand von 2/3 die Bahngeschwindigkeit zunehmend reduziert, um ein komplettes 
Leerlaufen und ein Abbremsen bis zum Stillstand zu verhindern.

Vorlaufstopp

Die Satzaufbereitung und -zwischenspeicherung wird angehalten, wenn im Satz der Befehl 
"STOPRE" programmiert ist. Der nachfolgende Satz wird erst dann ausgefhrt, wenn alle 

832

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:3)(cid:3)(cid:3)(cid:41)(cid:72)(cid:85)(cid:87)(cid:76)(cid:74)(cid:88)(cid:81)(cid:74)(cid:86)(cid:68)(cid:69)(cid:79)(cid:68)(cid:88)(cid:73)(cid:11)(cid:86)(cid:70)(cid:75)(cid:81)(cid:72)(cid:79)(cid:79)(cid:72)(cid:3)(cid:54)(cid:68)(cid:87)(cid:93)(cid:73)(cid:82)(cid:79)(cid:74)(cid:72)(cid:81)(cid:12)(cid:57)(cid:82)(cid:85)(cid:79)(cid:68)(cid:88)(cid:73)(cid:86)(cid:83)(cid:72)(cid:76)(cid:70)(cid:75)(cid:72)(cid:85)(cid:49)(cid:38)(cid:16)(cid:51)(cid:85)(cid:82)(cid:74)(cid:85)(cid:68)(cid:80)(cid:80)Arbeitsvorbereitung

3.14 Bahnverhalten

vorher aufbereiteten und gespeicherten Stze vollstndig abgearbeitet sind. Der vorherige 
Satz wird im Genauhalt angehalten (wie G9).

ACHTUNG

Programmabbruch

Bei eingeschalteter Werkzeugkorrektur und bei Spline-Interpolationen sollte kein "STOPRE" 
programmiert werden, da sonst zusammengehrige Satzfolgen unterbrochen werden.

Syntax

Tabelle 3-3 Bearbeitungsabschnitt kennzeichnen:

STOPFIFO

...

STARTFIFO

Tabelle 3-4 Automatische Vorlaufspeichersteuerung:

...

FIFOCTRL

...

Tabelle 3-5 Vorlaufstopp:

...

STOPRE

...

Hinweis

Die Befehle "STOPFIFO", "STARTFIFO", "FIFOCTRL" und "STOPRE" mssen im eigenen 
Satz programmiert werden.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

833

 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.14 Bahnverhalten

Bedeutung

STOPFIFO:

"STOPFIFO" kennzeichnet den Beginn eines Bearbeitungsabschnitts, der im Vor
laufspeicher zwischengespeichert werden soll. Mit "STOPFIFO" wird die Bearbei
tung angehalten und der Vorlaufspeicher gefllt, bis:

 "STARTFIFO" oder "STOPRE" erkannt wird

oder

 der Vorlaufspeicher voll ist

oder

 das Programmende erreicht ist.

Mit "STARTFIFO" startet die schnelle Abarbeitung des Bearbeitungsabschnitts, 
parallel dazu erfolgt das Auffllen des Vorlaufspeichers

Einschalten der automatischen Vorlaufspeichersteuerung

Vorlauf stoppen

STARTFIFO:

FIFOCTRL:

STOPRE:

Hinweis

Das Auffllen des Vorlaufspeichers wird nicht ausgefhrt bzw. unterbrochen, wenn der 
Bearbeitungsabschnitt Befehle enthlt, die einen ungepufferten Betrieb erzwingen 
(Referenzpunktfahren, Messfunktionen, ).

Hinweis

Beim Zugriff auf Zustandsdaten der Maschine ($SA...) erzeugt die Steuerung internen 
Vorlaufstopp.

Beispiel: Vorlauf stoppen

Programmcode

...

N30 MEAW=1 G1 F1000 X100 Y100 Z50

N40 STOPRE

...

Kommentar

; Messsatz mit Messtaster des ersten 
Messeingangs und Geradeninterpolation.

; Vorlaufstopp.

3.14.6

Stop-Delay-Bereiche definieren (DELAYFSTON, DELAYFSTOF)

Zur Definition eines bedingt unterbrechbaren Bereichs im Teileprogramm (Stop-Delay-
Bereich) dienen die vordefinierten Prozeduren DELAYFSTON und DELAYFSTOF.

Hinweis

In Synchronaktionen sind DELAYFSTON und DELAYFSTOF nicht zulssig!

834

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
Arbeitsvorbereitung

3.14 Bahnverhalten

Syntax

Bedeutung

DELAYFSTON

...

DELAYFSTOF

DELAYFSTON:

Beginn eines Stop-Delay-Bereichs definieren

Alleine im Satz:

ja

DELAYFSTOF:

Ende eines Stop-Delay-Bereichs definieren

Alleine im Satz:

ja

Programmierbeispiel

In einer Schleife wird folgender Programmblock wiederholt:

Programmcode

...

N99 MY_LOOP:

N100 G0 Z200

N200 G0 X0 Z200

N300 DELAYFSTON

N400 G33 Z5 K2 M3 S1000

N500 G33 Z0 X5 K3

N600 G0 X100

N700 DELAYFSTOF

N800 GOTOB MY_LOOP

...

Im folgenden Bild ist erkennbar, dass der Anwender im Stop-Delay-Bereich "Stopp" drckt, und 
die NC beginnt den Bremsvorgang auerhalb des Stop-Delay-Bereichs, d. h. im Satz N100. 
Damit kommt die NC im vorderen Bereich von N100 zum Halten.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

835

(cid:54)(cid:87)(cid:82)(cid:83)(cid:83)(cid:16)(cid:55)(cid:68)(cid:86)(cid:87)(cid:72)(cid:54)(cid:87)(cid:82)(cid:83)(cid:83)(cid:16)(cid:55)(cid:68)(cid:86)(cid:87)(cid:72)(cid:3)(cid:90)(cid:166)(cid:75)(cid:85)(cid:72)(cid:81)(cid:71)(cid:3)(cid:72)(cid:76)(cid:81)(cid:72)(cid:85)(cid:3)(cid:42)(cid:22)(cid:22)(cid:16)(cid:37)(cid:72)(cid:68)(cid:85)(cid:69)(cid:72)(cid:76)(cid:87)(cid:88)(cid:81)(cid:74)(cid:49)(cid:38)(cid:3)(cid:86)(cid:87)(cid:82)(cid:83)(cid:83)(cid:87)(cid:49)(cid:20)(cid:19)(cid:19)(cid:3)(cid:42)(cid:19)(cid:3)(cid:61)(cid:21)(cid:19)(cid:19)(cid:49)(cid:21)(cid:19)(cid:19)(cid:3)(cid:42)(cid:19)(cid:3)(cid:59)(cid:19)(cid:3)(cid:61)(cid:21)(cid:19)(cid:19)(cid:49)(cid:25)(cid:19)(cid:19)(cid:3)(cid:42)(cid:19)(cid:3)(cid:59)(cid:20)(cid:19)(cid:19)(cid:49)(cid:24)(cid:19)(cid:19)(cid:3)(cid:42)(cid:22)(cid:22)(cid:3)(cid:61)(cid:19)(cid:3)(cid:59)(cid:24)(cid:3)(cid:46)(cid:21)(cid:49)(cid:23)(cid:19)(cid:19)(cid:3)(cid:42)(cid:22)(cid:22)(cid:3)(cid:61)(cid:24)(cid:3)(cid:46)(cid:21)(cid:59)(cid:61) 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.14 Bahnverhalten

Weitere Informationen

Unterprogrammende

Mit dem Ende des Unterprogramms, in dem DELAYFSTON gerufen wurde, wird implizit 
DELAYFSTOF aktiviert.

Schachtelung

Ruft Unterprogramm 1 in einem Stop-Delay-Bereich Unterprogramm 2, so ist 
Unterprogramm 2 komplett ein Stop-Delay-Bereich. Insbesondere ist DELAYFSTOF in 
Unterprogramm 2 wirkungslos.

Beispiel:

Programmcode

Kommentar

N10010 DELAYFSTON

; Stze mit N10xxx Programmebene 1.

N10020 R1 = R1 + 1

N10030 G4 F1

; Stop-Delay-Bereich beginnt.

...

N10040 Unterprogramm2

...

...

; Interpretation des Unterprogramms 2.

N20010 DELAYFSTON

; Unwirksam, wiederholter Beginn, 2. Ebene.

...

N20020 DELAYFSTOF

; Unwirksam, Ende in anderer Ebene.

N20030 RET

N10050 DELAYFSTOF

; Stop-Delay-Bereichsende in gleicher Ebene.

...

N10060 R2 = R2 + 2

N10070 G4 F1

Systemvariablen

; Stop-Delay-Bereich endet. Stopps wirken ab jetzt un-
mittelbar.

Ob sich die Teileprogrammbearbeitung zum aktuellen Zeitpunkt in einem Stop-Delay-Bereich 
befindet, kann mittels folgender Systemvariablen abgefragt werden:

 im Teileprogramm mit $P_DELAYFST

 in Synchronaktionen mit $AC_DELAYFST

Wert

Bedeutung

0

1

Stop-Delay-Bereich nicht aktiv

Stop-Delay-Bereich aktiv

3.14.7

Programmstelle fr SERUPRO verhindern (IPTRLOCK, IPTRUNLOCK)

Fr bestimmte komplizierte mechanische Situationen an der Maschine ist es erforderlich, den 
Satzsuchlauf SERUPRO zu verhindern.

836

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.14 Bahnverhalten

Mit einem programmierbaren Unterbrechungszeiger besteht eine Eingriffsmglichkeit, beim 
"Suchen auf der Unterbrechungsstelle", vor der suchunfhigen Stelle aufzusetzen. 

Es knnen auch suchunfhige Bereiche in Teileprogrammbereichen definiert werden, in denen 
die NC noch nicht wieder einsteigen kann. Mit dem Programmabbruch vermerkt der NC den 
zuletzt verarbeiteten Satz, auf den ber die Bedienoberflche HMI gesucht werden kann.  

Syntax

IPTRLOCK
IPTRUNLOCK

Die Befehle stehen allein in einer Teleprogrammzeile und ermglichen einen 
programmierbaren Unterbrechungszeiger

Bedeutung

Beispiel

IPTRLOCK:

IPTRUNLOCK:

Beginn des suchunfhigen Programmabschnitts

Ende des suchunfhigen Programmabschnitts

Beide Befehle sind nur in Teileprogrammen, nicht jedoch in Synchronaktionen zulssig.

Verschachtelung suchunfhiger Programmabschnitte in zwei Programmebenen mit impliziten 
"IPTRUNLOCK". Das implizite "IPTRUNLOCK" in Unterprogramm 1 beendet den 
suchunfhigen Bereich.

Programmcode

N10010 IPTRLOCK()

N10020 R1 = R1 + 1

N10030 G4 F1

...

N10040 Unterprogramm2

Kommentar

; Haltesatz, der suchunfhige Programmabschnitt be-
ginnt.

...

; Interpretation des Unterprogramms 2.

N20010 IPTRLOCK ()

; Unwirksam, wiederholter Beginn.

...

N20020 IPTRUNLOCK ()

; Unwirksam, Ende in anderer Ebene.

N20030 RET

...

N10060 R2 = R2 + 2

N10070 RET

N100 G4 F2

; Ende des suchunfhigen Programmabschnitts.

; Hauptprogramm wird fortgesetzt.

Eine Unterbrechung auf 100 liefert dann wieder der Unterbrechungszeiger.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

837

 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.14 Bahnverhalten

Weitere Informationen

Suchunfhige Bereiche erfassen und suchen

Die suchunfhigen Programmabschnitte werden mit dem Sprachbefehlen "IPTRLOCK" und 
"IPTRUNLOCK" gekennzeichnet. 

Der Befehl "IPTRLOCK" friert den Unterbrechungszeiger auf ein im Hauptlauf ausfhrbaren 
Einzelsatz (SB1) ein. Dieser Satz wird im Folgenden als Haltesatz bezeichnet. Tritt nach 
"IPTRLOCK" ein Programmabbruch ein, so kann auf der Bedienoberflche HMI nach diesen 
sogenannten Haltesatz gesucht werden. 

Auf den aktuellen Satz wieder aufsetzen

Der Unterbrechungszeiger wird mit "IPTRUNLOCK" fr den nachfolgenden 
Programmabschnitt auf den aktuellen Satz zum Unterbrechungspunkt gesetzt werden.

Nach einem gefundenen Suchziel kann mit dem selben Haltesatz ein neues Suchziel 
wiederholt werden.

Ein vom Benutzer editierter Unterbrechungszeiger, muss ber HMI wieder entfernt werden.

Regeln bei Schachtelung

Folgende Punkte regeln das Zusammenspiel der Sprachbefehle "IPTRLOCK" und 
"IPTRUNLOCK" mit Verschachtelungen und dem Unterprogrammende:

1. Mit dem Ende des Unterprogramms, in dem "IPTRLOCK" gerufen wurde, wird implizit 

"IPTRUNLOCK" aktiviert.

2. "IPTRLOCK" in einem suchunfhigen Bereich bleibt ohne Wirkung.

3. Ruft Unterprogramm1 in einem suchunfhigen Bereich Unterprogramm2, so bleibt 

Unterprogramm2 komplett suchunfhig. Insbesondere ist "IPTRUNLOCK" in 
Unterprogramm2 wirkungslos.

Weitere Informationen: Funktionshandbuch Basisfunktionen

Systemvariable

Ein suchunfhiger Bereich kann mit "$P_IPTRLOCK" im Teileprogramm erkannt werden.

Automatischer Unterbrechungszeiger

Die Funktion automatischer Unterbrechungszeiger legt automatisch eine vorher festgelegte 
Kopplungsart als suchunfhig fest. Mittels Maschinendatum wird fr

 Elektronisches Getriebe bei "EGON"

 Axiale Leitwertkopplung bei "LEADON"

der automatische Unterbrechungszeiger aktiviert. berschneiden sich der programmierte und 
der ber Maschinendatum aktivierbare automatische Unterbrechungszeiger, so wird der 
grtmgliche suchunfhige Bereich gebildet.

838

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.14 Bahnverhalten

3.14.8

Wiederanfahren an Kontur (REPOSA, REPOSL, REPOSQ, REPOSQA, 
REPOSH, REPOSHA, DISR, DISPR, RMIBL, RMBBL, RMEBL, RMNBL) 

Wenn Sie whrend der Bearbeitung das laufende Programm unterbrechen und das Werkzeug 
freifahren  z.B. wegen Werkzeugbruchs oder zum Vermessen des Werkstcks  knnen Sie 
anschlieend die Kontur an einem whlbaren Punkt programmgesteuert wieder anfahren. 

Der Befehl REPOS wirkt in einem ASUP wie ein Unterprogramm-Rcksprung (z.B. M17). 
Nachfolgende Stze werden nicht mehr ausgefhrt. Zur Unterbrechung des Programmlaufs 
siehe auch "Interruptroutine (ASUP) (Seite 533)".

Syntax

REPOSA RMIBL DISPR=
REPOSA RMBBL
REPOSA RMEBL
REPOSA RMNBL
REPOSL RMIBL DISPR=
REPOSL RMBBL
REPOSL RMEBL
REPOSL RMNBL
REPOSQ RMIBL DISPR= DISR=
REPOSQ RMBBL DISR=
REPOSQ RMEBL DISR=
REPOSQA DISR=
REPOSH RMIBL DISPR= DISR=
REPOSH RMBBL DISR=
REPOSH RMEBL DISR=
REPOSHA DISR=

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

839

REPOSArbeitsvorbereitung

3.14 Bahnverhalten

Bedeutung

Auswahl des Anfahrwegs

REPOSA:

REPOSL:

Wiederanfahren an die Kontur mit den Geometrieachsen auf einer Ge
raden.

Alle anderen Kanalachsen werden ebenfalls repositioniert.

Wiederanfahren an die Kontur mit den Geometrieachsen auf einer Ge
raden . 

Alle anderen Kanalachsen mssen explizit programmiert werden.

REPOSQ DISR= :

Wiederanfahren an die Kontur mit den Geometrieachsen auf einem Vier
telkreis mit Radius DISR.

Alle anderen Kanalachsen mssen explizit programmiert werden.

REPOSQA DISR= :

Wiederanfahren an die Kontur mit den Geometrieachsen auf einem Vier
telkreis mit Radius DISR.

REPOSH DISR= :

REPOSHA DISR= :

Alle anderen Kanalachsen werden ebenfalls repositioniert.

Wiederanfahren an die Kontur mit den Geometrieachsen auf einem 
Halbkreis mit Durchmesser DISR.

Alle anderen Kanalachsen mssen explizit programmiert werden.

Wiederanfahren an die Kontur mit den Geometrieachsen auf einem 
Halbkreis mit Radius DISR.

Alle anderen Kanalachsen werden ebenfalls repositioniert.

Auswahl des Wiederanfahrpunkts

RMIBL:

Unterbrechungspunkt anfahren

RMIBL DISPR=:

Eintrittspunkt im Abstand DISPR in mm/inch vor Unterbrechungspunkt 

RMBBL:

RMEBL:

Satzanfangspunkt anfahren

Satzendpunkt anfahren

RMEBL DISPR= :

Satzendpunkt anfahren im Abstand DISPR vor Endpunkt

An den nchstliegenden Bahnpunkt anfahren

Achsen, in denen angefahren werden soll

RMNBL:

A0 B0 C0 :

Hinweis

Kompatibilitt

Um kompatibel mit lteren Softwarestnden zu bleiben, knnen Sie den REPOS-Anfahrmodus 
auch weiterhin ber die modalen Befehle RMI, RMB, RME und RMN programmieren. Bei 
Verwendung innerhalb eines ASUP sollte dieses mit dem Attribut SAVE in der PROC-Anweisung 
versehen werden. Andernfalls wirkt der im ASUP verwendete modale REPOS-Anfahrmodus, 
wenn er von der Voreinstellung RMI abweicht, auch bei nachfolgenden REPOS-Vorgnge.

Wiederanfahren an die Kontur auf einer Geraden, REPOSA, REPOSL

Das Werkzeug fhrt den Wiederanfahrpunkt direkt auf einer Geraden an.

Beispiel
REPOSL RMIBL DISPR=6 F400

840

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.14 Bahnverhalten

Wiederanfahren an die Kontur mit Viertelkreis, REPOSQ, REPOSQA

Das Werkzeug fhrt den Wiederanfahrpunkt auf einem Viertelkreis mit Radius DISR=... an. 
Den notwendigen Zwischenpunkt zwischen Start- und Wiederanfahrpunkt berechnet die 
Steuerung automatisch.

Beispiel
REPOSQ RMIBL DISR=10 F400

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

841

YXDISPRREPOSLWiederanfahr-punktUnterbrechungspunktWiederanfahr-punktStartpunktZwischen-punktYXQSOPERDISRArbeitsvorbereitung

3.14 Bahnverhalten

Wiederanfahren an die Kontur mit Halbkreis, REPOSH, REPOSHA

Das Werkzeug fhrt den Wiederanfahrpunkt auf einem Halbkreis mit Durchmesser DISR=... 
an. Den notwendigen Zwischenpunkt zwischen Start- und Wiederanfahrpunkt berechnet die 
Steuerung automatisch.

Beispiel
REPOSH RMIBL DISR=20 F400

Wiederanfahrpunkt festlegen (nicht fr SERUPRO Anfahren mit RMNBL)

Bezogen auf den NC-Satz, in dem der Programm-Ablauf unterbrochen wurde, knnen Sie 
zwischen drei Wiederanfahrpunkten whlen:

 RMIBL, Unterbrechungspunkt

 RMBBL, Satzanfangspunkt bzw. letzter Endpunkt

 RMEBL, Satzendpunkt

842

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

YXWiederanfahr-punktStartpunktZwischen-punktDISRArbeitsvorbereitung

3.14 Bahnverhalten

Mit RMIBL DISPR=... bzw. mit RMEBL DISPR=... knnen Sie einen Wiederanfahrpunkt 
festlegen, der vor dem Unterbrechungspunkt bzw. vor dem Satzendpunkt liegt.

Mit DISPR=... beschreiben Sie den Konturweg in mm/inch, um den der Wiederanfahrpunkt vor 
dem Unterbrechungs- bzw. Endpunkt liegt. Dieser Punkt kann - auch fr grere Werte - 
maximal im Satzanfangspunkt liegen.

Wird kein DISPR=... programmiert, gilt DISPR=0 und damit der Unterbrechungspunkt (bei 
RMIBL) bzw. der Satzendpunkt (bei RMEBL).

Vorzeichen von DISPR

Das Vorzeichen von DISPR wird ausgewertet. Bei positivem Vorzeichen ist das Verhalten wie 
bisher.

Bei negativem Vorzeichen wird hinter dem Unterbrechungspunkt bzw. bei RMBBL hinter dem 
Startpunkt wieder aufgesetzt. 

Der Abstand Unterbrechungspunkt-Aufsetzpunkt ergibt sich aus dem Betrag von DISPR. 
Dieser Punkt kann auch fr betragsmig grere Werte maximal im Satzendpunkt liegen.

Anwendungsbeispiel:

Durch einen Sensor wird die Annherung an eine Spannpratze erkannt. Es wird ein ASUP 
ausgelst, mit dem die Spannpratze umfahren wird.

Anschlieend wird mit negativem DISPR auf einen Punkt hinter der Spannpratze repositioniert 
und das Programm fortgesetzt.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

843

(cid:54)(cid:68)(cid:87)(cid:93)(cid:68)(cid:81)(cid:73)(cid:68)(cid:81)(cid:74)(cid:86)(cid:16)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:56)(cid:81)(cid:87)(cid:72)(cid:85)(cid:69)(cid:85)(cid:72)(cid:70)(cid:75)(cid:88)(cid:81)(cid:74)(cid:86)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:54)(cid:68)(cid:87)(cid:93)(cid:72)(cid:81)(cid:71)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:60)(cid:59)(cid:53)(cid:48)(cid:37)(cid:37)(cid:47)(cid:53)(cid:48)(cid:44)(cid:37)(cid:47)(cid:53)(cid:48)(cid:40)(cid:37)(cid:47)Arbeitsvorbereitung

3.14 Bahnverhalten

SERUPRO-Anfahren mit RMNBL

Wird bei der Bearbeitung an einer beliebigen Stelle ein Abbruch erzwungen, dann wird mit 
SERUPRO-Anfahren unter RMNBL der krzeste Weg von der Abbruchstelle angefahren, um 
anschlieend nur den Restweg abzuarbeiten. Dazu startet der Anwender ein SERUPRO-
Vorgang auf den Unterbrechungssatz und positioniert mit den JOG-Tasten vor die schadhafte 
Stelle des Zielsatzes.

Hinweis

SERUPRO

Fr SERUPRO ist RMIBL und RMBBL identisch. RMNBL ist nicht nur auf SERUPRO 
beschrnkt, sondern allgemein gltig.

844

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:54)(cid:40)(cid:53)(cid:56)(cid:51)(cid:53)(cid:50)(cid:16)(cid:36)(cid:81)(cid:73)(cid:68)(cid:75)(cid:85)(cid:72)(cid:81)(cid:44)(cid:86)(cid:87)(cid:83)(cid:82)(cid:86)(cid:76)(cid:87)(cid:76)(cid:82)(cid:81)(cid:3)(cid:69)(cid:72)(cid:76)(cid:3)(cid:54)(cid:68)(cid:87)(cid:93)(cid:86)(cid:88)(cid:70)(cid:75)(cid:79)(cid:68)(cid:88)(cid:73)(cid:54)(cid:68)(cid:87)(cid:93)(cid:68)(cid:81)(cid:73)(cid:68)(cid:81)(cid:74)(cid:86)(cid:16)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:39)(cid:88)(cid:85)(cid:70)(cid:75)(cid:3)(cid:45)(cid:50)(cid:42)(cid:16)(cid:55)(cid:68)(cid:86)(cid:87)(cid:72)(cid:81)(cid:72)(cid:85)(cid:85)(cid:72)(cid:76)(cid:70)(cid:75)(cid:87)(cid:72)(cid:3)(cid:51)(cid:82)(cid:86)(cid:76)(cid:87)(cid:76)(cid:82)(cid:81)(cid:54)(cid:68)(cid:87)(cid:93)(cid:72)(cid:81)(cid:71)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:60)(cid:59)(cid:53)(cid:48)(cid:44)(cid:37)(cid:47)(cid:3)(cid:32)(cid:3)(cid:53)(cid:48)(cid:37)(cid:37)(cid:47)(cid:53)(cid:48)(cid:49)(cid:37)(cid:47)(cid:53)(cid:48)(cid:40)(cid:37)(cid:47)Anfahren vom nchstliegenden Bahnpunkt RMNBL

Zum Interpretationszeitpunkt von REPOSA wird nach einer Unterbrechung der 
Wiederanfahrsatz mit RMNBL nicht noch einmal komplett begonnen, sondern nur der Restweg 
abgearbeitet. Es wird der nchstliegende Bahnpunkt des unterbrochenen Satzes angefahren.

Arbeitsvorbereitung

3.14 Bahnverhalten

Status fr den gltigen REPOS-Mode

Der gltige REPOS-Mode des unterbrochenen Satzes kann ber Synchronaktionen mit der 
Variablen $AC_REPOS_PATH_MODE gelesen werden:   

0
1
2
3
4

Anfahren nicht definiert
RMBBL: Anfahren auf den Beginn
RMIBL: Anfahren auf den Unterbrechungspunkt
RMEBL: Anfahren auf den Satzendpunkt
RMNBL: Anfahren auf den nchstliegenden Bahnpunkt des unterbrochenen Satzes

Anfahren mit neuem Werkzeug

Falls Sie den Programmablauf wegen Werkzeugbruch gestoppt haben:

Mit Programmierung der neuen D-Nummer wird das Programm ab Wiederanfahrpunkt mit den 
genderten Werkzeugkorrekturwerten fortgesetzt.

Bei genderten Werkzeugkorrekturwerten kann der Unterbrechungspunkt mglicherweise 
nicht mehr angefahren werden. In diesem Fall wird der dem Unterbrechungspunkt 
nchstgelegene Punkt auf der neuen Kontur angefahren (gegebenenfalls um DISPR 
modifiziert).

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

845

(cid:58)(cid:76)(cid:72)(cid:71)(cid:72)(cid:85)(cid:68)(cid:81)(cid:73)(cid:68)(cid:75)(cid:85)(cid:72)(cid:81)(cid:54)(cid:68)(cid:87)(cid:93)(cid:68)(cid:81)(cid:73)(cid:68)(cid:81)(cid:74)(cid:86)(cid:16)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:54)(cid:68)(cid:87)(cid:93)(cid:72)(cid:81)(cid:71)(cid:83)(cid:88)(cid:81)(cid:78)(cid:87)(cid:53)(cid:48)(cid:44)(cid:37)(cid:47)(cid:60)(cid:59)(cid:53)(cid:48)(cid:37)(cid:37)(cid:47)(cid:53)(cid:48)(cid:49)(cid:37)(cid:47)(cid:53)(cid:48)(cid:40)(cid:37)(cid:47)(cid:36)(cid:54)(cid:56)(cid:51)Arbeitsvorbereitung

3.14 Bahnverhalten

Kontur anfahren

Die Bewegung, mit der das Werkzeug wieder an die Kontur heranfhrt, ist programmierbar. Die 
Adressen der zu verfahrenden Achsen geben Sie mit Wert Null an.

Mit den Befehlen REPOSA, REPOSQA und REPOSHA werden automatisch alle Achsen 
repositioniert. Es ist keine Achsangabe notwendig.

Bei Programmierung von REPOSL, REPOSQ und REPOSH fahren alle Geometrieachsen 
automatisch, also auch ohne Angabe im Befehl, an. Alle anderen Achsen mssen im Befehl 
angegeben werden.

Fr die Kreisbewegungen REPOSH und REPOSQ gilt:

Der Kreis wird in der angegebenen Arbeitsebene G17 bis G19 gefahren.

Falls Sie im Anfahrsatz die dritte Geometrieachse (Zustellrichtung) angeben, wird der 
Wiederanfahrpunkt fr den Fall, dass Werkzeugposition und programmierte Position in 
Zustellrichtung nicht bereinstimmen, auf einer Schraubenlinie angefahren.

846

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

YXArbeitsvorbereitung

3.14 Bahnverhalten

In folgenden Fllen wird automatisch auf lineares Anfahren REPOSL umgeschaltet:

 Sie haben keinen Wert fr DISR angegeben.

 Es gibt keine definierte Anfahrrichtung (Programmunterbrechung in einem Satz ohne 

Verfahrinformation).

 Bei Anfahrrichtung senkrecht zur aktuellen Arbeitsebene.

3.14.9

Beeinflussung der Bewegungsfhrung

3.14.9.1

Maximalen Achsruck anpassen (JERKLIM)

Mit dem Befehl JERKLIM kann im Teileprogramm der per Maschinendatum eingestellte 
maximal mgliche Ruck einer Achse bei Bahnbewegung in kritischen Programmabschnitten 
reduziert oder berhht werden.  

Voraussetzung

Wirksamkeit

Der Beschleunigungsmodus SOFT muss aktiv sein.

JERKLIM wirkt:

 in den AUTOMATIK-Betriebsarten

 nur auf Bahnachsen

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

847

Arbeitsvorbereitung

3.14 Bahnverhalten

Syntax

Bedeutung

JERKLIM[<Ax>]=<Value>

JERKLIM:

<Ax>:

<Wert>:

Ruckgrenzwert anpassen

Maschinenachse, deren Ruckgrenzwert angepasst werden soll

Prozentualer Korrekturwert

Der Korrekturwert bezieht sich auf den projektierten maximalen Achsruck bei 
Bahnbewegung (MD32431 $MA_MAX_AX_JERK).

Wertebereich:

1 ... 200

Der Wert 100 bewirkt keine Beeinflussung des Rucks.

Hinweis

Verhalten bei Teileprogrammende und Kanal-Reset

Das Verhalten von JERKLIM bei Teileprogrammende und Kanal-Reset ist abhngig von der 
Einstellung von Bit 0 im Maschinendatum MD32320 $MA_DYN_LIMIT_RESET_MASK.

Beispiel

Programmcode

Kommentar

N1000 G0 X0 Y0 F10000 SOFT G64

N1100 G1 X20 RNDM=5 ACC[X]=20 ACC[Y]=30

N1200 G1 Y20 JERKLIM[Y]=200

N1300 G1 X0 JERKLIM[X]=2

N1400 G1 Y0

M30

; Der Achsschlitten in Y-Richtung kann 
mit max. 200% des fr die Achse zulssi-
gen Rucks beschleunigt/verzgert werden.

; Der Achsschlitten in X-Richtung soll 
nur mit max. 2% des fr die Achse zuls-
sigen Rucks beschleunigt/verzgert wer-
den.

3.14.9.2

Maximale Achsgeschwindigkeit oder Spindeldrehzahl anpassen (VELOLIM)

Mit dem Befehl VELOLIM kann im Teileprogramm die per Maschinendatum eingestellte 
maximal mgliche Geschwindigkeit einer Achse bzw. die maximal mgliche 
getriebestufenabhngige Drehzahl einer Spindel reduziert werden.  

848

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
Arbeitsvorbereitung

3.14 Bahnverhalten

Wirksamkeit

Syntax

Bedeutung

VELOLIM wirkt:

 in den AUTOMATIK-Betriebsarten

 auf Bahn- und Positionierachsen

 auf Spindeln im Spindel-/Achsbetrieb

VELOLIM[<Ax>]=<Value>

VELOLIM:

<Ax>:

Geschwindigkeits- oder Drehzahlgrenzwert anpassen

Achse oder Spindel, deren Geschwindigkeits- oder Drehzahlgrenzwert angepasst 
werden soll

ber MD30455 $MA_MISC_FUNCTION_MASK Bit 6 kann eingestellt werden, ob 
VELOLIM unabhngig von der aktuellen Verwendung als Spindel oder Achse wirkt 
(Bit 6 = 1) oder getrennt fr jede Betriebsart programmierbar sein soll (Bit 6 = 0). 
Ist eine getrennte Wirkung projektiert, dann wird die Auswahl ber den Bezeichner 
bei der Programmierung getroffen:

 Spindelbezeichner fr Spindelbetriebsarten: S<n>

 Achsbezeichner fr den Achsbetrieb, z. B.: C

<Value>:

Prozentualer Korrekturwert

Bei Achsen bzw. bei Spindeln im Achsbetrieb mit der Einstellung MD30455 
Bit 6 = 0 bezieht sich der Korrekturwert auf die projektierte maximale Achsge
schwindigkeit (MD32000 $MA_MAX_AX_VELO).

Bei Spindeln im Spindel- oder Achsbetrieb und der Einstellung MD30455 Bit 6 = 1 
bezieht sich der Korrekturwert auf die Maximaldrehzahl der aktiven Getriebestufe 
(MD35130 $MA_GEAR_STEP_MAX_VELO_LIMIT[<n>]).

Wertebereich:

1 ... 100

Der Wert 100 bewirkt keine Beeinflussung der Geschwindigkeit bzw. Drehzahl.

Hinweis

Verhalten bei Teileprogrammende und Kanal-Reset

Das Verhalten von VELOLIM bei Teileprogrammende und Kanal-Reset ist abhngig von der 
Einstellung von Bit 0 im Maschinendatum MD32320 $MA_DYN_LIMIT_RESET_MASK.

Hinweis

Drehzahlbegrenzung im Spindelbetrieb

Eine Drehzahlbegrenzung durch VELOLIM (kleiner 100 %) kann im Spindelbetrieb ber 
folgende Systemvariablen erkannt werden:

 $AC_SMAXVELO (maximal mgliche Spindeldrehzahl)    
 $AC_SMAXVELO_INFO (Kennung fr die drehzahlbegrenzende Ursache)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

849

Arbeitsvorbereitung

3.14 Bahnverhalten

Beispiele

Beispiel 1: Geschwindigkeitsbegrenzung Maschinenachse

Programmcode

Kommentar

...

N70 VELOLIM[X]=80

...

; Der Achsschlitten in X-Richtung soll nur mit maximal 80% 
der fr die Achse zulssigen Geschwindigkeit verfahren wer-
den.

Beispiel 2: Drehzahlbegrenzung Spindel 1 (AX5)

Projektierung:

 MD35130 $MA_GEAR_STEP_MAX_VELO_LIMIT[ 1, AX5 ] = 1000

(Maximaldrehzahl der Getriebstufe 1 = 1000 U/min)

 MD30455 $MA_MISC_FUNCTION_MASK[ AX5 ], Bit 6 = 1

(Programmierung von VELOLIM wirkt gemeinsam fr Spindel- und Achsbetrieb 
unabhngig vom programmierten Bezeichner)

Programmierung:

Programmcode

Kommentar

N05 VELOLIM[S1]=90

...

N50 VELOLIM[C]=45

...

; Begrenzung der Maximaldrehzahl von Spindel 1 auf 90% von 
1000 U/min.

; Begrenzung der Maximaldrehzahl von Spindel 1 auf 45 % von 
1000 U/min, C sei der Achsbezeichner von S1.

3.14.10

Kontur-/Orientierungtoleranz programmieren (CTOL, OTOL, ATOL)

Mit den Adressen CTOL, OTOL und ATOL knnen die ber Maschinen- und Settingdaten 
parametrierten Bearbeitungstoleranzen fr Kompressor-Funktionen, berschleifen und 
Orientierungsglttung im Teileprogramm angepasst werden.

Die programmierten Toleranzwerte gelten, bis sie neu programmiert oder durch Zuweisung 
eines negativen Werts gelscht werden. Sie werden ferner gelscht bei Programmende bzw. 
Reset. Nach dem Lschen sind wieder die parametrierten Toleranzwerte wirksam.

Syntax

CTOL=<Value>
OTOL=<Value>
ATOL[<Axis>]=<Value>

850

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
Bedeutung

CTOL:

Adresse zum Programmieren der Konturtoleranz

Anwendungsbereich:

 alle Kompressor-Funktionen

 alle berschleifarten auer G641 und G644

Arbeitsvorbereitung

3.14 Bahnverhalten

Vorlaufstopp:

Wirksamkeit:

<Value>:

nein

modal

Der Wert fr die Konturtoleranz ist eine Lngenangabe.

Typ:

Einheit:

REAL

Inch/mm (abhngig von der aktuellen Einstel
lung der Maangabe)

Wertebereich:

 0:

< 0:

Toleranzwert

Lschen des programmierten Toleranz
werts

 Es gilt wieder der im Maschinen- bzw. 
Settingdatum parametrierte Toleranz
wert.

OTOL:

Adresse zum Programmieren der Orientierungstoleranz

Anwendungsbereich:

 alle Kompressor-Funktionen

Vorlaufstopp:

Wirksamkeit:

<Value>:

 Orientierungsglttung ORISON

 alle berschleifarten auer G641, G644 und OSD

nein

modal

Der Wert fr die Orientierungstoleranz ist eine Winkelangabe.

Typ:

Einheit:

Wertebereich:

REAL

Grad

 0:

< 0:

Toleranzwert

Lschen des programmierten Toleranz
werts

 Es gilt wieder der im Maschinen- bzw. 
Settingdatum parametrierte Toleranz
wert.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

851

Arbeitsvorbereitung

3.14 Bahnverhalten

ATOL:

Adresse zum Programmieren einer achsspezifischen Toleranz

Anwendungsbereich:

 alle Kompressor-Funktionen

Vorlaufstopp:

Wirksamkeit:

<Axis>:

<Value>:

 Orientierungsglttung ORISON

 alle berschleifarten auer G641, G644 und OSD

nein

modal

Name der Kanalachse, fr welche die programmierte Toleranz 
wirken soll

Der Wert fr die Achstoleranz ist je nach Achstyp (Linear- oder 
Rundachse) eine Lngen- oder Winkelangabe.

Typ:

Einheit:

REAL

fr Linearachsen:

Inch/mm (abhngig von 
der aktuellen Einstellung 
der Maangabe)

fr Rundachsen:

Grad

Wertebereich:

 0:

< 0:

Toleranzwert

Lschen des programmierten Toleranz
werts

 Es gilt wieder der im Maschinen- bzw. 
Settingdatum parametrierte Toleranz
wert.

Hinweis

Die mit CTOL und OTOL programmierten kanalspezifischen Toleranzwerte sind hherprior als 
die mit ATOL programmierten achsspezifischen Toleranzwerte.

Hinweis

Skalierende Frames

Skalierende Frames wirken auf die programmierten Toleranzen in gleicher Weise wie auf die 
Achspositionen, d. h. die relative Toleranz bleibt gleich.

Beispiel

Programmcode

Kommentar

COMPCAD G645 G1 F10000

; Kompressor-Funktion COMPCAD aktivieren.

X... Y... Z...

X... Y... Z...

X... Y... Z...

CTOL=0.02

X... Y... Z...

X... Y... Z...

X... Y... Z...

; Hier wirken die Maschinenund Settingdaten.

; Ab hier wirkt eine Konturtoleranz von 0,02 mm.

ASCALE X0.25 Y0.25 Z0.25

; Ab hier wirkt eine Konturtoleranz von 0,005 mm.

X... Y... Z...

852

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
Arbeitsvorbereitung

3.14 Bahnverhalten

Kommentar

; Ab hier wirken wieder Maschinen- und Settingdaten.

Programmcode

X... Y... Z...

X... Y... Z...

CTOL=1

X... Y... Z...

X... Y... Z...

X... Y... Z...

Systemvariablen

Lesen mit Vorlaufstopp

ber folgende Systemvariablen sind im Teileprogramm und Synchronaktion die aktuell 
wirksamen Toleranzen lesbar:

 $AC_CTOL

Kanalspezifische Konturtoleranz, die bei der Aufbereitung des aktuellen Hauptlaufsatzes 
wirksam war. 
Wenn keine Konturtoleranz wirksam ist, liefert $AC_CTOL die Wurzel aus der Summe der 
Quadrate der Toleranzen der Geometrieachsen.

 $AC_OTOL

Kanalspezifische Orientierungstoleranz, die bei der Aufbereitung des aktuellen 
Hauptlaufsatzes wirksam war. 
Wenn keine Orientierungstoleranz wirksam ist, liefert $AC_OTOL whrend einer aktiven 
Orientierungstransformation die Wurzel aus der Summe der Quadrate der Toleranzen der 
Orientierungsachsen, ansonsten den Wert "-1".

 $AA_ATOL[<Achse>]

Achsspezifische Konturtoleranz, die bei der Aufbereitung des aktuellen Hauptlaufsatzes 
wirksam war. 
Wenn eine Konturtoleranz aktiv ist, liefert $AA_ATOL[<Geometrieachse>] die 
Konturtoleranz geteilt durch die Wurzel aus der Anzahl der Geometrieachsen.
Wenn eine Orientierungstoleranz und eine Orientierungstransformation aktiv ist, liefert 
$AA_ATOL[<Orientierungsachse>] die Orientierungstoleranz geteilt durch die Wurzel aus 
der Anzahl der Orientierungsachsen.

Hinweis

Wenn keine Toleranzwerte programmiert wurden, dann sind die $A-Variablen nicht 
differenziert genug, um die Toleranzen der einzelnen Funktionen zu unterscheiden.

Solche Flle knnen auftreten, wenn die Maschinen- und Settingdaten unterschiedliche 
Toleranzen fr Kompressor-Funktionen, berschleifen und Orientierungsglttung einstellen. 
Die Systemvariablen liefern dann den grten Wert, der bei den gerade aktiven Funktionen 
auftritt. Wenn z. B. eine Kompressor-Funktion mit Orientierungstoleranz 0,1 und eine 
Orientierungsglttung ORISON mit 1 aktiv ist, liefert $AC_OTOL den Wert "1". Wird die 
Orientierungsglttung ausgeschaltet,  liefert $AC_OTOL den Wert "0,1".

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

853

 
 
 
 
 
Arbeitsvorbereitung

3.14 Bahnverhalten

Lesen ohne Vorlaufstopp

ber folgende Systemvariablen sind im Teileprogramm die aktuell wirksamen Toleranzen 
lesbar:

 $P_CTOL

Aktuell wirksame kanalspezifische Konturtoleranz.

 $P_OTOL

Aktuell wirksame kanalspezifische Orientierungstoleranz. 

 $PA_ATOL

Aktuell wirksame achsspezifische Konturtoleranz. 

Randbedingungen

Die mit CTOL, OTOL und ATOL programmierten Toleranzen wirken auch auf Funktionen, die 
indirekt von diesen Toleranzen abhngen:

 Die Begrenzung des Sehnenfehlers bei der Sollwertberechnung

 Die Grundfunktionen des Freiformflchenmodus

Folgende berschleif-Funktionen werden durch die Programmierung von CTOL, OTOL und 
ATOL nicht beeinflusst:

 berschleifen der Orientierung mit OSD

OSD verwendet keine Toleranz, sondern eine Distanz zum Satzbergang.

 berschleifen mit G644

G644 dient nicht der Bearbeitung, sondern der Optimierung von Werkzeugwechseln und 
anderen Bewegungen ohne Bearbeitung.

 berschleifen mit G645

G645 verhlt sich fast immer wie G642 und verwendet somit die programmierten 
Toleranzen. Nur an tangentenstetigen Satzbergngen mit einem Krmmungssprung, z. B. 
einem tangentialen Kreis-Gerade-bergang, wird der Toleranzwert aus dem 
Maschinendatum MD33120 $MA_PATH_TRANS_POS_TOL verwendet. Der 
berschleifweg kann sich an diesen Stellen nmlich auch auf der Auenseite der 
programmierten Kontur befinden, wo viele Anwendungen weniger tolerant sind. Auerdem 
gengt in der Regel eine kleine, fest eingestellte Toleranz zum Ausgleich der 
Krmmungsnderungen, ber die sich der NC-Programmierer keine Gedanken machen 
muss.

3.14.11

Satzwechselverhalten bei aktiver Kopplung (CPBC)

Mit dem Befehl CPBC wird das Satzwechselkriterium vorgegeben das erfllt sein muss, damit 
im Teileprogramm bei aktiver Kopplung ein Satzwechsel durchgefhrt wird.

CPBC[<Folgeachse>] = <Kriterium>

Syntax

854

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.14 Bahnverhalten

Bedeutung

Beispiel

CPBC:

<Folgeachse>:

<Kriterium>:

Satzwechselkriterium bei aktiver Kopplung

Achsbezeichner der Folgeachse

Satzwechselkriterium

Typ:

Wert

"NOC"

"IPOSTOP"

"COARSE"

"FINE"

STRING

Bedeutung: Satzwechsel erfolgt

unabhngig vom Kopplungszustand

bei sollwertseitigem Synchronlauf

bei istwertseitigem Synchronlauf "Grob"

bei istwertseitigem Synchronlauf "Fein"

Programmcode

; Satzwechsel erfolgt bei:

;  - Kopplung zu Folgeachse X2 == aktiv

;  - sollwertseitiger Synchronlauf == aktiv

CPBC[X2]="IPOSTOP"

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

855

 
 
 
Arbeitsvorbereitung

3.15 Achsfunktionen

3.15

Achsfunktionen

3.15.1

Achstausch, Spindeltausch (RELEASE, GET, GETD)

Eine oder mehrere Achsen bzw. Spindeln knnen immer nur in einem Kanal interpoliert 
werden. Muss eine Achse wechselweise in zwei verschiedenen Kanlen arbeiten (z. B. 
Palettenwechsler), so muss sie zunchst im aktuellen Kanal freigegeben und dann in den 
anderen Kanal bernommen werden. Die Achse wird zwischen den Kanlen getauscht. 

Achstauscherweiterungen

Eine Achse/Spindel kann mit Vorlaufstopp und Synchronisation zwischen Vorlauf und 
Hauptlauf oder alternativ auch ohne Vorlaufstopp getauscht werden. Auerdem ist ein 
Achstausch auch mglich ber:

 Frame mit Rotation, wenn diese Achse hierber mit anderen Achsen verknpft ist.

 Synchronaktionen, siehe Bewegungssynchronaktionen, "Achstausch RELEASE, GET".

Maschinenhersteller

Bitte beachten Sie die Angaben des Maschinenherstellers. ber projektierbare 
Maschinendaten muss eine Achse fr den Achstausch in allen Kanlen eindeutig definiert sein 
und das Achstauschverhalten ist auch ber Maschinedaten vernderbar einstellbar.

RELEASE(Achsname, Achsname, ...) oder RELEASE(S1)

GET(Achsname, Achsname, ...) oder GET(S2)

GETD(Achsname, Achsname, ...) oder GETD(S3)

Mit GETD (GET Directly) wird eine Achse direkt aus einem anderen Kanal geholt. Das 
bedeutet, dass zu diesem GETD kein passendes RELEASE in einem anderen Kanal 
programmiert sein muss. Es bedeutet aber auch, dass jetzt eine andere Kanalkommunikation 
aufgebaut werden muss (z. B. Waitmarken).

RELEASE (Achsname, Achsname, ):

Freigeben der Achse(n)

GET (Achsname, Achsname, ):

bernehmen der Achse(n)

GETD (Achsname, Achsname, ):

Direktes bernehmen der Achse(n)

Achsname:

RELEASE(S1):

GET(S2):

GETD(S3):

Achszuordnung im System: AX1, AX2,  oder 
Angabe der Maschinenachsnamen

Freigeben der Spindel S1, S2, 

bernehmen der Spindel S1, S2, 

Direktes bernehmen der Spindel S1, S2, 

GET-Anforderung ohne Vorlaufstopp

Syntax

Bedeutung

856

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Beispiele

Arbeitsvorbereitung

3.15 Achsfunktionen

Wird nach einer GET-Anforderung ohne Vorlaufstopp die Achse mit RELEASE(Achse) oder 
WAITP(Achse) wieder freigegeben, so fhrt ein nachfolgender GET zu einem GET mit 
Vorlaufstopp.

VORSICHT

Achszuordnung gendert

Eine mit GET bernommene Achse bzw. Spindel bleibt auch nach einem Tasten- oder 
Programm-RESET diesem Kanal zugeordnet.

Bei neuem Programmstart muss die Zuordnung der getauschten Achsen bzw. Spindeln 
programmtechnisch erfolgen, falls die Achse in ihrem Grundkanal bentigt wird.

Bei POWER ON wird sie dem im Maschinendatum hinterlegten Kanal zugeordnet.

Beispiel 1: Achstausch zwischen zwei Kanlen

Von 6 Achsen werden in Kanal 1 zur Bearbeitung benutzt: 1., 2., 3. und 4. Achse. 
5. und 6. Achse werden in Kanal 2 zum Werkstckwechsel benutzt.

Achse 2 soll zwischen beiden Kanlen getauscht werden knnen und nach POWER ON dem 
Kanal 1 zugeordnet sein.

Programm "MAIN" in Kanal 1:

Programmcode

Kommentar

INIT (2,"TAUSCH2")

; Programm TAUSCH2 im Kanal 2 anwhlen.

N START (2)

N GET (AX2)

...

N RELEASE (AX2)

N WAITM (1,1,2)

...

N M30

; Programm in Kanal 2 starten.

; Achse AX2 bernehmen.

; Achse AX2 freigeben.

; Warten auf WAIT-Marke in Kanal 1 und 2 zur Synchro-
nisation in den beiden Kanlen.

; Weiterer Ablauf nach Achstausch.

Programm "TAUSCH2" in Kanal 2:

Programmierung

N RELEASE(AX2)

N160 WAITM(1,1,2)

Kommentar

; Warten auf WAIT-Marke in Kanal 1 und 2 zur Synchro-
nisation in den beiden Kanlen.

N150 GET(AX2)

; Achse AX2 bernehmen.

...

N M30

; Weiterer Ablauf nach Achstausch.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

857

 
 
 
 
Arbeitsvorbereitung

3.15 Achsfunktionen

Beispiel 2: Achstausch ohne Synchronisierung

Wenn die Achse nicht synchronisiert werden muss, wird durch GET kein Vorlaufstopp erzeugt.

Programmierung

N01 G0 X0

N02 RELEASE(AX5)

N03 G64 X10

N04 X20

N05 GET(AX5)

Kommentar

; Wenn keine Synchronisation ntig, wird dies kein 
ausfhrbarer Satz.

N06 G01 F5000

; Kein ausfhrbarer Satz.

N07 X20

N08 X30

...

; Kein ausfhrbarer Satz, da X-Position wie in N04.

; Erster ausfhrbarer Satz nach N05.

Beispiel 3: Aktivierung eines Achstausches ohne Vorlaufstopp

Voraussetzung: Der Achstausch ohne Vorlaufstopp muss ber ein Maschinendatum projektiert 
werden.

Programmierung

N010 M4 S100

N011 G4 F2

N020 M5

N021 SPOS=0

N022 POS[B]=1

N023 WAITP(B)

N030 X1 F10

N031 X100 F500

N032 X200

N040 M3 S500

N041 G4 F2

N050 M5

N099 M30

Kommentar

; Achse B wird zur neutralen Achse.

; Achse lst kein Vorlaufstopp/REORG aus.

Wird die Spindel bzw. Achse B unmittelbar nach dem Satz N023 als PLC-Achse z. B. auf 
180 Grad und zurck auf 1 Grad verfahren, dann wird diese Achse wieder zur neutralen Achse 
und lst im Satz N40 keinen Vorlaufstopp auf.

Weitere Informationen

Voraussetzungen fr den Achstausch

 Die Achse muss ber Maschinendaten in allen Kanlen definiert sein, die Achse verwenden 

wollen.

 ber das achsspezifische Maschinendatum muss festgelegt sein, welchem Kanal die 

Achse nach POWER ON zugeordnet werden soll.

858

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.15 Achsfunktionen

Beschreibung

Achse freigeben: RELEASE

Bei der Achsfreigabe ist zu beachten:

1. Die Achse darf an keiner Transformation beteiligt sein.

2. Bei Achskopplungen (Tangentialsteuerung), mssen alle Achsen des Verbands 

freigegeben werden.

3. Eine konkurrierende Positionierachse kann in diesem Zustand nicht getauscht werden.

4. Bei einer Gantry-Masterachse werden auch alle Folgeachsen getauscht.

5. Bei Achskopplungen (Mitschleppen, Leitwertkopplung, Elektronisches Getriebe) kann nur 

die Leitachse des Verbandes freigegeben werden.

Achse bernehmen: GET

Mit diesem Befehl wird der eigentliche Achstausch durchgefhrt. Die Verantwortung fr die 
Achse liegt vollstndig bei dem Kanal, in dem der Befehl programmiert wurde.

Auswirkungen von GET:

Achstausch mit Synchronisierung:

Eine Achse muss immer dann synchronisiert werden, wenn sie zwischenzeitlich in einem 
anderen Kanal oder der PLC zugeordnet war, und vor dem GET keine Synchronisierung durch 
"WAITP", G74 oder Restweglschen stattgefunden hat.

 Ein Vorlaufstopp erfolgt (wie bei STOPRE).

 Die Bearbeitung wird so lange unterbrochen, bis der Tausch vollstndig ausgefhrt ist.

Automatisches "GET"

Wenn eine Achse prinzipiell im Kanal verfgbar, jedoch derzeitig nicht als "Kanal-Achse" 
vorhanden ist, wird automatisch ein GET ausgefhrt. Falls die Achse(n) schon synchronisiert 
ist (sind), wird kein Vorlaufstopp erzeugt.

Achstauschverhalten vernderbar einstellen

Der Abgabezeitpunkt von Achsen lsst sich ber ein Maschinendatum wie folgt einstellen:

 Automatischer Achstausch findet zwischen zwei Kanlen auch dann statt, wenn die Achse 

durch WAITP in einen neutralen Zustand gebracht wurde (Verhalten wie bisher)

 Bei der Anforderung einer Achs-Containerdrehung werden alle dem ausfhrenden Kanal 
zuordenbaren Achsen des Achs-Containers mittels impliziten GET bzw. GETD in den Kanal 
geholt. Ein anschlieender Achstausch ist erst nach dem Abschluss der Achs-
Containerdrehung wieder erlaubt.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

859

Arbeitsvorbereitung

3.15 Achsfunktionen

 Nach einem eingeschobenen Zwischensatz im Hauptlauf wird geprft, ob ein 

Reorganisieren erforderlich ist oder nicht. Nur wenn die Achszustnde dieses Satzes mit 
den aktuellen Achszustnden nicht bereinstimmen, ist ein Reorganisieren erforderlich.

 Statt eines GET-Satzes mit Vorlaufstopp und Synchronisation zwischen Vorlauf und 

Hauptlauf kann ein Achstausch auch ohne Vorlaufstopp erfolgen. Es wird dann nur ein 
Zwischensatz mit der GET-Anforderung erzeugt. Im Hauptlauf wird bei Abarbeitung dieses 
Satzes berprft, ob die Zustnde der Achse im Satz mit den aktuellen Achszustnden 
bereinstimmen.

3.15.2

Achse einem anderen Kanal bergeben (AXTOCHAN)

Mit dem Sprachbefehl AXTOCHAN kann eine Achse angefordert werden, um diese Achse einem 
anderen Kanal zu bergeben. Die Achse kann sowohl vom NC-Teileprogramm als auch aus 
einer Synchronaktion heraus in den entsprechenden Kanal gebracht werden. 

Syntax

Bedeutung

Beispiel

860

AXTOCHAN(Achsname,Kanalnummer[,Achsname,Kanalnummer[,...]])

Element

AXTOCHAN:

Achsname:

Beschreibung

Achse fr einen bestimmten Kanal anfordern

Achszuordnung im System: X, Y,  oder Angabe der beteiligten Maschinen
achsnamen. Der auszufhrende Kanal muss nicht der eigene Kanal sein und 
es muss auch nicht der Kanal sein, der aktuell das Interpolationsrecht fr die 
Achse besitzt

Kanalnummer:

Nummer des Kanals, dem die Achse zugeordnet werden soll

Hinweis

Konkurrierende Positionierachse und ausschlielich PLC kontrollierte Achse

Eine PLC-Achse kann als konkurrierende Positionierachse den Kanal nicht wechseln. Eine 
ausschlielich von der PLC kontrollierte Achse kann nicht dem NC-Programm zugeordnet 
werden.

Weitere Informationen: Funktionshandbuch Achsen und Spindeln

AXTOCHAN im NC-Programm

Die Achsen X und Y sind im 1. Kanal und im 2. Kanal bekannt. Aktuell hat der Kanal 1 das 
Interpolationsrecht und im Kanal 1 wird folgendes Programm gestartet:

Programmcode

Kommentar

N110 AXTOCHAN(Y,2)

; Y-Achse in den 2. Kanal schieben.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.15 Achsfunktionen

Programmcode

N111 M0

Kommentar

N120 AXTOCHAN(Y,1)

; Y-Achse wieder zurckholen (neutral).

N121 M0

N130 AXTOCHAN(Y,2,X,2)

N131 M0

; Y-Achse und X-Achse in den 2. Kanal schieben (Ach-
sen neutral).

N140 AXTOCHAN(Y,2)

; Y-Achse in den 2. Kanal schieben (NC-Programm).

N141 M0

Weitere Informationen

AXTOCHAN im NC-Programm

Dabei wird nur bei einer Anforderung der Achse fr das NC-Programm im eigenen Kanal ein 
GET durchgefhrt und damit auch auf die tatschliche Zustandsnderung gewartet. Wird die 
Achse fr einen anderen Kanal angefordert oder soll sie zur neutralen Achse im eigenen Kanal 
werden, dann nur wird die Anforderung entsprechend abgesetzt.

AXTOCHAN aus einer Synchronaktion

Wird eine Achse fr den eigenen Kanal angefordert so wird AXTOCHAN aus einer 
Synchronaktion auf ein GET aus einer Synchronaktion abgebildet. In diesem Fall wird die 
Achse bei der ersten Anforderung fr den eigenen Kanal zur neutralen Achse. Bei der zweiten 
Anforderung wird die Achse dem NC-Programm analog zur GET-Anforderung im NC-
Programm zugeordnet. Zur GET-Anforderung aus einer Synchronaktion siehe Kapitel 
"Bewegungssynchronaktionen".

3.15.3

Achsfunktionen (AXNAME, AX, SPI, AXTOSPI, ISAXIS, AXSTRING, 
MODAXVAL)

"AXNAME" wird z. B. bei der Erstellung allgemeingltiger Zyklen verwendet, wenn die Namen 
der Achsen nicht bekannt sind.

"AX" wird fr die indirekte Programmierung von Geometrie- und Synchronachsen verwendet. 
Der Achsbezeichner wird dabei in einer Variablen vom Typ AXIS hinterlegt oder von einem 
Befehl wie "AXNAME" oder "SPI" geliefert.

"SPI" wird verwendet, wenn Achsfunktionen fr eine Spindel, z. B. Synchronspindel, 
programmiert werden.

"AXTOSPI" wird verwendet, um einen Achsbezeichner in einen Spindelindex zu wandeln 
(Umkehrfunktion zu "SPI").

"AXSTRING" wird verwendet, um einen Achsbezeichner (Datentyp AXIS) in einen String zu 
wandeln (Umkehrfunktion zu "AXNAME").

"ISAXIS" wird in allgemeingltigen Zyklen verwendet, um sicherzustellen, dass eine bestimmte 
Geometrieachse vorhanden ist und damit ein nachfolgender Aufruf von $P_AXNX nicht mit 
Fehler abgebrochen wird.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

861

 
 
 
 
Arbeitsvorbereitung

3.15 Achsfunktionen

"MODAXVAL" wird verwendet, um bei Modulo-Rundachsen die Modulo-Position zu ermitteln.  

Syntax

AXNAME("String")
AX[AXNAME("String")]
SPI(n)

AXTOSPI(A) oder AXTOSPI(B) oder AXTOSPI(C)
AXSTRING(SPI(n))
ISAXIS(<Geometrieachsnummer>)
<Modulo-Position>=MODAXVAL(<Achse>,<Achsposition>)

Bedeutung

AXNAME:

AX:

SPI:

n:

AXTOSPI:

X, Y, Z:

AXSTRING:

ISAXIS:

MODAXVAL:

Konvertiert einen Eingangsstring in Achsbezeichner; der Eingangsstring muss 
gltigen Achsnamen enthalten.

Variabler Achsbezeichner

Konvertiert Spindelnummer in Achsbezeichner; der bergabeparameter muss 
eine gltige Spindelnummer enthalten.

Spindelnummer

Wandelt einen Achsbezeichner in einen Spindelindex vom Typ Integer um. "AX
TOSPI" entspricht der Umkehrfunktion zu "SPI".

Achsbezeichner vom Typ AXIS als Variable oder Konstante

Es wird der String mit zugeordneter Spindelnummer ausgegeben.

Prft, ob die angegebene Geometrieachse vorhanden ist.

Ermittelt bei Modulo-Rundachsen die Modulo-Position; diese entspricht dem 
Modulo-Rest bezogen auf den parametrierten Modulo-Bereich (betrgt in der 
Standardeinstellung 0 bis 360 Grad; ber MD30340 MODULO_RANGE_START 
und MD30330 $MA_MODULO_RANGE knnen Beginn und Gre des Modulo-
Bereichs verndert werden).

Hinweis

SPI-Erweiterungen

Die Achsfunktion SPI(n) ist auch fr das Lesen und Schreiben von Framekomponenten 
einsetzbar. Damit knnen Frames z. B. mit der Syntax $P_PFRAME[SPI(1),TR]=2.22 
geschrieben werden.

Durch die zustzliche Programmierung von Achspositionen ber die 
Adresse AX[SPI(1)]=<Achsposition> kann eine Achse verfahren werden. 
Voraussetzung dafr ist, dass sich die Spindel im Positionier- oder Achsbetrieb befindet.

Beispiele

862

Beispiel 1: AXNAME, AX, ISAXIS

Programmcode

Kommentar

OVRA[AXNAME("Planachse")]=10

; Override fr Planachse

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.15 Achsfunktionen

Programmcode

Kommentar

AX[AXNAME("Planachse")]=50.2

; Endposition fr Planachse

OVRA[SPI(1)]=70

AX[SPI(1)]=180

; Override fr Spindel 1

; Endposition fr Spindel 1

IF ISAXIS(1)==FALSE GOTOF WEITER

; Abszisse vorhanden?

AX[$P_AXN1]=100

WEITER:

Beispiel 2: AXSTRING

; Abszisse verfahren

Bei der Programmierung mit AXSTRING[SPI(n)] wird nicht mehr der Achsindex der Achse, der 
die Spindel zugeordnet ist, als Spindelnummer ausgegeben, sondern es wird der String "Sn" 
ausgegeben.

Programmcode

AXSTRING[SPI(2)]

Kommentar

; Es wird der String "S2" ausgegeben.

Beispiel 3: MODAXVAL

Die Modulo-Position der Modulo-Rundachse A soll ermittelt werden.

Ausgangswert fr die Berechnung ist die Achsposition 372.55.

Der parametrierte Modulo-Bereich betrgt 0 bis 360 Grad:

MD30340 MODULO_RANGE_START = 0

MD30330 $MA_MODULO_RANGE = 360

Programmcode

Kommentar

R10=MODAXVAL(A,372.55)

; Berechnete Modulo-Position R10 = 12.55.

Beispiel 4: MODAXVAL

Wenn sich der programmierte Achsbezeichner nicht auf eine Modulo-Rundachse bezieht, 
dann wird der zu wandelnde Wert (<Achsposition>) unverndert zurckgegeben.

Programmcode

Kommentar

R11=MODAXVAL(X,372.55)

; X ist Linearachse; R11 = 372.55.

3.15.4

Umschaltbare Geometrieachsen (GEOAX)

Mit der Funktion "Umschaltbare Geometrieachsen" knnen die ber Maschinendaten 
parametrierten Geometrieachsen durch andere Kanalachsen ersetzt werden. 

Syntax

GEOAX(<n>,<Kanalachse>,<n>,<Kanalachse>,<n>,<Kanalachse>)
GEOAX()

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

863

 
Arbeitsvorbereitung

3.15 Achsfunktionen

Bedeutung

GEOAX(...) 

Funktion zum Umschalten von Geometrieachsen.

Hinweis:

GEOAX()ohne Parameterangabe aktiviert wieder die in den Maschinendaten 
parametrierte Grundkonfiguration der Geometrieachsen.

<n>

Nummer der Geometrieachse, die durch die angegebene Kanalachse ersetzt 
wird.

Wertebereich:      0, 1, 2, 3

Hinweis:

0: Die angegebene Kanalachse wird ersatzlos aus dem Geometrieachsverbund 
entfernt

1: 1. Geometrieachse  Koordinatenachse X (Abszisse) des WKS

2: 2. Geometrieachse  Koordinatenachse Y (Ordinate) des WKS

3: 3. Geometrieachse  Koordinatenachse Z (Applikate) des WKS

<Kanalachse>

Name der Kanalachse, die in den Geometrieachsverbund aufgenommen wer
den soll.

Beispiele

Beispiel 1: Zwei Achsen wechselweise als Geometrieachse schalten

Ein Werkzeugschlitten kann ber die Kanalachsen X1, Y1, Z1, Z2 verfahren werden:

Die Geometrieachsen sind so projektiert, dass nach dem Einschalten zunchst Z1 als 
3. Geometrieachse unter dem Geometrieachsnamen "Z" wirksam ist und zusammen mit X1 
und Y1 den Geometrieachsverbund bildet.

864

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Y1X1Z1Z2ZXYArbeitsvorbereitung

3.15 Achsfunktionen

Im Teileprogramm sollen nun die Achsen Z1 und Z2 wechselweise als Geometrieachse Z zum 
Einsatz kommen:

Programmcode

Kommentar

...

N100 GEOAX(3,Z2)

; Als 3. Geometrieachse (Z) fungiert Kanalachse Z2.

N110 G1 ...

N120 GEOAX(3,Z1)

; Als 3. Geometrieachse (Z) fungiert Kanalachse Z1.

...

Beispiel 2: Umschalten der Geometrieachsen bei 6 Kanalachsen

Eine Maschine besitzt 6 Kanalachsen mit den Namen XX, YY, ZZ, U, V, W.

Die Grundeinstellung der Geometrieachskonfiguration ber Maschinendaten ist:

Kanalachse XX = 1. Geometrieachse (X-Achse)

Kanalachse YY = 2. Geometrieachse (Y-Achse)

Kanalachse ZZ = 3. Geometrieachse (Z-Achse)

Programmcode

N10 GEOAX()

Kommentar

; Grundkonfiguration der Geometrieachsen ist wirksam.

N20 G0 X0 Y0 Z0 U0 V0 W0

; Alle Achsen im Eilgang auf Position 0.

N30 GEOAX(1,U,2,V,3,W)

; Kanalachse U wird zur ersten (X), V zur zweiten (Y) 

N40 GEOAX(1,XX,3,ZZ)

; Kanalachse XX wird zur ersten (X), ZZ zur dritten

; und W zur dritten Geometrieachse (Z).

; Geometrieachse (Z). Kanalachse V bleibt zweite

; Geometrieachse (Y).

N50 G17 G2 X20 I10 F1000

; Vollkreis in der X/Y-Ebene. Es fahren die 

; Kanalachsen XX und V.

N60 GEOAX(2,W)

; Kanalachse W wird zweite Geometrieachse (Y).

N80 G17 G2 X20 I10 F1000

; Vollkreis in der X/Y-Ebene. Es fahren die 

; Kanalachsen XX und W.

N90 GEOAX()

; Zurcksetzen auf Grundzustand.

N100 GEOAX(1,U,2,V,3,W)

; Kanalachse U wird zur ersten (X), V zur zweiten 

N110 G1 X10 Y10 Z10 XX=25

; Kanalachsen U, V, W fahren jeweils auf die 

; (Y) und W zur dritten Geometrieachse (Z).

N120 GEOAX(0,V)

; V wird aus Geometrieachsverbund herausgenommen. 

; Position 10. XX als Zusatzachse fhrt auf Position 
25.

; U und W sind weiterhin erste (X) und dritte 

; Geometrieachse (Z). 

; Die zweite Geometrieachse (Y) bleibt unbelegt.

N130 GEOAX(1,U,2,V,3,W)

; Kanalachse U bleibt erste (X), V wird zur 

; zweiten (Y), W bleibt dritte Geometrieachse (Z).

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

865

 
 
 
Arbeitsvorbereitung

3.15 Achsfunktionen

Programmcode

N140 GEOAX(3,V)

Kommentar

; V wird zur dritten Geometrieachse (Z), wobei W 

; berschrieben und damit aus dem Geometrieachsver-
bund 

; herausgenommen wird. Die zweite Geometrieachse (Y) 

; ist nach wie vor unbelegt.

Maschinendaten

Achskonfiguration

Zuordnung von Geometrie-, Zusatz- und Maschinenachsen zu Kanalachsen:

 MD10000 $MN_AXCONF_MACHAX_NAME_TAB

 MD20050 $MC_AXCONF_GEOAX_ASIGN_TAB

 MD20060 $MC_AXCONF_GEOAX_NAME_TAB

 MD20070 $MC_AXCONF_MACHAX_USED

 MD20080 $MC_AXCONF_CHANAX_NAME_TAB

 MD35000 $MA_SPIND_ASSIGN_TO_MACHAX

Reset-Verhalten

Reset-Verhalten von genderten Geometrieachszuordnungen:

 MD20110 $MC_RESET_MODE_MASK, Bit 12

 MD20118 $MC_GEOAX_CHANGE_RESET

NC-Start-Verhalten

 MD20112 $MC_START_MODE_MASK, Bit 12

Mitteilung an PLC-Anwenderprogramm

Parametriermglichkeit des M-Befehls der bei einer Geometrieachsumschaltung an die NC/
PLC-Nahtstelle ausgegeben wird:

 MD22532 $MC_GEOAX_CHANGE_M_CODE

866

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Randbedingungen

Keine Geometrieachsumschaltung

 Ist eine der folgenden Funktionen aktiv, ist keine Geometrieachsumschaltung mglich:

Arbeitsvorbereitung

3.15 Achsfunktionen

 Transformation

 Spline-Interpolation

 Werkzeugradiuskorrektur

 Werkzeugfeinkorrektur

 Die Geometrieachse und eine weitere Kanalachse haben den gleiche Namen.

 Eine der an der Geometrieachsumschaltung beteiligten Achsen ist an einer Aktion beteiligt, 
die ber Satzgrenzen hinweg andauert. Z. B. Satzbergreifende Positionierachse oder 
Folgeachse einer Achskopplung.

Rundachsen

Rundachsen knnen nicht zu Geometrieachsen gemacht werden.

Achszustand nach dem Ersetzen

Eine durch die Umschaltung im Geometrieachsverbund ersetzte Achse ist nach dem 
Umschaltvorgang ber ihren Kanalachsnamen als Zusatzachse programmierbar.

Frames, Schutzbereiche, Arbeitsfeldbegrenzungen

Mit dem Umschalten der Geometrieachsen werden alle Frames, Schutzbereiche und 
Arbeitsfeldbegrenzungen gelscht.

Polarkoordinaten

Ein Tausch der Geometrieachsen mit GEOAX setzt analog einem Ebenenwechsel mit G17-G19 
die modalen Polarkoordinaten auf den Wert 0.

DRF, NPV

Eine eventuelle Handrad-Verschiebung (DRF) oder eine externe Nullpunktverschiebung 
(NPV) bleibt nach der Umschaltung wirksam.

Grundkonfiguration der Geometrieachsen

Der Befehl GEOAX() ruft die Grundkonfiguration des Geometrieachsverbunds auf.

Nach POWER ON und bei Umschalten in die Betriebsart "Referenzpunktfahren" wird 
automatisch auf die Grundkonfiguration zurckgeschaltet.

Werkzeuglngenkorrektur

Eine aktive Werkzeuglngenkorrektur ist auch nach dem Umschaltvorgang wirksam. Sie gilt 
jedoch fr die neu aufgenommenen bzw. positionsgetauschten Geometrieachsen als noch 
nicht herausgefahren. Beim ersten Bewegungsbefehl fr diese Geometrieachsen besteht der 
resultierende Verfahrweg dementsprechend aus der Summe von Werkzeuglngenkorrektur 
und programmiertem Verfahrweg.

Geometrieachsen, die bei einer Umschaltung ihre Position im Achsverband beibehalten, 
behalten auch ihren Status bezglich der Werkzeuglngenkorrektur.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

867

Arbeitsvorbereitung

3.15 Achsfunktionen

Geometrieachskonfiguration bei aktiver Transformation

 Die fr eine aktive Transformation ber Transformations-Maschinendaten parametrierte 

Geometrieachskonfiguration ist ber die Funktion "Umschaltbare Geometrieachsen" nicht 
nderbar.

 Unterschiedliche Geometrieachskonfiguration fr eine Transformation, mssen in den 
Transformations-Maschinendaten unterschiedliche Datenstze parametriert werden.

 Eine ber GEOAX gendert Geometrieachskonfiguration wird durch Aktivierung einer 

Transformation gelscht.

 Bezglich der Geometrieachsen haben die Transformations-spezifischen 

Geometrieachsparametrierungen von aktiven Transformationen Vorrang vor den die 
Umschaltung von Geometrieachsen betreffenden Parametrierungen.
Beispiel: Eine Transformation ist aktiv. Laut Maschinendaten soll die Transformation bei 
Kanal-Reset erhalten bleiben. Gleichzeitig soll bei einem Kanal-Reset jedoch die 
Grundkonfiguration der Geometrieachsen hergestellt werden. Es bleibt die 
Geometrieachskonfiguration erhalten, die fr die Transformation festgelegt ist.

 Mit dem Ausschalten einer Transformation wird wieder die parametrierte Grundeinstellung 

der Geometrieachskonfiguration wirksam.

Betriebsart JOG, Maschinenfunktion REF

Beim Umschalten in die Betriebsart JOG, Maschinenfunktion REF (Referenzpunkt fahren), 
wird die in den Maschinendaten parametrierte Geometrieachskonfiguration wirksam..

3.15.5

Warten auf gltige Achsposition (WAITENC)

Mit dem Sprachbefehl "WAITENC" kann im NC-Programm gewartet werden, bis fr die mit 
MD34800 $MA_WAIT_ENC_VALID = 1 projektierten Achsen synchronisierte bzw. restaurierte 
Achspositionen zur Verfgung stehen.  

Im Wartezustand kann eine Unterbrechung erfolgen, z. B. durch Start eines ASUPs oder durch 
Betriebsartenwechsel nach JOG. Mit der Programmfortsetzung wird der Wartezustand ggf. 
wieder eingenommen.

Hinweis

Der Wartezustand wird in der Bedienoberflche durch den Haltezustand "Warten auf Mess-
System" angezeigt.

Syntax

868

"WAITENC" kann im Programmteil eines beliebigen NC-Programms programmiert werden.

Die Programmierung muss in einem eigenen Satz erfolgen:

...

WAITENC

...

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
Beispiel

Arbeitsvorbereitung

3.15 Achsfunktionen

"WAITENC" wird z. B. im ereignisgesteuerten Anwenderprogramm .../_N_CMA_DIR/
_N_PROG_EVENT_SPF verwendet, wie das folgende Anwendungsbeispiel zeigt.

Anwendungsbeispiel: Werkzeugrckzug nach POWER OFF mit Orientierungstransformation

Eine Bearbeitung mit Werkzeugorientierung wurde durch Spannungsausfall abgebrochen.
Beim anschlieenden Hochlauf wird das ereignisgesteuerte Anwenderprogramm .../
_N_CMA_DIR/_N_PROG_EVENT_SPF aufgerufen.

Im ereignisgesteuerten Anwenderprogramm wird mit "WAITENC" auf synchronisierte bzw. 
restaurierte Achspositionen gewartet, um danach einen Frame berechnen zu knnen, der das 
WKS in Werkzeugrichtung ausrichtet.

Programmcode

...

Kommentar

IF $P_PROG_EVENT == 4

; Hochlauf.

    IF $P_TRAFO <> 0

; Transformation wurde angewhlt.

; Warten auf gltige Achspositionen der Orientie-
rungsachsen.

; ZAchse des WKS in Richtung der Werkzeugachse dre-
hen.

        WAITENC

        TOROTZ

    ENDIF

    M17

ENDIF

...

Danach kann das Werkzeug in der Betriebsart JOG durch eine Rckzugsbewegung in 
Richtung der Werkzeugachse freigefahren werden.

3.15.6

Programmierbare Parametersatzumschaltung (SCPARA)

Mit dem Befehl SCPARA kann fr eine Achse die Umschaltung auf einen bestimmten 
Parametersatz angefordert werden. 

Hinweis

Keine Parametersatzumschaltung whrend Gewindebearbeitung

Bei Gewindeschneiden G33 und Gewindebohren G331 / G332 wird der Parametersatz von der 
Steuerung ausgewhlt und kann nicht verndert werden.

Gesperrte Parametersatzumschaltung

Eine Parametersatzumschaltung kann auch ber die NC/PLC-Nahstelle angefordert werden. 
Um Umschaltkonflikte zu vermeiden, kann ber die NC/PLC-Nahstelle die 
Parametersatzumschaltung der NC (SCPARA) gesperrt werden:

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

869

 
 
 
 
Arbeitsvorbereitung

3.15 Achsfunktionen

DB31, ... DBX9.3 (Parametersatzvorgabe durch NC gesperrt)

Hinweis

Wird eine Parametersatzumschaltung durch SCPARA angefordert, whrend die 
Parametersatzumschaltung ber die NC/PLC-Nahstelle gesperrt ist, wird die Umschaltung 
ohne Fehlermeldung abgewiesen.

Syntax

Bedeutung

Beispiel

SCPARA[<Achse>]=<Wert>

SCPARA:

<Achse>:

Befehl: Parametersatz umschalten

Achsbezeichner (Kanalachse)

Typ:

AXIS

<Wert>:

Parametersatznummer: 1, 2, 3, ... max. Parametersatznummer

Programmcode

Kommentar

...

N110 SCPARA[X] = 3

; Anwahl: Achse X, 3. Parametersatz

...

Weitere Informationen

Freigabe der Parametersatzumschaltung

Die Parametersatzumschaltung der Achse muss explizit freigegeben werden:

MD35590 $MA_PARAMSET_CHANGE_ENABLE[<Achse>]

Paramtersatznummer lesen

Die Nummer des angewhlten Parametersatzes (Soll-Parametersatz) kann ber die 
Systemvariable $AA_SCPAR gelesen werden.

870

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.16 Achskopplungen

3.16

Achskopplungen

3.16.1

Mitschleppen (TRAILON, TRAILOF)

Beim Bewegen einer definierten Leitachse fahren ihr zugeordnete Mitschleppachsen 
(= Folgeachsen) unter Bercksichtigung eines Koppelfaktors die von der Leitachse 
abgeleiteten Verfahrwege ab.  

Leitachse und Folgeachsen bilden zusammen einen Mitschleppverband. 

Anwendungsbereiche

 Verfahren einer Achse durch eine simulierte Achse. Die Leitachse ist eine simulierte Achse 

und die Mitschleppachse eine reale Achse. Damit kann die reale Achse mit 
Bercksichtigung des Koppelfaktors verfahren werden.

 Zweiseitenbearbeitung mit 2 Mitschleppverbnden:

1. Leitachse Y, Mitschleppachse V
2. Leitachse Z, Mitschleppachse W

Syntax

Bedeutung

TRAILON(<Folgeachse>,<Leitachse>,<Koppelfaktor>)
TRAILOF(<Folgeachse>,<Leitachse>,<Leitachse 2>)
TRAILOF(<Folgeachse>)

TRAILON:

Befehl zum Einschalten und Definieren eines Mitschleppverbandes

<Folgeachse>:

Parameter 1: Achsbezeichnung der Mitschleppachse 

Wirksamkeit:

modal

Hinweis:
Eine Mitschleppachse kann auch Leitachse fr weitere Mitschleppachsen 
sein. Auf diese Weise knnen unterschiedliche Mitschleppverbnde auf
gebaut werden.

<Leitachse>:

Parameter 2: Achsbezeichnung der Leitachse

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

871

WVZYXAchseAchseAchseAchseAchseArbeitsvorbereitung

3.16 Achskopplungen

<Koppelfaktor>:

Parameter 3: Koppelfaktor

Der Koppelfaktor gibt das gewnschte Verhltnis der Wege von Mitschlepp
achse und Leitachse an:

<Koppelfaktor> = Weg der Mitschleppachse / Weg der Leitachse

Typ:

REAL

Voreinstellung:

1

Die Eingabe eines negativen Wertes bewirkt eine entgegengesetzte Ver
fahrbewegung der Leit- und Mitschleppachse. 

Wird der Koppelfaktor bei der Programmierung nicht angegeben, so gilt 
automatisch der Koppelfaktor 1.

TRAILOF:

Befehl zum Ausschalten eines Mitschleppverbandes

Wirksamkeit:

modal

TRAILOF mit 2 Parametern schaltet nur die Kopplung zur angegebenen 
Leitachse aus:
TRAILOF(<Folgeachse>,<Leitachse>)

Besitzt eine Mitschleppachse 2 Leitachsen, kann zum Ausschalten der bei
den Kopplungen TRAILOF mit 3 Parametern aufgerufen werden:
TRAILOF(<Folgeachse>,<Leitachse>,<Leitachse 2>)

Das gleiche Ergebnis liefert die Programmierung von TRAILOF ohne An
gabe einer Leitachse:
TRAILOF(<Folgeachse>)

Hinweis

Das Mitschleppen erfolgt immer im Basiskoordinatensystem (BKS).

Die Anzahl der gleichzeitig aktivierbaren Mitschleppverbnde wird nur begrenzt durch die 
Kombinationsmglichkeiten der an der Maschine vorhandenen Achsen.

Beispiel

Das Werkstck soll zweiseitig mit der dargestellten Achskonstellation bearbeitet werden. Dazu 
bilden Sie 2 Mitschleppverbnde.

872

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

WVZYXAchseAchseAchseAchseAchse 
Arbeitsvorbereitung

3.16 Achskopplungen

Programmcode

Kommentar



N100 TRAILON(V,Y)

; Einschalten des 1. Mitschleppverbandes

N110 TRAILON(W,Z,1)

N120 G0 Z10

; Einschalten des 2. Mitschleppverbandes. Koppelfaktor 
negativ: Mitschleppachse fhrt jeweils in entgegengesetz-
ter Richtung wie Leitachse.

; Zustellung der Z- und W-Achse in entgegengesetzter Achs-
richtung.

N130 G0 Y20

; Zustellung der Y- und V-Achse in gleicher Achsrichtung.



N200 G1 Y22 V25 F200



TRAILOF(V,Y)

TRAILOF(W,Z)

; berlagerung einer abhngigen und unabhngigen Bewegung 
der Mitschleppachse V.

; Ausschalten des 1. Mitschleppverbandes.

; Ausschalten des 2. Mitschleppverbandes.

Weitere Informationen

Achstypen

Ein Mitschleppverband kann aus beliebigen Kombinationen von Linear- und Rundachsen 
bestehen. Als Leitachse kann dabei auch eine simulierte Achse definiert werden.

Mitschleppachsen

Einer Mitschleppachse knnen gleichzeitig maximal 2 Leitachsen zugeordnet werden. Die 
Zuordnung erfolgt in unterschiedlichen Mitschleppverbnden.

Eine Mitschleppachse kann mit allen zur Verfgung stehenden Bewegungsbefehlen 
programmiert werden (G0, G1, G2, G3, ). Zustzlich zu den unabhngig definierten Wegen 
fhrt die Mitschleppachse die mit den Koppelfaktoren aus ihren Leitachsen abgeleiteten Wege.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

873

 
 
 
Arbeitsvorbereitung

3.16 Achskopplungen

Dynamikbegrenzung

Die Dynamikbegrenzung ist abhngig von der Art der Aktivierung des Mitschleppverbandes:

 Aktivierung im Teileprogramm

Erfolgt die Aktivierung im Teileprogramm und sind alle Leitachsen als Programmachsen im 
aktivierenden Kanal, wird beim Verfahren der Leitachsen die Dynamik aller 
Mitschleppachsen so bercksichtigt, dass keine Mitschleppachse berlastet wird.
Erfolgt die Aktivierung im Teileprogramm mit Leitachsen, die nicht als Programmachsen im 
aktivierenden Kanal aktiv sind ($AA_TYP  1), wird beim Verfahren der Leitachsen die 
Dynamik der Mitschleppachse nicht bercksichtigt. Dadurch kann es bei Mitschleppachsen 
mit einer geringeren als der fr die Kopplung bentigten Dynamik zu einer berlastung 
kommen.

 Aktivierung in Synchronaktion

Erfolgt die Aktivierung in einer Synchronaktion, wird beim Verfahren der Leitachsen die 
Dynamik der Mitschleppachsen nicht bercksichtigt. Dadurch kann es bei 
Mitschleppachsen mit einer geringeren als der fr die Kopplung bentigten Dynamik zu 
einer berlastung kommen.

VORSICHT

Achsberlastung

Wird ein Mitschleppverband

 in Synchronaktionen

 im Teileprogramm mit Leitachsen, die nicht Programmachsen im Kanal der 

Mitschleppachse sind,

aktiviert, dann liegt es in der besonderen Verantwortung des Anwenders/
Maschinenherstellers, geeignete Manahmen vorzusehen, damit es durch die 
Verfahrbewegungen der Leitachse nicht zu einer berlastung der Mitschleppachsen 
kommt.

Kopplungsstatus

Der Kopplungsstatus einer Achse kann im Teileprogramm abgefragt werden mit der 
Systemvariablen:

$AA_COUP_ACT[<Achse>]

Wert

Bedeutung

0

8

Keine Kopplung aktiv

Mitschleppen aktiv

Restweganzeige der Mitschleppachse bei Modulo-Rundachsen

Sind Leit- und Mitschleppachse Modulo-Rundachsen, summieren sich Verfahrbewegungen in 
der Leitachse von n * 360 mit n = 1, 2, 3... , in der Restweganzeige der Mitschleppachse bis 
zum Ausschalten der Kopplung auf.

Beispiel: Programmabschnitt mit TRAILON und Leitachse B und Folgeachse C

Programmcode

TRAILON(C,B,1)

G0 B0

Kommentar

; Kopplung einschalten

; Ausgangsposition

874

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.16 Achskopplungen

Programmcode

Kommentar

G91 B360

G91 B720

G91 B360

; Restweganzeige am Satzanfang:

; B=360, C=360

; B=720, C=1080

; B=360, C=1440

3.16.2

Kurventabellen (CTAB)

Mit Hilfe von Kurventabellen knnen Positions- und Geschwindigkeitsbeziehungen zwischen 
zwei Achsen (Leit- und Folgeachse) programmiert werden. Die Kurventabellendefinition erfolgt 
im Teileprogramm.

Anwendung

Kurventabellen ersetzen mechanische Kurvenscheiben. Die Kurventabelle bildet dabei die 
Grundlage fr die axiale Leitwertkopplung, indem sie den funktionellen Zusammenhang 
zwischen Leit- und Folgewert schafft: Die Steuerung berechnet bei entsprechender 
Programmierung aus einander zugeordneten Positionen von Leit- und Folgeachse ein 
Polynom, das der Kurvenscheibe entspricht.

3.16.2.1

Kurventabellen definieren (CTABDEF, CATBEND)

Eine Kurventabelle stellt ein Teileprogramm oder einen Teileprogrammabschnitt dar, welcher 
durch Voranstellen von CTABDEF und den abschlieenden Befehl CTABEND 
gekennzeichnet ist.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

875

12  ......7    a0 + a1x...5    a0+ a1 + a2x2...x        yYX 
Arbeitsvorbereitung

3.16 Achskopplungen

Innerhalb dieses Teileprogrammabschnitts werden durch Bewegungsanweisungen einzelnen 
Positionen der Leitachse eindeutige Folgeachspositionen zugeordnet, die als Sttzstellen fr 
die Berechnung eines Kurvenzugs in Form eines Polynoms bis zu maximal 5. Grades dienen. 

Voraussetzung

Syntax

Bedeutung

Fr die Definition von Kurventabellen muss durch entsprechende MD-Projektierung 
Speicherplatz reserviert sein ( Maschinenhersteller!).

CTABDEF(<Folgeachse>,<Leitachse>,<n>,<Periodizitt>[,<Speicherort>])
...
CTABEND

CTABDEF( ):

CTABEND:

Beginn der Kurventabellendefinition

Ende der Kurventabellendefinition

<Folgeachse>:

Achse, deren Bewegung ber die Kurventabelle berechnet werden soll

<Leitachse>:

Achse, die die Leitwerte zur Berechnung der Folgeachsbewegung liefert

<n>:

Nummer (ID) der Kurventabelle

Die Nummer einer Kurventabelle ist eindeutig und unabhngig vom Speicher
ort. Es knnen keine Tabellen mit der gleichen Nummer im statischen und 
dynamischen NC-Speicher liegen.

876

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:39)(cid:72)(cid:73)(cid:76)(cid:81)(cid:76)(cid:87)(cid:76)(cid:82)(cid:81)(cid:86)(cid:69)(cid:72)(cid:85)(cid:72)(cid:76)(cid:70)(cid:75)(cid:32)(cid:3)(cid:54)(cid:87)(cid:190)(cid:87)(cid:93)(cid:86)(cid:87)(cid:72)(cid:79)(cid:79)(cid:72)(cid:81)(cid:40)(cid:81)(cid:71)(cid:90)(cid:72)(cid:85)(cid:87)(cid:54)(cid:87)(cid:68)(cid:85)(cid:87)(cid:90)(cid:72)(cid:85)(cid:87)(cid:46)(cid:88)(cid:85)(cid:89)(cid:72)(cid:81)(cid:93)(cid:88)(cid:74)(cid:47)(cid:72)(cid:76)(cid:87)(cid:90)(cid:72)(cid:85)(cid:87)(cid:41)(cid:82)(cid:79)(cid:74)(cid:72)(cid:90)(cid:72)(cid:85)(cid:87)Arbeitsvorbereitung

3.16 Achskopplungen

<Periodizitt>:

Tabellenperiodizitt

0

1

2

Tabelle ist nicht periodisch (wird nur einmal abgearbeitet, auch bei 
Rundachsen)

Tabelle ist periodisch bezglich Leitachse

Tabelle ist periodisch bezglich Leitachse und Folgeachse

<Speicherort>:

Angabe des Speicherorts (optional)

"SRAM"

"DRAM"

Die Kurventabelle wird im statischen NC-Speicher angelegt.

Die Kurventabelle wird im dynamischen NC-Speicher angelegt.

Hinweis:
Wenn fr diesen Parameter kein Wert programmiert wird, dann wird der mit 
MD20905 $MC_CTAB_DEFAULT_MEMORY_TYPE eingestellte Standard-
Speicherort verwendet.

Hinweis

berschreiben

Eine Kurventabelle wird berschrieben, sobald bei einer neuen Tabellendefinition deren 
Nummer (<n>) benutzt wird (Ausnahme: die Kurventabelle ist in einer Achskopplung aktiv oder 
mit CTABLOCK gesperrt). Beim berschreiben wird keine entsprechende Warnung 
ausgegeben!

Beispiele

Beispiel 1: Programmabschnitt als Kurventabellendefinition

Ein Programmabschnitt soll unverndert zur Definition einer Kurventabelle benutzt werden. 
Der darin auftretende Befehl zum Vorlaufstopp STOPRE kann stehen bleiben und wird sofort 
wieder aktiv, sobald der Programmabschnitt nicht mehr zur Tabellendefinition benutzt wird und 
CTABDEF und CTABEND entfernt wurden.

Programmcode

Kommentar



CTABDEF(Y,X,1,1)

; Definition einer Kurventabelle.



IF NOT ($P_CTABDEF)

STOPRE

ENDIF



CTABEND

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

877

 
 
 
 
 
 
 
Arbeitsvorbereitung

3.16 Achskopplungen

Beispiel 2: Definition einer nichtperiodischen Kurventabelle

Programmcode

Kommentar

N100 CTABDEF(Y,X,3,0)

N110 X0 Y0

; Beginn der Definition einer nichtperiodischen Kurven-
tabelle mit der Nummer 3.

; 1.Bewegungsanweisung, legt Startwerte und 1. Sttz-
stelle fest:

Leitwert: 0, Folgewert: 0

N120 X20 Y0

; 2.Sttzstelle:

Leitwert: 020, Folgewert: Startwert0

N130 X100 Y6

; 3.Sttzstelle:

N140 X150 Y6

; 4.Sttzstelle:

Leitwert: 20100, Folgewert: 06

Leitwert: 100150, Folgewert: 66

N150 X180 Y0

; 5.Sttzstelle:

N200 CTABEND

Leitwert: 150180, Folgewert: 60

; Ende der Definition. Die Kurventabelle wird in ihrer 
internen Darstellung als Polynom maximal 5.Grades er-
zeugt. Die Berechnung des Kurvenzugs mit den angegebe-
nen Sttzstellen ist abhngig von der modal gewhlten 
Interpolationsart (Kreis-, Linear-, Spline-Interpolati-
on). Der Teileprogrammzustand vor Beginn der Definition 
wird wiederhergestellt.

Beispiel 3: Definition einer periodischen Kurventabelle

Definition einer periodischen Kurventabelle mit Nummer 2, Leitwertbereich von 0 bis 360, 
Folgeachsbewegung von 0 nach 45 und zurck nach 0:

Programmcode

N10 DEF REAL DEPPOS

Kommentar

878

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

180150100654321520XY 
Arbeitsvorbereitung

3.16 Achskopplungen

Kommentar

; Beginn der Definition.

; Ende der Definition.

Programmcode

N20 DEF REAL GRADIENT

N30 CTABDEF(Y,X,2,1)

N40 G1 X=0 Y=0

N50 POLY

N60 PO[X]=(45.0)

N70 PO[X]=(90.0) PO[Y]=(45.0,135.0,-90)

N80 PO[X]=(270.0)

N90 PO[X]=(315.0) PO[Y]=(0.0,-135.0,90)

N100 PO[X]=(360.0)

N110 CTABEND

;Test der Kurve durch Kopplung von Y an X:

N120 G1 F1000 X0

N130 LEADON(Y,X,2)

N140 X360

N150 X0

N160 LEADOF(Y,X)

N170 DEPPOS=CTAB(75.0,2,GRADIENT)

N180 G0 X75 Y=DEPPOS

; Lesen der Tabellenfunktion beim 
Leitwert 75.0.

; Positionieren von Leit- und Fol-
geachse.

;Nach Einschalten der Kopplung ist kein Synchronisieren der Folgeachse ntig.

N190 LEADON(Y,X,2)

N200 G1 X110 F1000

N210 LEADOF(Y,X)

N220 M30

Weitere Informationen

Start- und Endwert der Kurventabelle

Als Startwert fr den Beginn des Definitionsbereichs der Kurventabelle gilt die erste Angabe 
von zusammengehrigen Achspositionen (die erste Bewegungsanweisung) innerhalb der 
Kurventabellendefinition. Der Endwert des Definitionsbereichs der Kurventabelle wird 
entsprechend durch den letzten Verfahrbefehl bestimmt.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

879

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.16 Achskopplungen

Verfgbarer Sprachumfang

Innerhalb der Definition der Kurventabelle steht der gesamte NC-Sprachumfang zur 
Verfgung.

Hinweis

Folgende Angaben sind In Kurventabellendefinitionen nicht zulssig:

 Vorlaufstopp

 Sprnge in der Leitachsenbewegung (z. B. beim Wechsel von Transformationen)

 Bewegungsanweisung allein fr die Folgeachse

 Bewegungsumkehr der Leitachse, d. h. Position der Leitachse muss immer eindeutig sein

 CTABDEF- und CTABEND-Anweisung in unterschiedlichen Programmebenen.

Wirksamkeit von modalen Anweisungen

Smtliche modal wirksamen Anweisungen, die innerhalb der Kurventabellendefinition 
getroffen werden, sind mit Abschluss der Tabellendefinition ungltig. Das Teileprogramm, in 
dem die Tabellendefinition erfolgt, befindet sich damit vor und nach der Tabellendefinition im 
gleichen Zustand.

Zuweisungen an R-Parameter

Zuweisungen an R-Parameter innerhalb der Tabellendefinition werden nach CTABEND 
zurckgesetzt.

Beispiel:

Programmcode

...

R10=5 R11=20

...

CTABDEF

G1 X=10 Y=20 F1000

R10=R11+5

X=R10

CTABEND

...

Kommentar

; R10=5

; R10=25

; R10=5

Aktivierung von ASPLINE, BSPLINE, CSPLINE

Wird innerhalb einer Kurventabellendefinition CTABDEF ... CTABEND ein ASPLINE, 
BSPLINE oder CSPLINE aktiviert, so sollte vor dieser Spline-Aktivierung mindestens ein 
Startpunkt programmiert werden. Eine sofortige Aktivierung nach CTABDEF sollte vermieden 
werden, da sonst der Spline von der aktuellen Achsposition vor der Kurventabellendefinition 
abhngt.

Beispiel:

Programmcode

...

880

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.16 Achskopplungen

Programmcode

CTABDEF(Y,X,1,0)

X0 Y0

ASPLINE

X=5 Y=10

X10 Y40

...

CTABEND

Wiederholte Verwendung von Kurventabellen

Der ber die Kurventabelle berechnete funktionelle Zusammenhang von Leit- und Folgeachse 
bleibt unter der gewhlten Tabellennummer ber das Teileprogrammende und ber 
POWER OFF hinaus erhalten, falls die Tabelle im statischen NC-Speicher (SRAM) abgelegt ist.

Eine Tabelle, die im dynamischen Speicher (DRAM) angelegt wurde, wird bei POWER ON 
gelscht und muss eventuell noch einmal erzeugt werden.

Die einmal erstellte Kurventabelle lsst sich auf beliebige Achskombinationen von Leit- und 
Folgeachse anwenden und ist unabhngig davon, welche Achsen zur Erstellung der 
Kurventabelle benutzt wurden.

berschreiben von Kurventabellen

Eine Kurventabelle wird berschrieben, sobald bei einer erneuten Tabellendefinition deren 
Nummer benutzt wird.

Ausnahme: Eine Kurventabelle ist in einer Achskopplung aktiv oder mit CTABLOCK gesperrt.

Hinweis

Beim berschreiben von Kurventabellen wird keine entsprechende Warnung ausgegeben!

Kurventabellendefinition aktiv?

Mit der Systemvariablen $P_CTABDEF kann aus dem Teileprogramm heraus jederzeit 
abgefragt werden, ob eine Kurventabellendefinition aktiv ist.

Aufheben der Kurventabellendefinition

Der Teileprogrammabschnitt ist nach Ausklammern der Anweisungen zur 
Kurventabellendefinition wieder als reales Teileprogramm verwendbar.

Laden von Kurventabellen ber "Abarbeiten von Extern"

Beim externen Abarbeiten von Kurventabellen muss die Gre des Nachladebuffers (DRAM) 
ber MD18360 $MN_MM_EXT_PROG_BUFFER_SIZE so gewhlt werden, dass die gesamte 
Kurventabellendefinition gleichzeitig im Nachladebuffer abgelegt werden kann. Die 
Teileprogrammbearbeitung wird anderenfalls mit einem Alarm abgebrochen.

Sprnge der Folgeachse

Abhngig von der Einstellung im Maschinendatum:
MD20900 $MC_CTAB_ENABLE_NO_LEADMOTION
knnen Sprnge der Folgeachse bei fehlender Bewegung der Leitachse toleriert werden.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

881

 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.16 Achskopplungen

3.16.2.2

Vorhandensein einer Kurventabelle prfen (CTABEXISTS)

Mit dem Befehl CTABEXISTS kann geprft werden, ob eine bestimmte Kurventabellennummer 
im NC-Speicher vorhanden ist. 

Syntax

Bedeutung

CTABEXISTS(<n>)

CTABEXISTS:

Prft, ob die Kurventabelle mit Nummer <n> im statischen oder dynamischen NC-
Speicher vorhanden ist

0

1

Tabelle existiert nicht 

Tabelle existiert

<n>:

Nummer (ID) der Kurventabelle

3.16.2.3

Kurventabellen lschen (CTABDEL)

Mit CTABDEL knnen Kurventabellen gelscht werden. 

Hinweis

Kurventabellen, die in einer Achskopplung aktiv sind, knnen nicht gelscht werden.

Syntax

Bedeutung

CTABDEL(<n>)
CTABDEL(<n>,<m>)
CTABDEL(<n>,<m>,<Speicherort>)
CTABDEL()
CTABDEL(,,<Speicherort>)

CTABDEL:

<n>:

<m>:

Befehl zum Lschen von Kurventabellen

Nummer (ID) der zu lschenden Kurventabelle

Beim Lschen eines Kurventabellenbereichs CTABDEL(<n>,<m>) wird 
mit <n> die Nummer der ersten Kurventabelle des Bereichs angegeben.

Beim Lschen eines Kurventabellenbereichs CTABDEL(<n>,<m>) wird 
mit <m> die Nummer der letzten Kurventabelle des Bereichs angegeben.

<m> muss grer <n> sein!

882

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.16 Achskopplungen

<Speicherort>:

Angabe des Speicherorts (optional)

Beim Lschen ohne Speicherort-Angabe werden die angegebenen Kurven
tabellen im statischen und dynamischen NC-Speicher gelscht.

Beim Lschen mit Speicherort-Angabe werden von den angegebenen Kur
ventabellen nur diejenigen gelscht, die im angegebenen Speicher liegen. 
Die brigen bleiben bestehen.

"SRAM"

"DRAM"

Lschen im statischen NC-Speicher

Lschen im dynamischen NC-Speicher

Wird CTABDEL ohne Angabe der zu lschenden Kurventabelle programmiert, dann werden alle 
Kurventabellen bzw. alle Kurventabellen im angegebenen Speicher gelscht:

CTABDEL():

Lscht alle Kurventabellen im statischen und dynamischen NC-Spei
cher

CTABDEL(,,"SRAM"):

Lscht alle Kurventabellen im statischen NC-Speicher

CTABDEL(,,"DRAM"):

Lscht alle Kurventabellen im dynamischen NC-Speicher

Hinweis

Wenn beim Mehrfachlschen CTABDEL(<n>,<m>) oder CTABDEL() wenigstens eine der zu 
lschenden Kurventabellen in einer Kopplung aktiv ist, dann wird der Lschbefehl nicht 
ausgefhrt, d. h. keine der adressierten Kurventabellen wird gelscht.

3.16.2.4

Kurventabellen gegen Lschen und berschreiben sperren (CTABLOCK, 
CTABUNLOCK)

Kurventabellen knnen durch Setzen von Sperren vor unbeabsichtigtem Lschen und 
berschreiben geschtzt werden. Eine gesetzte Sperre kann jederzeit auch wieder 
aufgehoben werden.  

Syntax

Sperre setzen:
CTABLOCK(<n>)
CTABLOCK(<n>,<m>)
CTABLOCK(<n>,<m>,<Speicherort>)
CTABLOCK()
CTABLOCK(,,<Speicherort>)

Sperre aufheben:
CTABUNLOCK(<n>)
CTABUNLOCK(<n>,<m>)
CTABUNLOCK(<n>,<m>,<Speicherort>)
CTABUNLOCK()
CTABUNLOCK(,,<Speicherort>)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

883

Arbeitsvorbereitung

3.16 Achskopplungen

Bedeutung

CTABLOCK:

CTABUNLOCK:

Befehl zum Setzen einer Sperre gegen Lschen/berschreiben

Befehl zum Aufheben einer Sperre gegen Lschen/berschreiben

CTABUNLOCK gibt die mit CTABLOCK gesperrten Kurventabellen wieder frei. 
Kurventabellen, die in einer aktiven Kopplung wirken, bleiben weiterhin ge
sperrt und knnen nicht gelscht werden. Die Sperre mit CTABLOCK ist auf
gehoben, sobald die Sperrung durch die aktive Kopplung mit Deaktivierung 
der Kopplung aufgehoben wird. Damit kann diese Tabelle gelscht werden. 
Ein nochmaliger CTABUNLOCK-Aufruf ist nicht notwendig.

Nummer (ID) der zu sperrenden/entsperrenden Kurventabelle

Beim Sperren/Entsperren eines 
Kurventabellenbereichs CTABLOCK(<n>,<m>)/CTABUNLOCK(<n>,<m>) 
wird mit <n> die Nummer der ersten Kurventabelle des Bereichs angegeben.

Beim Sperren/Entsperren eines 
Kurventabellenbereichs CTABLOCK(<n>,<m>)/CTABUNLOCK(<n>,<m>) 
wird mit <m> die Nummer der letzten Kurventabelle des Bereichs angegeben.

<n>:

<m>:

<Speicherort>:

Angabe des Speicherorts (optional)

<m> muss grer <n> sein!

Beim Setzen/Aufheben einer Sperre ohne Speicherort-Angabe werden die 
angegebenen Kurventabellen im statischen und dynamischen NC-Speicher 
gesperrt/entsperrt.

Beim Setzen/Aufheben einer Sperre mit Speicherort-Angabe werden von den 
angegebenen Kurventabellen nur diejenigen gesperrt/entsperrt, die im ange
gebenen Speicher liegen. Die brigen werden nicht gesperrt/entsperrt.

"SRAM"

"DRAM"

Sperre setzen/aufheben im statischen NC-Speicher

Sperre setzen/aufheben im dynamischen NC-Speicher

Wird CTABLOCK/CTABUNLOCK ohne Angabe der zu sperrenden/entsperrenden 
Kurventabelle programmiert, dann werden alle Kurventabellen bzw. alle Kurventabellen im 
angegebenen Speicher gesperrt/entsperrt:

CTABLOCK():

Sperrt alle Kurventabellen im statischen und dynamischen NC-
Speicher

CTABLOCK(,,"SRAM"):

CTABLOCK(,,"DRAM"):

Sperrt alle Kurventabellen im statischen NC-Speicher

Sperrt alle Kurventabellen im dynamischen NC-Speicher

CTABUNLOCK():

Entsperrt alle Kurventabellen im statischen und dynamischen 
NC-Speicher

CTABUNLOCK(,,"SRAM"):

Entsperrt alle Kurventabellen im statischen NC-Speicher

CTABUNLOCK(,,"DRAM"):

Entsperrt alle Kurventabellen im dynamischen NC-Speicher

3.16.2.5

Kurventabellen: Tabelleneigenschaften ermitteln (CTABID, CTABISLOCK, 
CTABMEMTYP, CTABPERIOD)

Mit diesen Befehlen knnen wichtige Eigenschaften einer Kurventabelle (Tabellennummer, 
Sperrzustand, Speicherort, Periodizitt) abgefragt werden. 

884

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
Arbeitsvorbereitung

3.16 Achskopplungen

Syntax

Bedeutung

CTABID(<p>)
CTABID(<p>,<Speicherort>)
CTABISLOCK(<n>)
CTABMEMTYP(<n>)
TABPERIOD(<n>)

CTABID:

Liefert die Tabellennummer, die im angegebenen Speicher als die <p>-te 
Kurventabelle eingetragen ist.

Beispiel:

CTABID(1,"SRAM") liefert die Nummer der ersten Kurventabelle im stati
schen NC-Speicher. Die erste Kurventabelle entspricht dabei der Kurventa
belle mit der hchsten Tabellennummer.

Hinweis:
Wird zwischen aufeinander folgenden Aufrufen von CTABID die Reihenfolge 
der Kurventabellen im Speicher gendert, z. B. durch Lschen von Kurven
tabellen mit CTABDEL, kann CTABID(<p>,...) mit derselben Nummer <p> 
eine andere Kurventabelle liefern als vorher.

CTABISLOCK:

Gibt den Sperrzustand der Kurventabelle mit Nummer <n> zurck:

0

1

2

3

Tabelle ist nicht gesperrt

Tabelle ist gesperrt durch CTABLOCK

Tabelle ist gesperrt durch aktive Kopplung

Tabelle ist gesperrt durch CTABLOCK und aktive Kopplung

-1

Tabelle existiert nicht

CTABMEMTYP:

Liefert den Speicherort der Kurventabelle mit Nummer <n>:

0

1

-1

Tabelle im statischen NC-Speicher

Tabelle im dynamischen NC-Speicher

Tabelle existiert nicht

CTABPERIOD:

Liefert die Periodizitt der Kurventabelle mit Nummer <n>:

0

1

2

-1

Tabelle ist nicht periodisch

Tabelle ist periodisch in der Leitachse

Tabelle ist periodisch in der Leit- und Folgeachse

Tabelle existiert nicht

<p>:

<n>:

Eintragsnummer im Speicher

Nummer (ID) der Kurventabelle

<Speicherort>:

Angabe des Speicherorts (optional)

"SRAM"

"DRAM"

Statischer NC-Speicher

Dynamischer NC-Speicher

Hinweis:
Wenn fr diesen Parameter kein Wert programmiert wird, dann wird der mit 
MD20905 $MC_CTAB_DEFAULT_MEMORY_TYPE eingestellte Standard-
Speicherort verwendet.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

885

Arbeitsvorbereitung

3.16 Achskopplungen

3.16.2.6

Kurventabellenwerte lesen (CTABTSV, CTABTEV, CTABTSP, CTABTEP, CTABSSV, 
CTABSEV, CTAB, CTABINV, CTABTMIN, CTABTMAX)

Syntax

Bedeutung

Folgende Kurventabellenwerte knnen im Teileprogramm gelesen werden: 

 Folgeachs- und Leitachswerte am Anfang und Ende einer Kurventabelle

 Folgeachswerte am Anfang und Ende eines Kurvensegments

 Folgeachswert zu einem Leitachswert

 Leitachswert zu einem Folgeachswert

 Minimal- und Maximalwert der Folgeachse

 im gesamten Definitionsbereich der Kurventabelle

oder

 in einem definierten Kurventabellenintervall

CTABTSV(<n>,<Gradient>[,<Folgeachse>])
CTABTEV(<n>,<Gradient>[,<Folgeachse>])
CTABTSP(<n>,<Gradient>[,<Leitachse>])
CTABTEP(<n>,<Gradient>[,<Leitachse>])
CTABSSV(<Leitwert>,<n>,<Gradient>[,<Folgeachse>])
CTABSEV(<Leitwert>,<n>,<Gradient>[,<Folgeachse>])
CTAB(<Leitwert>,<n>,<Gradient>[,<Folgeachse>,<Leitachse>]
CTABINV(<Folgewert>,<Nherungswert>,<n>,<Gradient>[,<Folgeachse>,<Le
itachse>]
CTABTMIN(<n>[,<Folgeachse>])
CTABTMAX(<n>[,<Folgeachse>])
CTABTMIN(<n>,<a>,<b>[,<Folgeachse>,<Leitachse>])
CTABTMAX(<n>,<a>,<b>[,<Folgeachse>,<Leitachse>])

CTABTSV:

CTABTEV:

CTABTSP:

CTABTEP:

CTABSSV:

CTABSEV:

CTAB:

CTABINV:

CTABTMIN:

Folgeachswert am Anfang der Kurventabelle Nr. <n> lesen

Folgeachswert am Ende der Kurventabelle Nr. <n> lesen

Leitachswert am Anfang der Kurventabelle Nr. <n> lesen

Leitachswert am Ende der Kurventabelle Nr. <n> lesen

Folgeachswert am Anfang des zum angegebenen Leitachswert 
(<Leitwert>) gehrenden Kurvensegments lesen

Folgeachswert am Ende des zum angegebenen Leitachswert 
(<Leitwert>) gehrenden Kurvensegments lesen

Folgeachswert zum angegebenen Leitachswert (<Leitwert>) lesen

Leitachswert zum angegebenen Folgeachswert (<Folgewert>) lesen

Minimalwert der Folgeachse bestimmen:

 im gesamten Definitionsbereich der Kurventabelle

oder

 in einem definierten Intervall <a> ... <b>

886

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.16 Achskopplungen

CTABTMAX:

Maximalwert der Folgeachse bestimmen:

<n>:

<Gradient>:

<Folgeachse>:

<Leitachse>:

<Folgewert>:

<Leitwert>:

<Nherungswert>:

 im gesamten Definitionsbereich der Kurventabelle

oder

 in einem definierten Intervall <a> ... <b>

Nummer (ID) der Kurventabelle

Im Parameter <Gradient> wird die Steigung der Kurventabellenfunktion 
an der ermittelten Position zurckgegeben

Achse, deren Bewegung ber die Kurventabelle berechnet werden soll 
(optional)

Achse, die die Leitwerte zur Berechnung der Folgeachsbewegung liefert 
(optional)

Folgeachswert zum Lesen des zugehrigen Leitachswerts bei CTABINV

Leitachswert:

 zum Lesen des zugehrigen Folgeachswerts bei CTAB

oder

 fr die Auswahl des Kurvensegments bei CTABSSV/CTABSEV

Die Zuordnung eines Leitachswerts zu einem Folgeachswert bei CTABINV 
muss nicht immer eindeutig sein. CTABINV bentigt daher als Parameter 
einen Nherungswert fr den erwarteten Leitachswert.

<a>:

<b>:

Untere Grenze des Leitwertintervalls bei CTABTMIN/CTABTMAX

Obere Grenze des Leitwertintervalls bei CTABTMIN/CTABTMAX

Hinweis:
Das Leitwertintervall <a> ... <b> muss innerhalb des Definitionsbereichs 
der Kurventabelle liegen.

Beispiele

Beispiel 1:

Folgeachs- und Leitachswerte am Anfang und Ende der Kurventabelle sowie Minimal- und 
Maximalwert der Folgeachse im gesamten Definitionsbereich der Kurventabelle bestimmen.

Programmcode

Kommentar

N10 DEF REAL STARTPOS

N20 DEF REAL ENDPOS

N30 DEF REAL STARTPARA

N40 DEF REAL ENDPARA

N50 DEF REAL MINVAL

N60 DEF REAL MAXVAL

N70 DEF REAL GRADIENT

...

N100 CTABDEF(Y,X,1,0)

; Beginn der Tabellendefinition

N110 X0 Y10

N120 X30 Y40

N130 X60 Y5

N140 X70 Y30

; Startposition 1.Tabellensegment

; Endposition 1.Tabellensegment = 
Startposition 2.Tabellensegment

; Endposition 2.Tabellensegment = ...

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

887

 
 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.16 Achskopplungen

Programmcode

N150 X80 Y20

N160 CTABEND

...

Kommentar

; Ende der Tabellendefinition.

N200 STARTPOS=CTABTSV(1,GRADIENT)

; Folgeachswert am Kurventabellenanfang = 10

N210 ENDPOS=CTABTEV(1,GRADIENT)

; Folgeachswert am Kurventabellenende = 20 

N220 STARTPARA=CTABTSP(1,GRADIENT)

; Leitachswert am Kurventabellenanfang = 0

N230 ENDPARA=CTABTEP(1,GRADIENT)

; Leitachswert am Kurventabellenende = 80

N240 MINVAL=CTABTMIN(1)

; Minimalwert der Folgeachse bei Y=5

N250 MAXVAL=CTABTMAX(1)

; Maximalwert der Folgeachse bei Y=40

Beispiel 2:

Bestimmung der Folgeachswerte am Anfang und Ende des zum Leitachswert X=30 
gehrenden Kurvensegments.

Programmcode

N10 DEF REAL STARTPOS

N20 DEF REAL ENDPOS

N30 DEF REAL GRADIENT

...

Kommentar

N100 CTABDEF(Y,X,1,0)

; Beginn der Tabellendefinition.

N110 X0 Y0

N120 X20 Y10

N130 X40 Y40

N140 X60 Y10

N150 X80 Y0

N160 CTABEND

...

; Startposition 1.Tabellensegment

; Endposition 1.Tabellensegment = 
Startposition 2.Tabellensegment

; Endposition 2.Tabellensegment = ...

; Ende der Tabellendefinition.

N200 STARTPOS=CTABSSV(30.0,1,GRADIENT) ; Startposition Y im 2.Segment = 10

N210 ENDPOS=CTABSEV(30.0,1,GRADIENT)

; Endposition Y im 2.Segment = 40

Weitere Informationen

Verwendung in Synchronaktionen

Alle Befehle zum Lesen von Kurventabellenwerten knnen auch in Synchronaktionen 
verwendet werden (siehe auch Kapitel "Bewegungssynchronaktionen").

Bei Verwendung der Befehle CTABINV, CTABTMIN und CTABTMAX ist darauf zu achten, 
dass:

 zum Ausfhrungszeitpunkt ausreichend NC-Leistung verfgbar ist

oder

 vor dem Aufruf die Anzahl der Segmente der Kurventabelle abgefragt wird, um 

gegebenenfalls die betreffende Tabelle unterteilen zu knnen

888

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.16 Achskopplungen

CTAB bei nichtperiodischen Kurventabellen

Liegt der angegebene <Leitwert> auerhalb des Definitionsbereichs, wird als Folgewert die 
obere bzw. untere Grenze ausgegeben:

CTAB bei periodischen Kurventabellen

Liegt der angegebene <Leitwert> auerhalb des Definitionsbereichs, wird der Leitwert Modulo 
des Definitionsbereichs bewertet und der entsprechende Folgewert ausgegeben:

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

889

LLFFDefinitionsbereichLeitwertFolgewertLFDefinitionsbereichLeitwertFolgewertArbeitsvorbereitung

3.16 Achskopplungen

Nherungswert fr CTABINV

Der Befehl CTABINV bentigt einen Nherungswert fr den erwarteten Leitwert. CTABINV gibt 
den Leitwert zurck, der dem Nherungswert am nchsten liegt. Der Nherungswert kann z. B. 
der Leitwert aus dem vorherigen Interpolatortakt sein.

Steigung der Kurventabellenfunktion

Die Ausgabe der Steigung (<Gradient>) ermglicht es, die Geschwindigkeit der Leit- oder 
Folgeachse an der entsprechenden Position zu berechnen.

Angabe der Leit- oder Folgeachse

Die optionale Angabe der Leit- und/oder Folgeachse ist wichtig, falls Leit- und Folgeachse in 
verschiedenen Lngeneinheiten projektiert sind.

CTABSSV, CTABSEV

Die Befehle CTABSSV und CTABSEV sind in folgenden Fllen nicht dazu geeignet, 
programmierte Segmente abzufragen:

 Kreise oder Evolventen sind programmiert.

 Fasen bzw. Runden mit CHF/RND ist aktiv.

 berschleifen mit G643 ist aktiv.

 NC-Satz-Kompression (COMP...) ist aktiv.

3.16.2.7

Kurventabellen: Ressourcennutzung prfen (CTABNO, CTABNOMEM, CTABFNO, 
CTABSEGID, CTABSEG, CTABFSEG, CTABMSEG, CTABPOLID, CTABPOL, 
CTABFPOL, CTABMPOL)

Mit diesen Befehlen hat der Programmierer die Mglichkeit, sich aktuell ber die Belegung der 
Ressourcen fr Kurventabellen, Tabellensegmente und Polynome zu informieren.   

Syntax

CTABNO
CTABNOMEM(<Speicherort>)
CTABFNO(<Speicherort>)
CTABSEGID(<n>,<Speicherort>)
CTABSEG(<Speicherort>,<Segmentart>)
CTABFSEG(<Speicherort>,<Segmentart>)
CTABMSEG(<Speicherort>,<Segmentart>)
CTABPOLID(<n>)
CTABPOL(<Speicherort>)
CTABFPOL(<Speicherort>)
CTABMPOL(<Speicherort>)

890

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Bedeutung

Arbeitsvorbereitung

3.16 Achskopplungen

CTABNO:

CTABNOMEM:

CTABFNO:

CTABSEGID:

CTABSEG:

CTABFSEG:

CTABMSEG:

CTABPOLID:

CTABPOL:

CTABFPOL:

CTABMPOL:

Gesamtanzahl der definierten Kurventabellen bestimmen (im statischen und 
dynamischen NC-Speicher)

Anzahl der definierten Kurventabellen im angegebenen <Speicherort> 
bestimmen

Anzahl der noch mglichen Kurventabellen im 
angegebenen <Speicherort> bestimmen

Anzahl der Kurvensegmente der angegebenen <Segmentart> bestimmen, 
die von der Kurventabelle mit Nummer <n> verwendet werden

Anzahl der verwendeten Kurvensegmente der 
angegebenen <Segmentart> im angegebenen <Speicherort> bestim
men

Anzahl der noch mglichen Kurvensegmente der 
angegebenen <Segmentart> im angegebenen <Speicherort> bestim
men

Anzahl der maximal mglichen Kurvensegmente der 
angegebenen <Segmentart> im angegebenen <Speicherort> bestim
men

Anzahl der Kurvenpolynome bestimmen, die von der Kurventabelle mit Num
mer <n> verwendet werden

Anzahl der verwendeten Kurvenpolynome im 
angegebenen <Speicherort> bestimmen

Anzahl der noch mglichen Kurvenpolynome im 
angegebenen <Speicherort> bestimmen

Anzahl der maximal mglichen Kurvenpolynome im 
angegebenen <Speicherort> bestimmen

<n>:

Nummer (ID) der Kurventabelle

<Speicherort>:

Angabe des Speicherorts (optional)

"SRAM"

"DRAM"

Statischer NC-Speicher

Dynamischer NC-Speicher

Hinweis:
Wenn fr diesen Parameter kein Wert programmiert wird, dann wird der mit 
MD20905 $MC_CTAB_DEFAULT_MEMORY_TYPE eingestellte Standard-
Speicherort verwendet.

<Segmentart>:

Angabe der Segmentart (optional)

"L"

"P"

Lineare Segmente

Polynomsegmente

Hinweis:
Wenn fr diesen Parameter kein Wert programmiert wird, dann wird die Sum
me aus Linear- und Polynom-Segmenten ausgegeben.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

891

Arbeitsvorbereitung

3.16 Achskopplungen

3.16.3

Axiale Leitwertkopplung (LEADON, LEADOF)

Hinweis

Diese Funktion steht fr SINUMERIK 828D nicht zur Verfgung!

Bei der axialen Leitwertkopplung werden eine Leit- und eine Folgeachse synchron verfahren. 
Dabei ist die jeweilige Position der Folgeachse ber eine Kurventabelle bzw. ein daraus 
berechnetes Polynom eindeutig einer - ggf. simulierten - Position der Leitachse zugeordnet.      

Leitachse heit diejenige Achse, die die Eingangswerte fr die Kurventabelle liefert. 
Folgeachse heit die Achse, die die ber die Kurventabelle errechneten Positionen einnimmt.

Ist- und Sollwertkopplung

Als Leitwerte, also Ausgangswerte zur Positionsermittlung der Folgeachse knnen verwendet 
werden:

 Istwerte der Leitachsposition: Istwertkopplung

 Sollwerte der Leitachsposition: Sollwertkopplung

Die Leitwertkopplung gilt immer im Basiskoordinatensystem.

Zur Erstellung von Kurventabellen siehe Kapitel "Kurventabellen".

LEADON(<Folgeachse>,<Leitachse>,<n>)
LEADOF(<Folgeachse>,<Leitachse>)

oder Ausschalten ohne Angabe der Leitachse:
LEADOF(<Folgeachse>)

Syntax

892

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

XYBedeutung

Die Leitwertkopplung kann sowohl vom Teileprogramm als auch whrend der Bewegung aus 
Synchronaktionen heraus ein- und ausgeschaltet werden.

Arbeitsvorbereitung

3.16 Achskopplungen

LEADON:

LEADOF:

<Folgeachse>:

<Leitachse>:

<n>:

Leitwertkopplung einschalten

Leitwertkopplung ausschalten

Folgeachse

Leitachse

Kurventabellen-Nummer

$SA_LEAD_TYPE:

Umschaltung zwischen Soll- und Istwertkopplung

Leitwertkopplung ausschalten, LEADOF

Mit dem Ausschalten der Leitwertkopplung wird die Folgeachse wieder zur normalen 
Kommandoachse!

Axiale Leitwertkopplung und verschiedene Betriebszustnde, RESET

Abhngig von der Einstellung im Maschinendatum werden Leitwertkopplungen mit RESET 
ausgeschaltet.

Beispiel Leitwertkopplung aus Synchronaktion

Bei einer Pressenanlage soll eine herkmmliche mechanische Kopplung zwischen einer 
Leitachse (Stempelwelle) und Achsen eines Transfersystems aus Transferachsen und 
Hilfsachsen durch ein elektronisches Koppelsystem ersetzt werden.

Es demonstriert, wie bei einer Pressenanlage ein mechanisches Transfersystem durch ein 
elektronisches Transfersystem ersetzt wird. Die Kopplungs- und Entkopplungsvorgnge sind 
als statische Synchronaktionen realisiert.

Von der Leitachse LW (Stempelwelle) werden Transferachsen und Hilfsachsen als 
Folgeachsen ber Kurventabellen definiert gesteuert.

Folgeachsen

X Vorschub- bzw. Lngsachse 
YL Schlie- bzw. Querachse 
ZL Hubachse 
U Walzenvorschub, Hilfsachse 
V Richtkopf, Hilfsachse 
W Befettung, Hilfsachse

Aktionen

Als Aktionen treten in den Synchronaktionen z. B. auf:

 Einkoppeln, LEADON(<Folgeachse>,<Leitachse>,<Kurventabellen-Nummer>)

 Auskoppeln, LEADOF(<Folgeachse>,<Leitachse>)

 Istwertsetzen, PRESETON(<Achse>,<Wert>)

 Merker setzen, $AC_MARKER[i]=<Wert>

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

893

Arbeitsvorbereitung

3.16 Achskopplungen

 Kopplungsart: reeller/virtueller Leitwert

 Anfahren von Achspositionen, POS[<Achse>]=<Wert>

Bedingungen

Als Bedingungen werden digitale schnelle Eingnge, Echtzeitvariablen $AC_MARKER und 
Positionsvergleiche, mit dem logischen Operator AND verknpft, ausgewertet.

Hinweis

Im folgenden Beispiel wurden Zeilenwechsel, Einrckungen und Fettsatz ausschlielich dafr 
verwendet, die Lesbarkeit der Programmierung zu erhhen. Fr die Steuerung ist alles unter 
einer Zeilennummer stehende einzeilig.

Kommentar

Programmcode

Kommentar

; Definiert smtliche statische Synchronaktionen.

; ****Marker rcksetzen

N2 $AC_MARKER[0]=0 $AC_MARKER[1]=0 $AC_MARKER[2]=0 $AC_MARKER[3]=0 $AC_MARKER[4]=0 $AC_MARKER[5]=0 
$AC_MARKER[6]=0 $AC_MARKER[7]=0

; **** E1 0=>1 Kopplung Transfer EIN

N10 IDS=1 EVERY ($A_IN[1]==1) AND ($A_IN[16]==1) AND ($AC_MARKER[0]==0)
DO LEADON(X,LW,1) LEADON(YL,LW,2) LEADON(ZL,LW,3) $AC_MARKER[0]=1

; **** E1 0=>1 Kopplung Walzenvorschub EIN

N20 IDS=11 EVERY ($A_IN[1]==1) AND ($A_IN[5]==0) AND ($AC_MARKER[5]==0)
DO LEADON(U,LW,4) PRESETON(U,0) $AC_MARKER[5]=1

; **** E1 0->1 Kopplung Richtkopf EIN

N21 IDS=12 EVERY ($A_IN[1]==1) AND ($A_IN[5]==0) AND ($AC_MARKER[6]==0)
DO LEADON(V,LW,4) PRESETON(V,0) $AC_MARKER[6]=1

; **** E1 0->1 Kopplung Befettung EIN

N22 IDS=13 EVERY ($A_IN[1]==1) AND ($A_IN[5]==0) AND ($AC_MARKER[7]==0) 
DO LEADON(W,LW,4) PRESETON(W,0) $AC_MARKER[7]=1

; **** E2 0=>1 Kopplung AUS

N30 IDS=3 EVERY ($A_IN[2]==1)
DO LEADOF(X,LW) LEADOF(YL,LW) LEADOF(ZL,LW) LEADOF(U,LW) LEADOF(V,LW) LEADOF(W,LW) $AC_MARKER[0]=0 
$AC_MARKER[1]=0 $AC_MARKER[3]=0 $AC_MARKER[4]=0 $AC_MARKER[5]=0 $AC_MARKER[6]=0 $AC_MARKER[7]=0

....

N110 G04 F01

N120 M30

Beschreibung

Die Leitwertkopplung erfordert die Synchronisation von Leit- und Folgeachse. Diese 
Synchronisation kann nur erreicht werden, wenn die Folgeachse bei Einschalten der 
Leitwertkopplung innerhalb des Toleranzbereiches des aus der Kurventabelle berechneten 
Kurvenzugs steht.   

Der Toleranzbereich fr die Stellung der Folgeachse ist ber Maschinendatum MD 37200: 
COUPLE_POS_POL_COARSE A_LEAD_TYPE definiert.

894

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.16 Achskopplungen

Befindet sich die Folgeachse mit dem Einschalten der Leitwertkopplung noch nicht an der 
entsprechenden Position, wird der Synchronlauf automatisch hergestellt, sobald sich der 
berechnete Positionssollwert fr die Folgeachse der tatschlichen Folgeachsposition nhert. 
Die Folgeachse wird dabei whrend des Synchronisationsvorganges in die Richtung 
verfahren, die durch die Sollgeschwindigkeit der Folgeachse (berechnet aus 
Leitachsgeschwindigkeit und nach Kurventabelle CTAB) definiert ist.

Kein Synchronlauf

Entfernt sich die berechnete Folgeachssollposition mit Einschalten der Leitwertkopplung von 
der aktuellen Folgeachsposition, wird kein Synchronlauf hergestellt.

Ist- und Sollwertkupplung

Die Sollwertkopplung liefert im Vergleich zur Istwertkopplung einen besseren Synchronlauf 
zwischen Leit- und Folgeachse und ist deshalb standardmig voreingestellt.   

Sollwertkopplung ist nur mglich, wenn Leit- und Folgeachse von derselben NCU interpoliert 
werden. Bei einer externen Leitachse kann die Folgeachse nur ber Istwerte an die Leitachse 
gekoppelt werden.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

895

FolgeachspositionFolgeachsposition nach KurventabelleYYSollwertkopplungIstwertkopplungAx1Ax2NCUArbeitsvorbereitung

3.16 Achskopplungen

Eine Umschaltung ist ber das Settingdatum $SA_LEAD_TYPE mglich.   

Das Umschalten zwischen Ist- und Sollwertkopplung sollte immer bei Stillstand der Folgeachse 
erfolgen. Denn nur im Stillstand wird nach dem Umschalten neu synchronisiert.

Anwendungsbeispiel

Das Lesen der Istwerte kann bei groen Maschinenerschtterungen nicht fehlerfrei erfolgen. 
Beim Einsatz der Leitwertkopplung im Pressentransfer kann es daher in den Arbeitsschritten 
mit grten Erschtterungen notwendig werden, von Istwertkopplung auf Sollwertkopplung 
umzuschalten.

Leitwertsimulation bei Sollwertkopplung   

ber Maschinendatum lsst sich der Interpolator fr die Leitachse vom Servo trennen. Damit 
knnen bei Sollwertkopplung Sollwerte ohne tatschliche Bewegung der Leitachse erzeugt 
werden.

Die ber Sollwertkopplung erzeugten Leitwerte sind zur Benutzung z. B. in Synchronaktionen 
aus folgenden Variablen lesbar:

- $AA_LEAD_P
- $AA_LEAD_V

Leitwerte erzeugen

Leitwert Position
Leitwert Geschwindigkeit

Leitwerte knnen wahlweise mit anderen selbst programmierten Verfahren erzeugt werden. 
Die so erzeugten Leitwerte werden in die Variable

- $AA_LEAD_SP   
- $AA_LEAD_SV   

Leitwert Position
Leitwert Geschwindigkeit

geschrieben und aus ihnen gelesen. Zur Benutzung dieser Variablen muss das Settingdatum  
$SA_LEAD_TYPE = 2 gesetzt werden.

Status der Kopplung   

Im NC-Teileprogramm knnen Sie den Kopplungsstatus mit folgender Systemvariablen 
abfragen:   

$AA_COUP_ACT[Achse] 
0: Keine Kopplung aktiv 
16: Leitwertkopplung aktiv

Status-Verwaltung bei Synchronaktionen

Schalt- und Koppelvorgnge werden ber Echtzeitvariablen:

896

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

NCU 1NCU 2Ax1Ax2IstwertkopplungArbeitsvorbereitung

3.16 Achskopplungen

$AC_MARKER[i] = n 
verwaltet mit:
i Merker-Nummer
n Statuswert

3.16.4

Elektronisches Getriebe (EG)

Mit Hilfe der Funktion "Elektronisches Getriebe" ist es mglich, die Bewegung 
einer Folgeachse nach linearem Bewegungssatz abhngig von bis zu fnf Leitachsen zu 
steuern. Die Zusammenhnge zwischen den Leitachsen und der Folgeachse sind je Leitachse 
durch den Koppelfaktor definiert.   

Der berechnete Folgeachs-Bewegungsanteil wird aus den einzelnen Leitachsen-
Bewegungsanteilen multipliziert mit den jeweiligen Koppelfaktoren durch Addition gebildet. Bei 
der Aktivierung eines EG-Achsverbundes kann die Synchronisation der Folgeachse auf eine 
definierte Position veranlasst werden. Ein Getriebeverband kann aus dem Teileprogramm: 

 definiert,

 eingeschaltet,

 ausgeschaltet,

 gelscht

werden.

Die Folgeachsbewegung kann wahlweise abgeleitet werden aus den

 Sollwerten der Leitachsen sowie den

 Istwerten der Leitachsen.

Als Erweiterung knnen auch nichtlineare Zusammenhnge zwischen den Leitachsen und der 
Folgeachse ber Kurventabellen (siehe Kapitel Bahnverhalten) realisiert werden. 
Elektronische Getriebe knnen kaskadiert werden, d. h. die Folgeachse eines Elektronischen 
Getriebes kann Leitachse fr ein weiteres Elektronisches Getriebe sein.

3.16.4.1

Elektronisches Getriebe definieren (EGDEF)

Ein EG-Achsverband wird durch die Angabe der Folgeachse und mindestens einer, jedoch 
hchstens fnf Leitachsen mit dem jeweiligen Kopplungstyp festgelegt.  

Voraussetzung

Syntax

Voraussetzung fr eine EG-Achsverband-Definition:

Fr die Folgeachse darf noch keine Achskopplung definiert sein (ggf. muss eine bestehende 
vorher mit EGDEL gelscht werden).

EGDEF(Folgeachse,Leitachse1,Kopplungstyp1,Leitachse2,Kopplungstyp2,.
..)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

897

Arbeitsvorbereitung

3.16 Achskopplungen

Bedeutung

EGDEF:

Folgeachse:

Leitachse1
,...,
Leitachse5

Kopplungstyp1
,...,
Kopplungstyp5

Definition eines elektronischen Getriebes

Achse, die von Leitachsen beeinflusst wird

Achsen, die die Folgeachse beeinflussen

Kopplungstyp

Der Kopplungstyp muss nicht fr alle Leitachsen gleich sein und ist daher 
fr jede Leitachse einzeln anzugeben.

Wert:

Bedeutung:

0

1

Die Folgeachse wird beeinflusst vom Istwert der entsprech
enden Leitachse.

Die Folgeachse wird beeinflusst vom Sollwert der entsprech
enden Leitachse.

Hinweis

Die Koppelfaktoren werden bei der Definition des EG-Kopplungsverbandes mit Null vorbesetzt.

Hinweis

EGDEF lst Vorlaufstopp aus. Die Getriebedefinition mit EGDEF ist auch dann unverndert zu 
verwenden, wenn bei Systemen eine oder mehrere Leitachsen ber Kurventabelle auf die 
Folgeachse einwirken.

Beispiel

Programmcode

Kommentar

EGDEF(C,B,1,Z,1,Y,1)

; Definition eines EG-Achsverbandes. Die Leitachsen B, 
Z, Y beeinflussen die Folgeachse C ber den Sollwert.

3.16.4.2

Elektronisches Getriebe einschalten (EGON, EGONSYN, EGONSYNE)

Fr das Einschalten eines EG-Achsverbandes existieren 3 Varianten.   

Syntax

Variante 1:

Der EG-Achsverband wird ohneSynchronisation selektiv eingeschaltet mit:
EGON(FA,"Satzwechselmodus",LA1,Z1,N1,LA2,Z2,N2,...,LA5,Z5,N5)

Variante 2:

Der EG-Achsverband wird mitSynchronisation selektiv eingeschaltet mit:
EGONSYN(FA,"Satzwechselmodus",SynPosFA,[,LAi,SynPosLAi,Zi,Ni])

898

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.16 Achskopplungen

Variante 3:

Der EG-Achsverband wird mitSynchronisation selektiv eingeschaltet und der Anfahrmodus 
vorgegeben mit:
EGONSYNE(FA,"Satzwechselmodus",SynPosFA,Anfahrmodus[,LAi,SynPosLAi,Z
i,Ni])

Bedeutung

Variante 1:

FA

Folgeachse

Satzwechselmodus:

Folgende Modi knnen benutzt werden:

"NOC"

"FINE"

"COARSE"

"IPOSTOP"

Leitachsen

Satzwechsel erfolgt sofort

Satzwechsel erfolgt bei "Synchronlauf fein"

Satzwechsel erfolgt bei "Synchronlauf grob"

Satzwechsel erfolgt bei sollwertseitigem Syn
chronlauf

Zhler fr den Koppelfaktor i

Nenner fr den Koppelfaktor i

Koppelfaktor i = Zhler i/Nenner i

LA1, ... LA5

Z1, ... Z5

N1, ... N5

Es drfen nur die Leitachsen programmiert werden, die zuvor mit EGDEF spezifiziert worden 
sind. Es muss mindestens eine Leitachse programmiert werden.

Variante 2:

FA

Folgeachse

Satzwechselmodus:

Folgende Modi knnen benutzt werden:

"NOC"

"FINE"

"COARSE"

"IPOSTOP"

Satzwechsel erfolgt sofort

Satzwechsel erfolgt bei "Synchronlauf fein"

Satzwechsel erfolgt bei "Synchronlauf grob"

Satzwechsel erfolgt bei sollwertseitigem Syn
chronlauf

[,LAi,SynPosLAi,Zi,Ni]

(Eckige Klammern nicht schreiben)

LA1, ... LA5

SynPosLAi

Z1, ... Z5

N1, ... N5

Mind. 1, max. 5 Folgen von:

Leitachsen

Synchronposition fr die i. Leitachse

Zhler fr den Koppelfaktor i

Nenner fr den Koppelfaktor i

Koppelfaktor i = Zhler i/Nenner i

Es drfen nur Leitachsen programmiert werden, die zuvor mit EGDEF spezifiziert worden sind. 
Durch die programmierten "Synchronpositionen" fr die Folgeachse (SynPosFA) und fr die 
Leitachsen (SynPosLA) werden Positionen definiert, in denen der Koppelverband als synchron 
gilt. Sofern sich das elektronische Getriebe beim Einschalten nicht in synchronem Zustand 
befindet, fhrt die Folgeachse auf ihre definierte Synchronposition.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

899

Arbeitsvorbereitung

3.16 Achskopplungen

Variante 3:

Die Parameter entsprechen denen der Variante 2 zuzglich:

Anfahrmodus:

Folgende Modi knnen benutzt werden:

"NTGT"

"NTGP"

"ACN"

"ACP"

"DCT"

"DCP"

Nchste Zahnlcke zeitoptimiert anfahren

Nchste Zahnlcke wegoptimiert anfahren

Rundachse in negativer Drehrichtung verfahren absolut

Rundachse in positiver Drehrichtung verfahren absolut

Zeitoptimiert zur programmierten Synchronposition

Wegoptimiert zur programmierten Synchronposition

Die Variante 3 hat nur Auswirkungen auf Modulo-Folgeachsen, die an Modulo-Leitachsen 
gekoppelt sind. Zeitoptimierung bercksichtigt die Geschwindigkeitsgrenzen der Folgeachse.

Weitere Informationen

Beschreibung der Einschaltvarianten

Variante 1:

Die Positionen der Leitachsen sowie der Folgeachse zum Zeitpunkt des Einschaltens werden 
gespeichert als "Synchronpositionen". Die "Synchronpositionen" knnen mit den 
Systemvariablen $AA_EG_SYN gelesen werden.

Variante 2:

Wenn Modulo-Achsen im Koppelverband sind, werden ihre Positionswerte modulo reduziert. 
Damit ist gewhrleistet, dass die nchstmgliche Synchronposition angefahren wird (sog. 
relative Synchronisation: z. B. die nchste Zahnlcke). Wenn fr die Folgeachse nicht 
"Freigabe Folgeachsberlagerung" Nahtstellensignal DB(30 +Achsnummer), DBX 26 Bit 4 
gegeben ist, wird nicht auf die Synchronposition gefahren. Stattdessen wird das Programm 
beim EGONSYN-Satz angehalten und es wird der selbstlschende Alarm 16771 gemeldet, 
solange bis das o.g. Signal gesetzt wird.

Variante 3:

Der Zahnabstand (Grad) ergibt sich aus: 360 * Zi/Ni. Fr den Fall, dass die Folgeachse zum 
Aufrufzeitpunkt steht, liefert wegoptimiert das gleiche Verhalten wie zeitoptimiert. 

Bei bereits fahrender Folgeachse wird mit NTGP unabhngig von der aktuellen 
Geschwindigkeit der Folgeachse auf die nchste Zahnlcke synchronisiert. Bei bereits 
fahrender Folgeachse wird mit NTGT abhngig von der aktuellen Geschwindigkeit der 
Folgeachse auf die nchste Zahnlcke synchronisiert. Die Achse wird dazu ggf. auch 
abgebremst.

900

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.16 Achskopplungen

Kurventabellen

Wird fr eine der Leitachsen eine Kurventabelle verwendet, so muss:

Ni

Zi

LAi

der Nenner des Koppelfaktors linearer Kopplungen auf 0 gesetzt werden. (Nenner 
0 wre fr lineare Kopplungen unzulssig). Nenner Null ist fr die Steuerung das 
Kennzeichen, dass
als Nummer der zu verwendenden Kurventabelle interpretiert werden soll. Die Kur
ventabelle mit der angegebenen Nummer muss zum Einschaltzeitpunkt bereits de
finiert sein.
Die Angabe der Leitachse entspricht der Leitachsangabe bei Kopplung ber Kop
pelfaktor (lineare Kopplung).

Weitere Hinweise ber die Nutzung von Kurventabellen und das Kaskadieren von 
Elektronischen Getrieben und deren Synchronisierung finden Sie in:
Weitere Funktionen:
Funktionshandbuch Achsen und Spindeln

Verhalten des Elektronischen Getriebes bei Power On, RESET, Betriebsartenwechsel, 
Satzsuchlauf

 Nach Power On ist keine Kopplung aktiv.

 Aktive Kopplungen bleiben ber RESET und Betriebsartenwechsel erhalten.

 Bei Satzsuchlauf werden Befehle zum Schalten, Lschen, Definieren des Elektronischen 

Getriebes nicht ausgefhrt und nicht aufgesammelt, sondern bergangen.

Systemvariablen des Elektronischen Getriebes

Mit Hilfe der Systemvariablen des Elektronischen Getriebes kann das Teileprogramm aktuelle 
Zustnde eines EG-Achsverbandes ermitteln und ggf. darauf reagieren.

Die Systemvariablen des Elektronischen Getriebes sind wie folgt gekennzeichnet:

$AA_EG_ ... 

oder

$VA_EG_ ... 

Weitere Informationen
Funktionshandbuch Systemvariablen

3.16.4.3

Elektronisches Getriebe ausschalten (EGOFS, EGOFC)

Fr das Ausschalten eines aktiven EG-Achsverbandes existieren 3 Varianten.  

Programmierung

Variante 1:

Syntax

Bedeutung

EGOFS(Folgeachse)

Das elektronische Getriebe wird ausgeschaltet. Die Folgeachse 
wird zum Stillstand abgebremst. Der Aufruf lst Vorlaufstopp aus.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

901

Arbeitsvorbereitung

3.16 Achskopplungen

Variante 2:

Syntax

EGOFS(Folgeachse,Leitachse1,
,Leitachse5)

Bedeutung

Diese Parametrierung des Befehls 
erlaubt selektiv den Einfluss einzelner Leit
achsen auf die Bewegung der Folgeachse zu 
beseitigen.

Es muss wenigstens eine Leitachse angegeben werden. Der Einfluss der angegebenen 
Leitachsen auf die Folgeachse wird gezielt ausgeschaltet. Der Aufruf lst Vorlaufstopp aus. 
Verbleiben noch aktive Leitachsen, so luft die Folgeachse unter deren Einfluss weiter. Sind 
alle Leitachseneinflsse auf diese Weise ausgeschaltet, so wird die Folgeachse zum Stillstand 
abgebremst.

Variante 3:

Syntax

EGOFC(Folgespinde1)

Bedeutung

Das elektronische Getriebe wird ausgeschaltet. Die Folgespindel 
luft mit der zum Ausschaltzeitpunkt aktuellen Drehzahl/Geschwin
digkeit weiter. Der Aufruf lst Vorlaufstopp aus.

Hinweis

Diese Variante ist nur fr Spindeln erlaubt.

3.16.4.4

Definition eines Elektronischen Getriebes lschen (EGDEL)

Ein EG-Achsverband muss ausgeschaltet sein, bevor seine Definition gelscht werden kann. 

Programmierung

Syntax

Bedeutung

EGDEL(Folgeachse)

Die Kopplungsdefinition des Achsverbandes wird gelscht. Es wird bis 
zum Erreichen der maximalen Anzahl gleichzeitig aktivierter Achsver
bnde wieder mglich, weitere Achsverbnde mit EGDEF neu zu defi
nieren. Der Aufruf lst Vorlaufstopp aus.

3.16.4.5

Umdrehungsvorschub (G95) / Elektronisches Getriebe (FPR)

Mit dem FPR-Befehl kann auch die Folgeachse eines Elektronischen Getriebes als 
vorschubbestimmende Achse des Umdrehungsvorschubes angegeben werden. Fr diesen 
Fall gilt folgendes Verhalten:

 Der Vorschub ist abhngig von der Sollgeschwindigkeit der Folgeachse des Elektronischen 

Getriebes.

 Die Sollgeschwindigkeit wird berechnet aus den Geschwindigkeiten der Leitspindeln und 
Modulo-Leitachsen (die nicht Bahnachsen sind) und deren zugeordneten Koppelfaktoren.

 Geschwindigkeitsanteile von linearen bzw. nicht Modulo-Leitachsen und berlagerte 

Bewegungen der Folgeachse werden nicht bercksichtigt.

902

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.16 Achskopplungen

3.16.5

Synchronspindel

Im Synchronbetrieb gibt es eine Leitspindel (LS) und eine Folgespindel (FS), das 
sog. Synchronspindelpaar. Die Folgespindel folgt bei aktiver Kopplung (Synchronbetrieb) den 
Bewegungen der Leitspindel entsprechend dem festgelegten Funktionszusammenhang.   

Die Synchronspindelpaare lassen sich fr jede Maschine sowohl mit Hilfe von 
kanalspezifischen Maschinendaten fest projektieren oder ber das CNC-Teileprogramm 
anwendungsspezifisch definieren. Je NC-Kanal sind bis zu 2 Synchronspindelpaare 
gleichzeitig betreibbar.

Die Kopplung kann aus dem Teileprogramm

 definiert bzw. gendert

 eingeschaltet

 ausgeschaltet

 gelscht

werden.

Darber hinaus kann abhngig vom Softwarestand

 auf die Synchronlaufbedingung gewartet

 das Satzwechselverhalten verndert

 die Kopplungsart entweder Sollwertkopplung oder Istwertkopplung ausgewhlt oder der 

Winkelversatz zwischen Leit- und Folgespindel vorgegeben

 beim Einschalten der Kopplung eine vorhergehende Programmierung der Folgespindel 

bernommen

 entweder eine gemessene oder eine bereits bekannte Synchronlaufabweichung korrigiert

werden.

3.16.5.1

Synchronspindel: Programmierung (COUPDEF, COUPDEL, COUPON, COUPONC, 
COUPOF, COUPOFS, COUPRES, WAITC)

Die Funktion "Synchronspindel" ermglicht ein drehzahlsynchrones Verfahren von Folge- (FS) 
und Leitspindel (LS) mit programmierbarem bersetzungsverhltniss. 

Die Funktion bietet folgende Modi:

 Drehzahlsynchronitt (nFS = nLS)

 Lagesynchronitt (FS = LS)  

 Lagesynchronitt mit Winkelversatz (FS = LS+ )

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

903

Arbeitsvorbereitung

3.16 Achskopplungen

Anwendungsbeispiele:

 Fliegende Werkstckbergabe z.B. zur Rckseitenbearbeitung, bersetzungsverhltnis: 

1:1

 Drehzahl synchronisieren
 Werkstck bergeben
 Rckseite bearbeiten

 Mehrkantbearbeitung (Polygondrehen), Drehzahlsynchronitt, bersetzungsverhltnis: 

n1:n2

Syntax

904

COUPDEF(<FS>,<LS>,<ZFS>,<NLS>,<Satzwechsel>,<Koppelart>) 
COUPON(<FS>,<LS>,<POSFS>)
COUPONC(<FS>,<LS>)
COUPOF(<FS>,<LS>,<POSFS>,<POSLS>)
COUPOFS(<FS>,<LS>)
COUPOFS(<FS>,<LS>,<POSFS>)
COUPRES(<FS>,<LS>)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:54)(cid:20)(cid:54)(cid:21)(cid:54)(cid:20)(cid:54)(cid:21)(cid:54)(cid:20)(cid:54)(cid:21)(cid:81)(cid:20)(cid:3)(cid:3635)(cid:3)(cid:81)(cid:21)(cid:81)(cid:20)(cid:3)(cid:32)(cid:32)(cid:3)(cid:81)(cid:21)(cid:81)(cid:20)(cid:3)(cid:3635)(cid:3)(cid:81)(cid:21)(cid:22)(cid:21)(cid:20)(cid:81)(cid:20)(cid:81)(cid:21)Bedeutung

Arbeitsvorbereitung

3.16 Achskopplungen

COUPDEL(<FS>,<LS>)
WAITC(<FS>,<Satzwechsel>,<LS>,<Satzwechsel>)

Hinweis

Verkrzte Schreibweise

Bei den Anweisungen COUPOF, COUPOFS, COUPRES und COUPDEL ist eine verkrzte 
Schreibweise ohne Angabe der Leitspindel mglich.

COUPDEF:

COUPON:

COUPONC:

Kopplung anwenderspezifisch definieren/ndern

Kopplung einschalten. Ausgehend von der aktuellen Drehzahl synchronisiert 
sich die Folgespindel auf die Leitspindel

Kopplung beim Einschalten mit vorhergehender Programmierung 
von M3 S... oder M4 S... bernehmen. 

Eine Differenzdrehzahl der Folgespindel wird sofort bernommen.

COUPOF:

Kopplung ausschalten.

 mit sofortigem Satzwechsel: 
COUPOF(<S2>,<S1>)

 Satzwechsel erst nach berfahren der Ausschaltposition(en) <POSFS> 

bzw. <POSLS>: 
COUPOF(<S2>,<S1>,<POSFS>) 
COUPOF(<S2>,<S1>,<POSFS>,<POSLS>)

COUPOFS:

Ausschalten einer Kopplung mit Stopp der Folgespindel.

Satzwechsel schnellstmglich mit sofortigen Satzwechsel:

COUPOFS(<S2>,<S1>)

Satzwechsel erst nach berfahren der Ausschaltposition:

COUPOFS(<S2>,<S1>,<POSFS>)

Kopplungsparameter zurcksetzen auf projektierte MD und SD

Anwenderdefinierte Kopplung lschen

Warten Synchronlaufbedingung 
(NOC werden auf IPO bei Satzwechsel aufgehoben)

COUPRES:

COUPDEL:

WAITC:

<FS>:

Bezeichnung der Folgespindel 

Optionale Parameter:

<LS>:

Bezeichnung der Leitspindel 

<ZFS>, <NLS>:

bersetzungsverhltnis zwischen FS und LS.

Angabe mit Spindelnummer: z. B. S2, S1

<ZFS> / <NLS> =  Zhler / Nenner

Voreinstellung: <ZFS> / <NLS> = 1.0 ; Angabe des Nenners optional

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

905

Arbeitsvorbereitung

3.16 Achskopplungen

<Satzwechsel>:

Satzwechselverhalten

Der Satzwechsel erfolgt:

"NOC"

"FINE"

"COARSE"

"IPOSTOP"

sofort

mit Erreichen von "Synchronlauf fein"   

mit Erreichen von "Synchronlauf grob"   

mit Erreichen von IPOSTOP, d. h. nach sollwertseitigem 
Synchronlauf (Voreinstellung) 

<Koppelart>:

Kopplungsart: Kopplung zwischen FS und LS   

Das Satzwechselverhalten ist modal wirksam.

"DV"

"AV"

"VV"

Sollwertkopplung (Voreinstellung)   

Istwertkopplung   

Geschwindigkeitskopplung   

Die Kopplungsart ist modal wirksam.

<POSFS>:

Winkelversatz zwischen Leit- und Folgespindel

Wertebereich: 

0 359,999

<POSFS>,<POSLS>:

Ausschaltpositionen von Folge- und Leitspindel

"Der Satzwechsel wird nach berfahren der POSFS, POSLS freigegeben"
Wertebereich: 

0 359,999

Beispiele

Arbeiten mit Leit- und Folgespindel

Programmcode

Kommentar

N05 M3 S3000 M2=4 S2=500

Leitspindel = Masterspindel = Spindel 1

Folgespindel = Spindel 2

Leitspindel dreht mit 3000 U/min,
Folgespindel dreht mit 500 U/min.

N10 COUPDEF(S2,S1,1,1,"NOC","Dv")

Definition der Kopplung (kann auch projektiert 
werden).

...

N70 SPCON

N75 SPCON(2)

Leitspindel in Lageregelung nehmen (Sollwertk.).

Folgespindel in Lageregelung nehmen.

N80 COUPON(S2,S1,45)

Fliegend auf Offsetposition = 45 Grad einkoppeln.

...

N200 FA[S2]=100

Positioniergeschwindigkeit = 100 grd/min

N205 SPOS[2]=IC(-90)

90 Grad berlagert in negative Richtung fahren.

N210 WAITC(S2,"Fine")

Warten auf Synchronlauf "fein".

N212 G1 X... Y... F...

Bearbeitung

...

N215 SPOS[2]=IC(180)

180 Grad berlagert in positive Richtung fahren.

N220 G4 S50

N225 FA[S2]=0

N230 SPOS[2]=IC(-7200)

Verweilzeit = 50 Umdrehungen der Masterspindel

Projektierte Geschw. (MD) aktivieren.

20 Umdrehungen. Mit projektierter Geschwindig-
keit in negative Richtung fahren.

906

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
Arbeitsvorbereitung

3.16 Achskopplungen

Programmcode

...

N350 COUPOF(S2,S1)

N355 SPOSA[2]=0

N360 G0 X0 Y0

N365 WAITS(2)

N370 M5

N375 M30

Kommentar

Fliegend auskoppeln, S=S2=3000

FS bei Null Grad stoppen.

Warten auf Spindel 2.

FS stoppen.

Programmierung einer Differenzdrehzahl

Programmcode

Kommentar

N01 M3 S500

N02 M2=3 S2=300

...

N10 G4 F1

Leitspindel = Masterspindel = Spindel 1

Folgespindel = Spindel 2

Leitspindel dreht mit 500 U/min.

Folgespindel dreht mit 300 U/min.

Verweilzeit der Masterspindel.

N15 COUPDEF (S2,S1,-1)

Koppelfaktor mit bersetzungsverhltnis -1:1

N20 COUPON (S2,S1)

...

Kopplung aktivieren. Die Drehzahl der Folgespin-
del ergibt sich aus der Drehzahl der Leitspindel 
und dem Koppelfaktor.

N26 M2=3 S2=100

Programmierung einer Differenzdrehzahl.

Beispiele der bernahme einer Bewegung zur Differenzdrehzahl

1. Kopplung bei vorhergehender Programmierung der Folgespindel mit COUPON einschalten

Programmcode

Kommentar

N05 M3 S100 M2=3 S2=200

N10 G4 F5

N15 COUPDEF(S2,S1,1)

Leitspindel = Masterspindel = Spindel 1

Folgespindel = Spindel 2

Leitspindel dreht mit 100 U/min, Folgespindel 
mit 200 U/min.

Verweilzeit = 5 Sekunden der Masterspindel

bersetzungsverhltnis FS zu LS ist 1,0 (Vorein-
stellung).

N20 COUPON(S2,S1)

Fliegend auf Leitspindel einkoppeln.

N10 G4 F5

Folgespindel dreht mit 100 U/min.

2. Kopplung bei vorhergehender Programmierung der Folgespindel mit COUPONC einschalten

Programmcode

Kommentar

N05 M3 S100 M2=3 S2=200

Leitspindel = Masterspindel = Spindel 1

Folgespindel = Spindel 2

Leitspindel dreht mit 100 U/min, Folgespindel 
mit 200 U/min.

N10 G4 F5

Verweilzeit = 5 Sekunden der Masterspindel

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

907

 
 
 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.16 Achskopplungen

Programmcode

N15 COUPDEF(S2,S1,1)

N20 COUPONC(S2,S1)

Kommentar

bersetzungsverhltnis FS zu LS ist 1,0 (Vorein-
stellung).

Fliegend auf Leitspindel einkoppeln und vorher-
gehende Drehzahl zu S2 bernehmen.

N10 G4 F5

S2 dreht mit 100U/min + 200U/min = 300U/min

3. Kopplung bei stehender Folgespindel mit COUPON einschalten

Programmcode

Kommentar

Leitspindel = Masterspindel = Spindel 1

Folgespindel = Spindel 2

N05 SPOS=10 SPOS[2]=20

Folgespindel S2 im Positionierbetrieb.

N15 COUPDEF(S2,S1,1)

bersetzungsverhltnis FS zu LS ist 1,0 (Vorein-
stellung).

N20 COUPON(S2,S1)

Fliegend auf Leitspindel einkoppeln.

N10 G4 F1

Kopplung wird geschlossen, S2 bleibt auf 20 Grad 
stehen.

4. Kopplung bei stehender Folgespindel mit COUPONC einschalten

Hinweis

Positionier- oder Achsbetrieb

Befindet sich die Folgespindel vor dem Einkoppeln im Positionier- oder Achsbetrieb, dann 
verhlt sich die Folgespindel bei COUPON(<FS>,<LS>) und COUPONC(<FS>,<LS>) gleich.

Hinweis

Leitspindel und Achsbetrieb

Befindet sich die Leitspindel vor der Definition der Kopplung im Achsbetrieb, wirkt auch nach 
dem Einschalten der Kopplung der Geschwindigkeitsgrenzwert aus Maschinendatum:

MD32000 $MA_MAX_AX_VELO (maximale Achsgeschwindigkeit)

Zur Vermeidung dieses Verhaltens muss die Achse vor der Definition der Kopplung in den 
Spindelbetrieb (M3 S... oder M4 S...) geschaltet werden.

Weitere Informationen

Projektierte Kopplung 

Bei der projektierten Kopplung werden LS und FS ber Maschinendaten festgelegt. Die 
projektierten Spindeln knnen im Teileprogramm nicht verndert werden. Die Parametrierung 
der Kopplung kann mit COUPDEF im Teileprogramm erfolgen (Voraussetzung: kein 
Schreibschutz festgelegt).

Anwenderdefinierte Kopplung

Mit COUPDEF kann eine Kopplung im Teileprogramm neu definiert oder verndert werden. Ist 
bereits eine Kopplung aktiv, muss diese vor der Definition einer neuen Kopplung zuerst mit 
COUPDEL gelscht werden.

908

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
Arbeitsvorbereitung

3.16 Achskopplungen

Eine Kopplung wird vollstndig definiert durch:

COUPDEF(<FS>,<LS>,<FS>,<LS>, Satzwechselverhalten, Koppelart)

Folgespindel (FS) und Leitspindel (LS)

Mit den Achsnamen fr die FS und LS wird die Kopplung eindeutig bestimmt. Die Achsnamen 
mssen mit jeder Anweisung COUPDEF programmiert werden. Die anderen 
Kopplungsparameter sind modal wirksam und mssen nur programmiert werden, wenn sie 
gendert werden.

Beispiel:

COUPDEF(S2,S1)

bersetzungsverhltnis

Das bersetzungsverhltnis wird als Drehzahlverhltnis zwischen FS und LS angegeben:

Folgespindel / Leitspindel = Zhler / Nenner

Der Zhler muss programmiert werden. Der Nenner muss nicht programmiert werden. Fr den 
Nenner wird dann der Defaultwert 1.0 gesetzt. 

Beispiel:

Folgespindel S2 und Leitspindel S1, bersetzungsverhltnis = 1 / 1

COUPDEF(S2, S1, 1.0)

Hinweis

Das bersetzungsverhltnis kann auch bei eingeschalteter Kopplung und drehenden Spindeln 
verndert werden.

Satzwechselverhalten NOC, FINE, COARSE, IPOSTOP

Bei der Programmierung des Satzwechselverhaltens ist folgende verkrzte Schreibweise 
mglich: 

 "NO": sofort (Voreinstellung)

 "FI": mit Erreichen von "Synchronlauf fein"

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

909

Spindel 1: LeitspindelSpindel 2: Folgespindeln2n1Arbeitsvorbereitung

3.16 Achskopplungen

 "CO": mit Erreichen von "Synchronlauf grob"

 "IP": mit Erreichen von IPOSTOP, d. h. nach sollwertseitigem Synchronlauf

Kopplungsart

Hinweis

Die Kopplungsart darf nur bei ausgeschalteter Kopplung verndert werden.

Synchronbetrieb einschalten COUPON, <POSFS>

 Einschalten der Kopplung mit beliebigem Winkelversatz zwischen LS und FS:

 COUPON(S2,S1)

 COUPON(S2) 

 Einschalten der Kopplung mit Winkelversatz <POSFS>

<POSFS> bezieht sich auf die 0-Position der Leitspindel in positiver Drehrichtung 
Wertebereich <POSFS>: 0 359,999

 COUPON(S2,S1,30)

Hinweis

Der Winkelversatz kann auch bei aktiver Kopplung gendert werden.

Positionieren der Folgespindel

Auch bei eingeschalteter Synchronspindelkopplung lassen sich FS unabhngig von der LS im 
Bereich 180 positionieren.

 Spindelpositionierung der FS mit SPOS

Beispiel: SPOS[2]=IC(-90)
Weitere Informationen zu SPOS finden sich in:
Weitere Informationen
Spindeln positionieren (SPOS, SPOSA, M19, M70, WAITS) (Seite 118)

910

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.16 Achskopplungen

Differenzdrehzahl

Eine Differenzdrehzahl entsteht im Drehzahlsteuerbetrieb und aktiver 
Synchronspindelkopplung durch vorzeichenbehaftete berlagerung einer FS-Drehzahl 
aufgrund LS-Bewegung und einer FS-Drehzahl aufgrund Spindelprogrammierung: 

 Synchronspindelkopplung mit COUPONC

 S<FS>=<Drehzahl> [ M<FS>=<Drehrichtung>]

Hinweis

Randbedingungen
 Mit der Drehrichtung M3 / M4 muss auch die Drehzahl S... neu programmiert werden.
 Die berlagern einer Spindeldrehzahl ( M<Drehrichtung> S<FS>) durch die LS-
Bewegung bei Synchronspindelkopplung COUPONC wird nur wirksam, wenn die 
berlagerung freigegeben ist.

 Die Dynamik der Leitspindel muss so weit eingeschrnkt werden, dass bei einer 

berlagerung der Folgespindel deren Dynamikgrenzwerte nicht berschritten werden.

Weitere Informationen zur Differenzdrehzahl siehe:
Weitere Informationen
Funktionshandbuch Achsen und Spindeln

Geschwindigkeit, Beschleunigung: FA, ACC, OVRA, VELOLIMA

Axiale Geschwindigkeit und Beschleunigung einer Folgespindeln sind programmierbar mit:

 FA[SPI(S<n>)] bzw. FA[S<n>] (axiale Geschwindigkeit)

 ACC[SPI(S<n>)] bzw. ACC[S<n>] (axiale Beschleunigung)

 OVRA[SPI(S<n>)] bzw. OVRA[S<n>] (axialer Override)

 VELOLIMA[SPI(S<n>)] bzw. VELOLIMA[S<n>] (axiale Geschwindigkeitsberhhung 

bzw. -reduktion)

Mit <n> = 1, 2, 3, ... (Spindelnummer der Folgespindeln)

Weitere Informationen
Vorschubregelung (Seite 105)

Hinweis

Eine Reduktion oder berhhung des maximalen axialen Rucks ist bei Spindeln nicht wirksam.

Weitere Informationen zur axialen Dynamik finden sich in:
Weitere Informationen
Funktionshandbuch Achsen und Spindeln

Programmierbares Satzwechselverhalten WAITC

Mit WAITC kann das Satzwechselverhalten, z. B. nach nderung von Kopplungsparametern 
oder Positioniervorgngen, mit unterschiedlichen Synchronlaufbedingungen (grob, fein, 
IPOSTOP) vorgegeben werden. Sind keine Synchronlaufbedingungen angegeben, gilt das bei 
der Definition COUPDEF angegebene Satzwechselverhalten. 

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

911

Arbeitsvorbereitung

3.16 Achskopplungen

Beispiele

 Warten auf das Erreichen der Synchronlaufbedingung FINE bei Folgespindel S2 

und COARSE bei Folgespindel S4: WAITC(S2,"FINE",S4,"COARSE")

 Warten auf das Erreichen der Synchronlaufbedingung entsprechend COUPDEF: WAITC( )

Kopplung ausschalten COUPOF

Mit COUPOF kann das Ausschaltverhalten der Kopplung vorgegeben werden:

 Ausschalten der Kopplung mit sofortigem Satzwechsel:

 COUPOF(S2,S1) (mit Angabe der Leitspindel)

 COUPOF(S2) (ohne Angabe der Leitspindel)

 Ausschalten der Kopplung nach berfahren von Ausschaltpositionen. Der Satzwechsel 

erfolgt nach dem berfahren der Ausschaltpositionen.

 COUPOF(S2,S1,150) (Ausschaltposition FS: 150)

 COUPOF(S2,S1,150,30) (Ausschaltposition FS: 150, LS: 30)

Kopplung ausschalten mit Stopp der Folgespindel COUPOFS

Mit COUPOFS kann das Ausschaltverhalten der Kopplung mit Stopp der Folgespindel 
vorgegeben werden:

 Ausschalten der Kopplung mit Stopp der Folgespindel und sofortigem Satzwechsel:

 COUPOFS(S2,S1) (mit Angabe der Leitspindel)

 COUPOFS(S2) (ohne Angabe der Leitspindel)

 Ausschalten der Kopplung nach berfahren von Ausschaltpositionen mit Stopp der 

Folgespindel. Der Satzwechsel erfolgt nach dem berfahren der Ausschaltpositionen.

 COUPOFS(S2,S1,150) (Ausschaltposition FS: 150)

Kopplungen lschen COUPDEL

Mit COUPDEL wird die Kopplung gelscht:

 COUPDEL(S2,S1) (mit Angabe der Leitspindel)

 COUPDEL(S2) (ohne Angabe der Leitspindel)

Kopplungsparameter zurcksetzen COUPRES

Mit COUPRES werden die in den Maschinen- und Settingdaten parametrierten Werte der 
Kopplung aktiviert:

 COUPRES(S2,S1) (mit Angabe der Leitspindel)

 COUPRES(S2) (ohne Angabe der Leitspindel)

Systemvariablen

 Aktueller Kopplungszustand der Folgespindel

Der aktuelle Kopplungszustand einer Folgespindel kann bitcodiert gelesen werden ber: 
<Wert> = $AA_COUP_ACT[<FS>] 

912

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.16 Achskopplungen

Bit

<Wert>

Bedeutung

-

2

0

4

Hinweis 

keine Kopplung aktiv

Synchronspindelkopplung aktiv

 Alle andere Werte beziehen sich auf Achsbetrieb

 Ist die Spindel eine Folgespindel von mehreren Kopplungen, wird als Wert der Kopplungszustand 

aller Kopplungen als Summenzustand zurckgegeben.

 Aktueller Winkelversatz

Der aktuelle Winkelversatz der Folgespindel zur Leitspindel kann gelesen werden ber:

 $AA_COUP_OFFS[<FS>] (Sollwertseitiger Winkelversatz)

 $VA_COUP_OFFS[<FS>] (Istwertseitiger Winkelversatz)

Anwendungsbeispiel
Korrektur der Winkelversatzdifferenz im NC-Programm nach Aufheben des 
Nachfhrbetriebs:
Winkelversatzdifferenz = Programmierter Winkelversatz - Systemvariable

Weitere Informationen

Ausfhrliche Informationen zu Systemvariablen finden sich in:

Listenhandbuch Systemvariablen

3.16.6

Generische Kopplung (CP...)

Die "Generische Kopplung" ist eine allgemeine Kopplungsfunktion, in der alle 
Kopplungseigenschaften der bestehenden Kopplungsarten (Mitschleppen, Leitwertkopplung, 
Elektronisches Getriebe und Synchronspindel) zusammengefasst sind.  

Die Funktion ermglicht eine flexible Art der Programmierung:

 Der Anwender kann die fr seine Applikation notwendigen Kopplungseigenschaften frei 

auswhlen (Baukastenprinzip).

 Jede Kopplungseigenschaft ist einzeln programmierbar.

 Die Kopplungseigenschaften einer definierten Kopplung (z. B. Koppelfaktor) sind nderbar.

 Eine sptere Nutzung weiterer Kopplungseigenschaften ist mglich.

 Das Koordinatenbezugssystem der Folgeachse (Basiskoordinatensystem oder 

Maschinenkoordinatensystem) ist programmierbar.

 Bestimmte Kopplungseigenschaften knnen auch in Synchronaktionen programmiert 

werden.
Weitere Informationen: Funktionshandbuch Synchronaktionen

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

913

Arbeitsvorbereitung

3.16 Achskopplungen

Hinweis

Die bisherigen Kopplungsaufrufe fr das Mitschleppen (TRAIL*), Leitwertkopplung (LEAD*), 
Elektronisches Getriebe (EG*) und Synchronspindel (COUP*) werden ber Anpasszyklen 
weiterhin untersttzt.

bersicht aller Schlsselwrter und Kopplungseigenschaften

Die folgende Tabelle stellt eine bersicht aller Schlsselwrter der Generischen Kopplung und 
der damit programmierbaren Kopplungseigenschaften dar:

Schlsselwort

Kopplungseigenschaft / Bedeu
tung

Syntax

CPDEF

CPDEL

CPLA

CPLDEF

CPLDEL

CPON

CPOF

CPLON

CPLOF

Anlegen eines Koppelmoduls

CPDEF=(<FAx>)

Lschen eines Koppelmoduls

CPDEL=(<FAx>)

Definition einer Leitachse

CPLA[<FAx>]=(<LAx>)

Definition einer Leitachse und 
Anlegen eines Koppelmoduls

(auch mglich mit CPDEF 
+ CPLA)

Lschen einer Leitachse eines 
Koppelmoduls

(auch mglich mit CPDEL 
+ CPLA)

CPLDEF[<FAx>]=(<LAx>)

oder

CPDEF=(<FAx>) CPLA[<FAx>]=(<LAx>)

CPLDEL[<FAx>]=(<LAx>)

oder

CPDEL=(<FAx>) CPLA[<FAx>]=(<LAx>)

Einschalten eines Koppelmo
duls

Ausschalten eines Koppelmo
duls

Einschalten einer Leitachse ei
nes Koppelmoduls

Ausschalten einer Leitachse ei
nes Koppelmoduls

CPON=(<FAx>)

CPOF=(<FAx>)

CPLON[<FAx>]=<LAx>

CPLOF[<FAx>]=<LAx>

CPLNUM

CPLDEN

CPLCTID

Zhler des Koppelfaktors

CPLNUM[FAx,LAx]=<Wert>

Nenner des Koppelfaktors

CPLDEN[FAx,LAx]=<Wert>

Nummer der Kurventabelle

CPLCTID[FAx,LAx]=<Wert>

CPLSETVAL

Kopplungsbezug

CPLSETVAL[FAx,LAx]="<Kopplungsbezug>"

"<Kopplungs-
bezug>":

"CMDPOS"

Sollwertkopplung

"CMDVEL"

Geschwindigkeitskopplung

"ACTPOS"

Istwertkopplung

CPFRS

Koordinatenbezugssystem

CPFRS[FAx]="<Koordinatenbezug>"

"<Koordinaten-
bezug>":

"BCS"

"MCS"

Basiskoordinatensystem

Maschinenkoordinaten
system

914

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
Arbeitsvorbereitung

3.16 Achskopplungen

Schlsselwort

Kopplungseigenschaft / Bedeu
tung

Syntax

CPBC

Satzwechselkriterium

CPBC[FAx]="<Satzwechselkriterium>"

"<Satzwechsel-
kriterium>":

"NOC"

Satzwechsel erfolgt unab
hngig vom Kopplungszu
stand.

"IPOSTOP" Satzwechsel erfolgt beim 
sollwertseitigen Synchron
lauf.

"COARSE"

"FINE"

Satzwechsel erfolgt beim 
istwertseitigen Synchron
lauf "Grob".

Satzwechsel erfolgt beim 
istwertseitigen Synchron
lauf "Fein".

CPFPOS + CPON Synchronposition der Folgeach

CPON=FAx CPFPOS[FAx]=<Wert>

se beim Einschalten

CPLPOS + CPON Synchronposition der Leitachse 

CPLPOS[FAx,LAx]=<Wert>

beim Einschalten

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

915

 
Arbeitsvorbereitung

3.16 Achskopplungen

Schlsselwort

Kopplungseigenschaft / Bedeu
tung

Syntax

CPFMSON

Synchronisationsmodus

CPFMSON[FAx]="<Synchronisationsmodus>"

"<Synchronisation
smodus>":

"CFAST"

Die Kopplung wird zeitopti
miert geschlossen.

"CCOARSE" Die Kopplung wird erst ein

geschaltet, wenn sich die 
gem Koppelgesetz ge
forderte Folgeachsposition 
im Bereich der aktuellen 
Folgeachsposition befindet.

Die nchste Zahnlcke 
wird zeitoptimiert angefah
ren.

Die nchste Zahnlcke 
wird wegoptimiert angefah
ren.

Das nchste Segment ge
m Verhltnis aus Gang
zahl zu Zhnezahl wird zeit
optimiert angefahren.

Das nchste Segment ge
m Verhltnis aus Gang
zahl zu Zhnezahl wird 
wegoptimiert angefahren.

"NTGT"

"NTGP"

"NRGT"

"NRGP"

"ACN"

Nur bei Rundachsen!

Die Rundachse verfhrt in 
negativer Achsrichtung die 
Synchronposition an. Die 
Synchronisation erfolgt so
fort.

"ACP"

Nur bei Rundachsen!

Die Rundachse verfhrt in 
positiver Achsrichtung die 
Synchronposition an. Die 
Synchronisation erfolgt so
fort.

"DCT"

Nur bei Rundachsen!

Die Rundachse verfhrt 
zeitoptimiert zur pen Syn
chronposition an. Die Syn
chronisation erfolgt sofort.

"DCP"

Nur bei Rundachsen!

Die Rundachse verfhrt 
wegoptimiert zur program
mierten Synchronposition 
an. Die Synchronisation er
folgt sofort.

916

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
Schlsselwort

Kopplungseigenschaft / Bedeu
tung

Syntax

Arbeitsvorbereitung

3.16 Achskopplungen

CPFMON

Verhalten der Folgeachse beim 
Einschalten

CPFMOF

Verhalten der Folgeachse beim 
vollstndigen Ausschalten

CPFMON[FAx]="<Einschaltverhalten>"

"<Einschalt-
verhalten>":

"STOP"

Nur bei Spindeln!

Eine aktive Bewegung der 
Folgespindel wird vor dem 
Einschalten gestoppt.

"CONT"

Nur bei Spindeln und 
Hauptlaufachsen!

Die aktuelle Bewegung der 
Folgeachse/-spindel wird in 
die Kopplung als Startbe
wegung bernommen.

"ADD"

Nur bei Spindeln!

Die Bewegungsanteile der 
Kopplung wirken zustzlich 
zur aktuellen berlagerten 
Bewegung, d. h. die aktuel
le Bewegung der Folgeach
se/-spindel wird als berla
gerte Bewegung beibehal
ten.

CPFMOF[FAx]="<Ausschaltverhalten>"

"<Ausschalt-
verhalten>":

"STOP"

"CONT"

Stopp der Folgeachse/-
spindel.

Eine aktive berlagerte Be
wegung wird zum Stillstand 
abgebremst. Danach wird 
die Kopplung geffnet

Nur bei Spindeln und 
Hauptlaufachsen!

Die Folgespindel luft mit 
der zum Ausschaltzeit
punkt aktuellen Drehzahl/
Geschwindigkeit weiter.

CPFPOS + CPOF Ausschaltposition der Folge

CPOF=(FAx) CPFPOS[FAx]=<Wert>

achse beim Ausschalten

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

917

 
Arbeitsvorbereitung

3.16 Achskopplungen

Schlsselwort

Kopplungseigenschaft / Bedeu
tung

Syntax

CPMRESET

Kopplungsverhalten bei RESET CPMRESET[FAx]="<Reset-Verhalten>"

"<Reset-
Verhalten>":

"NONE"

"ON"

"OF"

Der aktuelle Zustand der 
Kopplung bleibt erhalten.

Ist das entsprechende Kop
pelmodul angelegt, so wird 
die Kopplung eingeschal
tet. Es werden alle definier
ten Leitachsbeziehungen 
aktiviert. Dies erfolgt auch, 
wenn bereits alle oder Teile 
dieser Leitachsbeziehun
gen aktiv sind, d. h. auch 
bei einer vollstndig aktivi
erten Kopplung erfolgt eine 
Neusynchronisation.

Eine aktive berlagerte Be
wegung wird zum Stillstand 
abgebremst. Danach wird 
die Kopplung ausgeschal
tet. Wurde das entspreche
nde Koppelmodul ohne ex
plizite Definition (CPDEF) 
angelegt, so wird das Kop
pelmodul gelscht. Im an
deren Fall bleibt es weiter
hin angelegt, d. h. es kann 
weiterhin verwendet wer
den.

"OFC"

Nur bei Spindeln mglich!

Die Folgespindel luft mit 
der zum Ausschaltzeit
punkt aktuellen Drehzahl/
Geschwindigkeit weiter. 
Die Kopplung wird ausge
schaltet. Wurde das ent
sprechende Koppelmodul 
ohne explizite Definition 
(CPDEF) angelegt, so wird 
das Koppelmodul gelscht. 
Im anderen Fall bleibt es 
weiterhin angelegt, d. h. es 
kann weiterhin verwendet 
werden.

Eine aktive berlagerte Be
wegung wird zum Stillstand 
abgebremst. Danach wird 
die Kopplung deaktiviert 
und anschlieend gelscht.

"DEL"

"DELC"

Nur bei Spindeln mglich!

Die Folgespindel luft mit 
der zum Ausschaltzeit
punkt aktuellen Drehzahl/

918

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Schlsselwort

Kopplungseigenschaft / Bedeu
tung

Syntax

Arbeitsvorbereitung

3.16 Achskopplungen

Geschwindigkeit weiter. 
Die Kopplung wird deakti
viert und anschlieend ge
lscht.

CPMSTART

Kopplungsverhalten beim Teile
programmstart

CPMSTART[FAx]="<Start-Verhalten>"

"<Start-
Verhalten>":

"NONE"

"ON"

"OF"

"DEL"

Der aktuelle Zustand der 
Kopplung bleibt erhalten.

Kopplung eingeschaltet. Es 
werden alle definierten Leit
achsbeziehungen aktiviert. 
Dies erfolgt auch, wenn be
reits alle oder Teile dieser 
Leitachsbeziehungen aktiv 
sind, d. h. auch bei einer 
vollstndig aktivierten 
Kopplung erfolgt eine Neu
synchronisation.

Die Kopplung wird ausge
schaltet. Wurde das ent
sprechende Koppelmodul 
ohne explizite Definition 
(CPDEF) angelegt, so wird 
das Koppelmodul gelscht. 
Im anderen Fall bleibt es 
weiterhin angelegt, d. h. es 
kann weiterhin verwendet 
werden.

Die Kopplung wird deakti
viert und anschlieend ge
lscht.

CPMPRT

CPLINTR

CPLINSC

CPLOUTTR

CPLOUTSC

CPSYNCOP

CPSYNFIP

CPSYNCOP2

Kopplungsverhalten beim Teile
programmstart unter Satzsuch
lauf via Programmtest

CPMPRT[FAx]="<Start-Verhalten>"

"<Start-
Verhalten>":

siehe CPMSTART

Verschiebewert fr den Ein
gangswert einer Leitachse

Skalierfaktor fr den Eingangs
wert einer Leitachse

Verschiebewert fr den Aus
gangswert einer Kopplung

Skalierfaktor fr den Ausgangs
wert einer Kopplung

CPLINTR[FAx,LAx]=<Wert>

CPLINSC[FAx,LAx]=<Wert>

CPLOUTTR[FAx,LAx]=<Wert>

CPLOUTSC[FAx,LAx]=<Wert>

Schwellwert fr den Positions
synchronlauf "Grob"

Schwellwert fr den Positions
synchronlauf "Fein"

Zweiter Schwellwert fr den Po
sitionssynchronlauf "Grob"

CPSYNCOP[FAx]=<Wert>

CPSYNFIP[FAx]=<Wert>

CPSYNCOP2[FAx]=<Wert>

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

919

 
 
Arbeitsvorbereitung

3.16 Achskopplungen

Schlsselwort

Kopplungseigenschaft / Bedeu
tung

Syntax

CPSYNFIP2

CPSYNCOV

CPSYNFIV

CPMBRAKE

CPMVDI

CPMALARM

Zweiter Schwellwert fr den Po
sitionssynchronlauf "Fein"

Schwellwert fr den Geschwin
digkeitssynchronlauf "Grob"

Schwellwert fr den Geschwin
digkeitssynchronlauf "Fein"

CPSYNFIP2[FAx]=<Wert>

CPSYNCOV[FAx]=<Wert>

CPSYNFIV[FAx]=<Wert>

Verhalten der Folgeachse bei 
bestimmten Stoppsignalen und 
-kommandos

Verhalten der Folgeachse auf 
bestimmte NC/PLC-Nahtstel
lensignale

Unterdrckung spezieller kopp
lungsbezogener Alarmausga
ben

CPMBRAKE[FAx]=<Bitcodierter Wert>

CPMVDI[FAx]=<Bitcodierter Wert>

CPMALARM[FAx]=<Bitcodierter Wert>

CPSETTYPE

Kopplungstyp

CPSETTYPE[FAx]="<Kopplungstyp>"

"<Kopplungstyp>":

"CP"

Freie Programmierbarkeit

"TRAIL"

"LEAD"

"EG"

"COUP"

Kopplungstyp "Mitschlep
pen"

Kopplungstyp "Leitwert
kopplung"

Kopplungstyp "Elektron
isches Getriebe"

Kopplungstyp "Synchron
spindel"

FAx: Folgeachse/-spindel

LAx: Leitachse/-spindel

Hinweis

Kopplungseigenschaften, die nicht explizit programmiert werden (im Teileprogramm oder in 
Synchronaktionen), werden mit ihren Standardeinstellungen wirksam.

Abhngig von der Einstellung des Schlsselworts CPSETTYPE knnen statt der 
Standardeinstellungen (CPSETTYPE="CP") auch voreingestellte Kopplungseigenschaften 
wirksam werden.

Weitere Informationen

Fr ausfhrliche Informationen zur Generischen Kopplung siehe:

 Funktionshandbuch Achsen und Spindeln 

920

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
3.16.7

Tangentialsteuerung

3.16.7.1

Kopplung definieren (TANG)

Arbeitsvorbereitung

3.16 Achskopplungen

Syntax

Bedeutung

ber die vordefinierte Prozedur TANG(...) wird eine Tangentialkopplung zwischen einer 
Rundachse als Folgeachse und zwei Geometrieachsen als Leitachsen definiert. Die 
Folgeachse wird dabei kontinuierlich zur Bahntangente der Leitachsen ausgerichtet.

Hinweis

Koppelfaktor

Ein Koppelfaktor von 1 muss nicht explizit programmiert werden. 
Durch den Koppelfaktor -1 wird die Richtung der Tangentialachse gedreht.

TANG(<Folgeachse>, <Leitachse_1>, <Leitachse_2>, <Koppelfaktor>, 
<Koordinatensystem>, <Optimierung>)

TANG(...):

<Folgeachse>:

Definieren einer Tangentialkopplung

Achsename der Folgeachse (Rundachse)

<Leitachse_1>

<Leitachse_2>:

<Koppelfaktor>:

Datentyp:

AXIS

Wertebereich:

Kanalachsnamen

Achsenamen der Leitachsen (Geometrieachsen) 1)

Datentyp:

AXIS

Wertebereich:

Geometrieachsnamen des Kanals

Faktor n der Winkelnderung der Folgeachse zur nderung der Bahn
tangente der Leitachsen:

WinkelnderungFolgeachse = WinkelnderungBahntangente * n
Datentyp:

REAL

Defaultwert:

1,0

<Koordinatensystem>:

Wirksames Koordinatensystem 2)

Datentyp:

Wert:

CHAR

"B":

"W":

Basiskoordinatensystem (Defaultwert)

Werkstckkoordinatensystem (nicht ver
fgbar)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

921

Arbeitsvorbereitung

3.16 Achskopplungen

<Optimierung>:

Optimierungsart

Datentyp:

CHAR

Wert:

"S":

Standard (Defaultwert)

"P":

Die Dynamik der Rundachse hat keine 
Rckwirkung auf die Leitachsen. Ist die Dy
namik der Rundachse hher als fr die 
Nachfhrung erforderlich, ist dieses Ver
fahren ausreichend genau.Ist die Dynamik 
der Rundachse nicht hoch genug, um der 
nderung der Bahntangenten zu folgen, 
weicht die Ausrichtung der Rundachse ent
lang eines nicht definierten berschleif
wegs von der Sollausrichtung ab.

Die Dynamik der Rundachse wird bei der 
Bahnplanung der Leitachsen bercksich
tigt.

Dazu mssen beim Einschalten der Tan
gentialkopplung mit TANGON() zwei zu
stzliche Parameter angegeben werden:

 berschleifweg

 Winkeltoleranz

Siehe Kapitel "Kopplung einschalten (TAN
GON) (Seite 923)"

Hinweis
Im Zusammenhang mit kinematischen 
Transformationen wird empfohlen, die Op
timierungsart "P" zu verwenden.

Hinweis

Defaultwerte mssen nicht explizit programmiert werden.

1) Hinweis

Als Leitachsen der Tangentialkopplung mssen die Geometrieachsen verwendet werden, die, bezogen 
auf die Grundstellung der Maschine, im Maschinenkoordinatensystem (MKS) die programmierte Bahn 
abfahren. Wird z. B. auf einer Frsmaschine mit Schwenkkopf der Schwenkzyklus CYCLE800 verwen
det, erfolgt, abhngig von der Konfiguration des Zyklus, die Interpolation im WKS z. B. mit den Geo
metrieachsen X und Y. Die Tangentialkopplung muss aber mit den Geometrieachsen als Leitachsen 
definiert werden, die im MKS die programmierte Bahn abfahren. Dazu sind als Leitachsen die Geo
metrieachsen im ungeschwenkten Zustand der Maschine zu verwenden.

2) Hinweis

Das Basiskoordinatensystem (BKS) darf gegenber dem MKS nicht gedreht sein. Wird z. B. ber den 
Befehl ROT oder ber den Schwenkzyklus CYCLE800 das BKS gedreht, arbeitet die Tangentialsteu
erung nicht mehr korrekt.

3.16.7.2

Zwischensatzerzeugung einschalten (TLIFT)

berschreitet die Tangentennderung der Folgeachse an einer Stelle der programmierten 
Bahn der Leitachsen den im Maschinendatum MD37400 $MA_EPS_TLIFT_TANG_STEP 
parametrierten Grenzwert, erfolgt die weitere Bahnplanung abhngig vom eingestellten 
Eckenverhalten. Ohne Verwendung der vordefinierten Prozedur TLIFT(...) wird entsprechend 
des im Zusammenhang mit TANG(...) (Seite 921) und TANGON(...) (Seite 923) 
programmierten berschleifenverhaltens verfahren.

922

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.16 Achskopplungen

Zwischensatzerzeugung einschalten

Mit Programmierung von TLIFT(...) im Anschluss an TANG(...) wird vom Vorlauf beim 
Erkennen einer Ecke an dieser Stelle der Bahn ein von der Steuerung automatisch generierter 
Zwischensatz eingefgt. 

Bei der Abarbeitung des Programms werden dann bei Erreichen des Zwischensatzes die 
Leitachsen angehalten. Im Zwischensatz wird die Folgeachse mit maximaler Achsdynamik in 
Richtung der Bahntangente des nachfolgenden Satzes gedreht. Danach werden die 
Leitachsen weiter auf der programmierten Bahn verfahren.

Zwischensatzerzeugung ausschalten

Zum Ausschalten der Zwischensatzerzeugung muss die Tangentialkopplung mittels 
TANG(...), aber ohne nachfolgendes Einschalten der Zwischensatzerzeugung mittels 
TLIFT(...), erneut definiert werden.

Syntax

Bedeutung

TLIFT(<Folgeachse>)

TLIFT(...):

<Folgeachse>:

Einschalten der Eckenerkennung mit Zwischensatzberechnung

Achsename der Folgeachse (Rundachse)

Datentyp:

AXIS

Wertebereich:

Kanalachsnamen

Drehgeschwindigkeit der Folgeachse

Bahnachse

Wurde die Folgeachse vor der Aktivierung der Tangentialkopplung schon als Bahnachse 
verfahren, erfolgt die Drehbewegung im Zwischensatz als Bahnachse. 

Durch die Vorgabe des Bezugsradius mit FGREF[<Achse>]=0.001, erfolgt die 
Drehbewegung mit der parametrierten maximalen Achsgeschwindigkeit:

MD32000 $MA_MAX_AX_VELO[<Folgeachse>]

Positionierachse

Wurde die Folgeachse vor der Aktivierung der Tangentialkopplung noch nicht als Bahnachse 
verfahren, erfolgt die Drehung im Zwischensatz als Positionierachse. 

Die Drehbewegung erfolgt dabei mit der parametrierten Positionierachsgeschwindigkeit:

MD32060 $MA_POS_AX_VELO[<Folgeachse>]

3.16.7.3

Kopplung einschalten (TANGON)

ber die vordefinierte Prozedur TANGON(...) wird eine zuvor mit TANG(...) (Seite 921) 
definierte Tangentialkopplung eingeschaltet. Die Folgeachse wird dann beim nachfolgenden 
Verfahren der Leitachsen kontinuierlich zur Bahntangente ausgerichtet.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

923

Arbeitsvorbereitung

3.16 Achskopplungen

Winkel der Folgeachse 

Der Winkel, den die Folgeachse in Bezug zur Bahntangente einnimmt, ist abhngig vom in 
TANG(...) vorgegebenen bersetzungsverhltnis, dem im Maschinendatum MD37402 
$MA_TANG_OFFSET parametrierten Offsetwinkel und dem dazu additv wirkenden bei 
TANGON(...) vorgegebenen Offsetwinkel.

Optimierung "P"

Wurde bei der Definition der Tangentialkopplung (TANG(...)) als Optimierungsparameter der 
Wert "P" angegeben, muss beim Einschalten der Kopplung der Parameter "berschleifweg" 
und optional der Parameter "Winkeltoleranz" angegeben werden. 

Wird als Winkeltoleranz der Wert 0 vorgegeben, wirkt nur der Parameter "berschleifweg".

Wird als Winkeltoleranz ein Wert grer 0 vorgegeben, ergibt sich der wirksame 
berschleifweg aus dem Minimum des parametrierten berschleifwegs und des 
berschleifwegs aufgrund der parametrierten Winkeltoleranz. 

Ist die Dynamik der Folgeachse nicht ausreichend, um den parametrierten Bedingungen zu 
folgen, wird die Bahngeschwindigkeit der Leitachsen entsprechend reduziert.

TANGON(<Folgeachse>, <Offetwinkel>, <berschleifweg>, 
<Winkeltoleranz>)

TANGON(...):

<Folgeachse>:

Einschalten einer Tangentialkopplung

Achsename der Folgeachse (Rundachse)

Datentyp:

AXIS

Wertebereich:

Kanalachsnamen

<Offsetwinkel>:

Offsetwinkel der Folgeachse zur Bahntangente

Bezugspunkt ist der Nullpunkt der Rundachse.

Datentyp:

REAL

<berschleifweg>:

Maximal zulssiger berschleifweg

Wrde der berschleifweg aufgrund der Dynamikbedingungen grer, 
wird die Bahngeschwindigkeit der Leitachsen vermindert.

Datentyp:

REAL

<Winkeltoleranz>:

Maximal zulssige Toleranz bezglich des vorgegebenen Winkels zwi
schen der Folgeachs-Nullstellung und der Bahntangente

Datentyp:

REAL

Syntax

Bedeutung

924

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.16 Achskopplungen

3.16.7.4

Kopplung ausschalten (TANGOF)

ber die vordefinierte Prozedur TANGOF(...) wird eine mit TANG(...) (Seite 921) definierte und 
mit TANGON(...) (Seite 923) eingeschaltete Tangentialkopplung ausgeschaltet. Die 
Folgeachse wird dann nicht mehr auf die Bahntangente der Leitachse ausgerichtet. Die 
Kopplung der Folgeachse an die Leitachsen bleibt aber auch nach dem Ausschalten weiterhin 
bestehen, was z.B. folgende Funktionen verhindert:

 Ebenenwechsel

 Geometrieachsumschaltung 

 Definition einer neuen Tangentialkopplung fr die Folgeachse

Das vollstndige Aufheben der Bindung der Folgeache an die Leitachsen erfolgt erst nach dem 
Lschen der Kopplung durch TANGDEL(...) (Seite 925).

Programmierung

TANGOF(<Folgeachse>)

Bedeutung

TANGOF(...):

<Folgeachse>:

Ausschalten einer Tangentialkopplung

Achsename der Folgeachse (Rundachse)

Datentyp:

AXIS

Wertebereich:

Kanalachsnamen

3.16.7.5

Kopplung lschen (TANGDEL)

Eine mit TANG(...) (Seite 921) definierte Tangentialkopplung bleibt auch nach dem 
Ausschalten der Tangentialkopplung mit TANGOF(...) (Seite 925) hinaus bestehen. Die 
bestehende Tangentialkopplung verhindert dann z.B. weiterhin folgende Funktionen:

 Ebenenwechsel

 Geometrieachsumschaltung 

 Definition einer neuen Tangentialkopplung fr die Folgeachse

Mit der vordefinierten Prozedur TANGDEL(...) wird nach dem Ausschalten der 
Tangentialkopplung mit TANGOF(...) die bestehende Tangentialkopplung gelscht. 

Sytax

Bedeutung

TANGDEL(<Folgeachse>)

TANGDEL(...):

Lschen einer mit TANG() definierten Tangentialkopplung

Wirksamkeit:

Satzweise

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

925

Arbeitsvorbereitung

3.16 Achskopplungen

<Folgeachse>:

Achsename der Folgeachse, deren Tangentialkopplung gelscht wer
den soll

Datentyp:

AXIS

Wertebereich:

Kanalachsnamen

Beispiele

Leitachwechsel

Bevor fr die Folgeachse eine neue Tangentialkopplung mit einer anderen Leitachse definiert 
werden kann, muss die bestehende Tangentialkopplung zuerst gelscht werden.

Programmcode

Kommentar

N10 TANG(A, X, Y, 1)

N20 TANGON(A)

N30 X10 Y20

...

N80 TANGOF(A)

N90 TANGDEL(A)

...

; Tangentialkopplung fr Folgeachse A definieren: A zu 
X und Y

; Tangentialkopplung fr Folgeachse A einschalten

; Tangentialkopplung fr Folgeachse A ausschalten

; Tangentialkopplung fr Folgeachse A lschen

N120 TANG(A, X, Z)

; Neue Tangentialkopplung fr Folgeachse A definieren

N130 TANGON(A)

; Neue Tangentialkopplung fr Folgeachse A einschalten

...

Geometrieachsumschaltung

Bevor eine Geometrieachsumschaltung fr eine bestehende Kopplung vorgenommen werden 
kann, muss die Kopplung zuerst gelscht werden.

Programmcode

N10 GEOAX(2, Y1)

N20 TANG(A, X, Y)

N30 TANGON(A, 90)

Kommentar

; 2. Geometrieachse = Maschinenachse Y1

; Tangentialkopplung fr Folgeachse A definieren

; Tangentialkopplung fr Folgeachse A einschalten

N40 G2 F8000 X0 Y0 I0 J50

; Bewegungssatz

N50 TANGOF(A)

N60 TANGDEL(A)

N70 GEOAX(2, Y2)

N80 TANG(A, X, Y)

N90 TANGON(A, 90)

...

; Tangentialkopplung fr Folgeachse A ausschalten

; Tangentialkopplung fr Folgeachse A lschen

; 2. Geometrieachse = Maschinenachse Y2

; Neue Tangentialkopplung fr Folgeachse A definieren

; Neue Tangentialkopplung fr Folgeachse A einschal-
ten

926

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
Arbeitsvorbereitung

3.16 Achskopplungen

3.16.8

Master/Slave-Kopplung (MASLDEF, MASLDEL, MASLON, MASLOF, 
MASLOFS)

Die "Master/Slave-Kopplung" ermglicht:  

 das Einkoppeln der Slave-Achsen auf die Master-Achse im Stillstand der beteiligten 

Achsen.

 das Koppeln und Trennen von drehenden, drehzahlgesteuerten Spindeln.

 die dynamische Projektierung.

Hinweis

Positionierbetrieb

Bei Achsen und Spindeln im Positionierbetrieb wird die Kopplung nur im Stillstand geschlossen 
und getrennt.

Syntax

MASLON(<Slave_1>,<Slave_2>,...)
MASLOF(<Slave_1>,<Slave_2>,...)
MASLOFS(<Slave_1>,<Slave_2>,...)

Dynamische Projektierung:
MASLDEF(<Slave_1>,<Slave_2>,...,<Master>)
MASLDEL(<Slave_1>,<Slave_2>,...)

Bedeutung

MASLON:

Eine temporre Master/Slave-Kopplung einschalten

<Slave_x>,...:

Slave-Achse 1 ... n

MASLOF:

Eine aktive Master/Slave-Kopplung trennen

<Slave_1>,...:

Slave-Achse 1 ... n

MASLOFS:

Master/Slave-Kopplung trennen und Slave-Spindeln automatisch abbremsen (siehe 
Hinweis "Koppelverhalten bei Spindeln im Drehzahlsteuerbetrieb"!)

<Slave_1>,...:

Slave-Achse 1 ... n

MASLDEF:

Master/Slave-Verband aus dem Teileprogramm heraus anlegen/ndern

<Slave_1>,...:

Slave-Achse 1 ... n

<Master>:

Master-Achse

MASLDEL:

Master/Slave-Kopplung trennen und Definition des Verbandes lschen

<Slave_1>,...:

Slave-Achse 1 ... n

Hinweis:
Die in den Maschinendaten projektierten Master-/Slave-Definitionen bleiben erhalten.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

927

 
 
 
 
 
 
 
Arbeitsvorbereitung

3.16 Achskopplungen

Hinweis

Koppelverhalten bei Spindeln im Drehzahlsteuerbetrieb

Bei Spindeln im Drehzahlsteuerbetrieb wird das Koppelverhalten von MASLON, MASLOF, 
MASLOFS und MASLDEL explizit ber das folgende Maschinendatum festgelegt:

MD37263 $MA_MS_SPIND_COUPLING_MODE

In der Standardeinstellung mit MD37263 = 0 erfolgt das Einkoppeln und Trennen der Slave-
Achsen ausschlielich im Stillstand der beteiligten Achsen. MASLOFS entspricht dem MASLOF.

Bei MD37263 = 1 wird die Koppelanweisung unmittelbar, und damit auch in der Bewegung 
ausgefhrt. Die Kopplung wird bei MASLON sofort geschlossen und bei MASLOFS oder MASLOF 
sofort getrennt. Die zu diesem Zeitpunkt drehenden Slave-Spindeln behalten bei MASLOF ihre 
Drehzahlen bis zur erneuten Drehzahlprogrammierung bei. Bei MASLOFS werden sie dagegen 
automatisch abgebremst.

Hinweis

Bei MASLOF/MASLOFS entfllt der implizite Vorlaufstopp. Bedingt durch den fehlenden 
Vorlaufstopp liefern die $P-Systemvariablen fr die Slave-Achsen bis zum Zeitpunkt erneuter 
Programmierung keine aktualisierten Werte.

Hinweis

Fr die Slave-Achse kann der Istwert durch PRESETON auf den gleichen Wert der Master-
Achse synchronisiert werden. Dazu muss die dauerhafte Master/Slave-Kopplung kurzfristig 
ausgeschaltet werden, um den Istwert der nicht referenzierten Slave-Achse mit POWER ON 
auf den Wert der Master-Achse zu setzen. Danach wird die dauerhafte Kopplung wieder 
hergestellt.

Die dauerhafte Master/Slave-Kopplung wird mit folgender MD-Einstellung aktiviert:
MD37262 $MA_MS_COUPLING_ALWAYS_ACTIVE = 1
Sie hat keine Auswirkung auf die Sprachbefehle der temporren Kopplung.

Beispiel

Bei einer permanenten Master/Slave-Kopplung wird mit PRESETON der Istwert der Slave-
Achse auf den Wert der Master-Achse gesetzt.

Programmcode

Kommentar

$MA_MS_COUPLING_ALWAYS_ACTIVE[AX2]=0

NEWCONF

STOPRE

MASLOF(Y1)

PRESETON(AX2,$VA_IM(M_AX))

$MA_MS_COUPLING_ALWAYS_ACTIVE[AX2]=1

; Permanente Kopplung der Slave-Achse aus-
schalten

; Maschinendatennderung aktivieren

; Temporre Kopplung ausschalten

; Istwert der Slave-Achse = Istwert der 
Master-Achse

; Permanente Kopplung der Slave-Achse ein-
schalten

928

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
Programmcode

NEWCONF

Kommentar

; Maschinendatennderung aktivieren

Arbeitsvorbereitung

3.16 Achskopplungen

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

929

Arbeitsvorbereitung

3.17 Synchronaktionen

3.17

Synchronaktionen

3.17.1

Definition einer Synchronaktion

Eine Synchronaktion wird in einem Satz eines Teileprogramms definiert. Innerhalb dieses 
Satzes drfen keine weiteren Befehle programmiert werden, die nicht Bestandteil der 
Synchronaktion sind.

Eine Synchronaktion besteht aus folgenden Komponenten:       

Gltigkeit, 
Ident-Nr. 

(optional)

Hufigkeit

Bedingungsteil

Aktionsteil bei erfllter Bedingung Aktionsteil bei nicht erfllter Bedin

(optional)

G-Be
fehl

(optio
nal)

Bedingung

Schlssel
wort

G-Be
fehl

(optio
nal)

Aktionen

Schlssel
wort

gung

(optional)

G-Be
fehl

(optio
nal)

Aktionen

--- 1)

--- 1) 

G... 

Logischer 

DO 

G... 

Aktion 1 

ELSE 

G... 

Aktion 1 

ID=<Nr> 

WHENEVER 

Ausdruck 

IDS=<Nr> 

FROM 

WHEN 

EVERY 

1) nicht programmiert

Syntax

... 

Aktion n 

... 

Aktion n 

DO <Aktion 1> ... <Aktion n>
<Hufigkeit> [<G-Funktion>] <Bedingung> DO <Aktion 1> ... <Aktion n>
ID=<Nr> <Hufigkeit> [<G-Funktion>] <Bedingung> DO <Aktion 1> ... 
<Aktion n>
IDS=<Nr> <Hufigkeit> [<G-Funktion>] <Bedingung> DO <Aktion 1> ... 
<Aktion n>
IDS=<Nr> <Hufigkeit> [<G-Funktion>] <Bedingung> DO <Aktion 1...n> 
ELSE <Aktion 1...n>

Weitere Informationen

Funktionshandbuch Synchronaktionen

930

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
Arbeitsvorbereitung

3.18 Pendeln

3.18

Pendeln

3.18.1

Asynchrones Pendeln (OS, OSP1, OSP2, OST1, OST2, OSCTRL, OSNSC, 
OSE, OSB)

Eine Pendelachse fhrt zwischen den zwei Umkehrpunkten 1 und 2 mit gegebenem Vorschub 
hin und her, bis die Pendelbewegung abgeschaltet wird. 

Andere Achsen knnen whrend der Pendelbewegung beliebig interpoliert werden. ber eine 
Bahnbewegung oder mit einer Positionierachse kann eine kontinuierliche Zustellung erreicht 
werden. Dabei besteht jedoch kein Zusammenhang zwischen der Pendel- und der 
Zustellbewegung.  

Eigenschaften des asynchronen Pendelns

 Das asynchrone Pendeln ist achsspezifisch ber Satzgrenzen hinweg wirksam.  

 ber das Teileprogramm ist ein satzsynchrones Einschalten der Pendelbewegung 

gewhrleistet.

 Eine gemeinsame Interpolation von mehreren Achsen und eine berlagerung von 

Pendelstrecken sind nicht mglich.

Programmierung

ber die folgenden Befehle ist ein der Abarbeitung des NC-Programms entsprechendes 
Einschalten und Beeinflussen des asynchronen Pendelns vom Teileprogramm her mglich.

Die programmierten Werte werden satzsynchron im Hauptlauf in die entsprechenden 
Settingdaten eingetragen und bleiben bis zur nchsten nderung wirksam.

Syntax

Bedeutung

OSP1[<Achse>]=<Wert> OSP2[<Achse>]=<Wert>
OST1[<Achse>]=<Wert> OST2[<Achse>]=<Wert>
FA[<Achse>]=<Wert>
OSCTRL[<Achse>]=(<Setzoption>,<Rcksetzoption>)
OSNSC[<Achse>]=<Wert>
OSE[<Achse>]=<Wert>
OSB[<Achse>]=<Wert>
OS[<Achse>]=1
OS[<Achse>]=0

<Achse>: Name der Pendelachse

OS:

Pendeln ein-/ausschalten

Wert:

1

0

Pendeln einschalten

Pendeln ausschalten

OSP1:

Position von Umkehrpunkt 1 festlegen

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

931

Arbeitsvorbereitung

3.18 Pendeln

OSP2:

Position von Umkehrpunkt 2 festlegen

Hinweis:
Falls ein inkrementelles Verfahren aktiv ist, so wird die Position inkrementell zur letzten im 
NC-Programm programmierten entsprechenden Umkehrposition berechnet.

OST1:

OST2:

Haltezeit im Umkehrpunkt 1 in [s] festlegen

Haltezeit im Umkehrpunkt 2 in [s] festlegen

<Wert>:

-2 Interpolation wird ohne Warten auf Genauhalt fortgesetzt

-1 Warten auf Genauhalt grob

0 Warten auf Genauhalt fein

>0 Warten auf Genauhalt fein und anschlieend Abwarten der ange

gebenen Haltezeit

Hinweis:
Die Einheit fr die Haltezeit ist identisch mit der ber G4 program
mierten Haltezeit.

FA:

Vorschubgeschwindigkeit festlegen

Als Vorschubgeschwindigkeit gilt die definierte Vorschubgeschwindigkeit der Positionier
achse. Ist keine Vorschubgeschwindigkeit definiert, gilt der im Maschinendatum hinter
legte Wert.

OSCTRL:

Setz- und Rcksetzoptionen angeben

Die Optionswerte 0 - 3 verschlsseln das Verhalten an den Umkehrpunkten beim Aus
schalten. Es kann eine der Varianten 0 - 3 ausgewhlt werden. Die brigen Einstellungen 
sind nach Bedarf kombinierbar mit der gewhlten Variante. Mehrere Optionen werden 
durch Pluszeichen (+) aneinandergefgt.

<Wert>:

0

Beim Abschalten der Pendelbewegung im nchsten Umkehrpunkt 
stoppen (Voreinstellung)

Hinweis:
Nur durch Rcksetzen der Werte 1 und 2 mglich.

Beim Abschalten der Pendelbewegung in Umkehrpunkt 1 stoppen

Beim Abschalten der Pendelbewegung in Umkehrpunkt 2 stoppen

Beim Abschalten der Pendelbewegung keinen Umkehrpunkt anfah
ren, falls keine Ausfeuerungshbe programmiert sind

Nach dem Ausfeuern Endposition anfahren

Wird die Pendelbewegung durch Restweglschen abgebrochen, 
sollen anschlieend Ausfeuerungshbe abgearbeitet und ggf. die 
Endposition angefahren werden.

Wird die Pendelbewegung durch Restweglschen abgebrochen, 
soll wie beim Abschalten die entsprechende Umkehrposition ange
fahren werden.

Genderter Vorschub ist erst ab dem nchsten Umkehrpunkt aktiv

FA gleich 0, FA = 0: Wegberlagerung ist aktiv

FA ungleich 0, FA <> 0: Geschwindigkeitsberlagerung ist aktiv

Bei Rundachse DC (krzester Weg)

Ausfeuerhub wird als Doppelhub ausgefhrt.(Standard) 1=Ausfeu
erhub wird als Einzelhub ausgefhrt.

1

2

3

4

8

16

32

64

128

256

OSNSC:

Anzahl der Ausfeuerungshbe festlegen

512

Zuerst Startposition anfahren

932

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
Beispiele

Arbeitsvorbereitung

3.18 Pendeln

OSE:

OSB:

Endposition (im WKS) festlegen, die nach Ausschalten des Pendelns angefahren werden 
soll

Hinweis:
Bei Programmierung von "OSE" wird fr "OSCTRL" implizit Option 4 wirksam.

Startposition (im WKS) festlegen, die vor Einschalten des Pendelns angefahren werden 
soll

Die Startposition wird vor Umkehrpunkt 1 angefahren. Stimmt die Startposition mit der 
Umkehrposition 1 berein, so wird als nchstes die Umkehrposition 2 angefahren. Beim 
Erreichen der Startposition wirkt keine Haltezeit, auch wenn die Startposition mit der Um
kehrposition 1 bereinstimmt, stattdessen wird auf Genauhalt fein gewartet. Eine einge
stellte Genauhaltbedingung wird eingehalten.

Hinweis:
Damit die Startposition angefahren wird, muss im Settingdatum SD43770 $SA_OS
CILL_CTRL_MASK Bit 9 gesetzt sein.

Beispiel 1: Pendelachse soll zwischen zwei Umkehrpunkten pendeln

Die Pendelachse Z soll zwischen Position 10 und 100 pendeln. Umkehrpunkt 1 soll mit 
Genauhalt fein, Umkehrpunkt 2 mit Genauhalt grob angefahren werden. Der Vorschub fr die 
Pendelachse soll 250 betragen. Am Ende der Bearbeitung sollen 3 Ausfeuerungshbe 
erfolgen und die Pendelachse soll die Endposition 200 ansteuern. Der Vorschub fr die 
Zustellachse soll 1 betragen, das Ende der Zustellung in X-Richtung soll bei Position 15 
erreicht sein.

Programmcode 

WAITP(X,Y,Z)

G0 X100 Y100 Z100

WAITP(X,Z)

Kommentar

; Ausgangsstellung.

; Umschalten in Positionierachsbetrieb.

OSP1[Z]=10 OSP2[Z]=100

; Umkehrpunkt 1, Umkehrpunkt 2.

OSE[Z]=200

; Endposition.

OST1[Z]=0 OST2[Z]=1

; Haltezeit an U1: Genauhalt fein

FA[Z]=250 FA[X]=1

OSCTRL[Z]=(4,0)

OSNSC[Z]=3

OS[Z]=1

; Haltezeit an U2: Genauhalt grob

; Vorschub Pendelachse, Vorschub Zustell-
achse.

; Setzoptionen.

; 3 Ausfeuerhbe.

; Pendeln starten.

WHEN $A_IN[3]==TRUE DO DELDTG(X)

; Restweglschen.

POS[X]=15

POS[X]=50

OS[Z]=0

M30

; Ausgangsstellung X-Achse

; Endstellung X-Achse.

; Pendeln stoppen.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

933

 
 
Arbeitsvorbereitung

3.18 Pendeln

Hinweis

Der Befehlsfolge "OSP1[Z]=..." bis "OSNCS[Z]=..." kann auch in einem Satz programmiert 
werden.

Beispiel 2: Pendeln mit Online-nderung der Umkehrposition

Die fr das asynchrone Pendeln erforderlichen Settingdaten knnen im Teileprogramm 
eingestellt werden.

Werden im Teileprogramm die Settingdaten direkt beschrieben, so wird die nderung schon 
zum Vorlaufzeitpunkt wirksam. Synchrones Verhalten kann ber einen Vorlaufstopp (STOPRE) 
erreicht werden.

Programmcode

Kommentar

$SA_OSCILL_REVERSE_POS1[Z]=-10

$SA_OSCILL_REVERSE_POS2[Z]=10

G0 X0 Z0

WAITP(Z)

ID=1 WHENEVER $AA_IM[Z] < $$AA_OSCILL_REVERSE_
POS1[Z] DO $AA_OVR[X]=0

ID=2 WHENEVER $AA_IM[Z] < $$AA_OSCILL_REVERSE_
POS2[Z] DO $AA_OVR[X]=0

; Wenn der Istwert der Pendelach-
se den Umkehrpunkt berschritten 
hat, wird die Zustellachse ange-
halten.

OS[Z]=1 FA[X]=1000 POS[X]=40

OS[Z]=0

M30

; Pendeln einschalten.

; Pendeln ausschalten.

Weitere Informationen

Pendelachse

Fr die Pendelachse gilt:

 Jede Achse kann als Pendelachse benutzt werden.

 Gleichzeitig knnen mehrere Pendelachsen aktiv sein (maximal: Anzahl der 

Positionierachsen).

 Fr die Pendelachse ist immer - unabhngig vom im Programm aktuell gltigen G-Befehl - 

Linearinterpolation G1 aktiv.

934

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
Arbeitsvorbereitung

3.18 Pendeln

Die Pendelachse kann:

 Eingangsachse fr die dynamische Transformation sein

 Fhrungsachse bei Gantry- und Mitschleppachsen sein

 verfahren werden:

 ohne Ruckbegrenzung "BRISK"

oder

 mit Ruckbegrenzung "SOFT"

oder

 mit geknickter Beschleunigungskennlinie (wie Positionierachsen)

Pendelumkehrpunkte

Bei der Festlegung der Pendelpositionen sind die aktuellen Verschiebungen zu beachten:

 Absolute Angabe

"OSP1[Z]=<Wert>"
Position Umkehrpunkt = Summe der Verschiebungen + programmierter Wert

 Relative Angabe

"OSP1[Z]=IC(<Wert>)"
Position Umkehrpunkt = Umkehrpunkt 1 + programmierter Wert

Beispiel:

Programmcode

N10 OSP1[Z]=100 OSP2[Z]=110

...

N40 OSP1[Z]=IC(3)

WAITP

Soll mit einer Geometrieachse gependelt werden, so muss diese mit "WAITP" zum Pendeln 
freigegeben werden.

Nach beendetem Pendeln wird mit "WAITP" die Pendelachse wieder als Positionierachse 
eingetragen und kann wieder normal verwendet werden.

Pendeln mit Bewegungssynchronaktionen und Haltezeiten

Nach Ablauf der eingestellten Haltezeiten findet beim Pendeln der interne Satzwechsel statt 
(sichtbar an den neuen Restwegen der Achsen). Beim Satzwechsel wird die Ausschaltfunktion 
berprft. Dabei wird nach der eingestellten Steuereinstellung fr den Bewegungsablauf 
(OSCTRL) die Ausschaltfunktion festgelegt. Dieses Zeitverhalten ist durch den 
Vorschuboverride beeinflussbar.

Unter Umstnden wird danach noch ein Pendelhub ausgefhrt, bevor die Ausfeuerungshbe 
gestartet oder die Endposition angefahren wird. Es entsteht dabei der Eindruck, es verndert 
sich das Ausschaltverhalten. Dies ist aber nicht der Fall.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

935

 
 
 
 
Arbeitsvorbereitung

3.18 Pendeln

3.18.2

ber Synchronaktionen gesteuertes Pendeln (OSCILL)

Bei dieser Art des Pendelns ist nur an den Umkehrpunkten bzw. innerhalb definierter 
Umkehrbereiche eine Zustellbewegung zugelassen.     

Je nach Anforderung kann die Pendelbewegung whrend der Zustellung

 fortgefhrt oder

 angehalten werden, bis die Zustellung vollstndig ausgefhrt ist.  

Syntax

Bedeutung

1. Parameter fr das Pendeln festlegen

2. Bewegungssynchronaktionen definieren 

3. Achsen zuordnen, Zustellung festlegen

OSP1[<Pendelachse>]=

Position des Umkehrpunkts 1

OSP2[<Pendelachse>]=

Position des Umkehrpunkts 2

OST1[<Pendelachse>]=

Haltezeit in Umkehrpunkt 1 in Sekunden

OST2[<Pendelachse>]=

Haltezeit in Umkehrpunkt 2 in Sekunden

FA[<Pendelachse>]=

Vorschub der Pendelachse

OSCTRL[<Pendelachse>]=

Setz- bzw. Rcksetzoptionen

OSNSC[<Pendelachse>]=

Anzahl der Ausfeuerungshbe

OSE[<Pendelachse>]=

Endposition

WAITP(<Pendelachse>)

Achse fr das Pendeln freigeben

Achszuordnung, Zustellung
OSCILL[<Pendelachse>]=(<Zustellachse 1>,<Zustellachse 2>,<Zustellach
se 3>)
POSP[<Zustellachse>]=(<Endpos>,<Teillnge>,<Modus>)

OSCILL:

POSP:

Zustellachse(n) der Pendelachse zuordnen

Gesamt- und Teilzustellungen festlegen (siehe Kapitel Datei- und Programmver
waltung)

Endpos:

Endposition fr die Zustellachse, nachdem alle Teilzustellungen abgefahren sind.

Teillnge:

Gre der Teilzustellung am Umkehrpunkt/Umkehrbereich

Modus:

Aufteilung der Gesamtzustellung in Teilzustellungen

= zwei gleich groe Restschritte (Voreinstellung);

= alle Teilzustellungen gleich gro

Bewegungssynchronaktionen

WHEN  DO

WHENEVER  DO

wenn, dann

immer wenn, dann

936

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Beispiel

Im Umkehrpunkt 1 soll keine Zustellung erfolgen. Beim Umkehrpunkt 2 soll die Zustellung 
bereits im Abstand ii2 vor dem Umkehrpunkt 2 erfolgen und die Pendelachse im Umkehrpunkt 
nicht auf das Beenden der Teilzustellung warten. Die Achse Z ist Pendelachse und die Achse 
X Zustellachse.

Arbeitsvorbereitung

3.18 Pendeln

1. Parameter fr das Pendeln

Programmcode 

DEF INT ii2

Kommentar

; Variable fr Umkehrbereich 2 definieren

OSP1[Z]=10 OSP2[Z]=60

; Umkehrpunkt 1 und 2 definieren

OST1[Z]=0 OST2[Z]=0

; Umkehrpunkt 1: Genauhalt fein

Umkehrpunkt 2: Genauhalt fein

FA[Z]=150 FA[X]=0.5

; Vorschub Pendelachse Z, Vorschub Zustellachse X

OSCTRL[Z]=(2+8+16,1)

; Pendelbewegung abschalten im Umkehrpunkt 2; nach RWL Aus-
feuern und Endposition anfahren; nach RWL entsprechende Um-
kehrposition anfahren

OSNC[Z]=3

OSE[Z]=70

ii2=2

WAITP(Z)

; Ausfeuerungshbe

; Endposition = 70

; Umkehrbereich einstellen

; Erlaube Pendeln fr Z-Achse

2. Bewegungssynchronaktion

Programmcode 

Kommentar

WHENEVER $AA_IM[Z]<$SA_OSCILL_REVERSE_POS2[Z] 
DO -> 
 $AA_OVR[X]=0 $AC_MARKER[0]=0

; Immer wenn die aktuelle Position 
der Pendelachse Z im MKS kleiner als 
der Beginn des Umkehrbereichs 2 ist, 
dann setze den axialen Override der 
Zustellachse X auf 0% und den Merker 
mit dem Index 0 auf den Wert 0.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

937

EndpositionanfahrenUmkehrposition 1 anfahrenund 3 Ausfeuerungsh(cid:190)be706050403020100ZX5.04.03.02.01.0Arbeitsvorbereitung

3.18 Pendeln

Programmcode 

Kommentar

WHENEVER $AA_IM[Z]>=$SA_OSCILL_REVERSE_POS2[Z] 
DO $AA_OVR[Z]=0

WHENEVER $AA_DTEPW[X]==0 DO $AC_MARKER[0]=1

WHENEVER $AC_MARKER[0]==1 DO $AA_OVR[X]=0 
$AA_OVR[Z]=100

; Immer wenn die aktuelle Position 
der Pendelachse Z im MKS grer 
gleich der Umkehrposition 2 ist, 
dann setze den axialen Override der 
Pendelachse Z auf 0%.

; Immer wenn der Restweg der Teilzu-
stellung gleich 0 ist, dann setze 
den Merker mit dem Index 0 auf den 
Wert 1.

; Immer wenn der Merker mit dem In-
dex 0 gleich 1 ist, dann setze den 
axialen Override der Zustellachse X 
auf 0%. Damit wird eine zu frhe Zu-
stellung verhindert (Pendelachse Z 
hat den Umkehrbereich 2 noch nicht 
wieder verlassen, die Zustellachse 
X ist aber bereit fr eine erneute 
Zustellung). Setze den axialen Over-
ride der Pendelachse Z von 0% (Akti-
on der 2. Synchronaktion) zum Ver-
fahren wieder auf 100%.

-> muss in einem Satz programmiert werden

3. Pendeln starten

Programmcode 

Kommentar

OSCILL[Z]=(X) POSP[X]=(5,1,1)

; Starten der Achsen

M30

Weitere Informationen

1. Pendelparameter festlegen 

Der Pendelachse Z wird die Achse X 
als Zustellachse ;zugewiesen.

Die Achse X soll bis Endposition 5 
in Schritten von 1 fahren.

; Programmende

Vor dem Bewegungssatz, der die Zuordnung von Zustell- und Pendelachse sowie die 
Festlegung der Zustellung enthlt, sind die Parameter fr das Pendeln festzulegen (siehe 
"Asynchrones Pendeln").

2. Bewegungssynchronaktionen festlegen 
ber Synchronbedingungen erfolgt: 
Zustellung unterdrcken, bis sich die Pendelachse innerhalb eines Umkehrbereichs 
(ii1, ii2) oder an einem Umkehrpunkt (U1, U2) befindet. 
Pendelbewegung whrend der Zustellung im Umkehrpunkt anhalten. 
Pendelbewegung nach beendeter Teilzustellung wieder starten. 
Start der nchsten Teilzustellung festlegen.        

3. Pendeln- und Zustellachse zuordnen sowie Gesamt- und Teilzustellung festlegen.

938

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Pendelparameter festlegen

Arbeitsvorbereitung

3.18 Pendeln

Zuordnung von Pendel- und Zustellachse: OSCILL

OSCILL[<Pendelachse>]=(<Zustellachse1>,<Zustellachse2>,<Zustellachse
3>)

Mit dem Befehl "OSCILL" erfolgen die Achszuordnungen und der Start der Pendelbewegung.   

Maximal knnen einer Pendelachse 3 Zustellachsen zugewiesen werden.

Hinweis

Vor dem Start des Pendelns mssen die Synchronbedingungen fr das Verhalten der Achsen 
festgelegt sein.

Zustellungen festlegen: POSP

POSP[<Zustellachse>]=(<Endpos>,<Teillnge>,<Modus>)

Mit dem Befehl "POSP" werden der Steuerung mitgeteilt:   

 Gesamtzustellung (ber die Endposition)

 Die Gre der jeweiligen Teilzustellung am Umkehrpunkt bzw. im Umkehrbereich

 Das Teilzustellverhalten bei Erreichen der Endposition (ber den Modus)

Modus = 0

Modus = 1

Fr die beiden letzten Teilzustellungen erfolgt eine Aufteilung des verbleibenden We
ges bis zum Zielpunkt auf 2 gleich groe Restschritte (Voreinstellung).

Alle Teilzustellungen sind gleich gro. Sie werden aus der Gesamtzustellung berech
net.

Bewegungssynchronaktionen festlegen

Die im folgenden ausgefhrten Bewegungssynchronaktionen werden ganz allgemein zum 
Pendeln verwendet.   

Sie finden Beispiellsungen fr die Lsung von einzelnen Anforderungen, die Ihnen als 
Bausteine fr die Erstellung von anwenderspezifischen Pendelbewegungen dienen.

Hinweis

Im Einzelfall knnen die Synchronbedingungen auch anders programmiert werden.

Schlsselwrter

WHEN  DO    

WHENEVER  DO   

wenn, dann

immer wenn, dann

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

939

Arbeitsvorbereitung

3.18 Pendeln

Funktionen

Mit den im folgenden detailliert beschriebenen Sprachmitteln knnen Sie folgende Funktionen 
realisieren:

1. Zustellung im Umkehrpunkt.

2. Zustellung im Umkehrbereich.

3. Zustellung in beiden Umkehrpunkten.

4. Anhalten der Pendelbewegung im Umkehrpunkt.

5. Pendelbewegung wieder starten.

6. Teilzustellung nicht zu frh starten.

Fr alle hier beispielhaft dargestellten Synchronaktionen gelten die Annahmen:

 Umkehrpunkt 1 < Umkehrpunkt 2

 Z = Pendelachse

 X = Zustellachse

Hinweis

Fr nhere Erluterungen, siehe Kapitel Bewegungssynchronaktionen.

Pendeln- und Zustellachse zuordnen sowie Gesamt- und Teilzustellung festlegen

Zustellung im Umkehrbereich

Die Zustellbewegung soll innerhalb eines Umkehrbereichs beginnen, bevor der Umkehrpunkt 
erreicht ist.     

Diese Synchronaktionen verhindern die Zustellbewegung, bis sich die Pendelachse in einem 
Umkehrbereich befindet.

Unter den gegebenen Annahmen (siehe oben) ergeben sich folgende Anweisungen:

Umkehrbereich 1:
WHENEVER $AA_IM[Z]>$SA_OSCILL_RESERVE_POS1[Z]+ii1 DO $AA_OVR[X]=0

Immer wenn die aktuelle Position der Pendelachse im MKS grer als der Beginn des Um
kehrbereichs 1 ist, dann setze den axialen Override der Zustellachse auf 0%.

Umkehrbereich 2:
WHENEVER $AA_IM[Z]<$SA_OSCILL_RESERVE_POS2[Z]+ii2 DO $AA_OVR[X]=0

Immer wenn die aktuelle Position der Pendelachse im KS kleiner als der Beginn des Umkehr
bereichs 2 ist, dann setze den axialen Override der Zustellachse auf 0%.

Zustellung im Umkehrpunkt

Solange die Pendelachse den Umkehrpunkt nicht erreicht hat, findet keine Bewegung der 
Zustellachse statt.   

940

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
Arbeitsvorbereitung

3.18 Pendeln

Unter den gegebenen Annahmen (siehe oben) ergeben sich folgende Anweisungen:

Umkehrbereich 1:
WHENEVER $AA_IM[Z]<>$SA_OSCILL_RESERVE_POS1[Z] DO $AA_OVR[X]=0 
$AA_OVR[Z]=100

Immer wenn die aktuelle Position der Pendelachse Z im MKS grer oder kleiner als die 
Position des Umkehrpunkts 1 ist, dann setze den axialen Override der Zustellachse X auf 0% 
und den axialen Override der Pendelachse Z auf 100%.

Umkehrbereich 2:

Fr Umkehrpunkt 2:
WHENEVER $AA_IM[Z]<>$SA_OSCILL_RESERVE_POS2[Z] DO $AA_OVR[X]=0 
$AA_OVR[Z]=100

Immer wenn die aktuelle Position der Pendelachse Zu im MKS grer oder kleiner als die 
Position des Umkehrpunkts 2 ist, dann setze den axialen Override der Zustellachse X auf 0% 
und den axialen Override der Pendelachse Z auf 100%. 

Anhalten der Pendelbewegung im Umkehrpunkt

Die Pendelachse wird am Umkehrpunkt angehalten, gleichzeitig beginnt die Zustellbewegung. 
Die Pendelbewegung wird fortgesetzt, wenn die Zustellbewegung vollstndig ausgefhrt ist.

Gleichzeitig kann diese Synchronaktion dazu benutzt werden, die Zustellbewegung zu starten, 
falls diese durch eine vorhergehende Synchronaktion, die noch wirksam ist, gestoppt wurde.

Unter den gegebenen Annahmen (siehe oben) ergeben sich folgende Anweisungen:

Umkehrbereich 1:
WHENEVER $SA_IM[Z]==$SA_OSCILL_RESERVE_POS1[Z] DO $AA_OVR[X]=0 
$AA_OVR[Z]=100

Immer wenn die aktuelle Position der Pendelachse im MKS gleich der Umkehrposition 1 ist, 
dann setze den axialen Ovberrie der Pendelachse auf 0% und den axialen Override der 
Zustellachse auf 100%.

Umkehrbereich 2:
WHENEVER $SA_IM[Z]==$SA_OSCILL_RESERVE_POS2[Z] DO $AA_OVR[X]=0 
$AA_OVR[Z]=100

Immer wenn die aktuelle Position der Pendelachse Zu im MKS gleich der Umkehrposition 2 ist, 
dann setze den axialen Override der PendelachseX auf 0% und den axialen Override der 
Zustellachse auf 100%.

Online-Auswertung des Umkehrpunkts

Steht auf der rechten Seite des Vergleichs eine mit $$ gekennzeichnete Hauptlaufvariable, 
so werden die beiden Variablen im IPO-Takt laufend ausgewertet und miteinander verglichen.   

Hinweis

Mehr Informationen hierzu siehe Kapitel "Bewegungssynchronaktionen".

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

941

 
 
 
 
Arbeitsvorbereitung

3.18 Pendeln

Pendelbewegung wieder starten

Diese Synchronaktion wird dazu benutzt, die Bewegung der Pendelachse fortzusetzen, wenn 
die Teilzustellbewegung abgeschlossen ist.

Unter den gegebenen Annahmen (siehe oben) ergeben sich folgende Anweisungen:

WHENEVER $AA_DTEPW[X]==0 DO $AA_OVR[Z]=100
Immer wenn der Restweg fr die Teilzustellung der Zustelalchse X im WKS gleich Null ist, 
dann setze den axialen Override der Pendelachse auf 100%.

Nchste Teilzustellung

Nach erfolgter Zustellung muss ein zu frhes Starten der nchsten Teilzustellung verhindert 
werden.   

Dazu wird ein kanalspezifischer Merker ($AC_MARKER[Index]) verwendet, der am Ende der 
Teilzustellung (Teilrestweg  0) gesetzt wird und beim Verlassen des Umkehrbereichs 
gelscht wird. Dann wird mit einer Synchronaktion die nchste Zustellbewegung verhindert.

Unter den gegebenen Annahmen (siehe oben) ergeben sich z. B. fr Umkehrpunkt 1 folgende 
Anweisungen:

1. Marker setzen:
WHENEVER $AA_DTEPW[X]==0 DO $AC_MARKER[1]=1

Immer wenn der Restweg fr die Teilzustellung der Zustellachse X im WKS gleich Null ist, 
dann setze den Merker mit Index 1 auf 1.

2. Marker lschen
WHENEVER $AA_IM[Z]<> $SA_OSCILL_RESERVE_POS1[Z] DO $AC_MARKER[1]=0

Immer wenn die aktuelle Position der Pendelachse Z ium MKS grer oder kleiner als die 
Position des Umkehrpunkts 1 ist, dann setze den Merker 1 auf 0.

3. Zustellung verhindern
WHENEVER $AC_MARKER[1]==1 DO $AA_OVR[X]=0

Immer wenn der Merker 1 gleich ist, dann setze den axialen Override der Zustellachse X auf 
0%.

942

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
Arbeitsvorbereitung

3.19 Schleifen

3.19

Schleifen

3.19.1

Schleifspezifische Werkzeugberwachung ein-/ausschalten (TMON, TMOF)

Mit den vordefinierten Prozeduren TMON(...) und TMOF(...) wird die schleifspezifische 
Werkzeugberwachung (Geometrie- und Drehzahlberwachung) ein- bzw. ausgeschaltet.

Voraussetzung

Syntax

Bedeutung

Die werkzeugspezifischen Parameter $TC_TPG1 bis $TC_TPG9 mssen gesetzt sein.

TMON(<TNr>)

...

TMOF(<TNr>)

TMON(...):

Schleifspezifische Werkzeugberwachung einschalten

Der Befehl muss in dem Kanal programmiert werden, in dem die schleifspezifische 
Werkzeugberwachung eingeschaltet werden soll.

TMOF(...):

Schleifspezifische Werkzeugberwachung ausschalten

Der Befehl muss in dem Kanal programmiert werden, in dem die schleifspezifische 
Werkzeugberwachung ausgeschaltet werden soll.

<TNr>:

T-Nummer

Hinweis:
Nur erforderlich, wenn die berwachung statt fr das aktive, im Einsatz befindliche 
Werkzeug fr eine nicht aktive Schleifscheibe ein- bzw. ausgeschaltet werden soll.

TMOF(0):

berwachung fr alle Werkzeuge ausschalten

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

943

 
 
 
Arbeitsvorbereitung

3.20 Programmlaufzeit / Werkstckzhler

3.20

Programmlaufzeit / Werkstckzhler

Zur Untersttzung des Werkzeugmaschinenbedieners werden Informationen zur 
Programmlaufzeit und Werkstckzahl bereitgestellt.

Diese Informationen knnen als Systemvariablen im NC- und/oder PLC-Programm bearbeitet 
werden. Gleichzeitig stehen diese Informationen fr die Anzeige auf der Bedienoberflche zur 
Verfgung.

3.20.1

Programmlaufzeit

Die Funktion "Programmlaufzeit" stellt NC-interne Timer zur berwachung technologischer 
Prozesse zur Verfgung, die ber NC- und Kanal-spezifische Systemvariablen im 
Teileprogramm und in Synchronaktionen gelesen werden knnen.  

Der Trigger zur Laufzeitmessung ($AC_PROG_NET_TIME_TRIGGER) ist die einzige 
schreibbare Systemvariable der Funktion und dient zur selektiven Messung von 
Programmabschnitten. D. h. durch Beschreiben des Triggers im NC-Programm kann die 
Zeitmessung ein- und wieder ausgeschaltet werden.

Systemvariable

Bedeutung

Aktivitt

NC-spezifisch

$AN_SETUP_TIME  

$AN_POWERON_TIME  

Kanal-spezifisch

$AC_OPERATING_TIME  

Zeit seit dem letzten Steuerungshochlauf mit Standard
werten ("Kaltstart") in Minuten

 immer aktiv

Wird bei jedem Steuerungshochlauf mit Standardwer
ten automatisch auf "0" zurckgesetzt.

Zeit seit dem letzten Normalhochlauf der Steuerung 
("Warmstart") in Minuten

Wird bei jedem Normalhochlauf der Steuerung auto
matisch auf "0" zurckgesetzt.

Gesamtlaufzeit von NC-Programmen in der Betriebs
art Automatik in Sekunden

 Aktivierung ber 

MD27860

Der Wert wird mit jedem Steuerungshochlauf automa
tisch auf "0" zurckgesetzt.

 nur Betriebsart AU

TOMATIK

$AC_CYCLE_TIME  

Laufzeit des angewhlten NC-Programms in Sekunden

Der Wert wird mit dem Start eines neuen NC-Pro
gramms automatisch auf "0" zurckgesetzt.

$AC_CUTTING_TIME  

Bearbeitungszeit in Sekunden  

Gemessen wird die Laufzeit der Bahnachsen (mindes
tens eine ist aktiv) ohne aktiven Eilgang in allen NC-
Programmen zwischen NC-Start und Programmende / 
NC-Reset. Die Messung wird zustzlich bei aktiver 
Verweilzeit unterbrochen.

Der Wert wird bei jedem Steuerungshochlauf mit Stan
dardwerten automatisch auf "0" zurckgesetzt.

944

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
Arbeitsvorbereitung

3.20 Programmlaufzeit / Werkstckzhler

Systemvariable

Bedeutung

$AC_ACT_PROG_NET_TIME  

$AC_OLD_PROG_NET_TIME  

Aktuelle Netto-Laufzeit des aktuellen NC-Programms 
in Sekunden

Wird mit dem Start eines NC-Programms automatisch 
auf "0" zurckgesetzt.

Netto-Laufzeit des gerade korrekt mit M30 beendeten 
Programms in Sekunden

$AC_OLD_PROG_NET_TIME_COUNT  

nderungen auf $AC_OLD_PROG_NET_TIME

Aktivitt

 immer aktiv

 nur Betriebsart AU

TOMATIK

 nur Betriebsart AU

TOMATIK

Nach POWER ON steht 
$AC_OLD_PROG_NET_TIME_COUNT auf "0".

$AC_OLD_PROG_NET_TIME_COUNT wird immer 
dann erhht, wenn die Steuerung 
$AC_OLD_PROG_NET_TIME neu geschrieben hat.

$AC_PROG_NET_TIME_TRIGGER  

Trigger zur Laufzeitmessung:

0

1

Neutraler Zustand

Der Trigger ist nicht aktiv.

Beenden

Beendet die Messung und kopiert den Wert aus 
$AC_ACT_PROG_NET_TIME in 
$AC_OLD_PROG_NET_TIME. 
$AC_ACT_PROG_NET_TIME wird auf "0" ge
setzt und luft danach weiter.

2

Start

Startet die Messung und setzt dabei 
$AC_ACT_PROG_NET_TIME auf "0". 
$AC_OLD_PROG_NET_TIME wird nicht vern
dert.

3

Stopp

Stoppt die Messung. Verndert 
$AC_OLD_PROG_NET_TIME nicht und hlt 
$AC_ACT_PROG_NET_TIME bis zum Fortset
zen konstant.

4

Fortsetzen

Fortsetzen der Messung, d. h. eine vorher ge
stoppte Messung wird wieder aufgenommen. 
$AC_ACT_PROG_NET_TIME luft weiter. 
$AC_OLD_PROG_NET_TIME wird nicht vern
dert.

Durch POWER ON werden alle Systemvariablen auf "0" zurckgesetzt!

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

945

Arbeitsvorbereitung

3.20 Programmlaufzeit / Werkstckzhler

Hinweis

Maschinenhersteller

Das Einschalten der aktivierbaren Timer erfolgt ber das Maschinendatum 
MD27860 $MC_PROCESSTIMER_MODE.

Das Verhalten der aktiven Zeitmessungen bei bestimmten Funktionen (z. B. GOTOS, 
Override = 0%, aktiver Probelaufvorschub, Programmtest, ASUP, PROG_EVENT, ) wird 
konfiguriert ber die Maschinendaten MD27850 $MC_PROG_NET_TIMER_MODE und 
MD27860 $MC_PROCESSTIMER_MODE.

Weitere Informationen: Funktionshandbuch Basisfunktionen

Hinweis

Restzeit fr ein Werkstck   

Wenn nacheinander gleiche Werkstcke produziert werden, kann mit den folgenden 
Timerwerten die verbleibende Restzeit fr ein Werkstck ermittelt werden:

 Bearbeitungszeit fr das zuletzt produzierte Werkstck (siehe 

$AC_OLD_PROG_NET_TIME)

 Aktuelle Bearbeitungszeit (siehe $AC_ACT_PROG_NET_TIME)

Die Restzeit wird zustzlich zur aktuellen Bearbeitungszeit auf der Bedienoberflche anzeigt.

Hinweis

Verwendung von STOPRE

Die Systemvariablen $AC_OLD_PROG_NET_TIME und 
$AC_OLD_PROG_NET_TIME_COUNT erzeugen keinen impliziten Vorlaufstopp. Bei der 
Verwendung im Teileprogramm ist das unkritisch, wenn der Wert der Systemvariablen aus 
dem vorangegangen Programmlauf stammt. Wenn aber der Trigger zur Laufzeitmessung 
($AC_PROG_NET_TIME_TRIGGER) hochfrequent geschrieben wird und sich dadurch 
$AC_OLD_PROG_NET_TIME sehr oft ndert, dann sollte im Teileprogramm ein explizites 
STOPRE verwendet werden.

Randbedingungen

 Satzsuchlauf

Bei Satzsuchlauf werden keine Programmlaufzeiten ermittelt.

 REPOS

Die Zeitdauer eines REPOS-Vorgangs wird der aktuellen Bearbeitungszeit 
($AC_ACT_PROG_NET_TIME) angerechnet.

Beispiele

946

Beispiel 1: Zeitdauer von "mySubProgrammA" messen

Programmcode

...

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
Arbeitsvorbereitung

3.20 Programmlaufzeit / Werkstckzhler

Programmcode

N50 DO $AC_PROG_NET_TIME_TRIGGER=2

N60 FOR ii= 0 TO 300

N70 mySubProgrammA

N80 DO $AC_PROG_NET_TIME_TRIGGER=1

N95 ENDFOR

N97 mySubProgrammB

N98 M30

Nachdem das Programm die Zeile N80 verarbeitet hat, steht in $AC_OLD_PROG_NET_TIME 
die Nettolaufzeit von "mySubProgrammA".

Der Wert von $AC_OLD_PROG_NET_TIME:

 beibt ber M30 hinaus erhalten.

 wird nach jedem Schleifendurchlauf aktualisiert.

Beispiel 2: Zeitdauer von "mySubProgrammA" und "mySubProgrammC" messen

Programmcode

...

N10 DO $AC_PROG_NET_TIME_TRIGGER=2

N20 mySubProgrammA

N30 DO $AC_PROG_NET_TIME_TRIGGER=3

N40 mySubProgrammB

N50 DO $AC_PROG_NET_TIME_TRIGGER=4

N60 mySubProgrammC

N70 DO $AC_PROG_NET_TIME_TRIGGER=1

N80 mySubProgrammD

N90 M30

3.20.2

Werkstckzhler

Die Funktion "Werkstckzhler" stellt diverse Zhler zur Verfgung, die insbesondere fr die 
steuerungsinterne Zhlung von Werkstcken verwendet werden knnen. 

Die Zhler existieren als kanalspezifische Systemvariablen mit Schreib- und Lese-Zugriff im 
Wertebereich von 0 bis 999 999 999.

Systemvariable

Bedeutung

$AC_REQUIRED_PARTS    Anzahl der zu fertigenden Werkstcke (Soll-Werkstckzahl)

$AC_TOTAL_PARTS   

In diesem Zhler kann die Anzahl der Werkstcke definiert werden, bei 
dessen Erreichen die Ist-Werkstckzahl ($AC_ACTUAL_PARTS) auf 
"0" zurckgesetzt wird.

Anzahl der insgesamt gefertigten Werkstcke (Ist-Werkstckzahl Ge
samt)

Dieser Zhler gibt die Anzahl aller ab Startzeitpunkt gefertigten Werk
stcke an. Der Wert wird nur bei einem Steuerungshochlauf mit Stan
dardwerten automatisch auf "0" zurckgesetzt.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

947

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.20 Programmlaufzeit / Werkstckzhler

Systemvariable

Bedeutung

$AC_ACTUAL_PARTS   

Anzahl der gefertigten Werkstcke (Ist-Werkstckzahl)

In diesem Zhler wird die Anzahl aller ab Startzeitpunkt gefertigten 
Werkstcke registriert. Bei einem Erreichen der Soll-Werkstckzahl 
($AC_REQUIRED_PARTS) wird der Zhler automatisch auf "0" zurck
gesetzt ($AC_REQUIRED_PARTS > 0 vorausgesetzt).

$AC_SPECIAL_PARTS   

Anzahl der vom Anwender gezhlten Werkstcke

Dieser Zhler erlaubt dem Anwender eine Werkstckzhlung nach ei
gener Definition. Definiert werden kann eine Alarmausgabe bei Errei
chen der Soll-Werkstckzahl ($AC_REQUIRED_PARTS). Eine Nullung 
des Zhlers muss der Anwender selbst vornehmen.

Hinweis

Alle Werkstckzhler werden bei einem Steuerungshochlauf mit Standardwerten auf "0" 
gesetzt und knnen unabhngig von ihrer Aktivierung gelesen und geschrieben werden.

Hinweis

ber kanalspezifische Maschinendaten kann auf die Zhler-Aktivierung, den Zeitpunkt der 
Nullung und den Zhlalgorithmus Einfluss genommen werden.

Hinweis

Werkstckzhlung mit anwenderdefiniertem M-Befehl

ber Maschinendaten kann eingestellt werden, dass die Zhlimpulse fr die verschiedenen 
Werkstckzhler statt ber das Programmende M2/M30 ber anwenderdefinierte M-Befehle 
ausgelst werden.

948

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.21 Weitere Funktionen

3.21

Weitere Funktionen

3.21.1

Maschinendaten wirksam setzen (NEWCONF)

Mit dem Befehl NEWCONF werden alle Maschinendaten wirksam gesetzt. Die Funktion kann 
auch in der Bedienoberflche HMI durch Bettigen des Softkeys "MD wirksam setzen" aktiviert 
werden.

Bei der Ausfhrung der Funktion "NEWCONF" erfolgt ein impliziter Vorlaufstopp, d. h. die 
Bahnbewegung wird unterbrochen. 

Syntax

Bedeutung

NEWCONF

NEWCONF:

Befehl zum Wirksamsetzen aller Maschinendaten der Wirksamkeitsstufe "NEW_CON
FIG"

NEWCONF aus dem Teileprogramm kanalbergreifend ausfhren

Werden axiale Maschinendaten aus dem Teileprogramm heraus verndert und anschlieend 
mit NEWCONF aktiviert, so setzt der Befehl NEWCONF nur die Maschinendaten aktiv, die 
nderungen fr den Kanal des Teileprogramms bewirken.

Hinweis

Um alle nderungen sicher wirksam werden zu lassen, muss der Befehl NEWCONF in jedem 
Kanal ausgefhrt werden, in dem auch die von den vernderten Maschinendaten betroffenen 
Achsen oder Funktionen aktuell gerechnet werden.

Bei NEWCONF werden keine axialen Maschinendaten wirksam gesetzt.

Fr PLC-kontrollierte Achsen muss ein axialer RESET ausgefhrt werden.

Beispiel

Frsbearbeitung: Bohrposition mit verschiedenen Technologien bearbeiten

Programmcode

Kommentar

N10 $MA_CONTOUR_TOL[AX]=1.0

; Maschinendatum ndern.

N20 NEWCONF

...

; Maschinendaten wirksam setzen.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

949

 
Arbeitsvorbereitung

3.21 Weitere Funktionen

3.21.2

Vorhandenen NC-Sprachumfang prfen (STRINGIS)

Mit der Funktion "STRINGIS(...)" kann geprft werden, ob der angegebene String als Element 
der NC-Programmiersprache im aktuellen Sprachumfang zur Verfgung steht. 

Definition

Syntax

Bedeutung

INT STRINGIS(STRING <Name>)

STRINGIS(<Name>)

STRINGIS:

<Name>:

Funktion mit Rckgabewert

Name des zu prfenden Elementes der NC-Programmiersprache

Rckgabewert:

Das Format des Rckgabewertes ist yxx (Dezimal).

Elemente der NC-Programmiersprache

Folgende Elemente der NC-Programmiersprache knnen geprft werden:

 G-Befehle aller existierenden G-Gruppen z.B. "G0", "INVCW", "POLY", "ROT", "KONT", 

"SOFT", "CUT2D", "CDON", "RMBBL", "SPATH"

 DIN- oder NC-Adressen wie z.B. "ADIS", "RNDM", "SPN", "SR", "MEAS"

 Funktionen z.B. "TANG(...)" oder "GETMDACT"

 Prozeduren z.B. "SBLOF".

 Schlsselworte z.B. "ACN", "DEFINE" oder "SETMS"

 Systemdaten z.B. Maschinendaten $M... , Settingdaten $S... oder Optionsdaten $O...

 Systemvariable $A... , $V... , $P...

 Rechenparameter R...

 Zyklennamen von aktivierten Zyklen

 GUD- und LUD-Variablen

 Makro-Namen

 Label-Namen

Rckgabewert

Der Rckgabewert ist nur in den erst 3 Dezimalstellen relevant. Das Format des 
Rckgabewertes ist yxx, mit y = Basisinformation und xx = Detailinformation.

Rckgabewert

Bedeutung

000

100

950

Der String name ist im vorliegenden System nicht bekannt 1)

Der String name ist ein Element der NC-Programmiersprache, aber aktuell nicht programmierbar (Option/
Funktion ist inaktiv)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.21 Weitere Funktionen

Rckgabewert

Bedeutung

2xx

Der String name ist ein programmierbares Element der NC-Programmiersprache (Option/Funktion ist 
aktiv). Die Detailinformation xx enthlt weitere Informationen ber die Art des Elements:

xx

01

02

03

04

05

06

07

08

09

10

11

12

Bedeutung

DINAdresse oder NCAdresse 2)

GBefehl (z.B. G04, INVCW)

Funktion mit Rckgabewert

Funktion ohne Rckgabewert

Schlsselwort (z.B. DEFINE)

Maschinen- ($M...), Setting- ($S...) oder Optionsdatum ($O...)

Systemparameter, z.B. Systemvariable ($...) oder Rechenparameter (R...)

Zyklus (Der Zyklus muss im NC geladen und die Zyklenprogramme aktiv sein 3) )

GUDVariable (Die GUD-Variable muss der in GUDDefinitionsdateien definierten und die GUD-
Variablen aktiviert sein)

Makroname (Das Makro muss in der MakroDefinitionsdateien definierten und Makros aktivierten 
sein) 4)

LUDVariable des aktuellen Teileprogramms

ISO GBefehl (ISO Sprachmodus muss aktiv ist)

400

y00

Der String name ist eine NCAdresse, die nicht als xx == 01 oder xx == 10 erkannt wurde und die nicht 
G oder R ist 2)

Keine spezifische Zuordnung mglich

1) Steuerungs-abhngig ist unter Umstnden nur eine Untermenge der Siemens NC-Sprachbefehle bekannt, z.B. SINUME
RIK 802D sl. Auf diesen Steuerungen wird fr Strings, die prinzipiell Siemens NC-Sprachbefehle sind, der Wert 0 zurckge
geben. Dieses Verhalten kann ber MD10711 $MN_NC_LANGUAGE_CONFIGURATION verndert werden. Bei 
MD10711 = 1 wird dann fr Siemens NC-Sprachbefehle immer der Wert 100 zurckgegeben.

2) NCAdressen sind folgende Buchstaben: A, B, C, E, I, J, K, Q, U, V, W, X, Y, Z. Diese NCAdressen knnen auch mit einer 
Adresserweiterung programmiert werden. Die Adresserweiterung kann bei der Prfung mit STRINGIS angegeben werden. 
Beispiel: 201 == STRINGIS("A1"). 
Die Buchstaben: D, F, H, L, M, N, O, P, S, T sind NCAdressen oder Hilfsfunktionen die anwenderdefiniert verwendet werden. 
Fr sie wird immer der Wert 400 zurckgegeben. Beispiel: 400 == STRINGIS( "D" ). Diese NCAdressen knnen bei der 
Prfung mit STRINGIS nicht mit Adresserweiterung angegeben werden. 
Beispiel: 000 == STRINGIS("M02"), aber 400 == STRINGIS("M").

3) Namen von Zyklenparametern knnen mit STRINGIS nicht geprft werden.
4) Als Makro definierte Adress z.B. G, H, M, L werden als Makro identifiziert

Beispiele

In den folgenden Beispielen wird angenommen, dass die als String angegebenen NC-
Sprachelement, sofern nicht besonders vermerkt, in der Steuerung prinzipiell programmierbar 
sind.

1. Der String "T" ist als Hilfsfunktion definiert:

400 == STRINGIS("T")
000 == STRINGIS ("T3")

2. Der String "X" ist als Achse definiert:

201 == STRINGIS("X")
201 == STRINGIS("X1")

3. Der String "A2" ist als NCAdresse mit Erweiterung definiert:

201 == STRINGIS("A")
201 == STRINGIS("A2")

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

951

 
 
 
 
 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.21 Weitere Funktionen

4. Der String "INVCW" ist als benamter GBefehl definiert:

202 == STRINGIS("INVCW")

5. Der String "$MC_GCODE_RESET_VALUES" ist als Maschinendatum definiert:

206 == STRINGIS("$MC_GCODE_RESET_VALUES")

6. Der String "GETMDACT" ist eine NCSprachfunktion:

203 == STRINGIS("GETMDACT ")

7. Der String "DEFINE" ist ein Schlsselwort:

205 == STRINGIS("DEFINE")

8. Der String "$TC_DP3" ist ein Systemparameter (Werkzeuglngenkomponente):

207 == STRINGIS("$TC_DP3")

9. Der String "$TC_TP4" ist ein Systemparameter (Werkzeuggre):

207 == STRINGIS("$TC_TP4")

10.Der String "$TC_MPP4" ist ein Systemparameter (Magazinplatzzustand):

 Die WerzeugmagazinVerwaltung ist aktiv: 207 == STRINGIS("$TC_MPP4") ;

 Die WerzeugmagazinVerwaltung ist nicht aktiv: 000 == STRINGIS("$TC_MPP4")

Siehe auch unten Absatz: Werkzeugmagazin-Verwaltung.

11.Der String "MACHINERY_NAME" ist als GUD-Variable definiert:

209 == STRINGIS("MACHINERY_NAME")

12.Der String "LONGMACRO" ist als Makro definiert:

210 == STRINGIS("LONGMACRO")

13.Der String "MYVAR" ist als LUD-Variable definiert:

211 == STRINGIS("MYVAR")

14.Der String "XYZ" ist kein im NC bekannter Befehl, GUD-Variable, Makro- oder Zyklen-

Name:
000 == STRINGIS("XYZ")

Werkzeugmagazin-Verwaltung

Ist die Funktion Werkzeugmagazin-Verwaltung nicht aktiv, liefert STRINGIS fr die 
Systemparameter der Werkzeugmagazin-Verwaltung, unabhngig vom Maschinendatum

 MD10711 $MN_NC_LANGUAGE_CONFIGURATION

immer den Wert 000.

ISO Modus

Ist die Funktion "ISO Modus" aktiv:

 MD18800 $MN_MM_EXTERN_LANGUAGE (Aktivierung externer NC-Sprachen)

 MD10880 $MN_ MM_EXTERN_CNC_SYSTEM (zu adaptierendes Steuerungssystems)

berprft STRINGIS den angegebenen String zuerst als SINUMERIK G-Befehl. Ist der String 
kein SINUMERIK G-Befehl wird er anschlieend als ISO G-Befehl berprft.

Programmierte Umschaltungen (G290 (SINUMERIK Mode), G291 (ISO Mode)) haben auf 
STRINGIS keine Auswirkung.

952

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Beispiel

Arbeitsvorbereitung

3.21 Weitere Funktionen

Die fr die Funktion STRINGIS(...) relevanten Maschinendaten haben folgende Werte:

 MD10711 $MN_NC_LANGUAGE_CONFIGURATION = 2 (Es werden nur die NC-

Sprachbefehle als bekannt angesehen, deren Optionen gesetzt sind)

 MD19410 $ON_TRAFO_TYPE_MASK = 'H0' (Option: Transformationen)

 MD10700 $MN_PREPROCESSING_LEVEL='H43' (Vorverarbeitung fr Zyklen aktiv)

Das folgende Beispielprogramm wird ohne Fehlermeldung abgearbeitet:

Programmcode

Kommentar

N1 R1=STRINGIS("TRACYL")

; R1 == 0, da TRACYL wegen der fehlenden 

Transformations-Option als "nicht bekannt" 

erkannt wird

N2 IF STRINGIS("TRACYL") == 204

N3  TRACYL(1,2,3)

; N3 wird bersprungen

N4 ELSE

N5  G00

N6 ENDIF

N7 M30

; und stattdessen N5 ausgefhrt

3.21.3

Fenster aus dem Teileprogramm interaktiv aufrufen (MMC)

ber das vordefinierte Unterprogramm MMC(...) knnen aus einem NC-Programm heraus 
anwenderspezifische Dialoge auf der Bedienoberflche angezeigt werden. 

Die Projektierung der Dialoge kann fr folgende Dialogarten erfolgen:

 Run MyScreens 

 Easy XML

 Anwender-XML

Weitere Informationen:

 Programmierhandbuch Run MyScreens

 Programmierhandbuch Easy XML

Syntax

Bedeutung

MMC("<ADDRESS>,<COMMAND>,<FILE>,<DIALOG>","<QUIT>")

MMC(...):

Unterprogrammbezeichner

Die Parameter werden platzcodiert und durch Komma getrennt innerhalb von 
zwei Strings, dem Kommando-String und dem Quittungs-String, angegeben.

Parameter innerhalb des Kommando-Strings:

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

953

 
 
 
 
Arbeitsvorbereitung

3.21 Weitere Funktionen

<ADDRESS>:

Bedienbereich, in dem die projektierten Anwenderdialoge ausgefhrt werden

Funktion

Bedienbereiche

Anwenderdialog "Run MyScreens"

Anwenderdialog "Easy XML"

Anwender-XML

Popup "Run MyScreens"

Popup "Easy XML"

CYCLES

CYCLES

XML

POPUPDLG

POPUPDLG

<COMMAND>:

Auszufhrendes Kommando

Funktion

Kommandos

Anwenderdialog "Run MyScreens"

PICTURE_ON, PICTURE_OFF

Anwenderdialog "Easy XML"

PICTURE_ON, PICTURE_OFF

Anwender-XML

Popup "Run MyScreens"

Popup "Easy XML"

XML_ON, XML_OFF

PICTURE_ON, PICTURE_OFF

PICTURE_ON, PICTURE_OFF

<FILE>:

Name der Datei, in der der anzuzeigende Dialog programmiert ist

Funktion

Anwenderdialog "Run MyScreens"

Anwenderdialog "Easy XML"

Anwender-XML

Popup "Run MyScreens"

Popup "Easy XML"

Dateien

<name>.com

<name>.xml

<name>.xml

<name>.com

<name>.xml

Popup "Easy XML" mit Projektierung direkt 
im NC-Programm (siehe Beispiel 2)

xmldial_emb.xml

<DIALOG>:

Name des anzuzeigenden Dialogs

Funktion

Dialogname

Alle Funktionen auer Popup "Easy XML" 
mit Projektierung direkt im NC-Programm

In der Datei <FILE> projektier
ter Name des Dialogs

Popup "Easy XML" mit Projektierung direkt 
im NC-Programm (siehe Beispiel 3)

main

Parameter innerhalb des Quittungs-Strings:

<QUIT>:

Quittungstyp

N:

Keine Quittierung.

Die Programmbearbeitung wird nach Absenden des Kommandos 
fortgefhrt. Es erfolgt keine Rckmeldung, wenn das Kommando 
nicht erfolgreich ausgefhrt werden konnte.

Hinweis

Quittungstyp "N" ist zu verwenden, wenn im NC-Programm eine 
Anzeigezeit (Verweilzeit) programmiert wird (siehe unten Beispiel 
2)

A:

Asynchrone Quittierung

Die Programmabarbeitung wird nach Absetzen des Befehls fort
gefhrt. Der Rckgabewert wird in einer im Rahmen der Dialog
projektierung definierten anwenderspezifischen Quittungsvariab
len (GUD-Variable) abgelegt und kann im NC-Programm gelesen 
werden.

954

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.21 Weitere Funktionen

Randbedingungen

 Die Definitionsdateien *.com der Dialoge mssen im Ordner "proj" abgelegt werden.

 Die Easy XML Definitionsdateien *.xml der Dialoge mssen im Ordner "appl" abgelegt 

werden. 
Werden die Definitionsdateien in einem anderen Verzeichnis abgelegt, muss die 
Pfadangabe indirekt, ausgehend vom Verzeichnis "appl", erfolgen.

 Anwenderdefinierte Dialoge knnen nicht gleichzeitig aus unterschiedlichen Kanlen 

heraus angezeigt werden.

 In der Simulation wird die MMC-Funktionalitt nicht untersttzt.  

Beispiele

Beispiel 1

Anzeige eines Dialogs und Reaktion auf die Anwenderbedienung in einem NC-Programm.

Programmcode

Kommentar

; Die Quittungsvariable QUIT wurde bereits als globale Anwendervariable (GUD)

; vom Typ STRING bei der Projektierung des Dialoges angelegt:

; DEF NCK STRING[20] QUIT

QUIT = "XXX"

G4 F5

MMC("CYCLES,PICTU-
RE_ON,test.com,test1","A")

INPUT:

   STOPRE

; Quittungsvariable initialisieren

; Dialog anzeigen

;  - Bedienbereich: CYCLES

;  - Bildstatus: PICTURE_ON (anzeigen)

;  - Dialogbild-Datei: test.com

;  - Dialogbild: test1

; Warten auf Anwenderbedienung

;    Vorlaufstop

   IF MATCH (QUIT,"RUN") >= 0 GOTOF WORK

;    Softkey "RUN"

   IF MATCH (QUIT,"CHK") >= 0 GOTOF CHECK ;    Softkey "CHK"

GOTOB INPUT

; => Warten

WORK:

; Softkey "RUN" gedrckt

MSG("Weiter mit Bearbeitung -> NC-Start") ; Meldung ausgeben

MMC("CYCLES,PICTURE_OFF","N")

; Dialog schlieen

M0

GOTOF END

CHECK:

; Warten auf NC-Start

; => Programmende

; Softkey "CHK" gedrckt

MSG("Position anfahren -> NC-Start")

; Meldung ausgeben

MMC("CYCLES,PICTURE_OFF","N")

; Dialog schlieen

M0

GOTOF END

; Warten auf NC-Start

; => Programmende

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

955

 
 
 
 
 
 
 
Arbeitsvorbereitung

3.21 Weitere Funktionen

Programmcode

Kommentar

END:

...

Beispiel 2

Die Anzeigezeit eines Dialogs wird im NC-Programm z. B. ber eine Verweilzeit festgelegt.

Programmcode

F1000 G94

...

Kommentar

MMC("POPUPDLG,PICTURE_ON,xmldial_emb.xml,main","N")

; Dialog anzeigen

X200

Z40

MMC("POPUPDLG,PICTURE_OFF","N")

; Dialog schlieen

Beispiel 3

Einbetten eines PopUp-Scripts in ein NC-Programm und dessen Verwendung.

Programmcode
PROC POPUP_TEST

; ----------------------------- Script -----------------------------

; <main_dialog entry="rpara_main">

;    <let name="xpos" />

;    <let name="ypos" />

;    <let name="field_name" type="string" />

;    <let name="num" />

;    <menu name="rpara_main">

;       <open_form name="rpara_form"/>

;       <softkey_back>

;          <close_form />

;       </softkey_back>

;    </menu>

;    <form name="rpara_form">

;       <init>

;          <caption>mask from NC part program</caption>

;          <let name="count" >0</let>

;          <op> 

;             xpos = 120;

;             ypos = 34; 

;             "nck/Channel/Parameter/R[10]" = 10;

;          </op>

;          <!-- load the number of controls -->

;          <op>

;             num = "nck/Channel/Parameter/R[10]";

;          </op>

;          <while>

956

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
Arbeitsvorbereitung

3.21 Weitere Funktionen

Programmcode
;             <condition> count < num</condition>

;             <print name="field_name" text="edit%d">count</print>

;             <op>

;                ypos = ypos + 24;

;                count = count + 1;

;             </op>

;          </while>

;       </init>

;       <paint>

;          <op> 

;             xpos =  8;

;             ypos = 36;

;             count = 0;

;          </op>

;          <while>

;             <condition>count < num</condition>

;             <print name="field_name" text="R-Parameter%d">count</print>

;             <text xpos = "$xpos" ypos = "$ypos" >$$$field_name</text>

;             <op>

;                ypos = ypos + 24;

;                count = count + 1;

;             </op> 

;          </while>

;       </paint>

;    </form>

; </main_dialog>

; ========================= Programmteil ===========================

...

G94 F100

MMC("POPUPDLG,PICTURE_ON,xmldial_emb.xml,main","N")

G4 F4

X200

MMC("POPUPDLG,PICTURE_OFF","N")

G4 F2

X0

...

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

957

Arbeitsvorbereitung

3.21 Weitere Funktionen

3.21.4

Process DataShare - Ausgabe auf ein externes Gert/Datei (EXTOPEN, WRITE, 
EXTCLOSE)

Das Schreiben von Daten aus einem Teileprogramm heraus auf ein externes Gert/Datei 
erfolgt in drei Schritten: 

1. Externes Gert/Datei ffnen

Mit dem Befehl EXTOPEN wird das externe Gert/Datei fr den Kanal zum Schreiben 
geffnet. 

2. Daten schreiben

Das Ausgabedatum kann mit den Stringfunktionen der NC-Sprache, z. B. SPRINT, 
aufbereitet werden. Das Schreiben selbst erfolgt ber den WRITE-Befehl.

3. Externes Gert/Datei schlieen

Mit dem Befehl EXTCLOSE oder durch Erreichen des Programmendes (M30) sowie bei 
Kanal-Reset wird das im Kanal belegte externe Gert/Datei wieder freigegeben.

Syntax

DEF INT <Result>

DEF STRING[<n>] <Output>



EXTOPEN(<Result>,<ExtDev>,<SyncMode>,<AccessMode>,<WriteMode>)



<Output>="Ausgabe Daten"

WRITE(<Result>,<ExtDev>,<Output>)



EXTCLOSE(<Result>,<ExtDev>)

958

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.21 Weitere Funktionen

Bedeutung

EXTOPEN:

<Result>:

Vordefinierte Prozedur zum ffnen eines externen Gerts/Datei

Parameter 1: Ergebnisvariable

Anhand des Ergebnisvariablenwerts kann im Programm das Gelingen der Ope
ration ausgewertet und entsprechend fortgefahren werden.

Typ:

INT

Werte:

0

1

2

3

4

5

6

7

8

9

11

12

16

22

kein Fehler

externes Gert kann nicht geffnet werden

externes Gert ist nicht projektiert

externes Gert mit ungltigem Pfad projektiert

keine Zugriffsrechte fr externes Gert

Benutzungsmodus: externes Gert bereits "exklusiv" belegt

Benutzungsmodus: externes Gert bereits "shared" belegt

Dateilnge grer als LOCAL_DRIVE_MAX_FILESIZE

maximale Anzahl externer Gerte berschritten

Option fr LOCAL_DRIVE nicht gesetzt

reserviert

Schreibmodus: Angabe widersprchlich zu extdev.ini

ungltiger externer Pfad programmiert

externes Gert nicht gemountet

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

959

Arbeitsvorbereitung

3.21 Weitere Funktionen

<ExtDev>:

Parameter 2: Symbolischer Bezeichner fr das zu ffnende externe Gert/Datei

Typ:

STRING

Der symbolische Bezeichner besteht aus:

1. dem logischen Gertenamen

2. ggf. gefolgt von einem Dateipfad (angehngt mit "/").

Folgende logische Gertenamen sind definiert:

"LOCAL_DRIVE":

Lokale CompactFlash Card (vordefiniert)

"CYC_DRIVE":

"/dev/ext/1", ...
"/dev/ext/9":

reservierte Laufwerksangabe zur Verwendung in SIE
MENS-Zyklen (vordefiniert)

Verfgbare Netzlaufwerke

Hinweis:
Projektierung in der Datei extdev.ini erforderlich!

"/dev/cyc/1",
"/dev/cyc/2":

reservierte Laufwerksangaben zur Verwendung in SIE
MENS-Zyklen

Hinweis:
Projektierung in der Datei extdev.ini erforderlich!

Dateipfad:

 Zu "LOCAL_DRIVE" und "CYC_DRIVE" muss ein Dateipfad angegeben wer

den, z. B.:
"LOCAL_DRIVE/my_dir/my_file.txt"

 Die logischen Gertenamen "/dev/ext/1...9" und "/dev/cyc/1...2" knnen per 

Projektierung:



schon auf eine Datei verweisen, dann darf nur der logische Gertenamen 
angegeben werden, z. B.:
"/dev/ext/4"

 oder auf ein Verzeichnis, dann muss ein Dateipfad angegeben werden, 

z. B.:
"/dev/ext/5/my_dir/my_file.txt"

Hinweis:
Fr die logischen Gertenamen "/dev/ext/1...9", "/dev/v24" und "/dev/cyc/1...2" 
wird Gro-/Kleinschreibung ignoriert, bei der Pfadangabe zu einer Datei ist Gro-/
Kleinschreibung signifikant. Fr "LOCAL_DRIVE" und "CYC_DRIVE" ist nur 
Groschreibung zulssig.

960

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.21 Weitere Funktionen

<SyncMode>:

Parameter 3: Bearbeitungsmodus fr die WRITE-Befehle zu diesem Gert/Datei

Typ:

STRING

Werte:

"SYN":

Synchrones Schreiben

Die Programmausfhrung wird angehalten, bis der 
Schreibvorgang abgeschlossen ist.

Die erfolgreiche Beendigung des synchronen Schreib
ens kann durch Auswerten der Fehlervariablen des 
WRITE-Befehls berprft werden. 

"ASYN":

Asynchrones Schreiben

Die Programmausfhrung wird durch den WRITE-Be
fehl nicht unterbrochen.

Hinweis:
Die Ergebnisvariable des WRITE-Befehls ist in diesem 
Modus nicht aussagekrftig und hat immer den Wert 0 
(kein Fehler). Es gibt in diesem Modus keine Sicherheit, 
dass der WRITE-Befehl erfolgreich war.

<AccessMode>:

Parameter 4: Benutzungsmodus fr dieses Gert/Datei

Typ:

STRING

Werte:

"SHARED": Gert/Datei wird im "Shared"-Modus angefordert. An

dere Kanle knnen das Gert mitverwenden, d. h. 
ebenfalls in diesem Modus ffnen.

"EXCL":

Gert/Datei wird in dem Kanal exklusiv verwendet, kein 
anderer Kanal kann das Gert mitverwenden.

<WriteMode>:

Parameter 5: Schreibmodus fr die WRITE-Befehle zu diesem Gert/Datei (op
tional)

Typ:

STRING

Werte:

"APP":

Anhngen

Die Datei bleibt in ihrem Inhalt erhalten, Schreibaufrufe 
fgen an das Ende an.

"OVR":

berschreiben

Der Inhalt der Datei wird gelscht und durch nachfol
gende Schreibaufrufe neu erstellt.

Hinweis:
Mit diesem Parameter kann der in der Datei extdev.ini projektierte Schreibmodus 
nicht berschrieben werden. Im Konfliktfall wird der EXTOPEN-Aufruf mit Fehler 
quittiert.

WRITE:

Vordefinierte Prozedur zum Schreiben der Ausgabedaten

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

961

 
Arbeitsvorbereitung

3.21 Weitere Funktionen

EXTCLOSE:

<Result>:

Vordefinierte Prozedur zum Schlieen eines geffneten externen Gerts/Datei

Parameter 1: Ergebnisvariable

Typ:

INT

Werte:

0

16

21

kein Fehler

ungltiger externer Pfad programmiert

Fehler beim Schlieen des externen Gerts

<ExtDev>:

Parameter 2: Symbolischer Bezeichner fr das zu schlieende externe Gert/
DateiBeschreibung siehe unter EXTOPEN!

Hinweis:
Der Bezeichner muss identisch zu dem im EXTOPEN-Aufruf angegebenen Be
zeichner sein!

Beispiel

Programmcode

N10

N20

N30

N40

N50

N60

N70

N80

N90

N100



N200

N210

N220

N230

N240



DEF INT RESULT

DEF BOOL EXTDEVICE

DEF STRING[80] OUTPUT

DEF INT PHASE

EXTOPEN(RESULT,"LOCAL_DRIVE/my_file.txt","SYN","SHARED")

IF RESULT > 0

   MSG("Fehler bei EXTOPEN:" << RESULT)

ELSE

   EXTDEVICE=TRUE

ENDIF

PHASE=4

IF EXTDEVICE

   OUTPUT=SPRINT("Ende Phase: %D",PHASE)

   WRITE(RESULT,"LOCAL_DRIVE/my_file.txt",OUTPUT)

ENDIF

Siehe auch

Stringoperationen (Seite 438)

Datei schreiben (WRITE) (Seite 560)

3.21.5

Alarme (SETAL)

In einem NC-Programm knnen Alarme gesetzt werden. Diese werden in der 
Bedienoberflche in einem besonderen Feld dargestellt. Mit einem Alarm ist jeweils eine 
Reaktion der Steuerung entsprechend der Alarmkategorie verbunden.   

962

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.21 Weitere Funktionen

Syntax

Bedeutung

SETAL(<Nr>[,<String>])

SETAL(...):

Vordefinierte Prozedur zum Setzen eines Alarms

SETAL muss in einem eigenen NC-Satz programmiert werden.

<Nr>:

Alarmnummer

Datentyp:

INT

Wertebereich:

60000 ... 64999 (reserviert)

Alarme fr SIEMENS-Zyklen

65000 ... 69999

Alarme fr Anwenderzyklen

<String>:

Zeichenkette (optional)

Datentyp:

STRING

Bei der Programmierung von Anwenderzyklenalarmen kann eine Zeichenkette mit 
bis zu 4 Parametern angegeben werden.

In diesen Parametern knnen variable Anwendertexte definiert werden.

Es stehen auch vordefinierte Parameter zur Verfgung:

%1

%2

%3

%4

Kanalnummer

Satznummer, Label

Textindex fr Zyklenalarme

zustzlicher Alarmparameter

Hinweis

Alarmtexte mssen in der Bedienoberflche projektiert werden.

Beispiel

Programmcode

...

Kommentar

N100 SETAL(65000)

; Alarm Nr. 65000 setzen

...

Weitere Informationen

Alarmreaktion und -quittierung

Anwenderzyklenalarme sind Nummernbereichen zugeordnet, die sich bezglich 
Alarmreaktion und -quittierung unterscheiden:

Nummernbereich

Alarmreaktion

65000 - 65499

Anzeige, Verriegelung NC-Start

65500 - 65999

Anzeige, Verriegelung NC-Start (nicht fr ASUPs bei gesetz
tem MD20194)

Alarmquittierung

Reset

Reset

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

963

 
 
Arbeitsvorbereitung

3.21 Weitere Funktionen

Nummernbereich

Alarmreaktion

Alarmquittierung

66000 - 66999

Anzeige, Verriegelung NC-Start, Bewegungsstillstand nach 
Abarbeitung der vordecodierten Stze

Reset

67000 - 67999

Anzeige

68000 - 68999

69000 - 69999

Anzeige, Verriegelung NC-Start, sofortiger Interpolator-
Stopp

Anzeige, Verriegelung NC-Start, Stopp am nchsten Satzen
de

Reset

Cancel

Reset

3.21.6

Rohteil definieren (WORKPIECE)

Die Steuerung muss Form und Gre eines Rohteils kennen, um es in der grafischen 
Simulation anzeigen zu knnen. Der Anwender hat daher die Mglichkeit, Rohteile ber die 
Bedienoberflche oder direkt im NC-Programm zu definieren. Die Rohteildefinitionen bleiben 
ber (Programmende-/Kanal-/BAG-)Reset hinaus erhalten. Mit dem nchsten Hochlauf der 
Steuerung werden sie automatisch gelscht.

Syntax

Bedeutung

WORKPIECE("<WP>", "<RefP>", "<ZeroOffset>", "<Type>", <Par5>, 
<Par6>, ..., <Par12>)

WORKPIECE(...):

Vordefinierte Prozedur zum Definieren eines Rohteils

Vorlaufstopp:

Alleine im Satz:

ja

ja

Parameter:

1

"<WP>":

Name des Werkstcks (optional)

Datentyp:

STRING

Eine Angabe ist nur notwendig, wenn es in einem Kanal mehrere 
Werkstcke geben kann. Ohne Angabe wird automatisch 
"WORKP<n>" angenommen, wobei <n> die Nummer des deklarier
enden Kanals ist.

2

"<RefP>":

Aufspannung (optional; nur bei Frsmaschinen)

Datentyp:

STRING

Wertebereich:

"Tisch"

Aufspannung auf dem festen Tisch

"A"

"B"

"C"

Aufspannung auf Rundachse A

Aufspannung auf Rundachse B

Aufspannung auf Rundachse C

Voraussetzung:

Der Tisch bzw. die Rundachse muss ber das entsprechende Ma
schinendatum fr die Rohteilaufspannung freigeschaltet sein (siehe 
Inbetriebnahmehandbuch SINUMERIK Operate).

964

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.21 Weitere Funktionen

3

"<ZeroOffset>":

Einstellbare Nullpunktverschiebung zur Platzierung des Rohteils 
(nicht programmierbar)

Die Auswahl einer einstellbaren Nullpunktverschiebung zur Platzie
rung des Rohteils wird nur bei der Rohteileingabe ber die Bedien
oberflche angeboten. Bei der direkten Rohteildefinition im Teilepro
gramm bezieht sich das Rohteil dagegen immer auf die aktuell gl
tige Nullpunktverschiebung.

4

"<Type>":

Rohteilform

Datentyp:

STRING

Wertebereich:

"CYLINDER":

Zylinder

"PIPE":

Rohr

"RECTANGLE":

Quader mittig

"BOX":

Quader

"N_CORNER":

N-Eck

5 ... 12 <Par5> ... <Par12>:

Parameter zur Beschreibung der Rohteilform

Datentyp:

REAL

Die Anzahl der notwendigen Parameter und deren Bedeutung sind 
von der jeweiligen Rohteilform und vom Wert des Bitparameters ab
hngig.

Siehe:

 Tabelle "Parameter zur Beschreibung der Rohteilform"

 Tabelle "Bitparameter"

WORPIECE():

WORPIECE(<WP>):

Ein WORKPIECE-Aufruf ohne Parameter lscht alle Rohteildefiniti
onen.

Ein WORKPIECE-Aufruf mit Werkstcknamen lscht nur diese Roh
teildefinition.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

965

 
Arbeitsvorbereitung

3.21 Weitere Funktionen

Tabelle 3-6 Parameter zur Beschreibung der Rohteilform

Rohteilform

Parameter

<Par5>

<Par6>

<Par7>

<Par8>

<Par9>

<Par10>

<Par11>

<Par12>

Zylinder

Bitparameter

Realwert, der 
als bitcodierte In
tegerzahl inter
pretiert wird. Die 
Bits definieren 
die Bedeutung 
der folgenden 
Parameter (sie
he Tabelle "Bit
parameter").

Rohr

Quader mittig

Quader

N-Eck

Bezugs
punkt Z0

Bezugs
punkt Z0

Lnge Z1

Lnge Z1

Bearbei
tungsma 
ZB
Bearbei
tungsma 
ZB

Auen
durch
messer d0
Auen
durch
messer d0

-

Wandstr
ke (ink) / 
Innen
durch
messer d1 
(abs)

Breite W Lnge L

Bezugs
punkt Z0

Bezugs
punkt Z0

Bezugs
punkt Z0

Lnge Z1

Lnge Z1

Lnge Z1

Bearbei
tungsma 
ZB
Bearbei
tungsma 
ZB
Bearbei
tungsma 
ZB

X0

Y0

X1

Anzahl 
Ecken

Schlssel
weite

Drehung 
um Rund
achse

Drehung 
um Rund
achse

Drehung 
um Rund
achse

Drehung 
um Rund
achse

-

-

-

Y1

-

Tabelle 3-7 Bitparameter

Bit

4 (0x0010)

5 (0x0020)

6 (0x0040)

Bit 7 (0x0080)

Bedeutung

Quader: X1
= 0

= 1

Quader: Y1
= 0

= 1

ink

abs

ink

abs

Lnge Z1 (Endma)
= 0

ink

= 1

abs

Bearbeitungsma ZB
= 0

ink

= 1

abs

Bit 8 (0x0100)

Rohr: Wandstrke / Innendurchmesser

= 0

= 1

ink

abs

9 (0x0200)

N-Eck

= 0

= 1

Schlsselweite

Kantenlnge

12 (0x1000)

Aufspannung fr Drehmaschinen

= 0

= 1

Hauptspindel

Gegenspindel

966

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
Arbeitsvorbereitung

3.21 Weitere Funktionen

Bit

Bedeutung

13 (0x2000)

Gegenspindel

= 0

= 1

mit Spiegelung

ohne Spiegelung

Beispiele

Beispiel 1: Zylinderfrmiges Rohteil auf einer Drehmaschine

Programmcode

...

Kommentar

WORKPIECE(,,,"CYLINDER",0,0,-200,-150,100)

; Rohteildefinition:

; Rohteilform: Zylinder

; Bitparameter=0(kein Bit ge-
setzt)  Werte fr Lnge und Be-
arbeitungsma sind inkrementell, 
Rohteil auf Hauptspindel

; Bezugspunkt(Z0)=0

; Lnge(Z1)=-200

; Bearbeitungsma(ZB)=-150

; Auendurchmesser(d0)=100

...

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

967

(cid:61)(cid:19)(cid:3)(cid:32)(cid:3)(cid:19)(cid:61)(cid:20)(cid:3)(cid:32)(cid:3)(cid:3)(cid:16)(cid:21)(cid:19)(cid:19)(cid:71)(cid:19)(cid:3)(cid:32)(cid:3)(cid:20)(cid:19)(cid:19)(cid:61)(cid:37)(cid:3)(cid:32)(cid:3)(cid:16)(cid:20)(cid:24)(cid:19) 
 
Arbeitsvorbereitung

3.21 Weitere Funktionen

Beispiel 2: Rhrenfrmiges Rohteil auf einer Drehmaschine

Programmcode

...

Kommentar

WORKPIECE(,,,"PIPE",256,0,-200,-150,100,80)

; Rohteildefinition:

; Rohteilform: Rohr

; Bitparameter=256(Bit8=1)  In-
nendurchmesser ist absolut, Ln-
ge und Bearbeitungsma sind in-
krementell, Rohteil auf Haupt-
spindel

; Bezugspunkt(Z0)=0

; Lnge(Z1)=-200

; Bearbeitungsma(ZB)=-150

; Auendurchmesser(d0)=100

; Innendurchmesser(d1)=80

...

3.21.7

Sprachmodus umschalten (G290, G291)

Die Steuerung bietet die Mglichkeit, Teileprogramme von externen CNC-Systemen 
einzulesen und abzuarbeiten. Voraussetzung ist, dass der entsprechende NC-Sprachmodus 
(ISO-Dialekt) bei der Inbetriebnahme festgelegt wurde.

Der ISO-Dialekt-Modus kann getrennt fr jeden Kanal aktiviert werden. Zum Beispiel kann 
Kanal 1 im ISO-Dialekt-Modus laufen, whrend Kanal 2 im SINUMERIK-Modus aktiv ist.

Das Umschalten zwischen SINUMERIK-Modus und ISO-Dialekt-Modus erfolgt im NC-
Programm ber die Befehle der G-Gruppe 47. Das aktive Werkzeug, die Werkzeugkorrekturen 
und Nullpunktverschiebungen werden durch das Umschalten nicht beeinflusst.

Syntax

968

G291

...

G290

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:61)(cid:19)(cid:3)(cid:32)(cid:3)(cid:19)(cid:61)(cid:20)(cid:3)(cid:32)(cid:3)(cid:3)(cid:16)(cid:21)(cid:19)(cid:19)(cid:71)(cid:19)(cid:3)(cid:32)(cid:3)(cid:20)(cid:19)(cid:19)(cid:71)(cid:20)(cid:3)(cid:32)(cid:3)(cid:27)(cid:19)(cid:3)(cid:61)(cid:37)(cid:3)(cid:32)(cid:3)(cid:16)(cid:20)(cid:24)(cid:19) 
 
 
 
 
Arbeitsvorbereitung

3.21 Weitere Funktionen

Bedeutung

G290:

SINUMERIK-Sprachmodus aktivieren

Alleine im Satz:

Wirksamkeit:

ja

modal

G291:

ISO-Sprachmodus aktivieren

Alleine im Satz:

Wirksamkeit:

ja

modal

Bedingungen

SINUMERIK-Modus

 Die Voreinstellung der G-Befehle kann fr jeden Kanal ber ein Maschinendatum festgelegt 

werden.

 Im SINUMERIK-Modus knnen keine Sprachbefehle aus den ISO-Dialekten programmiert 

werden.

ISO-Dialekt-Modus

 Der ISO-Dialekt-Modus als Grundeinstellung der Steuerung kann mit Maschinendaten 

eingestellt werden. Die Steuerung fhrt danach standardmig im ISO-Dialekt-Modus hoch.

 Es knnen nur G-Befehle aus dem ISO-Dialekt programmiert werden. Die Programmierung 

von SINUMERIK-Funktionen ist im ISO-Dialekt-Modus nicht mglich.

 Eine Mischung aus ISO-Dialekt- und SINUMERIK-Sprache im selben NC-Satz ist nicht 

mglich.

 Eine Umschaltung ber G-Befehle zwischen ISO-Dialekt-M (Frsen) und ISO-Dialekt-T 

(Drehen) ist nicht mglich.

 Es knnen Unterprogramme aufgerufen werden, die im SINUMERIK-Modus programmiert 

sind.

 Wenn SINUMERIK-Funktionen verwendet werden sollen, muss zuerst in den SINUMERIK-

Modus umgeschaltet werden (siehe Beispiel).

Beispiel

Kompression von Linearstzen im ISO-Dialekt-Modus

Programmcode

N5 G290

N10 COMPCAD 

Kommentar

; SINUMERIK-Sprachmodus aktivieren.

; COMPCAD ist ein Befehl der Siemens-Spra-
che, der eine Kompressorfunktion akti-
viert, die aufeinanderfolgende Linearst-
ze durch Polynom-Stze mit mglichst gro-
en Bahnlngen ersetzt. 

N15 G291

; ISO-Sprachmodus aktivieren.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

969

Arbeitsvorbereitung

3.21 Weitere Funktionen

Programmcode

Kommentar

N20 G01 X100 Y100 F1000 

; Da COMPCAD im SINUMERIK-Modus aktiviert 
wurde, knnen mit dieser Funktion auch Li-
nearstze im ISO-Dialekt-Modus kompri-
miert werden.

...

Weitere Informationen

Funktionshandbuch ISO-Dialekte

970

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
Arbeitsvorbereitung

3.22 Eigene Abspanprogramme

3.22

Eigene Abspanprogramme

3.22.1

Untersttzende Funktionen fr das Abspanen

Fr das Abspanen werden Ihnen fertige Bearbeitungszyklen angeboten. Darber hinaus 
haben Sie die Mglichkeit, mit den nachfolgend aufgefhrten Funktionen eigene 
Abspanprogramme zu erstellen: 

 Konturtabelle erstellen (CONTPRON)

 Codierte Konturtabelle erstellen (CONTDCON)

 Konturaufbereitung ausschalten (EXECUTE)

 Schnittpunkt zwischen zwei Konturelementen ermitteln (INTERSEC)

(Nur fr Tabellen, die durch CONTPRON erstellt wurden.)

 Konturelemente einer Tabelle satzweise abarbeiten (EXECTAB)

(Nur fr Tabellen, die durch CONTPRON erstellt wurden.)

 Kreisdaten berechnen (CALCDAT)

Hinweis

Sie knnen diese Funktionen nicht nur zum Abspanen, sondern universell einsetzen.

Voraussetzungen

Vor dem Aufruf der Funktionen CONTPRON oder CONTDCON mssen:

 ein Startpunkt angefahren werden, der eine kollisionsfreie Bearbeitung erlaubt.

 die Schneidenradiuskorrektur mit G40 ausgeschaltet sein.

3.22.2

Konturtabelle erstellen (CONTPRON)

Mit CONTPRON schalten Sie die Konturaufbereitung ein. Die nachfolgend aufgerufenen NC-
Stze werden nicht abgearbeitet, sondern in einzelne Bewegungen aufgeteilt und in der 
Konturtabelle abgelegt. Jedem Konturelement entspricht eine Tabellenzeile im 
zweidimensionalen Feld der Konturtabelle. Die Anzahl der ermittelten Hinterschnitte wird 
zurckgeliefert. 

Syntax

Konturaufbereitung einschalten:
CONTPRON(<Konturtabelle>,<Bearbeitungsart>,<Hinterschnitte>,
<Bearbeitungsrichtung>)

Konturaufbereitung ausschalten und in den normalen Abarbeitungsmodus zurckkehren:
EXECUTE(<FEHLER>)

Siehe " Konturaufbereitung ausschalten (EXECUTE) (Seite 984) "

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

971

Arbeitsvorbereitung

3.22 Eigene Abspanprogramme

Bedeutung

CONTPRON:

Vordefinierte Prozedur zum Einschalten der Konturaufberei
tung zur Erstellung einer Konturtabelle

<Konturtabelle>:

<Bearbeitungsart>:

Name der Konturtabelle

Parameter fr die Bearbeitungsart

Typ:

Wert:

CHAR

"G":

"L":

"N":

"P":

Lngsdrehen: Innenbearbeitung

Lngsdrehen: Auenbearbeitung

Plandrehen: Innenbearbeitung

Plandrehen: Auenbearbeitung

<Hinterschnitte>:

Ergebnisvariable fr die Anzahl auftretender Hinterschnitte
lemente

<Bearbeitungsrichtung>:

Parameter fr die Bearbeitungsrichtung

Typ:

INT

Typ:

Wert:

INT

0

1

Konturaufbereitung vorwrts (Standard
wert)

Konturaufbereitung in beiden Richtungen

Beispiel 1

Erstellen einer Konturtabelle mit:

 Namen "KTAB"

 max. 30 Konturelementen (Kreise, Geraden)

 einer Variablen fr die Anzahl auftretender Hinterschnittelemente

 einer Variablen fr Fehlermeldungen

972

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:11)(cid:23)(cid:24)(cid:15)(cid:3)(cid:24)(cid:19)(cid:12)(cid:11)(cid:28)(cid:19)(cid:15)(cid:3)(cid:19)(cid:12)(cid:11)(cid:28)(cid:19)(cid:15)(cid:3)(cid:22)(cid:19)(cid:12)(cid:11)(cid:27)(cid:24)(cid:15)(cid:3)(cid:23)(cid:19)(cid:12)(cid:11)(cid:26)(cid:19)(cid:15)(cid:3)(cid:24)(cid:19)(cid:12)(cid:11)(cid:22)(cid:19)(cid:15)(cid:3)(cid:25)(cid:24)(cid:12)(cid:11)(cid:22)(cid:19)(cid:15)(cid:3)(cid:20)(cid:20)(cid:19)(cid:12)(cid:59)(cid:61)(cid:20)(cid:24)(cid:19)(cid:20)(cid:19)(cid:19)(cid:24)(cid:19)(cid:24)(cid:19)(cid:20)(cid:19)(cid:19)(cid:11)(cid:21)(cid:19)(cid:15)(cid:3)(cid:20)(cid:24)(cid:19)(cid:12)(cid:20)(cid:24)(cid:19)NC-Programm:

Programmcode

N10 DEF REAL KTAB[30,11]

N20 DEF INT ANZHINT

N30 DEF INT FEHLER

N40 G18

Arbeitsvorbereitung

3.22 Eigene Abspanprogramme

Kommentar

; Konturtabelle mit Namen KTAB und max. 
30 Konturelementen, Parameterwert 11 
(Spaltenzahl der Tabelle) ist eine feste 
Gre.

; Variable fr die Anzahl der Hinter-
schnittelemente mit Namen ANZHINT.

; Variable fr die Fehlerrckmeldung 
(0=kein Fehler, 1=Fehler).

N50 CONTPRON(KTAB,"G",ANZHINT)

; Konturaufbereitung einschalten.

N60 G1 X150 Z20

N70 X110 Z30

N80 X50 RND=15

N90 Z70

N100 X40 Z85

N110 X30 Z90

N120 X0

N130 EXECUTE(FEHLER)

N140 

Konturtabelle KTAB:

; N60 bis N120: Konturbeschreibung

; Fllen der Konturtabelle beenden, Um-
schalten auf normalen Programmbetrieb.

; Weitere Bearbeitung der Tabelle.

Index

Spalte

Zeile

(0)

(1)

7

0

1

2

3

4

5

6

0

0

7

2

3

4

5

6

7

0

0

0

(2)

11

11

11

13

11

11

11

11

0

0

(3)

0

20

30

30

45

70

85

90

0

0

(4)

0

150

110

65

50

50

40

30

0

0

(5)

20

30

30

45

70

85

90

90

0

0

(6)

150

110

65

50

50

40

30

0

0

0

Erluterung der Spalteninhalte:

(8)

(9)

(10)

(7)

0

82.40535663

-1111

104.0362435

0

0

0

0

0

0

0

0

90

180

0

146.3099325

116.5650512

90

0

0

0

0

0

0

0

0

45

65

0

0

0

0

0

0

0

0

0

0

0

0

(0)
(1)

Zeiger auf nchstes Konturelement (auf die Zeilennummer desselben)
Zeiger auf vorhergehendes Konturelement

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

973

 
Arbeitsvorbereitung

3.22 Eigene Abspanprogramme

(2)

(3), (4)

(5), (6)

(7)
(8)

(9), (10)

Codierung des Konturmodus fr die Bewegung
Mgliche Werte fr X = abc
a = 102
G90 = 0
b = 101
G70 = 0
c = 100
G0 = 0
Anfangspunkt der Konturelemente

G91 = 1
G71 = 1
G1 = 1

G2 = 2

G3 = 3

(3) = Abszisse, (4) = Ordinate in der aktuellen Ebene
Endpunkt der Konturelemente

(5) = Abszisse, (6) = Ordinate in der aktuellen Ebene
Max-/min-Anzeiger: kennzeichnet lokale Maxima und Minima in der Kontur
Maximaler Wert zwischen Konturelement und Abszisse (bei Lngsbearbeitung) 
bzw. Ordinate (bei Planbearbeitung). Der Winkel ist abhngig von der program
mierten Bearbeitungsart.
Mittelpunktskoordinaten des Konturelements, wenn es ein Kreissatz ist.

(9) = Abszisse, (10) = Ordinate

Beispiel 2

Erstellen einer Konturtabelle mit

 Namen KTAB

 max. 92 Konturelementen (Kreise, Geraden)

 Betriebsart: Lngsdrehen, Auenbearbeitung

 Aufbereitung vorwrts und rckwrts

974

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(-40, 80)X50100150(-15, 30)(0, 45)(20, 45)(20, 20)(-30, 30)(-30, 80)Z10050-50(100, 100)Arbeitsvorbereitung

3.22 Eigene Abspanprogramme

Kommentar

; Konturtabelle mit Namen KTAB und max. 
92 Konturelementen, Parameterwert 11 ist 
eine feste Gre.

; Betriebsart fr CONTPRON: Lngsdrehen, 
Auenbearbeitung

; Anzahl der Hinterschnittelemente=0

; Aufbereitung vorwrts und rckwrts

; Fehlerrckmeldung

NC-Programm:

Programmcode

N10 DEF REAL KTAB[92,11]

N20 DEF CHAR BT="L"

N30 DEF INT HE=0

N40 DEF INT MODE=1

N50 DEF INT ERR=0

...

N100 G18 X100 Z100 F1000

N105 CONTPRON(KTAB,BT,HE,MODE)

; Konturaufbereitung einschalten.

N110 G1 G90 Z20 X20

N120 X45

N130 Z0

N140 G2 Z-15 X30 K=AC(-15) I=AC(45)

N150 G1 Z-30

N160 X80

N170 Z-40

N180 EXECUTE(ERR)

...

Konturtabelle KTAB:

; Fllen der Konturtabelle beenden, Um-
schalten auf normalen Programmbetrieb.

Nach Ende der Konturaufbereitung steht die Kontur in beiden Richtungen zur Verfgung.

Index

Zeile

0

1

2

3

4

5

6

7

8

83

84

85

86

87

88

Spalte

(0)

61)

03)

1

2

3

4

7

5

15)

...

84

90

08)

85

86

87

(1)

72)

2

3

4

5

7

04)

6

26)

07)

83

86

87

88

89

(2)

11

11

11

12

11

11

11

11

0

11

11

11

11

11

13

(3)

100

(4)

100

20

20

0

-15

-30

-30

-30

0

20

20

-40

-30

-30

-15

20

45

45

30

30

80

45

0

45

20

80

80

30

30

(5)

20

20

0

-15

-30

-30

-40

-30

0

20

20

-30

-30

-15

0

(6)

20

45

45

30

30

45

80

80

0

80

45

80

30

30

45

(7)

0

-3

0

5

0

-1111

0

0

0

0

-1111

0

88

0

-90

(8)

45

90

0

90

0

90

0

90

0

90

90

0

90

0

90

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(9)

(10)

0

0

0

0

0

0

-15

45

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

-15

45

975

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.22 Eigene Abspanprogramme

89

90

91

88

89

90

84

839)

8510)

11

11

11

0

20

20

45

45

20

20

20

45

20

100

100

0

84

0

0

90

45

0

0

0

0

0

0

Erluterung der Spalteninhalte und der Anmerkungen zu den Zeilen 0, 1, 6, 8, 83, 85 und 91

Es gelten die im Beispiel 1 genannten Erluterungen der Spalteninhalte.

Immer in Tabellen-Zeile 0:

1) Vorgnger: Zeile n enthlt das Konturende vorwrts

2) Nachfolger: Zeile n ist das Konturtabellenende vorwrts

Je einmal innerhalb der Konturelemente vorwrts:

3) Vorgnger: Konturbeginn (vorwrts)

4) Nachfolger: Konturende (vorwrts)

Immer auf Zeile Konturtabellenende (vorwrts) +1:

5) Vorgnger: Anzahl der Hinterschnitte vorwrts

6) Nachfolger: Anzahl der Hinterschnitte rckwrts

Je einmal innerhalb der Konturelemente rckwrts:

7) Nachfolger: Konturende (rckwrts)

8) Vorgnger: Konturbeginn (rckwrts)

Immer in letzter Tabellen-Zeile:

9) Vorgnger: Zeile n ist der Konturtabellenanfang (rckwrts)

10) Nachfolger: Zeile n enthlt den Konturanfang (rckwrts)

Weitere Informationen

Erlaubte Verfahrbefehle, Koordinatensystem

Fr die Konturprogrammierung sind folgende G-Befehle zulssig:

 G-Gruppe 1: G0, G1, G2, G3

Zustzlich mglich sind:

 Rundung und Fase

 Kreisprogrammierung ber CIP und CT

Die Funktionen Spline, Polynom und Gewinde fhren zu Fehlern.

nderungen des Koordinatensystems durch Einschalten eines Frames sind zwischen 
CONTPRON und EXECUTE nicht zulssig. Gleiches gilt fr einen Wechsel zwischen G70 und 
G71 bzw. G700 und G710.

Ein Tausch der Geometrieachsen mit GEOAX whrend der Aufbereitung der Konturtabelle fhrt 
zu einem Alarm.

976

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.22 Eigene Abspanprogramme

Hinterschnittelemente

Die Konturbeschreibung der einzelnen Hinterschnittelemente kann wahlweise in einem 
Unterprogramm oder in einzelnen Stzen erfolgen.

Abspanen unabhngig von der programmierten Konturrichtung

Die Konturaufbereitung mit CONTPRON wurde so erweitert, dass nach ihrem Aufruf die 
Konturtabelle unabhngig von der programmierten Richtung zur Verfgung steht.

3.22.3

Codierte Konturtabelle erstellen (CONTDCON)

Bei der mit CONTDCON eingeschalteten Konturaufbereitung werden die nachfolgend 
aufgerufenen NC-Stze in einer 6-spaltigen Konturtabelle speichergnstig codiert abgelegt. 
Jedem Konturelement entspricht eine Tabellenzeile in der Konturtabelle. Aus Kenntnis der 
unten angegebenen Codierungsregeln knnen Sie z. B. fr Zyklen aus den Tabellenzeilen DIN-
Code-Programme zusammenstellen. In der Tabellenzeile mit der Nummer 0 werden die Daten 
des Ausgangspunkts gespeichert. 

Syntax

Bedeutung

Konturaufbereitung einschalten:
CONTDCON(<Konturtabelle>,<Bearbeitungsrichtung>)

Konturaufbereitung ausschalten und in den normalen Abarbeitungsmodus zurckkehren:
EXECUTE(<FEHLER>)

Siehe " Konturaufbereitung ausschalten (EXECUTE) (Seite 984) "

CONTDCON:

Vordefinierte Prozedur zum Einschalten der Konturaufberei
tung zur Erstellung einer codierten Konturtabelle

<Konturtabelle>:

Name der Konturtabelle

<Bearbeitungsrichtung>:

Parameter fr Bearbeitungsrichtung

Typ:

Wert:

INT

0

1

Konturaufbereitung gem der Folge der 
Konturstze (Standardwert)

unzulssig

Hinweis

Die fr CONTDCON zugelassenen G-Befehle im zu tabellierenden Programmstck sind 
umfangreicher als bei CONTPRON. Darber hinaus werden Vorschbe und Vorschubtyp pro 
Konturstck mitgespeichert.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

977

Arbeitsvorbereitung

3.22 Eigene Abspanprogramme

Beispiel

Erstellen einer Konturtabelle mit:

 Namen "KTAB"

 Konturelementen (Kreise, Geraden)

 Betriebsart: Drehen

 Bearbeitungsrichtung: vorwrts

NC-Programm:

Programmcode

N10 DEF REAL KTAB[9,6]

N20 DEF INT MODE = 0

Kommentar

; Konturtabelle mit Namen KTAB und 9 
Tabellenzeilen. Diese erlauben 8 Kon-
turstze. Der Parameterwert 6 (Spal-
tenzahl der Tabelle) ist eine feste 
Gre.

; Variable fr die Bearbeitungsrich-
tung. Standardwert 0: nur in program-
mierter Richtung der Kontur.

N30 DEF INT ERROR = 0

; Variable fr die Fehlerrckmeldung.

...

N100 G18 G64 G90 G94 G710 

N101 G1 Z100 X100 F1000

N105 CONTDCON (KTAB, MODE)

N110 G1 Z20 X20 F200

N120 G9 X45 F300

N130 Z0 F400

N140 G2 Z-15 X30 K=AC(-15) I=AC(45)F100

; Aufruf Konturaufbereitung (MODE 
darf weggelassen werden).

; Konturbeschreibung.

978

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(-40, 80)X50100150(-15, 30)(0, 45)(20, 45)(20, 20)(-30, 30)(-30, 80)Z10050-50(100, 100) 
 
 
 
Arbeitsvorbereitung

3.22 Eigene Abspanprogramme

Kommentar

; Fllen der Konturtabelle beenden, 
Umschalten auf normalen Programmbe-
trieb.

Programmcode

N150 G64 Z-30 F600

N160 X80 F700

N170 Z-40 F800

N180 EXECUTE(ERROR)

...

Konturtabelle KTAB:

0

1

2

3

4

5

Spaltenindex

Zeilenindex

Konturmo
dus

Endpunkt
Abszisse

0

1

2

3

4

5

6

7

8

30

11031

111031

11031

11032

11031

11031

11031

0

100

20

20

0

-15

-30

-30

-40

0

Endpunkt
Ordinate

100

20

45

45

30

30

80

80

0

Mittelpunkt
Abszisse

Mittelpunkt
Ordinate

Vorschub

0

0

0

0

-15

0

0

0

0

0

0

0

0

45

0

0

0

0

7

200

300

400

100

600

700

800

0

Erluterung der Spalteninhalte:

Zeile 0: Codierungen fr den Startpunkt:

Spalte 0:

Spalte 1:
Spalte 2:
Spalte 3-4:
Spalte 5:

100 (Einerstelle): G0 = 0
101 (Zehnerstelle): G70 = 0, G71 = 1, G700 = 2, G710 = 3
Startpunkt Abszisse
Startpunkt Ordinate
0
Zeilenindex des letzten Konturstckes in der Tabelle

Zeilen 1-n: Eintrge der Konturstcke

Spalte 0:

Spalte 1:
Spalte 2:
Spalte 3:

100 (Einerstelle): G0 = 0, G1 = 1, G2 = 2, G3 = 3
101 (Zehnerstelle): G70 = 0, G71 = 1, G700 = 2, G710 = 3
102 (Hunderterstelle): G90 = 0, G91 = 1
103 (Tausenderstelle): G93 = 0, G94 = 1, G95 = 2, G96 = 3
104 (Zehntausenderstelle): G60 = 0, G44 = 1, G641 = 2, G642 = 3
105 (Hunderttausender Stelle): G9 = 1
Endpunkt Abszisse
Endpunkt Ordinate
Mittelpunkt Abszisse bei Kreisinterpolation

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

979

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.22 Eigene Abspanprogramme

Spalte 4:
Spalte 5:

Mittelpunkt Ordinate bei Kreisinterpolation
Vorschub

Weitere Informationen

Erlaubte Verfahrbefehle, Koordinatensystem

Fr die Konturprogrammierung sind folgende G-Gruppen und G-Befehle zulssig:

G-Gruppe 1:
G-Gruppe 10:
G-Gruppe 11:
G-Gruppe 13:
G-Gruppe 14:
G-Gruppe 15:

G0, G1, G2, G3
G60, G64, G641, G642
G9
G70, G71, G700, G710
G90, G91
G93, G94, G95, G96, G961

Zustzlich mglich sind:

 Rundung und Fase

 Kreisprogrammierung ber CIP und CT

Die Funktionen Spline, Polynom und Gewinde fhren zu Fehlern.

nderungen des Koordinatensystems durch Einschalten eines Frames sind zwischen 
CONTDCON und EXECUTE nicht zulssig. Gleiches gilt fr einen Wechsel zwischen G70 und 
G71 bzw. G700 und G710.

Ein Tausch der Geometrieachsen mit GEOAX whrend der Aufbereitung der Konturtabelle fhrt 
zu einem Alarm.

Bearbeitungsrichtung

Die mit CONTDCON erzeugte Konturtabelle ist zum Abspanen in der programmierten Richtung 
der Kontur vorgesehen.

3.22.4

Schnittpunkt zwischen zwei Konturelementen ermitteln (INTERSEC)

INTERSEC ermittelt den Schnittpunkt von zwei normierten Konturelementen aus 
mit CONTPRON erzeugten Konturtabellen. 

Syntax

980

<Status>=INTERSEC(<Konturtabelle_1>[<Konturelement_1>],
<Konturtabelle_2>[<Konturelement_2>],<Schnittpunkt>,<Bearbeitungsart
>)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
Bedeutung

Arbeitsvorbereitung

3.22 Eigene Abspanprogramme

INTERSEC:

<Status>:

Vordefinierte Funktion zur Ermittlung des Schnittpunkts zweier Kon
turelemente aus mit CONTPRON erzeugten Konturtabellen

Variable fr den Schnittpunktstatus

Typ:

Wert:

BOOL

TRUE

FALSE

Schnittpunkt gefunden

kein Schnittpunkt gefunden

<Konturtabelle_1>:

Name der ersten Konturtabelle

<Konturelement_1>:

Nummer des Konturelements der ersten Konturtabelle

<Konturtabelle_2>:

Name der zweiten Konturtabelle

<Konturelement_2>:

Nummer des Konturelements der zweiten Konturtabelle

<Schnittpunkt>:

Schnittpunkt-Koordinaten in der aktiven Ebene (G17 / G18 / G19)

<Bearbeitungsart>:

Parameter fr die Bearbeitungsart

Typ:

REAL

Typ:

Wert:

INT

0

1

Schnittpunktberechnung in der mit Parameter 2 
aktiven Ebene
(Standardwert)

Schnittpunktberechnung unabhngig der ber
gebenen Ebene

Hinweis

Beachten Sie, dass die Variablen vor ihrer Verwendung definiert sein mssen.

Die bergabe der Konturen erfordert die Einhaltung der mit CONTPRON definierten Werte:

Parameter

Bedeutung

2

3

4

5

6

9

10

Codierung des Kontur-Mode fr die Bewegung

Kontur-Anfangpunkt Abszisse

Kontur-Anfangpunkt Ordinate

Kontur-Endpunkt Abszisse

Kontur-Endpunkt Ordinate

Mittelpunkskoordinate fr die Abszisse (nur bei Kreis-Kontur)

Mittelpunkskoordinate fr die Ordinate (nur bei Kreis-Kontur)

Beispiel

Schnittpunkt von Konturelement 3 der Tabelle TABNAME1 und Konturelement 7 der Tabelle 
TABNAME2 ermitteln. Die Schnittpunkt-Koordinaten in der aktiven Ebene werden in der 
Variablen ISCOORD (1. Element = Abszisse, 2. Element = Ordinate) abgelegt. Existiert kein 
Schnittpunkt, erfolgt ein Sprung zu KEINSCH (kein Schnittpunkt gefunden).

Programmcode

DEF REAL TABNAME1[12,11]

DEF REAL TABNAME2[10,11]

Kommentar

; Konturtabelle 1

; Konturtabelle 2

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

981

Arbeitsvorbereitung

3.22 Eigene Abspanprogramme

Programmcode

DEF REAL ISCOORD[2]

DEF BOOL ISPOINT

DEF INT MODE 



MODE=1

Kommentar

; Variable fr Schnittpunkt-Koordina-
ten.

; Variable fr Schnittpunktstatus.

; Variable fr Bearbeitungsart.

; Berechnung unabhngig von der akti-
ven Ebene.

N10 ISPOINT=INTERSEC(TABNAME1[3],TABNAME2[7],
ISCOORD,MODE)

; Aufruf Schnittpunkt der Konturele-
mente.

N20 IF ISPOINT==FALSE GOTOF KEINSCH

; Sprung zu KEINSCH.



3.22.5

Konturelemente einer Tabelle satzweise abfahren (EXECTAB)

Mit EXECTAB knnen Sie Konturelemente einer Tabelle, die z. B. mit dem CONTPRON erzeugt 
wurde, satzweise abfahren.   

Syntax

Bedeutung

Beispiel

EXECTAB(<Konturtabelle>[<Konturelement>])

EXECTAB:

Vordefinierte Proedur zum Abfahren eines Konturelements

<Konturtabelle>:

Name der Konturtabelle

<Konturelement>:

Nummer des Konturelements

Die Konturelemente 0 bis 2 der Tabelle KTAB sollen satzweise abgefahren werden.

Programmcode

Kommentar

N10 EXECTAB(KTAB[0])

; Element 0 der Tabelle KTAB verfahren.

N20 EXECTAB(KTAB[1])

; Element 1 der Tabelle KTAB verfahren.

N30 EXECTAB(KTAB[2])

; Element 2 der Tabelle KTAB verfahren.

3.22.6

Kreisdaten berechnen (CALCDAT)

Mit CALCDAT knnen Sie aus drei oder vier bekannten Kreispunkten den Radius und die 
Kreismittelpunkt-Koordinaten berechnen. Die angegebenen Punkte mssen unterschiedlich 
sein.

982

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
Syntax

Bedeutung

Arbeitsvorbereitung

3.22 Eigene Abspanprogramme

Bei 4 Punkten, die nicht exakt auf dem Kreis liegen, wird fr Kreismittelpunkt und Radius ein 
Mittelwert gebildet.  

Hinweis

Rechenvorschrift zur Mittelwertbildung

Die Kreisbogenberechnung wird 4 x ausgefhrt:

1. mit Kreispunkt 1, 2, 3

2. mit Kreispunkt 1, 2, 4

3. mit Kreispunkt 1, 3, 4

4. mit Kreispunkt 2, 3, 4

Die Kreismittelpunkt-Koordinaten Abszissenwert und Ordinatenwert werden berechnet, indem 
die Abszissenwerte bzw. Ordinatenwerte der vier Kreisbogenberechnungen addiert und durch 
4 geteilt werden.

Der Radius wird berechnet, indem die Wurzel aus der Summe der vier Radien der 
Kreisbogenberechnungen gebildet und das Ergebnis mit 0,5 multipliziert wird.

<Status>=CALCDAT(<Kreispunkte>[<Anzahl>,<Art>],<Anzahl>,<Ergebnis>)

CALCDAT:

Vordefinierte Funktion zur Berechnung von Radius und Mittelpunkt-Ko
ordinaten eines Kreises aus 3 oder 4 Punkten

<Status>:

Variable fr den Kreisberechnungsstatus

Typ:

Wert:

BOOL

TRUE

FALSE

Die angegebenen Punkte liegen auf einem 
Kreis.

Die angegebenen Punkte liegen nicht auf ei
nem Kreis.

<Kreispunkte>[]:

Variable zur Angabe der Kreispunkte
mit den Parametern:

<Anzahl>:

Anzahl der Kreispunkte (3 oder 4)

<Art>:

Art der Koordinatenangabe, 
z. B. 2 fr 2-Punkt-Koordinaten

<Anzahl>:

Parameter fr die Anzahl der zur Berechnung verwendeten Punkte (3 
oder 4)

<Ergebnis>[3]:

Variable fr Ergebnis:

Angabe von Kreismittelpunkt-Koordinaten und Radius

0

1

2

Kreismittelpunkt-Koordinate: Abszissenwert

Kreismittelpunkt-Koordinate: Ordinatenwert 

Radius

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

983

Arbeitsvorbereitung

3.22 Eigene Abspanprogramme

Hinweis

Beachten Sie, dass die Variablen vor ihrer Verwendung definiert sein mssen.

Beispiel

Von drei Punkten soll ermittelt werden, ob sie auf einem Kreisabschnitt liegen.

Programmcode

Kommentar

N10 DEF REAL PKT[3,2]=(20,50,50,40,65,20)

N20 DEF REAL ERG[3]

N30 DEF BOOL STATUS

N40 STATUS=CALCDAT(PKT,3,ERG)

; Variable zur Angabe der Kreis-
punkte.

; Variable fr Ergebnis.

; Variable fr Status.

; Aufruf der ermittelten Kreisda-
ten.

N50 IF STATUS == FALSE GOTOF ERROR

; Sprung zu Fehler.

3.22.7

Konturaufbereitung ausschalten (EXECUTE)

Mit EXECUTE wird die Konturaufbereitung abgeschaltet und gleichzeitig in den normalen 
Abarbeitungsmodus zurckgeschaltet.  

Syntax

EXECUTE(<FEHLER>)

984

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

ERG [2]X70(65, 20)(50, 40)(20, 50)Y10ERG [0]ERG [1]2030405060102030405060Arbeitsvorbereitung

3.22 Eigene Abspanprogramme

EXECUTE:

Vordefinierte Prozedur zum Beenden der Konturaufbereitung

<FEHLER>:

Variable fr Fehlerrckmeldung

Typ:

INT

Der Wert der Variablen zeigt an, ob die Kontur fehlerfrei aufbereitet werden konnte:

0

1

Fehler

kein Fehler

Bedeutung

Beispiel

Programmcode

...

N30 CONTPRON(...)

N40 G1 X... Z...

...

N100 EXECUTE(...)

...

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

985

Arbeitsvorbereitung

3.23 Zyklen extern programmieren

3.23

Zyklen extern programmieren

3.23.1

Technologische Zyklen

3.23.1.1

Einleitung

Inhalt

Aufbau

Dieses Kapitel enthlt die Beschreibung der Zyklen fr die Technologien Drehen, Frsen, 
Schleifen.

Die Beschreibung eines Zyklus ist wie folgt aufgebaut:

 Syntax

Zyklusname und Aufrufreihenfolge der bergabeparameter

 Parameter

Tabelle zur Erluterung der einzelnen Parameter

Parameterbeschreibung

In der Tabelle sind zu einem Parameter folgende Daten angegeben: Name, Beschreibung, 
Wertebereich und Abhngigkeiten zu anderen Parametern.

Die Spalte zum Verweis auf den Parameter in der Maske dient der Erleichterung zum 
Wiederauffinden von an der Steuerung programmierte Werten beim Rckbersetzen von 
extern generierten Zyklenaufrufen.

Parameter "nur fr die Oberflche"

In der Tabelle sind Parameter mit "nur fr die Oberflche" gekennzeichnet. Diese sind fr die 
Funktion des Zyklus nicht von Bedeutung. Sie werden nur bentigt, um Zyklenaufrufe 
vollstndig rckbersetzen zu knnen. Sind sie nicht programmiert, kann der Zyklus trotzdem 
rckbersetzt werden, die Felder sind dann entsprechend farblich gekennzeichnet und 
mssen in der Maske ausgefllt werden.

Parameter "reserviert"

Parameter, die mit "reserviert" beschrieben sind, mssen mit Wert 0 oder Leerkomma 
programmiert werden, damit die Zuordnung der folgenden Aufrufparameter zu den internen 
Zyklusparametern stimmt. Ausnahme: bei Stringparametern Wert "" oder Leerkomma.

Zyklen auf Positionsmuster wiederholen

Bohr- und Frszyklen knnen auf Positionsmuster wiederholt werden (modale Aufrufe). Vor 
dem Zyklus ist dann in derselben Zeile MCALL zu schreiben, z. B. MCALL CYCLE83(...).

986

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Hinweis

Sind bestimmte bergabeparameter (z. B. <_VARI>, <_GMODE>, <_DMODE>, <_AMODE>) 
indirekt als Parameter programmiert, wird die Eingabemaske beim Rckbersetzen geffnet, 
kann aber nicht abgespeichert werden, weil es zu bestimmtem Auswahlfeldern keine 
eindeutige Zuordnung gibt.

3.23.1.2

Technologie-spezifische bersicht

In der folgenden bersichtstabelle sind alle verfgbaren extern programmierbaren 
technologischen Zyklen aufgelistet und der jeweiligen Technologie zugeordnet:

Technologie

Bohren

Technologischer Zyklus

 CYCLE81 - Bohren, Zentrieren (Seite 1026)

 CYCLE82 - Bohren, Plansenken (Seite 1027)

 CYCLE85 - Reiben (Seite 1036)

 CYCLE86 - Ausdrehen (Seite 1037)

 CYCLE83 - Tieflochbohren 1 (Seite 1030)

 CYCLE830 - Tieflochbohren 2 (Seite 1061)

 CYCLE84 - Gewindebohren ohne Ausgleichsfutter (Seite 1033)

 CYCLE840 - Gewindebohren mit Ausgleichsfutter (Seite 1071)

 CYCLE78 - Bohrgewinde frsen (Seite 1022)

 CYCLE802 - Beliebige Positionen (Seite 1058)

 HOLES1 - Positionsmuster Reihe (Seite 989)

 CYCLE801 - Positionsmuster Gitter oder Rahmen (Seite 1056)

 HOLES2 - Positionsmuster Kreis oder Teilkreis (Seite 989)

Drehen

 CYCLE951 - Abspanen (Seite 1081)

 CYCLE930 - Einstich (Seite 1076)

 CYCLE940 - Freistich Form E und F / Freistich Gewinde (Sei

te 1078)

 CYCLE99 - Gewindedrehen (Seite 1046)

 CYCLE98 - Gewindekette (Seite 1042)

 CYCLE92 - Abstich (Seite 1038)

Konturdrehen

 CYCLE62 - Konturaufruf (Seite 1008)

 CYCLE952 - Abspanen / Abspanen Rest / Stechen / Stechen 

Rest / Stechdrehen / Stechdrehen Rest (Seite 1084)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

987

Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Technologie

Frsen

Technologischer Zyklus

 CYCLE61 - Planfrsen (Seite 1006)

 POCKET3 - Rechtecktasche (Seite 991)

 POCKET4 - Kreistasche (Seite 994)

 CYCLE76 - Rechteckzapfen (Seite 1017)

 CYCLE77 - Kreiszapfen (Seite 1020)

 CYCLE79 - Mehrkant (Seite 1024)

 SLOT1 - Lngsnut (Seite 996)

 SLOT2 - Kreisnut (Seite 999)

 CYCLE899 - Offene Nut (Seite 1073)

 LONGHOLE - Langloch (Seite 1001)

 CYCLE70 - Gewindefrsen (Seite 1013)

 CYCLE60 - Gravur (Seite 1003)

Konturfrsen

 CYCLE62 - Konturaufruf (Seite 1008)

 CYCLE72 - Bahnfrsen (Seite 1014)

 CYCLE63 - Konturtasche frsen / Konturtasche Restmaterial / 
Konturzapfen frsen / Konturzapfen Restmaterial (Seite 1008)

 CYCLE64 - Konturtasche vorbohren (Seite 1011)

Schleifen

 CYCLE495 - Profilieren (Seite 1051)

 CYCLE435 - Abrichterkoordinatensystem setzen (Seite 1051)

 CYCLE4071 - Lngsschleifen mit Zustellung am Umkehrpunkt 

(Seite 1090)

 CYCLE4072 - Lngsschleifen mit Zustellung am Umkehrpunkt 

und Abbruchsignal (Seite 1092)

 CYCLE4073 - Lngschleifen mit kontinuierlicher Zustellung (Sei

te 1096)

 CYCLE4074 - Lngschleifen mit kontinuierlicher Zustellung und 

Abbruchsignal (Seite 1097)

 CYCLE4075 - Flachschleifen mit Zustellung am Umkehrpunkt 

(Seite 1100)

 CYCLE4077 - Flachschleifen mit Zustellung am Umkehrpunkt 

und Abbruchsignal (Seite 1103)

 CYCLE4078 - Flachschleifen mit kontinuierlicher Zustellung 

(Seite 1107)

 CYCLE4079 - Flachschleifen mit intermittierender Zustellung 

(Seite 1109)

Sonstige

 CYCLE800 - Schwenken Ebene / Schwenken Werkzeug / Aus

richten Werkzeug (Seite 1053)

 CYCLE832 - High Speed Settings (Seite 1067)

Alle

 GROUP_BEGIN - Anfang Programmblock (Seite 1112)

 GROUP_END - Ende Programmblock (Seite 1112)

 GROUP_ADDEND - Ende Einfahrzusatz (Seite 1113)

988

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.23 Zyklen extern programmieren

3.23.1.3

HOLES1 - Positionsmuster Reihe

Syntax     

Parameter

HOLES1(<SPCA>, <SPCO>, <STA1>, <FDIS>, <DBH>, <NUM>, <_VARI>, 
<_UMODE>, <_HIDE>, <_NSP>, <_DMODE>)

Nr.

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

X0

Y0

0

L0

L

N

1

2

3

4

5

6

7

8

9

10

11

<SPCA> 

<SPCO> 

<STA1> 

<FDIS> 

<DBH> 

<NUM> 

<_VARI> 

<_UMODE> 

<_HIDE> 

REAL

REAL

REAL

REAL

REAL

INT

INT

INT

Bezugspunkt fr Lochreihe in der 1. Achse (abs)

Bezugspunkt fr Lochreihe in der 2. Achse (abs)

Grund-Drehwinkel (Winkel zur 1. Achse)

Abstand der 1. Bohrung vom Bezugspunkt

Abstand zwischen den Bohrungen

Anzahl der Bohrungen

reserviert

reserviert

STRING
[200]

Ausgeblendete Positionen

 max. 198 Zeichen

 Angabe der fortlaufenden Positionsnummer, z. B. "1,3" (Positionen 

1 und 3 werden nicht ausgefhrt)

<_NSP> 

<_DMODE> 

INT

INT

reserviert

Anzeigemodus

EINER: 

Bearbeitungsebene G17/18/19

0 =

1 =

2 =

3 =

Kompatibilitt, es bleibt die vor 
Zyklusaufruf wirksame Ebene ak
tiv

G17 (nur im Zyklus aktiv)

G18 (nur im Zyklus aktiv)

G19 (nur im Zyklus aktiv)

3.23.1.4

HOLES2 - Positionsmuster Kreis oder Teilkreis

Syntax     

HOLES2(<CPA>, <CPO>, <RAD>, <STA1>, <INDA>, <NUM>, <_VARI>, 
<_UMODE>, <_HIDE>, <_NSP>, <_DMODE>)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

989

 
 
 
 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Parameter

Nr.

Parameter 
Maske

Parameter 

Datentyp

Bedeutung

intern

X0

Y0

R

0

1

N

1

2

3

4

5

6

7

<CPA> 

REAL

Mittelpunkt fr Lochkreis in der 1. Achse (abs) 

(bei XY)

Bezugspunkt in der 1. Achse

(bei XA, YB, ZC)

<CPO> 

REAL

Mittelpunkt fr Lochkreis in der 2. Achse (abs)

(bei XY)

<RAD> 

<STA1> 

REAL

REAL

Bezugspunkt in der 2. Achse

Radius des Lochkreises

Anfangswinkel

oder 1. Rundachsposition

<INDA> 

REAL

Fortschaltwinkel (nur bei Teilkreis)

(bei XA, YB, ZC)

(bei XY)

(bei XY)

(bei XA, YB, ZC)

(bei XY, XA, YB, 
ZC)

< 0 = Uhrzeigersinn

> 0 = Gegenuhrzeigersinn

<NUM> 

<_VARI> 

INT

INT

Anzahl der Positionen

Bearbeitungsart

EINER: 

ZEHNER: 

reserviert

Positionierungsart

0 =

1 =

Position anfahren - Linear

Position anfahren - auf Kreisbahn

HUNDERTER: 

reserviert

TAUSENDER: 

Kreismuster

ZEHNTAUSEN
DER: 

EINEMILLION + 
HUNDERTTAU
SENDER: 

0 =

1 =

2 =

Kompatibilittsmodus, wenn INDA = 0 
dann Vollkreis, INDA <> 0 dann Teilkreis)

Vollkreis

Teilkreis

Positionsmuster mit Rundachse

0 =

1 =

2 =

3 =

XY (ohne Rund
achse) 

XA (X-Achse und 
Rundachse um X)

YB (Y-Achse und 
Rundachse um Y)

ZC (Z-Achse und 
Rundachse um C)

(bei XY)

(nur bei XA)

(nur bei YB)

(nur bei ZC)

Offset (bei mehreren Rundachsen um die glei
che Achse; wenn Index zu gro, dann 1. Achse)

1. A, B oder C-Achse

2. A, B oder C-Achse

00 =

01 =

...

10 =

20. A, B oder C-Achse

<_UMODE> 

INT

<_HIDE> 

STRING
[200]

reserviert

reserviert

<_NSP> 

INT

reserviert

8

9

10

990

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Parameter 
Maske

Nr.

11

Parameter 

Datentyp

Bedeutung

intern

<_DMODE> 

INT

Anzeigemodus

EINER: 

Bearbeitungsebene G17/18/19

0 =

1 =

2 =

3 =

Kompatibilitt, es bleibt die vor Zyklu
saufruf wirksame Ebene aktiv

G17 (nur im Zyklus aktiv)

G18 (nur im Zyklus aktiv)

G19 (nur im Zyklus aktiv)

3.23.1.5

POCKET3 - Rechtecktasche

Syntax     

Parameter

POCKET3(<_RTP>, <_RFP>, <_SDIS>, <_DP>, <_LENG>, <_WID>, <_CRAD>, 
<_PA>, <_PO>, <_STA>, <_MID>, <_FAL>, <_FALD>, <_FFP1>, <_FFD>, 
<_CDIR>, <_VARI>, <_MIDA>, <_AP1>, <_AP2>, <_AD>, <_RAD1>, <_DP1>, 
<_UMODE>, <_FS>, <_ZFS>, <_GMODE>, <_DMODE>, <_AMODE>)

Nr.

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

RP

Z0

SC

Z1

L

W

R

X0

YO

0

DZ

UXY

UZ

F

FZ

1

2

3

4

5

6

7

8

9

10

11

12

13

14

15

16

<_RTP> 

<_RFP> 

<_SDIS> 

<_DP> 

<_LENG> 

<_WID> 

<_CRAD> 

<_PA> 

<_PO> 

<_STA> 

<_MID> 

<_FAL> 

<_FALD> 

<_FFP1> 

<_FFD> 

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

Rckzugsebene (abs)

Bezugspunkt der Werkzeugachse (abs)

Sicherheitsabstand (additiv auf Bezugspunkt, ohne Vorzeichen einzu
geben)

Taschentiefe (abs/ink), siehe <_AMODE>)

Taschenlnge (ink, mit Vorzeichen einzugeben)

Taschenbreite (ink, mit Vorzeichen einzugeben)

Eckenradius der Tasche 

Bezugspunkt, 1. Achse (abs)

Bezugspunkt, 2. Achse (abs)

Drehwinkel, Winkel zwischen Lngsachse (L) und 1. Achse

maximale Tiefenzustellung

Schlichtaufma Ebene

Schlichtaufma Tiefe

Vorschub in der Ebene

Zustellvorschub Tiefe

<_CDIR> 

INT

Frsrichtung:

0 =

1 =

Gleichlauf

Gegenlauf

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

991

 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<_VARI> 

INT

Bearbeitungsart

EINER: 

Nr.

17

18

19

20

21

22

23

24

25

26

ZEHNER: 

1 =

2 =

4 =

5 =

0 =

1 =

2 =

3 =

Schruppen

Schlichten

Schlichten Rand

Anfasen

vorgebohrt, Zustellung mit G0

senkrecht, Zustellung mit G1

helikal

pendeln auf Taschenlngsachse

REAL

REAL

REAL

REAL

REAL

HUNDERTER: 

reserviert

maximale Ebenenzustellung, Einheit siehe <_AMODE>

Lnge der Vorbearbeitung (ink)

Breite der Vorbearbeitung (ink)

Tiefe der Vorbearbeitung (ink)

Radius der Helixbahn beim Eintauchen helikal

maximaler Eintauchwinkel fr pendelnd

<_DP1> 

REAL

Helixsteigung bei Eintauchen helikal

<_UMODE> 

INT

reserviert

<_FS> 

<_ZFS> 

REAL

REAL

Fasenbreite (ink)

Eintauchtiefe (Werkzeugspitze) bei Anfasen (abs/ink), siehe <_AMODE>

DXY

<_MIDA> 

<_AP1> 

<_AP2> 

<_AD> 

<_RAD1> 

L1

W1

AZ

ER

EW

EP

FS

ZFS

992

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
Nr.

27

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<_GMODE> 

INT

Geometriemodus (Bewertung der programmierten Geometriewerte)

Arbeitsvorbereitung

3.23 Zyklen extern programmieren

EINER: 

ZEHNER: 

HUNDERTER: 

reserviert

reserviert

Auswahl Bearbeitung/nur Startpunktbe
rechnung 

0 =

1 =

Kompatibilittsmodus

normale Bearbeitung

TAUSENDER: 

Bemaung ber Mitte/Ecke 

0 =

1 =

2 =

3 =

4 =

5 =

Kompatibilittsmodus

Bemaung ber Mitte

Bemaung Eckpunkt, Taschenla
ge +LENG/+WID

Bemaung Eckpunkt, Taschenla
ge -LENG/+WID

Bemaung Eckpunkt, Taschenla
ge +LENG/-WID

Bemaung Eckpunkt, Taschenla
ge -LENG/-WID

ZEHNTAUSENDER: 

Komplettbearbeitung/Nachbearbeitung

0 =

1 =

2 =

Kompatibilittsmodus 
(<_AP1>, <_AP2> und <_AD> 
wie bisher behandeln)

Komplettbearbeitung

Nachbearbeitung

28

<_DMODE> 

INT

Anzeigemodus

EINER: 

Bearbeitungsebene G17/G18/G19

ZEHNER: 

HUNDERTER:

TAUSENDER:

ZEHNTAUSENDER:

0 =

1 =

2 =

3 =

Kompatibilitt, es bleibt die vor 
Zyklusaufruf wirksame Ebene ak
tiv

G17 (nur im Zyklus aktiv)

G18 (nur im Zyklus aktiv)

G19 (nur im Zyklus aktiv)

Vorschubart: G-Gruppe (G94/G95) fr 
Flchen- und Tiefenvorschub 

0 =

1 =

---

---

Kompatibilittsmodus

G-Befehl wie vor Zyklusaufruf. 
G94/G95 fr Flchen- und Tiefen
vorschub gleich

reserviert

reserviert

Technologieskalierung innerhalb von Zy
klenmasken (Seite 1113)

0 =

1 =

Eingabe: komplett

Eingabe: einfach

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

993

 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

29

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<_AMODE> 

INT

Alternativmodus

EINER: 

Taschentiefe (Z1)

0 =

1 =

absolut (Kompatibilittsmodus)

inkrementell

ZEHNER: 

Einheit fr Ebenenzustellung (DXY)

0 =

1 =

mm

% vom Werkzeugdurchmesser

HUNDERTER: 

Eintauchtiefe bei Anfasen (ZFS)

0 =

1 =

absolut 

inkrementell

3.23.1.6

POCKET4 - Kreistasche

Syntax     

Parameter

POCKET4(<_RTP>, <_RFP>, <_SDIS>, <_DP>, <_CDIAM>, <_PA>, <_PO>, 
<_MID>, <_FAL>, <_FALD>, <_FFP1>, <_FFD>, <_CDIR>, <_VARI>, <_MIDA>, 
<_AP1>, <_AD>, <_RAD1>, <_DP1>, <_UMODE>, <_FS>, <_ZFS>, <_GMODE>, 
<_DMODE>, <_AMODE>)

Nr.

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

RP

Z0

SC

Z1



X0

Y0

DZ

UXY

UZ

F

FZ

1

2

3

4

5

6

7

8

9

10

11

12

13

994

<_RTP> 

<_RFP> 

<_SDIS> 

REAL

REAL

REAL

Rckzugsebene (abs)

Bezugspunkt der Werkzeugachse (abs)

Sicherheitsabstand (additiv auf Bezugspunkt, ohne Vorzeichen einzu
geben)

<_DP> 

REAL

Taschentiefe (abs/ink), siehe <_AMODE>

<_CDIAM>  REAL

Taschendurchmesser oder Taschenradius, siehe <_DMODE>

<_PA> 

<_PO> 

<_MID> 

<_FAL> 

<_FALD> 

<_FFP1> 

<_FFD> 

REAL

REAL

REAL

REAL

REAL

REAL

REAL

Bezugspunkt 1. Achse (abs)

Bezugspunkt 2. Achse (abs)

maximale Tiefenzustellung, siehe <_VARI> = ebenenweise

maximale Helixsteigung, siehe <_VARI> = helikal

Schlichtaufma Ebene

Schlichtaufma Tiefe

Vorschub fr Flchenbearbeitung 

Zustellvorschub Tiefe

<_CDIR> 

INT

Frsrichtung

0 =

1 =

Gleichlauf

Gegenlauf

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

14

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<_VARI> 

INT

Bearbeitungsart

EINER: 

Bearbeitung

DXY

<_MIDA> 

REAL

<_AP1> 

<_AD> 

<_RAD1> 

<_DP1> 

REAL

REAL

REAL

REAL

15

16

17

18

19

20

21

22

23



AZ

ER

EP

FS

ZFS

ZEHNER: 

1 =

2 =

4 =

5 =

Schruppen

Schlichten

Schlichten Rand

Anfasen

Zustellungsart (Schruppen und Schlich
ten)

0 =

1 =

2 =

vorgebohrt, Zustellung mit G0 
(Tasche ist vorgearbeitet)

senkrecht, Zustellung mit G1

helikal

HUNDERTER: 

TAUSENDER:

reserviert

0 =

1 =

ebenenweise

helikal

maximale Ebenenzustellung, siehe <_AMODE>, 
0 = 0,8 x WZG-Durchmesser

Durchmesser/Radius der Vorbearbeitung (ink)

Tiefe der Vorbearbeitung (ink)

Radius der Helixbahn beim Eintauchen helikal

Helixsteigung bei Eintauchen auf Helixbahn

<_UMODE> 

INT

reserviert

<_FS> 

<_ZFS> 

REAL

REAL

Fasenbreite (ink)

Eintauchtiefe (Werkzeugspitze) bei Anfasen (abs/ink), siehe 
<_AMODE>

<_GMODE> 

INT

Geometriemodus (Bewertung der programmierten Geometriewerte) 

EINER: 

ZEHNER: 

reserviert

reserviert

HUNDERTER: 

Bearbeitung/Startpunktberechnung 

0 =

1 =

Kompatibilittsmodus

normale Bearbeitung

TAUSENDER: 

reserviert

ZEHNTAUSENDER: 

Komplettbearbeitung/Nachbearbeitung

0 =

1 =

2 =

Kompatibilittsmodus (<_AP1> 
und <_AD> wie bisher behan
deln)

Komplettbearbeitung

Nachbearbeitung

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

995

 
 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

24

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<_DMODE> 

INT

Anzeigemodus

EINER: 

Bearbeitungsebene G17/18/19

ZEHNER: 

HUNDERTER:

0 =

1 =

2 =

3 =

Kompatibilitt, es bleibt die vor 
Zyklusaufruf wirksame Ebene ak
tiv

G17 (nur im Zyklus aktiv)

G18 (nur im Zyklus aktiv)

G19 (nur im Zyklus aktiv)

Vorschubart: G-Gruppe (G94/G95) fr 
Flchen- und Tiefenvorschub 

0 =

1 =

0 =

1 =

Kompatibilittsmodus

G-Befehl wie vor Zyklusaufruf. 
G94/G95 fr Flchen- und Tiefen
vorschub gleich

Kompatibilittsmodus 
(<_CDIAM>/<_AP1> alsRadius 
eingegeben)

<_CDIAM>/<_AP1> als Durch
messer eingegeben

TAUSENDER:

---

reserviert

ZEHNTAUSENDER:

Technologieskalierung innerhalb von Zy
klenmasken (Seite 1113)

0 =

1 =

Eingabe: komplett

Eingabe: einfach

25

<_AMODE> 

INT

Alternativmodus

EINER: 

Taschentiefe (Z1)

0 =

1 =

absolut (Kompatibilittsmodus)

inkrementell

ZEHNER: 

Einheit fr Zustellbreite (DXY)

0 =

1 =

mm

% vom Werkzeugdurchmesser

HUNDERTER: 

Eintauchtiefe bei Anfasen (ZFS)

0 =

1 =

absolut 

inkrementell

3.23.1.7

SLOT1 - Lngsnut

Syntax     

996

SLOT1 (<RTP>, <RFP>, <SDIS>, <_DP>, <_DPR>, <NUM>, <LENG>, <WID>, 
<_CPA>, <_CPO>, <RAD>, <STA1>, <INDA>, <FFD>, <FFP1>, <_MID>, 
<CDIR>, <_FAL>, <VARI>, <_MIDF>, <FFP2>, <SSF>, <_FALD>, <_STA2>, 
<_DP1>, <_UMODE>, <_FS>, <_ZFS>, <_GMODE>, <_DMODE>, <_AMODE>)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Parameter

Nr.

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

RP

Z0

SC

Z1

L

W

X0

Y0



FZ

F

DZ

UXY

1

2

3

4

5

6

7

8

9

10

11

12

13

14

15

16

17

18

19

<RTP> 

<RFP> 

<SDIS> 

<_DP> 

<_DPR> 

<NUM> 

<LENG> 

<WID> 

<_CPA> 

<_CPO> 

<RAD> 

<STA1> 

<INDA> 

<FFD> 

<FFP1> 

<_MID> 

<CDIR> 

<_FAL> 

<VARI> 

REAL

REAL

REAL

REAL

REAL

INT

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

INT

REAL

INT

Rckzugsebene (abs)

Bezugspunkt der Werkzeugachse (abs)

Sicherheitsabstand (additiv auf Bezugspunkt, ohne Vorzeichen einzu
geben)

Nuttiefe (abs)

Nuttiefe (ink), bezogen auf Z0 (ohne Vorzeichen einzugeben)

Anzahl der Nuten = 1

Lnge der Nut

Breite der Nut

Bezugspunkt, 1. Achse der Ebene

Bezugspunkt, 2. Achse der Ebene

reserviert 

Drehwinkel

reserviert 

Zustellvorschub Tiefe

Vorschub

maximale Tiefenzustellung

Frsrichtung

0 =

1 =

Gleichlauf

Gegenlauf

Schlichtaufmass Ebene oder Nutrand

Bearbeitungsart

EINER:

0 =

1 =

2 =

4 =

reserviert

Schruppen

Schlichten

Schlichten Rand (nur Rand bear
beiten)

ZEHNER: 

5 =

Anfasen

Anfahren

0 =

1 =

2 =

3 =

vorgebohrt, Zustellung mit G0 
(Nut ist vorbearbeitet)

senkrecht, Zustellung mit G1

helikal

pendelnd

20

21

22

23

24

DZF

FF

SF

UZ

ER

EW

<_MIDF> 

<FFP2> 

<SSF> 

<_FALD> 

<_STA2> 

REAL

REAL

REAL

REAL

REAL

HUNDERTER: 

reserviert

reserviert

reserviert

reserviert

Schlichtaufma Tiefe

Radius der Helixbahn beim Eintauchen helikal

maximaler Eintauchwinkel fr pendelnd

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

997

 
 
 
 
 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

25

26

27

28

29

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

EP

FS

ZFS

<_DP1> 

REAL

Eintauchtiefe pro Umdrehung fr Helix

<_UMODE> 

INT

reserviert

<_FS> 

<_ZFS> 

REAL

REAL

Fasenbreite (ink) bei Anfasen

Eintauchtiefe (Werkzeugspitze) bei Anfasen (abs/ink), siehe 
<_AMODE>

<_GMODE> 

INT

Geometriemodus (Bewertung der programmierten Geometriewerte) 

EINER: 

ZEHNER: 

HUNDERTER: 

reserviert

reserviert

Auswahl Bearbeitung oder nur Start
punktberechnung

1 =

normale Bearbeitung

TAUSENDER: 

Bemaung Bezugspunkt, Nutlage

0 =

1 =

2 =

3 =

4 =

Mitte

links innen +L

rechts innen -L

linker Rand +L

rechter Rand -L

30

<_DMODE> 

INT

Anzeigemodus

EINER: 

Bearbeitungsebene G17/18/19

ZEHNER: 

HUNDERTER: 

TAUSENDER: 

ZEHNTAUSENDER:

31

<_AMODE> 

INT

Alternativmodus

EINER: 

ZEHNER: 

HUNDERTER: 

0 =

1 =

2 =

3 =

Kompatibilitt, es bleibt die vor 
Zyklusaufruf wirksame Ebene ak
tiv

G17 (nur im Zyklus aktiv)

G18 (nur im Zyklus aktiv)

G19 (nur im Zyklus aktiv)

reserviert

reserviert

Kennung SW-Version

1 =

Funktionserweiterung SLOT1

Technologieskalierung innerhalb von Zy
klenmasken (Seite 1113)

0 =

1 =

Eingabe: komplett

Eingabe: einfach

Endtiefe Z1 (abs/ink)

0 =

1 =

2 =

Kompatibilitt

Z1 (ink)

Z1 (abs)

reserviert

Eintauchtiefe bei Anfasen ZFS

0 =

1 =

ZFS (abs)

ZFS (ink)

998

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Hinweis

Der Zyklus ist gegenber frheren SW-Versionen mit neuen Funktionen ausgestattet. Das hat 
zur Folge, dass bestimmte Parameter in der Eingabemaske nicht mehr angezeigt werden 
(<NUM>, <RAD>, <INDA>). Mehrere Nuten auf einem Positionsmuster sind mittels "MCALL" 
und Aufruf des gewnschten Positionsmusters, z B HOLES2, programmierbar.

3.23.1.8

SLOT2 - Kreisnut

Syntax     

Parameter

SLOT2(<RTP>, <RFP>, <SDIS>, <_DP>, <_DPR>, <NUM>, <AFSL>, <WID>, 
<_CPA>, <_CPO>, <RAD>, <STA1>, <INDA>, <FFD>, <FFP1>, <_MID>, 
<CDIR>, <_FAL>, <VARI>, <_MIDF>, <FFP2>, <SSF>, <_FFCP>, <_UMODE>, 
<_FS>, <_ZFS>, <_GMODE>, <_DMODE>, <_AMODE>)

Nr.

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

RP

Z0

SC

Z1

N

1

W

X0

Y0

R

0

2

FZ

F

DZ

1

2

3

4

5

6

7

8

9

10

11

12

13

14

15

16

17

<RTP> 

<RFP> 

<SDIS> 

<_DP> 

<_DPR> 

<NUM> 

<AFSL> 

<WID> 

<_CPA> 

<_CPO> 

<RAD> 

<STA1> 

<INDA> 

<FFD> 

<FFP1> 

<_MID> 

<CDIR> 

REAL

REAL

REAL

REAL

REAL

INT

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

INT

Rckzugsebene (abs)

Bezugspunkt der Werkzeugachse (abs)

Sicherheitsabstand (additiv auf Bezugspunkt, ohne Vorzeichen einzu
geben)

Nuttiefe (abs)

Nuttiefe (ink), bezogen auf Z0 (ohne Vorzeichen einzugeben)

Anzahl der Nuten

ffnungswinkel der Nut

Breite der Nut

Bezugspunkt = Mittelpunkt des Kreises, 1. Achse der Ebene

Bezugspunkt = Mittelpunkt des Kreises, 2. Achse der Ebene

Radius des Kreises

Anfangswinkel

Fortschaltwinkel

Zustellvorschub Tiefe

Vorschub

maximale Tiefenzustellung

Frsrichtung

0 =

1 =

Gleichlauf

Gegenlauf

18

UXY

<_FAL> 

REAL

Schlichtaufma Ebene oder Nutrand

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

999

 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

19

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<VARI> 

INT

Bearbeitungsart

EINER:

ZEHNER:

0 =

1 =

2 =

3 =

5 =

0 =

1 =

Komplettbearbeitung

Schruppen

Schlichten

Schlichten Rand

Anfasen

Zwischenpositionieren mit G0-
Gerade

Zwischenpositionieren auf Kreis
bahn

HUNDERTER: 

TAUSENDER: 

reserviert

0 =

Kompatibilittsmode, wenn 
<INDA> = 0 dann 
Vollkreis, <INDA> <> 0 dann Teil
kreis)

1 =

2 =

Vollkreis

Teilkreis

reserviert

reserviert

reserviert

reserviert

reserviert

Fasenbreite (Ink)

Eintauchtiefe (Werkzeugspitze) bei Anfasen (abs/ink), siehe <_AMODE>

<_MIDF> 

<FFP2> 

<SSF> 

<_FFCP> 

REAL

REAL

REAL

REAL

<_UMODE> 

INT

<_FS> 

<_ZFS> 

REAL

REAL

<_GMODE> 

INT

Geometriemodus (Bewertung der programmierten Geometriewerte) 

EINER: 

ZEHNER: 

HUNDERTER: 

reserviert

reserviert

Auswahl Bearbeitung oder nur Start
punktberechnung

0 =

1 =

Kompatibilittsmodus

normale Bearbeitung

DZF

FF

FS

ZFS

20

21

22

23

24

25

26

27

1000

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

28

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<_DMODE> 

INT

Anzeigemodus

EINER: 

Bearbeitungsebene G17/18/19

0 =

1 =

2 =

3 =

Kompatibilitt, es bleibt die vor 
Zyklusaufruf wirksame Ebene ak
tiv

G17 (nur im Zyklus aktiv)

G18 (nur im Zyklus aktiv)

G19 (nur im Zyklus aktiv)

reserviert

reserviert

Kennung SW-Version

1 =

Funktionen SLOT2 ab SW 2.5

Technologieskalierung innerhalb von Zy
klenmasken (Seite 1113)

0 =

1 =

Eingabe: komplett

Eingabe: einfach

Endtiefe Z1 (abs/ink)

0 =

1 =

2 =

Kompatibilitt

Z1 (ink)

Z1 (abs)

reserviert

Eintauchtiefe bei Anfasen ZFS

0 =

1 =

ZFS (abs)

ZFS (ink)

ZEHNER: 

HUNDERTER: 

TAUSENDER: 

ZEHNTAUSENDER:

29

<_AMODE> 

INT

Alternativmodus

EINER: 

ZEHNER: 

HUNDERTER: 

3.23.1.9

LONGHOLE - Langloch

Syntax     

Parameter

LONGHOLE(<RTP>, <RFP>, <SDIS>, <_DP>, <_DPR>, <NUM>, <LENG>, <_CPA>, 
<_CPO>, <RAD>, <STA1>, <INDA>, <FFD>, <FFP1>, <MID>, <_VARI>, 
<_UMODE>, <_GMODE>, <_DMODE>, <_AMODE>) 

Nr.

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

1

2

3

4

RP

Z0

SC

Z1

<RTP> 

<_RFP> 

<SDIS> 

REAL

REAL

REAL

Rckzugsebene (abs)

Bezugspunkt der Werkzeugachse (abs)

Sicherheitsabstand (additiv auf Bezugspunkt, ohne Vorzeichen einzu
geben)

<_DP> 

REAL

Langlochtiefe (abs)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1001

 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

L

X0

Y0

0

FZ

F

DZ

5

6

7

8

9

10

11

12

13

14

15

16

17

18

<_DPR> 

<NUM> 

<LENG> 

<_CPA> 

<_CPO> 

<RAD> 

<STA1> 

<INDA> 

<FFD> 

<FFP1> 

<MID> 

REAL

INT

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

Langlochtiefe (ink), bezogen auf Z0 (ohne Vorzeichen einzugeben)

Anzahl der Langlcher = 1

Lnge Langloch

Bezugspunkt, 1. Achse der Ebene

Bezugspunkt, 2. Achse der Ebene

reserviert

Drehwinkel

reserviert 

Zustellvorschub Tiefe

Vorschub

maximale Tiefenzustellung

<_VARI> 

INT

Bearbeitungsart

EINER: 

Zustellart

1 =

3 =

senkrecht mit G1

pendelnd

<_UMODE> 

<_GMODE> 

INT

INT

HUNDERTER: 

reserviert

reserviert

Geometriemodus (Bewertung der programmierten Geometriewerte)

EINER: 

ZEHNER: 

HUNDERTER: 

reserviert

reserviert

Auswahl Bearbeitung oder nur Start
punktberechnung

0 =

1 =

Kompatibilittsmode

normale Bearbeitung

TAUSENDER: 

Bemaung Bezugspunkt, Nutlage

0 =

1 =

2 =

3 =

4 =

Mitte

links innen +L

rechts innen -L

linker Rand +L

rechter Rand -L

1002

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

19

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<_DMODE> 

INT

Anzeigemodus

EINER: 

Bearbeitungsebene G17/18/19

ZEHNER: 

0 =

1 =

2 =

3 =

Kompatibilitt, es bleibt die vor 
Zyklusaufruf wirksame Ebene ak
tiv

G17 (nur im Zyklus aktiv)

G18 (nur im Zyklus aktiv)

G19 (nur im Zyklus aktiv)

Vorschubart: G-Gruppe (G94/G95) fr 
Flchen- und Tiefenvorschub

0 =

1 =

Kompatibilittsmode

G-Befehl wie vor Zyklusaufruf. 
G94/G95 fr Flchen- und Tiefen
vorschub gleich

HUNDERTER: 

TAUSENDER: 

reserviert

Kennung SW-Version

1 =

Funktionserweiterung LONGHO
LE (Bemaung Bezugspunkt)

20

<_AMODE> 

INT

Alternativmodus

EINER: 

Endtiefe Z1 (abs/ink)

0 =

1 = 

2 =

Kompatibilitt

Z1 (ink)

Z1 (abs)

Hinweis

Der Zyklus ist gegenber frheren SW-Versionen mit neuen Funktionen ausgestattet. Das hat 
zur Folge, dass bestimmte Parameter in der Eingabemaske nicht mehr angezeigt werden 
(<NUM>, <RAD>, <INDA>). Mehrere Nuten auf einem Positionsmuster sind mittels "MCALL" 
und Aufruf des gewnschten Positionsmusters, z. B. HOLES2, programmierbar.

3.23.1.10

CYCLE60 - Gravur

Syntax     

CYCLE60(<_TEXT>, <_RTP>, <_RFP>, <_SDIS>, <_DP>, <_DPR>, <_PA>, 
<_PO>, <_STA>, <_CP1>, <_CP2>, <_WID>, <_DF>, <_FFD>, <_FFP1>, 
<_VARI>, <_CODEP>, <_UMODE>, <_GMODE>, <_DMODE>, <_AMODE>)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1003

 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Parameter

Nr.

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

1

2

3

4

5

6

7

8

9

RP

Z0

SC

Z1

Z1

X0

R

Y0

0

1

<_TEXT> 

<_RTP> 

<_RFP> 

<_SDIS> 

<_DP> 

<_DPR> 

<_PA> 

STRING
[200]

REAL

REAL

REAL

REAL

REAL

REAL

zu gravierender Text (maximal 100 Zeichen)

Rckzugsebene (abs)

Bezugspunkt der Werkzeugachse (abs)

Sicherheitsabstand (additiv auf Referenzebene, ohne Vorzeichen ein
zugeben)

Tiefe (abs), siehe <_AMODE>

Tiefe (ink), siehe <_AMODE>

Bezugspunkt, 1. Achse der Ebene (abs) - rechtwinklig, siehe <_VARI>

Bezugspunkt, Lnge (Radius) - polar, siehe <_VARI>

<_PO> 

REAL

Bezugspunkt, 2. Achse der Ebene (abs) - rechtwinklig, siehe <_VARI>

Bezugspunkt, Winkel bezogen auf die 1. Achse - polar, siehe <_VARI>

<_STA> 

REAL

Textrichtung, Winkel der Textlinie bezogen auf die 1. Achse), 
siehe <_VARI>

10

XM

<_CP1> 

REAL

LM

11

YM

<_CP2> 

REAL

Mittelpunkt des Textkreises, 1. Achse der Ebene (abs) - rechtwinklig, 
siehe <_VARI> 

Mittelpunkt des Textkreises, Lnge (Radius) bezogen auf WNP - polar, 
siehe <_VARI> 

Mittelpunkt des Textkreises, 2. Achse der Ebene (abs) - rechtwinklig, 
siehe <_VARI>

Mittelpunkt des Textkreises, Winkel bezogen auf die 1. Achse - polar, 
siehe <_VARI>

M

W

DX1

DX2

2

FZ

F

12

13

14

15

<_WID> 

<_DF> 

REAL

REAL

Zeichenhhe (ohne Vorzeichen einzugeben)

Zeichenabstand / Gesamtbreite, siehe <_VARI>

ffnungswinkel, siehe <_VARI>

<_FFD> 

<_FFP1> 

REAL

REAL

Zustellvorschub Tiefe, siehe <_DMODE> 

Vorschub fr Flchenbearbeitung

1004

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
Nr.

16

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<_VARI> 

INT

Bearbeitung (Ausrichtung und Bezugspunkt des Gravurtextes)

Arbeitsvorbereitung

3.23 Zyklen extern programmieren

EINER: 

ZEHNER: 

HUNDERTER: 

TAUSENDER: 

Bezugspunkt 

0 =

1 =

rechtwinklig

polar

Textausrichtung 

0 =

1 =

2 =

Text auf einer Linie

Text auf einem Kreisbogen oben

Text auf einem Kreisbogen unten

reserviert

Bezugspunkt des Textes horizontal 

0 =

1 =

2 =

links

mittig

rechts

ZEHNTAUSENDER: 

Bezugspunkt des Textes vertikal 

0 =

1 =

2 =

unten

mittig

oben

HUNDERTTAUSENDER: 

Textlnge 

0 =

1 =

2 =

Zeichenabstand

Gesamtbreite des Textes (nur bei 
Text linear)

ffnungswinkel (nur bei Text auf 
Kreisbogen)

EINEMILLION: 

Kreismittelpunkt 

0 =

1 =

rechtwinklig (kartesisch)

polar

ZEHNMILLIONEN: 

Spiegelschrift

0 =

1 =

2 =

Kompatibilitt 

Spiegelschrift EIN 

Spiegelschrift AUS 

17

18

19

<_CODEP> 

<_UMODE> 

_GMODE> 

INT

INT

INT

Nummer der Codepage fr die Schrift (z. Z. nur 1252)

reserviert

Geometriemodus (Bewertung der programmierten Geometriewerte)

EINER: 

ZEHNER : 

HUNDERTER: 

reserviert

reserviert

Auswahl Bearbeitung / nur Startpunktbe
rechnung 

0 =

1 =

Kompatibilittsmodus

normale Bearbeitung

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1005

 
 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

20

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<_DMODE> 

INT

Anzeigemodus

EINER: 

Bearbeitungsebene G17/18/19

0 =

1 =

2 =

3 =

Kompatibilitt, es bleibt die vor 
Zyklusaufruf wirksame Ebene ak
tiv

G17 (nur im Zyklus aktiv)

G18 (nur im Zyklus aktiv)

G19 (nur im Zyklus aktiv)

Vorschubart: G-Gruppe (G94/G95) fr 
Flchen- und Tiefenvorschub

0 =

1 =

Kompatibilittsmodus

G-Befehl wie vor Zyklusaufruf. 
G94/G95 fr Flchen- und Tiefen
vorschub gleich

Endtiefe (<_DP>, <_DPR>)

0 =

1 =

2 =

Kompatibilitt 

inkrementell (<_DPR>)

absolut (<_DP>)

ZEHNER : 

21

<_AMODE> 

INT

Alternativmodus

EINER: 

3.23.1.11

CYCLE61 - Planfrsen

Syntax     

Parameter

CYCLE61(<_RTP>, <_RFP>, <_SDIS>, <_DP>, <_PA>, <_PO>, <_LENG>, 
<_WID>, <_MID>, <_MIDA>, <_FALD>, <_FFP1>, <_VARI>, <_LIM>, 
<_DMODE>, <_AMODE>)

Nr.

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

1

2

3

4

5

6

7

8

9

RP

Z0

SC

Z1

X0

Y0

X1

Y1

DZ

10

DXY

1006

<_RTP> 

<_RFP> 

<_SDIS> 

<_DP> 

<_PA> 

<_PO> 

<_LENG> 

<_WID> 

<_MID> 

<_MIDA> 

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

Rckzugsebene (abs)

Bezugspunkt der Werkzeugachse, Hhe Rohteil (abs)

Sicherheitsabstand (additiv auf Bezugspunkt, ohne Vorzeichen einzu
geben)

Hhe Fertigteil (abs/ink), siehe <_AMODE>

Eckpunkt 1 in der 1. Achse (abs)

Eckpunkt 1 in der 2. Achse (abs)

Eckpunkt 2 in der 1. Achse (abs/ink), siehe <_AMODE>

Eckpunkt 2 in der 2. Achse (abs/ink), siehe <_AMODE>

maximale Tiefenzustellung

maximale Ebenenzustellung (Einheit, siehe <_AMODE>)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

11

12

13

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

UZ

F

<_FALD> 

<_FFP1> 

REAL

REAL

Schlichtaufma Tiefe

Bearbeitungsvorschub

<_VARI> 

INT

Bearbeitungsart

EINER: 

Bearbeitung

1 =

2 =

Schruppen

Schlichten

ZEHNER: 

Bearbeitungsrichtung

1 =

2 =

3 =

4 =

parallel zur 1. Achse, eine Rich
tung

parallel zur 2. Achse, eine Rich
tung

parallel zur 1. Achse, wechseln
de Richtung

parallel zur 2. Achse, wechseln
de Richtung

14

<_LIM> 

INT

Eingrenzungen

EINER: 

Eingrenzung 1. Achse minus

0 =

1 =

nein

ja

ZEHNER: 

Eingrenzung 1. Achse plus

0 =

1 =

nein

ja

HUNDERTER: 

Eingrenzung 2. Achse minus

0 =

1 =

nein

ja

TAUSENDER: 

Eingrenzung 2. Achse plus

0 =

1 =

nein

ja

15

<_DMODE> 

INT

Anzeigemodus

EINER: 

Bearbeitungsebene G17/18/19

0 =

1 =

2 =

3 =

Kompatibilitt, es bleibt die vor 
Zyklusaufruf wirksame Ebene ak
tiv

G17 (nur im Zyklus aktiv)

G18 (nur im Zyklus aktiv)

G19 (nur im Zyklus aktiv)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1007

 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

16

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<_AMODE> 

INT

Alternativmodus

EINER: 

Endtiefe (<_DP>)

0 =

1 =

absolut 

inkrementell

ZEHNER: 

Einheit fr Ebenenzustellung (<_MIDA>)

0 =

1 =

mm

% vom Werkzeugdurchmesser

HUNDERTER: 

TAUSENDER: 

reserviert

Lnge der Flche

0 =

1 =

inkrementell

absolut 

ZEHNTAUSENDER: 

Breite der Flche

0 =

1 =

inkrementell

absolut 

3.23.1.12

CYCLE62 - Konturaufruf

Syntax     

Parameter

CYCLE62(<_KNAME>,<_TYPE>, <_LAB1>, <_LAB2>)

Nr.

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

1

2

3

4

PRG/CON

<_KNAME>

STRING
[140]

Konturname oder Unterprogrammname, muss nicht programmiert wer
den bei _TYPE = 2

<_TYPE>

INT

Bestimmung der Kontureingabe

0 =

1 =

2 =

3 =

Unterprogramm

Konturname 

Labels 

Labels in Unterprogramm

LAB1

LAB2

<_LAB1>

<_LAB2>

STRING[32]

Label 1, Konturanfang

STRING[32]

Label 2, Konturende

3.23.1.13

CYCLE63 - Konturtasche frsen / Konturtasche Restmaterial / Konturzapfen frsen / 
Konturzapfen Restmaterial

Syntax     

1008

CYCLE63(<_PRG>, <_VARI>, <_RP>, <_Z0>, <_SC>, <_Z1>, <_F>, <_FZ>, 
<_DXY>, <_DZ>, <_UXY>, <_UZ>, <_CDIR>, <_XS>, <_YS>, <_ER>, <_EP>, 

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

<_EW>, <_FS>, <_ZFS>, <_TR>, <_DR>, <_UMODE>, <_GMODE>, <_DMODE>, 
<_AMODE>)

Parameter

Nr.

1

2

Parameter 
Maske

Parameter 
intern

PRG

<_PRG> 

Datentyp

Bedeutung

STRING
[100]

Name Ausrumprogramm

<_VARI> 

INT

Bearbeitungsart

EINER: 

Technologische Bearbeitung

1 =

3 =

4 =

5 =

Schruppen

Schlichten Boden

Schlichten Rand

Anfasen

ZEHNER: 

Zustellungsart

0 =

1 =

2 =

Eintauchen mittig

Eintauchen helikal

Eintauchen pendelnd

HUNDERTER: 

TAUSENDER: 

reserviert

Abhebemodus

ZEHNTAUSENDER: 

0 =

1 =

Abheben auf Rckzugsebene

Abheben auf Bezugspunkt + Si
cherheitsabstand

Startpunkt bei Schruppen und Schlichten 
Boden

0 =

1 =

auto

manuell

3

4

5

6

7

8

9

10

11

12

13

14

15

16

17

RP

Z0

SC

Z1

F

FZ

DXY

DZ

UXY

UZ

XS

YS

ER

EP

<_RP> 

<_Z0> 

<_SC> 

<_Z1> 

<_F> 

<_FZ> 

<_DXY> 

<_DZ> 

<_UXY> 

<_UZ> 

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

Rckzugsebene (abs)

Bezugspunkt der Werkzeugachse (abs)

Sicherheitsabstand (additiv auf Bezugspunkt, ohne Vorzeichen einzu
geben)

Endtiefe, (siehe <_AMODE> EINER)

Vorschub in der Ebene Schruppen/Schlichten

Zustellvorschub Tiefe

Zustellung Ebene - Einheit, (siehe <_AMODE> ZEHNER)

Zustellung Tiefe

Schlichtaufma Ebene

Schlichtaufma Tiefe

<_CDIR> 

INT

Frsrichtung

0 =

1 =

Gleichlauf

Gegenlauf

<_XS> 

<_YS> 

<_ER> 

<_EP> 

REAL

REAL

REAL

REAL

Startpunkt X, absolut

Startpunkt Y, absolut

Eintauchen helikal: Radius

Eintauchen helikal: Steigung

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1009

 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

18

19

20

21

22

23

24

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

EW

FS

ZFS

TR

DR

<_EW> 

<_FS> 

<_ZFS> 

REAL

REAL

REAL

Eintauchen pendelnd: maximaler Eintauchwinkel

Fasenbreite (ink) bei Anfasen

Eintauchtiefe Werkzeugspitze bei Anfasen, (siehe <_AMODE> HUN
DERTER)

<_TR> 

<_DR> 

<_UMODE> 

<_GMODE> 

STRING[32] Referenzwerkzeugname bei Restmaterialbearbeitung

INT

INT

INT

Referenzwerkzeug D-Nummer bei Restmaterialbearbeitung

reserviert

Geometriemodus (Bewertung der programmierten Geometriewerte)

EINER: 

ZEHNER: 

HUNDERTER: 

reserviert

reserviert

Auswahl Bearbeitung/nur Startpunktbe
rechnung 

0 =

1 =

2 =

normale Bearbeitung (kein Kom
patibilittsmodus erforderlich)

normale Bearbeitung

reserviert

25

<_DMODE> 

INT

Anzeigemodus

EINER: 

Bearbeitungsebene G17/G18/G19

0 =

1 =

2 =

3 =

Kompatibilitt, es bleibt die vor 
Zyklusaufruf wirksame Ebene ak
tiv

G17 (nur im Zyklus aktiv)

G18 (nur im Zyklus aktiv)

G19 (nur im Zyklus aktiv)

ZEHNER: 

HUNDERTER: 

reserviert

Technologiemodus

1 =

2 =

Tasche

Zapfen

TAUSENDER: 

Restmaterial bearbeiten

0 =

1 =

nein

ja

ZEHNTAUSENDER:

Technologieskalierung innerhalb von Zy
klenmasken (Seite 1113)

0 =

1 =

Eingabe: komplett

Eingabe: einfach

HUNDERTTAUSENDER:

Programmname automatisch

0 =

1 =

nein

ja

1010

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
Nr.

26

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<_AMODE> 

INT

Alternativmodus

Arbeitsvorbereitung

3.23 Zyklen extern programmieren

EINER: 

Endtiefe (Z1)

0 =

1 =

absolut (Kompatibilittsmodus)

inkrementell

ZEHNER: 

Einheit fr Ebenenzustellung (DXY)

0 =

1 =

mm

% vom Werkzeugdurchmesser

HUNDERTER: 

Eintauchtiefe bei Anfasen (ZFS)

TAUSENDER:

0 =

1 =

---

absolut 

inkrementell

reserviert

3.23.1.14

CYCLE64 - Konturtasche vorbohren

Syntax     

Parameter

CYCLE64(<_PRG>, <_VARI>, <_RP>, <_Z0>, <_SC>, <_Z1>, <_F>, <_DXY>, 
<_UXY>, <_UZ>, <_CDIR>, <_TR>, <_DR>, <_UMODE>, <_GMODE>, <_DMODE>, 
<_AMODE>)

Nr.

1

2

3

4

5

6

7

8

9

10

Parameter 
Maske

Parameter 
intern

PRG

<_PRG> 

Datentyp

Bedeutung

STRING
[100]

Name Bohr-/Zentrierprogramm

<_VARI> 

INT

Bearbeitungsart

EINER: 

ZEHNER: 

HUNDERTER: 

TAUSENDER: 

reserviert

reserviert

reserviert

Abhebemodus

0 =

1 =

Abheben auf Rckzugsebene

Abheben auf Bezugspunkt + Si
cherheitsabstand

RP

Z0

SC

Z1

F

DXY

UXY

UZ

<_RP> 

<_Z0> 

<_SC> 

<_Z1> 

<_F> 

<_DXY> 

<_UXY> 

<_UZ> 

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

Rckzugsebene (abs)

Bezugspunkt (abs)

Sicherheitsabstand (additiv auf Bezugspunkt, ohne Vorzeichen einzu
geben)

Bohr-/Zentriertiefe, (siehe <_AMODE> EINER)

Vorschub Bohren/Zentrieren

Zustellung Ebene - Einheit, (siehe <_AMODE> ZEHNER)

Schlichtaufma Ebene

Schlichtaufma Tiefe

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1011

 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

11

12

13

14

15

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<_CDIR> 

INT

Frsrichtung

0 =

1 =

Gleichlauf

Gegenlauf

TR

DR

<_TR> 

<_DR> 

<_UMODE> 

<_GMODE> 

STRING[20] Referenzwerkzeugname 

INT

INT

INT

Referenzwerkzeug D-Nummer 

reserviert

Geometriemodus (Bewertung der programmierten Geometriewerte)

EINER: 

ZEHNER: 

HUNDERTER: 

reserviert

reserviert

Auswahl Bearbeitung/nur Startpunktbe
rechnung 

0 =

1 =

2 =

normale Bearbeitung (kein Kom
patibilittsmodus erforderlich)

normale Bearbeitung

reserviert

25

<_DMODE> 

INT

Anzeigemodus

EINER: 

Bearbeitungsebene G17/G18/G19

0 =

1 =

2 =

3 =

Kompatibilitt, es bleibt die vor 
Zyklusaufruf wirksame Ebene ak
tiv

G17 (nur im Zyklus aktiv)

G18 (nur im Zyklus aktiv)

G19 (nur im Zyklus aktiv)

ZEHNER: 

Technologiemodus

HUNDERTER:

TAUSENDER:

ZEHNTAUSENDER:

1 =

2 =

---

---

---

Vorbohren

Zentrieren

reserviert

reserviert

reserviert

HUNDERTTAUSENDER:

Programmname automatisch

0 =

1 =

nein

ja

26

<_AMODE> 

INT

Alternativmodus

EINER: 

Bohr-/Zentriertiefe Z1

0 =

1 =

absolut (Kompatibilittsmodus)

inkrementell

ZEHNER: 

Einheit fr Ebenenzustellung (DXY)

0 =

1 =

mm

% vom Werkzeugdurchmesser

1012

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

3.23.1.15

CYCLE70 - Gewindefrsen

Syntax     

Parameter

CYCLE70(<_RTP>, <_RFP>, <_SDIS>, <_DP>, <_DIATH>, <_H1>, <_FAL>, 
<_PIT>, <_NT>, <_MID>, <_FFR>, <_TYPTH>, <_PA>, <_PO>, <_NSP>, 
<_VARI>, <_PITA>, <_PITM>, <_PTAB>, <_PTABA>, <_GMODE>, <_DMODE>, 
<_AMODE>)

Nr.

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

1

2

3

4

5

6

7

8

9

RP

Z0

SC

Z1



H1

U

P

NT

<_RTP> 

<_RFP> 

<_SDIS> 

REAL

REAL

REAL

Rckzugsebene (abs)

Bezugspunkt der Werkzeugachse (abs)

Sicherheitsabstand (additiv auf Bezugspunkt, ohne Vorzeichen einzu
geben)

<_DP> 

REAL

Gewindelnge (abs, ink), siehe <_AMODE>

Auslauf am Bohrungsgrund bercksichtigen (minimum halbe Steigung)

<_DIATH>  REAL

Nenndurchmesser des Gewindes

<_H1> 

<_FAL> 

<_PIT> 

<_NT> 

REAL

REAL

REAL

INT

Gewindetiefe

Schlichtaufma

Gewindesteigung (Auswahl <_PITA>: mm, inch, MODUL, Gnge/Zoll)

Anzahl Zhne auf der Schneidplatte

Werkzeuglnge immer auf unteren Zahn bezogen!

10

DXY

<_MID> 

REAL

Maximale Zustellung pro Schnitt

<_MID> > <_H1>: alles mit einem Schnitt

F

X0

Y0

S

11

12

13

14

15

16

<_FFR> 

REAL

Frsvorschub

<_TYPTH> 

INT

Gewindetyp

0 =

1 =

Innengewinde

Auengewinde

<_PA> 

<_PO> 

<_NSP> 

REAL

REAL

REAL

Kreismittelpunkt, 1. Achse (abs)

Kreismittelpunkt, 2. Achse (abs)

Startwinkel (mehrgngige Gewinde)

<_VARI> 

INT

Bearbeitungsart

EINER: 

ZEHNER:

HUNDERTER:

1 =

2 =

1 =

2 =

0 =

1 =

Schruppen

Schlichten

von oben nach unten

von unten nach oben

Rechtsgewinde

Linksgewinde

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1013

 
 
 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

17

18

19

20

21

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<_PITA> 

INT

Bewertung der Gewindesteigung

0 =

1 =

2 =

3 =

4 =

Kompatibilittsmodus

Steigung in mm

Steigung in Gnge pro Zoll (TPI)

Steigung in inch

Steigung als MODUL

<_PITM> 

<_PTAB> 

STRING[15] String als Merker fr Gewindesteigungseingabe (nur fr die Oberflche)

STRING[20] String fr Gewindetabelle ("", "ISO", "BSW", "BSP", "UNC") (nur fr die 

Oberflche)

<_PTABA>  STRING[20] String fr Auswahl in der Gewindetabelle (z.B. "M 10", "M 12", ...) (nur 

fr die Oberflche)

<_GMODE> 

INT

Geometriemodus (Bewertung der programmierten Geometriewerte)

EINER: 

ZEHNER:

reserviert

reserviert

HUNDERTER:

Bearbeitung/Startpunktberechnung

0 =

1 =

Kompatibilittsmodus

normale Bearbeitung

22

<_DMODE> 

INT

Anzeigemodus

EINER: 

Bearbeitungsebene G17/G18/G19

0 =

1 =

2 =

3 =

Kompatibilitt, es bleibt die vor 
Zyklusaufruf wirksame Ebene ak
tiv

G17 (nur im Zyklus aktiv)

G18 (nur im Zyklus aktiv)

G19 (nur im Zyklus aktiv)

23

<_AMODE> 

INT

Alternativmodus

EINER: 

Gewindelnge (<_DP>)

0 =

1 =

absolut 

inkrementell

3.23.1.16

CYCLE72 - Bahnfrsen

Syntax     

CYCLE72(<_KNAME>, <_RTP>, <_RFP>, <_SDIS>, <_DP>, <_MID>, <_FAL>, 
<_FALD>, <_FFP1>, <_FFD>, <_VARI>, <_RL>, <_AS1>, <_LP1>, <_FF3>, 
<_AS2>, <_LP2>,<_UMODE>, <_FS>, <_ZFS>, <_GMODE>, <_DMODE>, <_AMODE>)

1014

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Parameter

Nr.

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

1

2

3

4

5

6

7

8

9

10

11

RP

Z0

SC

Z1

DZ

UXY

UZ

FX

FZ

<_KNAME>  STRING

Name des Kontur-Unterprogrammes

<_RTP> 

<_RFP> 

<_SDIS> 

<_DP> 

<_MID> 

<_FAL> 

<_FALD> 

<_FFP1> 

<_FFD> 

[141]

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

Rckzugsebene (abs)

Bezugspunkt der Werkzeugachse (abs)

Sicherheitsabstand (additiv auf Bezugspunkt, ohne Vorzeichen einzu
geben)

Endpunkt, Endtiefe(abs/ink), siehe <_AMODE>

maximale Tiefenzustellung (ink, ohne Vorzeichen einzugeben)

Schlichtaufma Ebene (ink), Aufma an der Randkontur

Schlichtaufma Tiefe (ink), Aufma am Grund ohne Vorzeichen einzu
geben)

Vorschub an der Kontur

Vorschub fr Tiefenzustellung (oder rumliche Zustellung)

<_VARI> 

INT

Bearbeitungsart

EINER: 

Bearbeitung

ZEHNER:

1 =

2 =

5 =

0 =

1 =

Schruppen

Schlichten

Anfasen

Zwischenwege mit G0

Zwischenwege mit G1

HUNDERTER:

Rckzug am Konturende

0 =

1 =

2 =

3 =

Rckzug am Konturende auf Be
zugspunkt

Rckzug am Konturende auf Be
zugspunkt + <_SDIS>

Rckzug am Konturende 
um <_SDIS>

kein Rckzug am Konturende, 
nchster Startpunkt wird mit Kon
turvorschub angefahren

TAUSENDER: 

reserviert

ZEHNTAUSENDER:

Kontur bearbeiten

0 =

1 =

Kontur vorwrts bearbeiten

Kontur rckwrts bearbeiten

Einschrnkungen bei rckwrts:

 max. 170 Konturelemente 

(inclusive Fasen oder Verrun
dungen)

 es werden nur Werte in der 

Ebene (X/Y) und F ausgewer
tet

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1015

 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

12

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<_RL> 

INT

Bearbeitungsrichtung

13

<_AS1> 

INT

Kontur-Anfahrbewegung

EINER:

ZEHNER:

40 = mittig der Kontur (G40, An- und 

Abfahren: Gerade oder senk
recht)

links der Kontur (G41, An- und 
Abfahren: Gerade oder Kreis)

rechts der Kontur (G42, An- und 
Abfahren: Gerade oder Kreis)

Gerade

Viertelkreis

Halbkreis

senkrecht An- und Abfahren

letzte Bewegung, in der Ebene

letzte Bewegung, rumlich

41 =

42 =

1 =

2 =

3 =

4 =

0 =

1 =

L1

FZ

14

15

16

<_LP1> 

<_FF3> 

<_AS2> 

REAL

REAL

INT

Anfahrweg, oder Anfahrradius (ink, ohne Vorzeichen einzugeben)

Vorschub fr Zwischenwege (G94/G95 wie an Kontur)

Kontur-Abfahrbewegung (nicht bei senkrecht An-/Abfahren)

EINER:

ZEHNER:

1 =

2 =

3 =

0 =

1 =

Gerade

Viertelkreis

Halbkreis

letzte Bewegung, in der Ebene

letzte Bewegung, rumlich

L2

FS

ZFS

17

18

19

20

21

<_LP2> 

REAL

Abfahrweg, oder Abfahrradius (ink, ohne Vorzeichen einzugeben)

<_UMODE> 

INT

reserviert

<_FS> 

<_ZFS> 

REAL

REAL

Fasenbreite (Ink)

Eintauchtiefe (Werkzeugspitze) bei Anfasen (abs/ink ), siehe <_AMODE>

<_GMODE> 

INT

Geometriemodus (Bewertung der programmierten Geometriewerte)

EINER:

ZEHNER:

HUNDERTER: 

reserviert

reserviert

Auswahl Bearbeitung/nur Startpunktbe
rechnung

0 =

1 =

Kompatibilittsmodus

normale Bearbeitung

1016

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

22

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<_DMODE> 

INT

Anzeigemodus

EINER:

Bearbeitungsebene G17/18/19

ZEHNER: 

TAUSENDER:

0 =

1 =

2 =

3 =

Kompatibilitt, es bleibt die vor 
Zyklusaufruf wirksame Ebene ak
tiv

G17 (nur im Zyklus aktiv)

G18 (nur im Zyklus aktiv)

G19 (nur im Zyklus aktiv)

Vorschubart: G-Gruppe (G94/G95) fr 
Flchen- und Tiefenvorschub 

0 =

1 =

0 =

1 =

Kompatibilittsmodus

G-Befehl wie vor Zyklusaufruf. 
G94/G95 fr Flchen- und Tiefen
vorschub gleich

Kompatibilittsmode: Konturna
me steht in <_KNAME>

Konturname wird im CYCLE62 
programmiert und in 
_SC_CONT_NAME bergeben

23

<_AMODE> 

INT

Alternativmodus

EINER: 

Endpunkt Z1 (<_DP>)

0 =

1 =

absolut (Kompatibilittsmodus)

inkrementell

ZEHNER: 

Einheit fr Ebenenzustellung 

0 =

1 =

mm, inch

reserviert

HUNDERTER: 

Eintauchtiefe bei Anfasen (<_ZFS>)

0 =

1 =

absolut 

inkrementell

Hinweis

Sind folgende bergabeparameter indirekt (als Parameter) programmiert, wird die 
Eingabemaske nicht rckbersetzt:

<_VARI>, <_RL>, <_AS1>, <_AS2>, <_UMODE>, <_GMODE>, <_DMODE>, 
<_AMODE>

3.23.1.17

CYCLE76 - Rechteckzapfen

Syntax     

CYCLE76(<_RTP>, <_RFP>, <_SDIS>, <_DP>, <_DPR>, <_LENG>, <_WID>, 
<_CRAD>, <_PA>, <_PO>, <_STA>, <_MID>, <_FAL>, <_FALD>, <_FFP1>, 

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1017

 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

<_FFD>, <_CDIR>, <_VARI>, <_AP1>, <_AP2>, <_FS>, <_ZFS>, <_GMODE>, 
<_DMODE>, <_AMODE>)

Parameter

Nr.

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

1

2

3

4

5

6

7

8

9

10

11

12

13

14

15

16

17

18

19

20

21

22

RP

Z0

SC

Z1

L

W

R

X0

Y0

0

DZ

UXY

UZ

FX

FZ

<_RTP> 

<_RFP> 

<_SDIS> 

<_DP> 

<_DPR> 

<_LENG> 

<_WID> 

<_CRAD> 

<_PA> 

<_PO> 

<_STA> 

<_MID> 

<_FAL> 

<_FALD> 

<_FFP1> 

<_FFD> 

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

Rckzugsebene (abs)

Bezugspunkt der Werkzeugachse (abs)

Sicherheitsabstand (additiv auf Bezugspunkt, ohne Vorzeichen einzu
geben)

Zapfentiefe(abs)

Zapfentiefe (ink), bezogen auf Z0 (ohne Vorzeichen einzugeben)

Zapfenlnge, siehe <_GMODE> (ohne Vorzeichen einzugeben)

Zapfenbreite, siehe <_GMODE> (ohne Vorzeichen einzugeben)

Eckenradius des Zapfen (ohne Vorzeichen einzugeben)

Bezugspunkt Zapfen, 1. Achse der Ebene (abs)

Bezugspunkt Zapfen, 2. Achse der Ebene (abs)

Drehwinkel, Winkel zwischen Lngsachse (L) und 1. Achse der Ebene

maximale Tiefenzustellung (ink, ohne Vorzeichen einzugeben)

Schlichtaufma Ebene (ink), Aufma an der Randkontur

Schlichtaufma Tiefe (ink), Aufma am Grund (ohne Vorzeichen ein
zugeben)

Vorschub an der Kontur

Zustellvorschub Tiefe

<_CDIR> 

INT

Frsrichtung (ohne Vorzeichen einzugeben)

<_VARI> 

INT

EINER:

Bearbeitung

EINER:

0 =

1 =

Gleichlauf

Gegenlauf

1 =

2 =

5 =

Schruppen

Schlichten

Anfasen

L1

W1

FS

ZFS

<_AP1> 

<_AP2> 

<_FS> 

<_ZFS> 

REAL

REAL

REAL

REAL

Lnge des Rohteilzapfens

Breite des Rohteilzapfens

Fasenbreite (ink)

Eintauchtiefe (Werkzeugspitze) bei Anfasen (abs, ink), siehe <_AMODE>

1018

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
Nr.

23

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<_GMODE> 

INT

Geometriemodus (Bewertung der programmierten Geometriewerte)

Arbeitsvorbereitung

3.23 Zyklen extern programmieren

EINER:

ZEHNER:

HUNDERTER: 

TAUSENDER: 

reserviert

reserviert

Auswahl Bearbeitung oder nur Start
punktberechnung

0 =

1 =

Kompatibilittsmodus

normale Bearbeitung

Bemaung des Zapfens ber Mitte oder 
Ecke

0 =

1 =

2 =

3 =

4 =

5 =

Kompatibilittsmodus

Bemaung ber Mitte

Bemaung Eckpunkt, 
Zapfen +L +W

Bemaung Eckpunkt, 
Zapfen -L +W

Bemaung Eckpunkt, 
Zapfen +L -W

Bemaung Eckpunkt, 
Zapfen -L -W

ZEHNTAUSENDER: 

Komplettbearbeitung oder Nachbearbei
tung

0 =

1 =

2 =

Kompatibilittsmodus

Komplettbearbeitung

Nachbearbeitung

24

<_DMODE> 

INT

Anzeigemodus

EINER:

Bearbeitungsebene G17/18/19

ZEHNER:

HUNDERTER:

TAUSENDER:

ZEHNTAUSENDER:

0 =

1 =

2 =

3 =

---

---

---

Kompatibilitt, es bleibt die vor 
Zyklusaufruf wirksame Ebene ak
tiv

G17 (nur im Zyklus aktiv)

G18 (nur im Zyklus aktiv)

G19 (nur im Zyklus aktiv)

reserviert

reserviert

reserviert

Technologieskalierung innerhalb von Zy
klenmasken (Seite 1113)

0 =

1 =

Eingabe: komplett

Eingabe: einfach

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1019

 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

25

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<_AMODE> 

INT

Alternativmodus

EINER: 

ZEHNER: 

HUNDERTER: 

3.23.1.18

CYCLE77 - Kreiszapfen

Endtiefe Z1 (DP)

0 =

1 =

2 =

Kompatibilitt

inkrementell

absolut 

reserviert

Eintauchtiefe bei Anfasen (ZFS)

0 =

1 =

absolut 

inkrementell

Syntax     

Parameter

CYCLE77(<_RTP>, <_RFP>, <_SDIS>, <_DP>, <_DPR>, <_CDIAM>, <_PA>, 
<_PO>, <_MID>, <_FAL>, <_FALD>, <_FFP1>, <_FFD>, <_CDIR>, <_VARI>, 
<_AP1>, <_FS>, <_ZFS>, <_GMODE>, <_DMODE>, <_AMODE>)

Nr.

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

RP

Z0

SC

Z1



X0

Y0

DZ

UXY

UZ

FX

FZ

1

2

3

4

5

6

7

8

9

10

11

12

13

14

<_RTP> 

<_RFP> 

<_SDIS> 

<_DP> 

<_DPR> 

REAL

REAL

REAL

REAL

REAL

Rckzugsebene (abs)

Bezugspunkt der Werkzeugachse (abs)

Sicherheitsabstand (additiv auf Bezugspunkt, ohne Vorzeichen einzu
geben)

Zapfentiefe(abs)

Zapfentiefe (ink), bezogen auf Z0 (ohne Vorzeichen einzugeben)

<_CDIAM>  REAL

Durchmesser des Zapfens (ohne Vorzeichen einzugeben)

<_PA> 

<_PO> 

<_MID> 

<_FAL> 

<_FALD> 

<_FFP1> 

<_FFD> 

REAL

REAL

REAL

REAL

REAL

REAL

REAL

Bezugspunkt Zapfen, 1. Achse der Ebene (abs)

Bezugspunkt Zapfen, 2. Achse der Ebene (abs)

maximale Tiefenzustellung (ink, ohne Vorzeichen einzugeben)

Schlichtaufma Ebene (ink), Aufma an der Randkontur

Schlichtaufma Tiefe (ink), Aufma am Grund (ohne Vorzeichen ein
zugeben)

Vorschub an der Kontur

Zustellvorschub Tiefe

<_CDIR> 

INT

Frsrichtung (ohne Vorzeichen einzugeben)

EINER:

0 =

1 =

Gleichlauf

Gegenlauf

1020

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

15

16

17

18

19

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<_VARI> 

INT

Bearbeitungsart

EINER:

Bearbeitung

1 =

2 =

5 =

Schruppen bis auf Schlichtauf
ma

Schlichten (Aufma X/Y/Z = 0)

Anfasen

1

FS

ZFS

<_AP1> 

<_FS> 

<_ZFS> 

REAL

REAL

REAL

Durchmesser des Rohteilzapfens

Fasenbreite (ink)

Eintauchtiefe (Werkzeugspitze) bei Anfasen (abs/ink) siehe <_AMODE>

<_GMODE> 

INT

Geometriemodus (Bewertung der programmierten Geometriewerte)

EINER:

ZEHNER:

HUNDERTER: 

reserviert

reserviert

Auswahl Bearbeitung/nur Startpunktbe
rechnung

0 =

1 =

Kompatibilittsmodus

normale Bearbeitung

TAUSENDER: 

reserviert

ZEHNTAUSENDER: 

Komplettbearbeitung/Nachbearbeitung

0 =

1 =

2 =

Kompatibilittsmodus (<_AP1> 
wie bisher behandeln)

Komplettbearbeitung

Nachbearbeitung

20

<_DMODE> 

INT

Anzeigemodus

EINER:

Bearbeitungsebene G17/18/19

ZEHNER:

HUNDERTER:

TAUSENDER:

ZEHNTAUSENDER:

0 =

1 =

2 =

3 =

---

---

---

Kompatibilitt, es bleibt die vor 
Zyklusaufruf wirksame Ebene ak
tiv

G17 (nur im Zyklus aktiv)

G18 (nur im Zyklus aktiv)

G19 (nur im Zyklus aktiv)

reserviert

reserviert

reserviert

Technologieskalierung innerhalb von Zy
klenmasken (Seite 1113)

0 =

1 =

Eingabe: komplett

Eingabe: einfach

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1021

 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

21

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<_AMODE> 

INT

Alternativmodus

EINER: 

Endtiefe Z1 (DP)

0 =

1 =

2 =

absolut (Kompatibilittsmodus)

inkrementell

absolut 

ZEHNER: 

HUNDERTER: 

reserviert

Eintauchtiefe bei Anfasen (ZFS)

0 =

1 =

absolut 

inkrementell

3.23.1.19

CYCLE78 - Bohrgewinde frsen

Syntax     

Parameter

CYCLE78(<_RTP>, <_RFP>, <_SDIS>, <_DP>, <_ADPR>, <_FDPR>, <_LDPR>, 
<_DIAM>, <_PIT>, <_PITA>, <_DAM>, <_MDEP>, <_VARI>, <_CDIR>, <_GE>, 
<_FFD>, <_FRDP>, <_FFR>, <_FFP2>, <_FFA>, <_PITM>, <_PTAB>, 
<_PTABA>, <_GMODE>, <_DMODE>, <_AMODE>)

Nr.

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

1

2

3

4

5

6

7

8

9

RP

Z0

SC

Z1

D

ZR



P

<_RTP> 

<_RFP> 

<_SDIS> 

<_DP> 

<_ADPR> 

REAL

REAL

REAL

REAL

REAL

Rckzugsebene (abs)

Bezugspunkt der Werkzeugachse (abs)

Sicherheitsabstand (additiv auf Bezugspunkt, ohne Vorzeichen einzu
geben)

Endbohrtiefe (abs/ink), siehe <_AMODE>

Anbohrtiefe mit reduziertem Bohrvorschub (ink), mit <_VARI> ZEHN
TAUSENDER wirksam

<_FDPR> 

REAL

maximale Tiefenzustellung (ink)

<_LDPR> 

<_DIAM> 

<_PIT> 

REAL

REAL

REAL

D  Z1  eine Zustellung auf Endbohrtiefe

D < Z1  Tiefbohrzyklus mit mehreren Zustellungen und Entspanen

Restbohrtiefe beim Durchbohren (ink), mit Vorschub FR

Nenndurchmesser des Gewindes

Gewindesteigung als Zahlenwert

10

<_PITA> 

INT

Bewertung der Gewindesteigung P

1 =

2 =

3 =

4 =

Steigung in mm/U

Steigung in Gnge/Zoll

Steigung in inch/U

Steigung als MODUL

11

DF

<_DAM> 

REAL

Betrag/Prozentsatz fr jede weitere Zustellung (Degression), 
siehe <_AMODE> 

1022

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

V1

<_MDEP> 

REAL

minimale Zustellung (ink), nur bei Degression wirksam

<_VARI> 

INT

Bearbeitungsart

EINER: 

ZEHNER: 

HUNDERTER: 

reserviert

Entspanen vor Gewindefrsen 

0 =

1 =

kein Entspanen vor Gewindefr
sen (wirkt nur auf Endbohrtiefe)

Entspanen vor Gewindefrsen 
(wirkt nur auf Endbohrtiefe)

Rechts-/Linksgewinde

0 =

1 =

Rechtsgewinde

Linksgewinde

TAUSENDER: 

Restbohrtiefe mit Bohrvorschub 

0 =

1 =

keine Restbohrtiefe mit Bohrvor
schub FR 

Restbohrtiefe mit Bohrvorschub 
FR

ZEHNTAUSENDER:

Anbohren mit verringertem Vorschub

<_CDIR> 

INT

Frsrichtung

0 =

1 =

0 =

1 =

4 =

kein Anbohren mit verringertem 
Vorschub

Anbohren mit verringertem Vor
schub
Anbohrvorschub = 0,3 F1, wenn 
F1 < 0,15 mm/U
Anbohrvorschub = 0,1 mm/U, 
wenn F1 0,15 mm/U

Gleichlauf

Gegenlauf

Gegenlauf + Gleichlauf (Kombi
nation Schruppen + Schlichten)

Z2

F1

FR

F2

FS

<_GE> 

<_FFD> 

<_FRDP> 

<_FFR> 

<_FFP2> 

<_FFA> 

REAL

REAL

REAL

REAL

REAL

INT

Rckzugsbetrag vor Gewindefrsen (ink)

Bohrvorschub (mm/min bzw. in/min oder mm/U)

Bohrvorschub fr Restbohrtiefe (mm/min oder mm/U)

Vorschub fr Gewindefrsen (mm/min oder mm/Zahn)

Schlichtvorschub fr <_CDIR> = 4 (mm/min oder mm/Zahn)

Bewertung Vorschbe

EINER:

ZEHNER:

HUNDERTER:

TAUSENDER: 

Bohrvorschub F1

Bohrvorschub fr Restbohrtiefe FR

Vorschub fr Gewindefrsen F2

Schlichtvorschub FS

<_PITM> 

STRING[15] String als Merker fr Gewindesteigungseingabe (nur fr die Oberfl

che)1)

<_PTAB> 

STRING[20] String fr Gewindetabelle ("", "ISO", "BSW", "BSP", "UNC") (nur fr die 

Oberflche)1)

<_PTABA>  STRING[20] String fr Auswahl in der Gewindetabelle (z.B. "M 10", "M 12", ...) (nur 

fr die Oberflche)1)

Nr.

12

13

14

15

16

17

18

19

20

21

22

23

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1023

 
 
 
 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

24

25

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<_GMODE> 

INT

Geometriemodus (Bewertung der programmierten Geometriewerte), 
reserviert

<_DMODE> 

INT

Anzeigemodus

EINER: 

Bearbeitungsebene G17/18/19

0 =

1 =

2 =

3 =

Kompatibilitt, es bleibt die vor 
Zyklusaufruf wirksame Ebene ak
tiv

G17 (nur im Zyklus aktiv)

G18 (nur im Zyklus aktiv)

G19 (nur im Zyklus aktiv)

26

<_AMODE> 

INT

Alternativmodus

EINER: 

Bohrtiefe = Endbohrtiefe Z1 abs/ink

ZEHNER: 

0 =

1 =

absolut

inkrementell

Betrag/Prozentsatz DF fr jede weitere 
Zustellung (Degression)

0 =

1 =

Betrag

Prozentsatz (0.001 bis 100 %)

Hinweis

1) Die Parameter 21, 22 und 23 werden nur bei der Gewindeauswahl in den Gewindetabellen 
der Eingabemaske verwendet. Ein Zugriff auf die Gewindetabellen ber Zyklusdefinition bei 
Zykluslaufzeit ist nicht mglich.

3.23.1.20

CYCLE79 - Mehrkant

Syntax     

Parameter

CYCLE79(<_RTP>, <_RFP>, <_SDIS>, <_DP>, <_NUM>, <_SWL>, <_PA>, 
<_PO>, <_STA>, <_RC>, <_AP1>, <_MIDA>, <_MID>, <_FAL>, <_FALD>, 
<_FFP1>, <_CDIR>, <_VARI>, <_FS>, <_ZFS>, <_GMODE>, <_DMODE>, 
<_AMODE>)

Nr.

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

1

2

3

4

5

RP

Z0

SC

Z1

N

1024

<_RTP> 

<_RFP> 

<_SDIS> 

<_DP> 

<_NUM> 

REAL

REAL

REAL

REAL

INT

Rckzugsebene (abs)

Bezugspunkt der Werkzeugachse (abs)

Sicherheitsabstand (additiv auf Bezugspunkt, ohne Vorzeichen einzu
geben)

Mehrkanttiefe (abs/ink), siehe <_AMODE>

Anzahl der Kanten (1...n)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
Nr.

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

Arbeitsvorbereitung

3.23 Zyklen extern programmieren

SW/L

<_SWL> 

REAL

Schlsselweite oder Kantenlnge (je nach <_VARI>)

6

7

8

9

X0

Y0

0

10

R1/FS1



DXY

DZ

UXY

UZ

F

11

12

13

14

15

16

17

18

<_PA> 

<_PO> 

<_STA> 

<_RC> 

<_AP1> 

<_MIDA> 

<_MID> 

<_FAL> 

<_FALD> 

<_FFP1> 

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

("SW" bei Schlsselweite, "L" bei Kantenlnge) 

Schlsselweite nur bei gerader Anzahl Kanten, und Einkant

Zapfenbezugspunkt, 1. Achse (abs)

Zapfenbezugspunkt, 2. Achse (abs)

Drehwinkel Kantenmitte gegen 1. Achse (X-Achse)

Eckenverrundung bei <_NUM> > 2 (Radius/Fase, siehe <_AMODE>) 
(ink, ohne Vorzeichen einzugeben)

("R1" bei Radius, "FS1" bei Fase)

Rohdurchmesser des Zapfens 

maximale Zustellbreite (Einheit, siehe <_AMODE>)

maximale Tiefenzustellung 

Schlichtaufma Ebene 

Schlichtaufma Tiefe 

Bearbeitungsvorschub

<_CDIR> 

INT

Frsrichtung 

0 =

1 =

Gleichlauf

Gegenlauf

<_VARI> 

INT

Bearbeitungsart

EINER: 

Bearbeitung

1 =

2 =

3 =

5 =

Schruppen

Schlichten

Schlichten Rand

Anfasen

ZEHNER: 

Schlsselweite oder Kantenlnge

0 =

1 =

Schlsselweite

Kantenlnge

FS

ZFS

19

20

21

<_FS> 

<_ZFS> 

REAL

REAL

Fasenbreite (ink)

Eintauchtiefe (Werkzeugspitze) bei Anfasen (abs/ink), siehe <_AMODE>

<_GMODE> 

INT

Geometriemodus (Bewertung der programmierten Geometriewerte)

EINER:

ZEHNER:

HUNDERTER: 

reserviert

reserviert

Auswahl Bearbeitung oder nur Start
punktberechnung

1 =

normale Bearbeitung

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1025

 
 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

22

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<_DMODE> 

INT

Anzeigemodus

EINER: 

Bearbeitungsebene G17/18/19

ZEHNER:

HUNDERTER:

TAUSENDER:

ZEHNTAUSENDER:

23

<_AMODE> 

INT

Alternativmodus

EINER: 

0 =

1 =

2 =

3 =

---

---

---

Kompatibilitt, es bleibt die vor 
Zyklusaufruf wirksame Ebene ak
tiv

G17 (nur im Zyklus aktiv)

G18 (nur im Zyklus aktiv)

G19 (nur im Zyklus aktiv)

reserviert

reserviert

reserviert

Technologieskalierung innerhalb von Zy
klenmasken (Seite 1113)

0 =

1 =

Eingabe: komplett

Eingabe: einfach

Endtiefe (<_DP>)

0 =

1 =

absolut 

inkrementell

ZEHNER: 

Einheit fr Ebenenzustellung (<_MIDA>)

0 =

1 =

mm

% vom Werkzeugdurchmesser

HUNDERTER: 

Eintauchtiefe bei Anfasen (<_ZFS>)

0 =

1 =

absolut 

inkrementell

TAUSENDER: 

Eckenverrundung (<_RC>)

0 =

1 =

Radius

Fase

3.23.1.21

CYCLE81 - Bohren, Zentrieren

Syntax     

Parameter

CYCLE81(<RTP>, <RFP>, <SDIS>, <DP>, <DPR>, <DTB>, <_GMODE>, 
<_DMODE>, <_AMODE>)

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

RP

Z0

<RTP>  

<RFP>  

REAL

REAL

Rckzugsebene (abs)

Bezugspunkt (abs)

Nr.

1

2

1026

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

3

4

5

6

7

8

9

SC

Z1/

Z1

DT

<SDIS>  

REAL

<DP>  

<DPR>  

<DTB>  

REAL

REAL

REAL

Sicherheitsabstand (additiv auf Bezugspunkt, ohne Vorzeichen einzu
geben)

Bohrtiefe (abs) / Durchmesser der Zentrierung (abs), siehe <_GMODE>

Bohrtiefe (ink)

Verweilzeit auf Endbohrtiefe, siehe <_AMODE>

<_GMODE> 

INT

Geometriemodus (Bewertung der programmierten Geometriewerte)

EINER: 

ZEHNER: 

reserviert

Zentrierung bezogen auf die Tiefe / den 
Durchmesser

0 =

1 =

Kompatibilitt, Tiefe

Durchmesser

<_DMODE>  

INT

Anzeigemodus

EINER:

Bearbeitungsebene G17/G18/G19

0 =

1 =

2 =

3 =

Kompatibilitt, es bleibt die vor 
Zyklusaufruf wirksame Ebene ak
tiv

G17 (nur im Zyklus aktiv)

G18 (nur im Zyklus aktiv)

G19 (nur im Zyklus aktiv)

<_AMODE>  

INT

Alternativmodus

EINER:

Bohrtiefe Z1 (abs/ink)

ZEHNER:

0 =

1 =

2 =

Kompatibilitt, aus Programmie
rung DP/DPR

inkrementell

absolut

Verweilzeit auf Endbohrtiefe DT in Se
kunden/Umdrehungen

0 =

1 =

2 =

Kompatibilitt, aus Vorzeichen 
von DTB (> 0 Sekunden oder 
< 0 Umdrehungen)

in Sekunden

in Umdrehungen

3.23.1.22

CYCLE82 - Bohren, Plansenken

Syntax     

CYCLE82(<RTP>, <RFP>, <SDIS>, <DP>, <DPR>, <DTB>, <_GMODE>, 
<_DMODE>, <_AMODE>, <_VARI>, <S_ZA>, <S_FA>, <S_ZD>, <S_FD>)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1027

 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Parameter

Nr.

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

1

2

3

4

5

6

7

8

RP

Z0

SC

Z1

Z1

DT

<RTP> 

<RFP> 

<SDIS> 

<DP> 

<DPR> 

<DTB> 

REAL

REAL

REAL

REAL

REAL

REAL

Rckzugsebene (abs)

Bezugspunkt (abs)

Sicherheitsabstand (additiv auf Bezugspunkt, ohne Vorzeichen einzu
geben)

Bohrtiefe (abs), siehe <_AMODE>

Bohrtiefe (ink), siehe <_AMODE>

Verweilzeit auf Endbohrtiefe, siehe <_AMODE>

<_GMODE> 

INT

Geometriemodus (Bewertung der programmierten Geometriewerte)

EINER: 

ZEHNER:

reserviert

Bohrtiefe bezogen auf Spitze/Schaft

0 =

1 =

Kompatibilitt, Spitze

Schaft

<_DMODE> 

INT

Anzeigemodus

EINER:

 Bearbeitungsebene G17/G18/G19

ZEHNER: 

HUNDERTER:

TAUSENDER: 

ZEHNTAUSENDER:

0 =

1 =

2 =

3 =

Kompatibilitt, es bleibt die vor 
Zyklusaufruf wirksame Ebene ak
tiv

G17 (nur im Zyklus aktiv)

G18 (nur im Zyklus aktiv)

G19 (nur im Zyklus aktiv)

reserviert

reserviert

reserviert

Technologieskalierung innerhalb von Zy
klenmasken (Seite 1113)

0 =

1 =

Eingabe: komplett

Eingabe: einfach

1028

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
Nr.

9

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<_AMODE> 

INT

Alternativmodus

Arbeitsvorbereitung

3.23 Zyklen extern programmieren

EINER:

Bohrtiefe Z1 (abs/ink)

0 =

1 =

2 =

Kompatibilitt aus Programmie
rung DP/DPR

inkrementell

absolut

ZEHNER: 

Verweilzeit DT auf Endbohrtiefe in Se
kunden/Umdrehungen

0 =

1 =

2 =

Kompatibilitt, aus Vorzeichen 
von DT (> 0 Sekunden / < 0 Um
drehungen)

in Sekunden

in Umdrehungen

HUNDERTER: 

Anbohrtiefe ZA abs/ink

0 =

1 =

inkrementell

absolut

TAUSENDER:

Bewertung Anbohrvorschub

0 =

1 =

2 =

in % vom Bohrvorschub

F/min

F/U

ZEHNTAUSENDER: 

Restbohrtiefe ZD abs/ink

0 =

1 =

inkrementell

absolut

HUNDERTTAUSENDER: 

Bewertung Restbohrvorschub

0 =

1 =

2 =

in % vom Bohrvorschub

F/min

F/U

10

<_VARI> 

INT

Bearbeitungsart Anbohren/Durchbohren  

EINER:

ZEHNER: 

HUNDERTER:

TAUSENDER: 

reserviert

reserviert

reserviert

Durchbohren

0 =

1 =

Durchbohren "Nein"

Durchbohren "Ja"

ZEHNTAUSENDER: 

Anbohren

0 =

1 =

Anbohren "Nein"

Anbohren "Ja"

11

12

ZA

FA

<S_ZA> 

REAL

<S_FA> 

REAL

Anbohrtiefe inkrementell bezogen auf Bezugspunkt oder absolut (sie
he <_AMODE> HUNDERTER)

Anbohrvorschub als Wert oder in % (in Verbindung mit <_AMODE> TAU
SENDER)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1029

 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

13

14

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

ZD

FD

<S_ZD> 

REAL

<S_FD> 

REAL

Restbohrtiefe inkrementell bezogen auf Endbohrtiefe oder absolut (in 
Verbindung mit <_AMODE> ZEHNTAUSENDER)

Restbohrvorschub als Wert oder in % (in Verbindung mit <_AMODE> 
HUNDERTTAUSENDER)

3.23.1.23

CYCLE83 - Tieflochbohren 1

Syntax     

Parameter

CYCLE83(<RTP>, <RFP>, <SDIS>, <DP>, <DPR>, <FDEP>, <FDPR>, <_DAM>, 
<DTB>, <DTS>, <FRF>, <VARI>, <_AXN>, <_MDEP>, <_VRT>, <_DTD>, 
<_DIS1>, <_GMODE>, <_DMODE>, <_AMODE>)

Nr.

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

RP

Z0

SC

Z1

Z1

D

D

DF

DTB

DTS

FD1

1

2

3

4

5

6

7

8

9

10

11

12

13

<RTP> 

<RFP> 

<SDIS> 

<DP> 

<DPR> 

<FDEP> 

<FDPR> 

<_DAM> 

<DTB> 

<DTS> 

<FRF> 

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

Rckzugsebene (abs)

Bezugspunkt (abs)

Sicherheitsabstand (additiv auf Bezugspunkt, ohne Vorzeichen einzu
geben)

Endbohrtiefe (abs), siehe <_AMODE>

Endbohrtiefe (ink), siehe <_AMODE> 

1. Bohrtiefe (abs), siehe <_AMODE>

1. Bohrtiefe (ink), siehe <_AMODE>

Degressionsbetrag/Prozentsatz fr jede weitere Zustellung, 
siehe <_AMODE> 

Verweilzeit auf Bohrtiefe, siehe <_AMODE> 

Verweilzeit am Anfangspunkt (nur bei Entspanen), siehe <_AMODE>

Prozentsatz fr den Vorschub bei der ersten Zustellung, 
siehe <_AMODE>

<VARI> 

INT

Bearbeitungsart

EINER:

Spnebrechen / Entspanen

<_AXN> 

INT

Werkzeugachse

0 =

1 =

0 =

1 =

2 =

> 2

Spnebrechen

Entspanen

3. Geometrieachse

1. Geometrieachse

2. Geometrieachse

3. Geometrieachse

14

V1

<_MDEP> 

REAL

minimale Zustellung (nur bei Prozentsatz fr Degression)

1030

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

15

V2

<_VRT> 

REAL

Rckzugsbetrag nach jeder Bearbeitung (nur bei Spnebrechen)

> 0

0 =

variabler Rckzugsbetrag

Standardwert 1 mm

16

17

18

19

DT

V3

<_DTD> 

<_DIS1> 

REAL

REAL

Verweilzeit auf Endbohrtiefe, siehe <_AMODE>

Vorhalteabstand (nur bei Entspanen), siehe <_AMODE>

<_GMODE> 

INT

Geometriemodus (Bewertung der programmierten Geometriewerte)

EINER: 

ZEHNER:

reserviert

Bohrtiefe bezogen auf Spitze/Schaft 

0 =

1 =

Spitze

Schaft

<_DMODE> 

INT 

Anzeigemodus

EINER:

Bearbeitungsebene G17/G18/G19

ZEHNER:

HUNDERTER:

TAUSENDER:

ZEHNTAUSENDER:

0 =

1 =

2 =

3 =

---

---

---

Kompatibilitt, es bleibt die vor 
Zyklusaufruf wirksame Ebene ak
tiv

G17 (nur im Zyklus aktiv)

G18 (nur im Zyklus aktiv)

G19 (nur im Zyklus aktiv)

reserviert

reserviert

reserviert

Technologieskalierung innerhalb von Zy
klenmasken (Seite 1113)

0 =

1 =

Eingabe: komplett

Eingabe: einfach

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1031

 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

20

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<_AMODE> 

INT

Alternativmodus

EINER: 

Bohrtiefe = Endbohrtiefe Z1 (abs/ink)

ZEHNER:

0 =

1 =

2 =

Kompatibilitt, aus Programmie
rung <DP>/<DPR>

inkrementell

absolut

Verweilzeit auf Bohrtiefe DTB in Sekun
den/Umdrehungen

0 =

1 =

2 =

Kompatibilitt aus Vorzeichen 
von DTB (> 0 Sekunden oder 
< 0 Umdrehungen)

in Sekunden

in Umdrehungen

HUNDERTER: 

Verweilzeit am Anfangspunkt von DTS in 
Sekunden/Umdrehungen

0 =

1 =

2 =

Kompatibilitt aus Vorzeichen 
von DTS (> 0 Sekunden oder 
< 0 Umdrehungen)

in Sekunden

in Umdrehungen

TAUSENDER:

Verweilzeit auf Endbohrtiefe DTD in Se
kunden/Umdrehungen

0 =

1 =

2 =

Kompatibilitt aus Vorzeichen 
von DTD (> 0 Sekunden oder 
< 0 Umdrehungen)

in Sekunden

in Umdrehungen

ZEHNTAUSENDER:

1. Bohrtiefe D (abs/ink)

HUNDERTTAUSENDER:

EINEMILLION:

0 =

1 =

2 =

Kompatibilitt, aus Programmie
rung <FDEPF>/<DPR>

inkrementell

absolut

Degressionsbetrag/Prozentsatz <_DAM> 
fr jede weitere Zustellung

0 =

1 =

2 =

Kompatibilitt, aus Vorzeichen 
von <_DAM> (> 0 Degressionsbe
trag oder < 0 Faktor 0,001 bis 1,0)

Degressionsbetrag

Prozentsatz (0,001 bis 100 %)

Vorhalteabstand V3 automatisch/manu
ell

0 =

1 =

Kompatibilitt aus Vorzeichen 
von <_DIS1> (= 0 automatisch 
oder > 0 manuell)

automatisch (wird im Zyklus be
rechnet)

1032

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
Nr.

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

ZEHNMILLIONEN:

Arbeitsvorbereitung

3.23 Zyklen extern programmieren

2 =

manuell (programmierter Wert)

Vorschubfaktor fr erste 
Zustellung <FRF> als Faktor/Prozentsatz

0 =

1 =

Kompatibilitt, als Faktor (0,001 
bis 1,0, FRF = 0 bedeutet 100 %)

Prozentsatz (0,001 bis 
999,999 %)

3.23.1.24

CYCLE84 - Gewindebohren ohne Ausgleichsfutter

Syntax     

Parameter

CYCLE84(<RTP>, <RFP>, <SDIS>, <DP>, <DPR>, <DTB>, <SDAC>, <MPIT>, 
<PIT>, <POSS>, <SST>, <SST1>, <_AXN>, <_PITA>, <_TECHNO>, <_VARI>, 
<_DAM>, <_VRT>, <_PITM>, <_PTAB>, <_PTABA>, <_GMODE>, <_DMODE>, 
<_AMODE>)

Nr.

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

RP

Z0

SC

Z1

Z1

DT

SDE

P

S1)

S

SR

1

2

3

4

5

6

7

8

9

10

11

12

13

<RTP> 

<RFP> 

<SDIS> 

<DP> 

<DPR> 

<DTB> 

<SDAC> 

<MPIT> 

<PIT> 

<POSS> 

<SST> 

<SST1> 

<_AXN> 

REAL

REAL

REAL

REAL

REAL

REAL

INT

REAL

REAL

REAL

REAL

REAL

INT

Rckzugsebene (abs)

Bezugspunkt (abs)

Sicherheitsabstand (additiv auf Bezugspunkt, ohne Vorzeichen einzuge
ben)

Bohrtiefe = Endbohrtiefe (abs), siehe <_AMODE>

Bohrtiefe = Endbohrtiefe (ink), siehe <_AMODE>

Verweilzeit auf Bohrtiefe in Sekunden

Drehrichtung nach Zyklusende

Gewindegre nur fr "ISO metrisch" (Steigung wird intern whrend der 
Laufzeit berechnet)

Gewindesteigung als Wert, Maeinheit siehe <_PITA>

Spindelposition fr orientierten Spindelstop

Spindeldrehzahl fr Gewindebohren

Spindeldrehzahl fr Rckzug

Bohrachse

0 =

1 =

2 =

3. Geometrieachse

1. Geometrieachse

2. Geometrieachse

 3 = 3. Geometrieachse

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1033

 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

14

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<_PITA> 

INT

Maeinheit der Gewindesteigung (Auswertung <PIT> und <MPIT>)

0 =

Steigung in mm 

1 =

Steigung in mm 

2 =

Steigung in TPI 

3 =

Steigung in inch 

4 =

MODUL 

- 
Auswertung 
<MPIT>/<PIT>

- 
Auswertung <PIT>

- Auswertung 
<PIT> 
(Gewindegnge 
pro inch)

- 
Auswertung <PIT>

- 
Auswertung <PIT>

15

<_TECHNO>  INT

Technologie1)

EINER: 

Genauhaltverhalten

0 =

1 =

2 =

3 =

Genauhaltverhalten wie vor Zyklusaufruf 
aktiv

Genauhalt G601

Genauhalt G602

Genauhalt G603

ZEHNER: 

Vorsteuerung

0 =

1 =

2 =

mit/ohne Vorsteuerung wie vor Zyklu
saufruf aktiv

mit Vorsteuerung FFWON

ohne Vorsteuerung FFWOF

HUNDERTER: 

Beschleunigung

0 =

1 =

2 =

3 =

SOFT/BRISK/DRIVE wie vor Zyklusauf
ruf aktiv

mit Ruckbegrenzung SOFT

ohne Ruckbegrenzung BRISK

reduzierte Beschleunigung DRIVE

TAUSENDER: 

MCALL Spindelbetrieb

0 =

bei MCALL Spindelbetrieb wieder aktivie
ren

1 =

bei MCALL in Lageregelung bleiben

16

<_VARI> 

INT

Bearbeitungsart

EINER:

0 =

1 =

2 =

1 Schnitt

Spnebrechen (Tieflochgewindebohren)

Entspanen (Tieflochgewindebohren) 

TAUSENDER: 

ISO/SIEMENS Modus fr Eingabemaske nicht 
relevant

0 =

1 =

Aufruf aus ISO-Kompatibilitt

Aufruf aus SIEMENS-Kontext

17

D

<_DAM> 

REAL

maximale Tiefenzustellung (nur bei Entspanen/Spnebrechen)

1034

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
Nr.

18

19

20

21

22

23

Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

V2

<_VRT> 

REAL

Rckzugsbetrag nach jeder Bearbeitung (nur bei Spnebrechen), sie
he <_AMODE>

<_PITM> 

STRING[15] String als Merker fr Gewindesteigungseingabe2)

<_PTAB> 
<_PTABA>  STRING[20] String fr Auswahl in der Gewindetabelle (z. B. "M 10", "M 12", ...)2)

String fr Gewindetabelle ("", "ISO", "BSW", "BSP", "UNC")2)

STRING[5]

<_GMODE> 

INT

Geometriemodus (Bewertung der programmierten Geometriewerte)

EINER: 

ZEHNER: 

reserviert

reserviert

<_DMODE> 

INT

Anzeigemodus

EINER: 

Bearbeitungsebene G17/G18/G19

ZEHNER: 

HUNDERTER: 

TAUSENDER: 

0 =

1 =

2 =

3 =

Kompatibilitt, es bleibt die vor Zyklu
saufruf wirksame Ebene aktiv

G17 (nur im Zyklus aktiv)

G18 (nur im Zyklus aktiv)

G19 (nur im Zyklus aktiv)

reserviert

reserviert

Kompatibilittsmode (nur fr Eingabemaske zu 
Rckbersetzen), 
wenn MD 52216 Bit0 = 11)

0 =

1 =

Technologieparameter werden ange
zeigt (Kompatibilitt): TECHNO-Parame
ter wirken 

Technologieparameter werden nicht an
gezeigt: Technologie "wie vor Zyklusauf
ruf programmiert" wirkt

ZEHNTAUSENDER:

Technologieskalierung innerhalb von Zyklen
masken (Seite 1113)

0 =

1 =

Eingabe: komplett

Eingabe: einfach

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1035

 
 
 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

24

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<_AMODE> 

INT

Alternativmodus 

EINER: 

Bohrtiefe = Endbohrtiefe Z1 (abs/ink)

0 =

1 =

2 =

Kompatibilitt, aus Programmierung 
<DP>/<DPR>

inkrementell

absolut

ZEHNER: 

HUNDERTER: 

reserviert

reserviert

TAUSENDER: 

Gewindedrehrichtung rechts/links

0 =

1 =

2 =

Kompatibilitt, aus Vorzeichen PIT/MPIT

rechts

links

ZEHNTAUSENDER: 

reserviert

HUNDERTTAUSEN
DER: 

reserviert

EINEMILLION: 

Rckzugsbetrag nach jeder Bearbeitung V2 ma
nuell/automatisch

0 =

Kompatibilitt, aus 
Programmierung <_VRT> (> 0 variabler 
Wert oder   0 Standardwert 1 mm/
0,0394 inch)

1 =

automatisch (Standardwert 1 mm/
0,0394 inch)

2 =

manuell (wie unter V2 programmiert)

1) Felder Technologie knnen ausgeblendet sein in Abhngigkeit von Settingdatum SD52216 $MCS_FUNCTI
ON_MASK_DRILL
2) Die Parameter 19, 20, und 21 werden nur bei der Gewindeauswahl in den Gewindetabellen der Eingabemaske verwendet. 
Ein Zugriff auf die Gewindetabellen ber Zyklusdefinition bei Zykluslaufzeit ist nicht mglich.

3.23.1.25

CYCLE85 - Reiben

Syntax     

Parameter

CYCLE85(<RTP>, <RFP>, <SDIS>, <DP>, <DPR>, <DTB>, <FFR>, <RFF>, 
<_GMODE>, <_DMODE>, <_AMODE>)

Nr.

1

2

3

1036

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

RP

Z0

SC

<RTP> 

<RFP> 

<SDIS> 

REAL

REAL

REAL

Rckzugsebene (abs)

Bezugspunkt (abs)

Sicherheitsabstand (additiv auf Bezugspunkt, ohne Vorzeichen einzu
geben)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

4

5

6

7

8

9

10

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

Z1

Z1

DT

F

FR

<DP> 

<DPR> 

<DTB> 

<FFR> 

<RFF> 

REAL

REAL

REAL

REAL

REAL

<_GMODE> 

<_DMODE> 

INT

INT

Bohrtiefe (abs), siehe <_AMODE>

Bohrtiefe (ink), siehe <_AMODE>

Verweilzeit auf Endbohrtiefe, siehe <_AMODE>

Vorschub

Vorschub beim Rckzug

reserviert

Anzeigemodus

EINER:

Bearbeitungsebene G17/G18/G19

0 =

1 =

2 =

3 =

Kompatibilitt, es bleibt die vor 
Zyklusaufruf wirksame Ebene ak
tiv

G17 (nur im Zyklus aktiv)

G18 (nur im Zyklus aktiv)

G19 (nur im Zyklus aktiv)

11

<_AMODE> 

INT

Alternativmodus (Bohren)

EINER:

Bohrtiefe Z1 (abs/ink)

ZEHNER: 

0 =

1 =

2 =

Kompatibilitt, aus Programmie
rung DP/DPR

inkrementell

absolut

Verweilzeit DT auf Endbohrtiefe in Se
kunden/Umdrehungen

0 =

1 =

2 =

Kompatibilitt, aus Vorzeichen 
von DT (> 0 Sekunden oder 
< 0 Umdrehungen)

in Sekunden

in Umdrehungen 

3.23.1.26

CYCLE86 - Ausdrehen

Syntax     

Parameter

CYCLE86(<RTP>, <RFP>, <SDIS>, <DP>, <DPR>, <DTB>, <SDIR>, <RPA>, 
<RPO>, <RPAP>, <POSS>, <_GMODE>, <_DMODE>, <_AMODE>)

Nr.

1

2

3

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

RP

Z0

SC

<RTP> 

<RFP> 

<SDIS> 

REAL

REAL

REAL

Rckzugsebene (abs)

Bezugspunkt (abs)

Sicherheitsabstand (additiv auf Bezugspunkt, ohne Vorzeichen einzu
geben)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1037

 
 
 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

4

5

6

7

8

9

10

11

12

13

Z1

Z1

DT

DIR

DX

DY

DZ

SPOS

<DP> 

<DPR> 

<DTB> 

<SDIR> 

<RPA> 

<RPO> 

<RPAP> 

<POSS> 

REAL

REAL

REAL

INT

REAL

REAL

REAL

REAL

Bohrtiefe (abs), siehe <_AMODE>

Bohrtiefe (ink), siehe <_AMODE>

Verweilzeit auf Endbohrtiefe, siehe <_AMODE>

Spindeldrehrichtung

3 =

4 =

M3

M4

Abhebebetrag in X-Richtung

Abhebebetrag in Y-Richtung

Abhebebetrag in Z-Richtung

Spindelposition zum Abheben (fr orientierten Spindelhalt, in Grad)

<_GMODE> 

INT

Geometriemodus (Bewertung der programmierten Geometriewerte)

EINER: 

Abhebemodus

<_DMODE> 

INT

Anzeigemodus

EINER:

Bearbeitungsebene G17/G18/G19

0 =

1 =

abheben, Kompatibilitt

nicht abheben

14

<_AMODE> 

INT

Alternativmodus

EINER:

Bohrtiefe Z1 (abs/ink)

0 =

1 =

2 =

3 =

Kompatibilitt, es bleibt die vor 
Zyklusaufruf wirksame Ebene ak
tiv

G17 (nur im Zyklus aktiv)

G18 (nur im Zyklus aktiv)

G19 (nur im Zyklus aktiv)

ZEHNER:

0 =

1 =

2 =

Kompatibilitt, aus Programmie
rung <DP>/<DPR> 

inkrementell

absolut

Verweilzeit auf Endbohrtiefe DT in Se
kunden/Umdrehungen

0 =

1 =

2 =

Kompatibilitt, aus Vorzeichen 
von DT (> 0 Sekunden oder 
< 0 Umdrehungen)

in Sekunden 

in Umdrehungen

3.23.1.27

CYCLE92 - Abstich

Syntax     

1038

CYCLE92(<_SPD>, <_SPL>, <_DIAG1>, <_DIAG2>, <_RC>, <_SDIS>, <_SV1>, 
<_SV2>, <_SDAC>, <_FF1>, <_FF2>, <_SS2>, <_DIAGM>, <_VARI>, <_DN>, 
<_DMODE>, <_AMODE>)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Parameter

Nr.

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

X0

Y0

X1

X2

R/FS

SC

S

V

SV

DIR

F

FR

SR

XM

1

2

3

4

5

6

7

8

9

10

11

12

13

14

15

20

<_SPD> 

<_SPL> 

REAL

REAL

Bezugspunkt (abs, immer Durchmesser)

Bezugspunkt (abs)

<_DIAG1>  REAL

Tiefe fr Drehzahlreduzierung, siehe <_AMODE> (EINER)

<_DIAG2>  REAL

Endtiefe, siehe <_AMODE> (ZEHNER)

<_RC> 

<_SDIS> 

REAL

REAL

Verrundusradius oder Fasebreite, siehe <_AMODE> (TAUSENDER)

Sicherheitsabstand (additiv auf Bezugspunkt, ohne Vorzeichen einzu
geben)

<_SV1> 

REAL

konstante Spindeldrehzahl, siehe <_AMODE> (ZEHNTAUSENDER)

<_SV2> 

REAL

Maximaldrehzahl bei konstanter Schnittgeschwindigkeit

konstante Schnittgeschwindigkeit

<_SDAC> 

INT

Spindeldrehrichtung

3 =

4 =

fr M3

fr M4

<_FF1> 

<_FF2> 

<_SS2> 

REAL

REAL

REAL

Vorschub bis Tiefe fr Drehzahlreduzierung

reduzierter Vorschub bis Endtiefe

reduzierte Drehzahl bis Endtiefe

<_DIAGM>  REAL

Tiefe Teilefnger ausfahren (abs, immer Durchmesser)

<_VARI> 

INT

Bearbeitungsart

EINER: 

Rckzug

0 =

1 =

Rckzug auf <_SPD> + <_SDIS>

kein Rckzug am Ende

ZEHNER: 

Teilefnger

<_DN> 

<_DMODE> 

INT

INT

0 =

1 =

Nein, kein M-Befehl ausfhren

Ja, Aufruf von CUST_TECH
CYC(101)- Schublade ausfah
ren, CUST_TECHCYC(102)- 
Schublade schlieen

D-Nummer fr 2. Schneide, wenn nicht programmiert  D+1

Anzeigemodus

EINER: 

Bearbeitungsebene G17/G18/G19

0 =

1 =

2 =

3 =

Kompatibilitt, es bleibt die vor 
Zyklusaufruf wirksame Ebene ak
tiv

G17 (nur im Zyklus aktiv)

G18 (nur im Zyklus aktiv)

G19 (nur im Zyklus aktiv)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1039

 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

21

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<_AMODE> 

INT

Alternativmodus

EINER: 

Tiefe fr Drehzahlreduzierung 
(<_DIAG1>)

0 =

1 =

absolut, Wert der Planachse im 
Durchmesser

inkrementell, Wert der Planachse 
im Radius

ZEHNER: 

Endtiefe (<_DIAG2>)

HUNDERTER: 

TAUSENDER: 

ZEHNTAUSENDER: 

0 =

1 =

absolut, Wert der Planachse im 
Durchmesser

inkrementell, Wert der Planachse 
im Radius

reserviert

Radius/Fase (<_RC>)

0 =

1 =

Radius

Fase

Spindeldrehzahl/Schnittgeschwindigkeit 
(<_SV1>)

0 =

1 =

konstante Spindeldrehzahl

 konstante Schnittgeschwindig
keit

3.23.1.28

CYCLE95 - Konturabspanen

Syntax

Parameter

CYCLE95(<NPP>, <MID>, <FALZ>, <FALX>, <FAL>, <FF1>, <FF2>, <FF3>, 
<_VARI>, <DT>, <DAM>, <_VRT>, <_GMODE>, <_DMODE>)

Nr.

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

1

2

3

4

5

6

7

8

1040

CON

<NPP> 

STRING
[140]

Konturname

D

UZ

UX

U

F

FY

FS

<MID> 

<FALZ> 

<FALX> 

<FAL> 

<FF1> 

<FF2> 

<FF3> 

REAL

REAL

REAL

REAL

REAL

REAL

REAL

maximale Tiefenzustellung beim Schruppen, siehe <_GMODE>

Schlichtaufma in Z

Schlichtaufma in X

Schlichtaufma konturparallel (wirkt in beiden Achsen)

Vorschub fr Schruppen

Eintauchvorschub Hinterschnitte

Schlichtvorschub

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
Nr.

9

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<_VARI> 

INT

Bearbeitungsart

EINER und ZEHNER:

HUNDERTER:

Arbeitsvorbereitung

3.23 Zyklen extern programmieren

1 =

2 =

3 =

4 =

5 =

6 =

7 =

8 =

9 =

Schruppen, lngs, Auen

Schruppen, plan, Auen

Schruppen, lngs, Innen 

Schruppen, plan, Innen 

Schlichten, lngs, Auen 

Schlichten, plan, Auen 

Schlichten, lngs, Innen 

Schlichten, plan, Innen 

Komplettbearbeitung, lngs, Au
en 

10 = Komplettbearbeitung, plan, Au

en

11 = Komplettbearbeitung, lngs, In

nen

12 = Komplettbearbeitung, plan, Innen

0 =

1 =

2 =

mit Nachziehen an der Kontur, 
ohne Restecken

ohne Nachziehen an der Kontur

Nachziehen nur bis zum vorheri
gen Schnittpunkt, es knnen Re
stecken entstehen

10

11

12

13

DT

DI

VRT

<DT> 

<DAM> 

<_VRT> 

REAL

REAL

REAL

Verweilzeit bei Vorschubunterbrechung

Abstand Vorschubunterbrechungen

Abhebweg von der Kontur

<_GMODE> 

INT

Geometriemodus (Bewertung der programmierten Geometriewerte)

EINER: 

Bewertung der Zustelltiefe

0 =

intern wird ein Abhebweg von 
1 mm unabhngig vom Masys
tem inch/metrisch verwendet

> 0 = Abhebweg 

0 =

1 =

Zustelltiefe wird entsprechend 
G-Gruppe DIAMON/DIAMOF 
verrechnet

Zustelltiefe wirkt als Radiuswert 
(unabhngig vom DIAMON/
DIAMOF)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1041

 
 
 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

14

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<_DMODE> 

INT

Anzeigemodus

EINER: 

Bearbeitungsebene G17/G18/G19

TAUSENDER:

0 =

1 =

2 =

3 =

0 =

1 =

Kompatibilitt, es bleibt die vor 
Zyklusaufruf wirksame Ebene ak
tiv

G17 (nur im Zyklus aktiv)

G18 (nur im Zyklus aktiv)

G19 (nur im Zyklus aktiv)

Kompatibilittsmodus: Konturna
me steht in NPP

Konturname wird im CYCLE62 
programmiert und in 
_SC_CONT_NAME bergeben

3.23.1.29

CYCLE98 - Gewindekette

Syntax     

Parameter

CYCLE98(<_PO1>, <_DM1>, <_PO2>, <_DM2>, <_PO3>, <_DM3>, <_PO4>, 
<_DM4>, <APP>, <ROP>, <TDEP>, <FAL>, <_IANG>, <NSP>, <NRC>, <NID>, 
<_PP1>, <_PP2>, <_PP3>, <_VARI>, <_NUMTH>, <_VRT>, <_MID>, <_GDEP>, 
<_IFLANK>, <_PITA>, <_PITM1>, <_PITM2>, <_PITM3>, <_DMODE>, <_AMODE>)

Nr.

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

1

2

3

4

5

6

7

8

Z0

X0

Z1

X1

X1

Z2

X2

X2

Z3

X3

X3

<_PO1> 

<_DM1> 

<_PO2> 

<_DM2> 

REAL

REAL

REAL

REAL

Bezugspunkt in Z (abs)

Bezugspunkt in X (abs), im Durchmesser

Zwischenpunkt 1 in Z, (abs/ink), siehe <_AMODE> (EINER)

Zwischenpunkt 1 in X (abs/ink), siehe <_AMODE> (ZEHNER) oder

 Gewindeschrge 1 (-90 bis 90) 

abs immer Durchmesser, ink immer Radius

<_PO3> 

<_DM3> 

REAL

REAL

Zwischenpunkt 2 in Z, (abs/ink), siehe <_AMODE> (HUNDERTER)

Zwischenpunkt 2 in X (abs/ink), siehe <_AMODE> (TAUSENDER) oder

Gewindeschrge 2 (-90 bis 90) 

abs immer Durchmesser, ink immer Radius

<_PO4> 

<_DM4> 

REAL

REAL

Endpunkt in Z (abs/ink), siehe <_AMODE> (ZEHNTAUSENDER)

Endpunkt in X, (abs/ink), siehe <_AMODE> (HUNDERTTAUSENDER) 
oder

Gewindeschrge 3 (-90 bis 90) 

abs immer Durchmesser, ink immer Radius

9

LW

<APP> 

REAL

Gewindevorlauf (ink, ohne Vorzeichen einzugeben)

1042

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

10

11

12

13

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<ROP> 

<TDEP> 

<FAL> 

<_IANG> 

REAL

REAL

REAL

REAL

LR

H1

U

DP

P

Gewindeauslauf (ink, ohne Vorzeichen einzugeben)

Gewindetiefe (ink, ohne Vorzeichen einzugeben)

Schlichtaufma in X und Z

Zustellschrge als Abstand oder Winkel, siehe <_AMODE> (EINEMIL
LION)

Die Zustellschrge wirkt entsprechend der Einstellung 
Parameter <_VARI> (HUNDERTER).

Definition fr <_VARI_HUNDERTER = 0 -
 Kompatibilittsmode:

> 0 = Flankenzustellung an einer Flan

ke

0 =

Zustellung senkrecht im Gewinde

< 0 = Flankenzustellung mit alternier

enden Flanken

Definition fr _VARI_HUNDERTER<>0:

> 0 = Zustellung an der positiven Flan

ke

0 =

mittige Zustellung

< 0 = Zustellung an der negativen Flan

ke

14

15

16

17

18

19

0

NN

P0

P1

P2

<NSP> 

<NRC> 

<NID> 

<_PP1> 

<_PP2> 

<_PP3> 

REAL

Startwinkelversatz fr den 1. Gewindegang 

INT

INT

REAL

REAL

REAL

Anzahl der Schruppschnitte, siehe <_VARI> (ZEHNTAUSENDER)

Anzahl Leerschnitte

Gewindesteigung 1. Gewindeabschnitt, siehe <_PITA>

Gewindesteigung 2. Gewindeabschnitt, siehe <_PITA>

Gewindesteigung 3. Gewindeabschnitt, siehe <_PITA>

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1043

 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

20

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<_VARI> 

INT

Bearbeitung

EINER: 

Technologie

1 =

2 =

3 =

4 =

Auengewinde mit linearer Zu
stellung

Innengewinde mit linearer Zustel
lung

Auengewinde mit degressiver 
Zustellung, Spanquerschnitt 
bleibt konstant

Innengewinde mit degressiver 
Zustellung, Spanquerschnitt 
bleibt konstant

ZEHNER: 

HUNDERTER: 

reserviert

Zustellungsart

0 =

1 =

2 =

Kompatibilittsmode 
fr <_IANG>

einseitige Zustellung

wechselnde Zustellung

TAUSENDER: 

reserviert

ZEHNTAUSENDER: 

Alternative Tiefenzustellung

0 =

1 =

Kompatibilitt, Vorgabe Anzahl 
der Schruppschnitte (<_NRC>)

Vorgabe Wert fr 1. Zustellung 
(<_MID>)

HUNDERTTAUSENDER: 

Bearbeitungsart

0 =

1 =

2 =

3 =

Kompatibilitt (Schruppen und 
Schlichten)

Schruppen

Schlichten

Schruppen und Schlichten

EINEMILLION: 

Bearbeitungsreihenfolge bei mehrgngi
gen Gewinde

21

22

N

<_NUMTH> 

INT

Anzahl Gewindegnge

<_VRT> 

REAL

Rcklaufabstand (ink)

0 =

1 =

0 =

Reihenfolge der Gnge aufstei
gend

Reihenfolge der Gnge gegen
ber

intern wird ein Abhebweg von 
1 mm unabhngig vom Masys
tem inch/metrisch verwendet

> 0 = Abhebweg

23

D1

<_MID> 

REAL

erste Zustellung, siehe <_VARI> (ZEHNTAUSENDER)

1044

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
Nr.

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

24

DA

<_GDEP> 

REAL

Gangwechseltiefe (wirkt nur bei "mehrgngig")

Arbeitsvorbereitung

3.23 Zyklen extern programmieren

25

26

27

28

29

30

0 =

keine Gangwechseltiefe berck
sichtigen

> 0 = Gangwechseltiefe bercksichti

gen

<_IFLANK>  REAL

Zustellschrge als Breite (nur fr die Oberflche)

<_PITA> 

INT

Bewertung der Gewindesteigung

0 =

1 =

2 =

3 =

4 =

Kompatibilittsmode fr Gewin
desteigung, Auswertung <_PP1> 
bis <_PP3> wie bisher entspre
chend aktivem System metrisch/
inch

Steigung in mm

Steigung in TPI (Gewindegnge 
pro inch) 

Steigung in inch 

MODUL

<_PITM1>  STRING[15] String als Merker fr Gewindesteigungseingabe (nur fr die Oberflche) 

<_PITM2>  STRING[15] String als Merker fr Gewindesteigungseingabe (nur fr die Oberflche)

<_PITM3>  STRING[15] String als Merker fr Gewindesteigungseingabe (nur fr die Oberflche)

<_DMODE> 

INT

Anzeigemodus

EINER: 

Bearbeitungsebene G17/G18/G19

ZEHNER:

HUNDERTER:

TAUSENDER:

ZEHNTAUSENDER:

0 =

1 =

2 =

3 =

---

---

---

Kompatibilitt, es bleibt die vor 
Zyklusaufruf wirksame Ebene ak
tiv

G17 (nur im Zyklus aktiv)

G18 (nur im Zyklus aktiv)

G19 (nur im Zyklus aktiv)

reserviert

reserviert

reserviert

Technologieskalierung innerhalb von Zy
klenmasken (Seite 1113)

0 =

1 =

Eingabe: komplett

Eingabe: einfach

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1045

 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

31

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<_AMODE> 

INT

Alternativmodus

EINER: 

1. Zwischenpunkt in Z (Z1)

0 =

1 =

absolut 

inkrementell

ZEHNER: 

 1. Zwischenpunkt in X (X1)

0 =

1 =

2 =

absolut 

inkrementell



HUNDERTER: 

2. Zwischenpunkt in Z (Z2)

0 =

1 =

absolut 

inkrementell

TAUSENDER: 

2. Zwischenpunkt in X (X2)

0 =

1 =

2 =

absolut 

inkrementell



ZEHNTAUSENDER: 

Endpunkt in Z (Z3)

0 =

1 =

absolut 

inkrementell

HUNDERTTAUSENDER: 

Endpunkt in X (X3)

EINEMILLION: 

0 =

1 =

2 =

absolut 

inkrementell



Auswahl Zustellschrge als Winkel oder 
Breite

0 =

1 =

Zustellwinkel <_IANG>

Zustellschrge <_IFLANK>

ZEHNMILLIONEN: 

eingngig/mehrgngig

0 =

1 =

Kompatibilittsmodus (Startwin
kel <_NSP> wird ausgewertet)

eingngig (mit Startwinkelver
satz <_NSP>)

2 =

mehrgngig

3.23.1.30

CYCLE99 - Gewindedrehen

Syntax   

1046

CYCLE99(<_SPL>, <_SPD>, <_FPL>, <_FPD>, <_APP>, <_ROP>, <_TDEP>, 
<_FAL>, <_IANG>, <_NSP>, <_NRC>, <_NID>, <_PIT>, <_VARI>, <_NUMTH>, 
<_SDIS>, <_MID>, <_GDEP>, <_PIT1>, <_FDEP>, <_GST>, <_GUD>, 
<_IFLANK>, <_PITA>, <_PITM>, <_PTAB>, <_PTABA>, <_DMODE>, <_AMODE>, 
<_S_XRS>)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Parameter

Nr.

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

1

2

3

4

5

6

7

8

9

10

11

12

13

Z0

X0

Z1

X1

LW/LW2

LR

H1

U

DP

P

0

ND

NN

P

<_SPL> 

<_SPD> 

<_FPL> 

<_FPD> 

<_APP> 

<_ROP> 

<_TDEP> 

<_FAL> 

<_IANG> 

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

Bezugspunkt (abs)

Bezugspunkt (abs, immer Durchmesser)

Endpunkt in Verbindung mit <_AMODE> (EINER)

Endpunkt, in Verbindung mit <_AMODE> (ZEHNER)

Gewindevorlauf in Verbindung mit <_AMODE> (HUNDERTER) oder

Gewindeeinlauf = Gewindeauslauf in Verbindung mit <_AMODE> (HUN
DERTER)

Gewindeauslauf

Gewindetiefe

Schlichtaufma in X und Z

Zustellschrge als Abstand oder Winkel, in Verbindung mit <_AMODE> 
(TAUSENDER)

> 0 = Zustellung an der positiven Flan

ke

< 0 = Zustellung an der negativen Flan

ke

0 =

mittige Zustellung

<_NSP> 

<_NRC> 

<_NID> 

<_PIT> 

REAL

INT

INT

REAL

Startwinkelversatz (wirkt nur bei "eingngig")

Anzahl Schruppschnitte, in Verbindung mit <_VARI> (ZEHNTAUSEN
DER)

Anzahl Leerschnitte

Gewindesteigung als Wert, in Verbindung mit <_PITA>

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1047

 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

14

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<_VARI> 

INT

Bearbeitungsart

EINER: 

Technologie

1 =

2 =

3 =

4 =

Auengewinde mit linearer Zu
stellung

Innengewinde mit linearer Zustel
lung

Auengewinde mit degressiver 
Zustellung, Spanquerschnitt 
bleibt konstant

Innengewinde mit degressiver 
Zustellung, Spanquerschnitt 
bleibt konstant

ZEHNER: 

HUNDERTER: 

reserviert

Zustellungsart

1 =

2 =

einseitige Zustellung

wechselnde Zustellung

TAUSENDER: 

reserviert

ZEHNTAUSENDER: 

Alternative Tiefenzustellung

0 =

1 =

Vorgabe Anzahl der Schrupp
schnitte (<_NRC>)

Vorgabe Wert fr 1. Zustellung 
(<_MID>)

HUNDERTTAUSENDER: 

Bearbeitungsart

EINEMILLION: 

1 =

2 =

3 =

Schruppen

Schlichten

Schruppen und Schlichten

Bearbeitungsreihenfolge bei mehrgngi
gen Gewinde

0 =

1 =

Reihenfolge der Gnge aufstei
gend

Reihenfolge der Gnge gegen
ber

15

16

17

18

N

VR

D1

DA

<_NUMTH> 

INT

Anzahl Gewindegnge

<_SDIS> 

<_MID> 

<_GDEP> 

REAL

REAL

REAL

Rcklaufabstand, ink

Erste Zustelltiefe, in Verbindung mit <_VARI> (ZEHNTAUSENDER)

Gangwechseltiefe (wirkt nur bei "mehrgngig"

0 =

keine Gangwechseltiefe berck
sichtigen

> 0 = Gangwechseltiefe bercksichti

gen

1048

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

19

G

<_PIT1> 

REAL

nderung der Steigung pro Umdrehung

0 =

Gewindesteigung ist konstant 
(G33)

> 0 = Gewindesteigung wird grer 

(G34)

< 0 = Gewindesteigung wird kleiner 

(G35)

<_FDEP> 

REAL

Eintauchtiefe (ohne Vorzeichen einzugeben)

N1

<_GST> 

INT

Startgang N1 = 1...N, in Verbindung mit <_AMODE> (HUNDERTTAU
SENDER)

<_GUD> 

INT

reserviert

<_IFLANK>  REAL

Zustellschrge als Breite (nur fr die Oberflche)

<_PITA> 

INT

Maeinheit der Gewindesteigung (Auswertung PIT und/oder MPIT)

0 =

1 =

2 =

3 =

4 =

Steigung in mm - Auswertung 
MPIT/PIT

Steigung in mm - Auswertung PIT

Steigung in TPI - Auswertung PIT 
(Gewindegnge pro inch)

Steigung in inch - Auswertung PIT

MODUL - Auswertung PIT

<_PITM> 

STRING[15] String als Merker fr Gewindesteigungseingabe (nur fr die Oberfl

che)1)

<_PTAB> 
<_PTABA>  STRING[20] String fr Auswahl in der Gewindetabelle (nur fr die Oberflche)1)

STRING[20] String fr Gewindetabelle (nur fr die Oberflche)1)

<_DMODE> 

INT

Anzeigemodus

EINER: 

Bearbeitungsebene G17/G18/G19

20

21

22

23

24

25

26

27

28

0 =

1 =

2 =

3 =

Kompatibilitt, es bleibt die vor 
Zyklusaufruf wirksame Ebene ak
tiv

G17 (nur im Zyklus aktiv)

G18 (nur im Zyklus aktiv)

G19 (nur im Zyklus aktiv)

ZEHNER: 

Gewindeart

HUNDERTER:

TAUSENDER:

ZEHNTAUSENDER:

0 =

1 =

2 =

---

---

Lngsgewinde

Plangewinde

Kegelgewinde

reserviert

reserviert

Technologieskalierung innerhalb von Zy
klenmasken (Seite 1113)

0 =

1 =

Eingabe: komplett

Eingabe: einfach

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1049

 
 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

29

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<_AMODE> 

INT

Alternativmodus 

EINER: 

ZEHNER: 

Gewindelnge in Z

0 =

1 =

absolut 

inkrementell

Gewindelnge in X

0 =

1 =

absolut, Wert der Planachse im 
Durchmesser

inkrementell, Wert der Planachse 
im Radius

2 =



HUNDERTER: 

Vorlauf-/Einlaufwegbewertung <_APP>

TAUSENDER: 

0 =

1 =

2 =

Gewindevorlauf <_APP>

Gewindeeinlauf = Gewindeaus
lauf
 <_APP> = -<_ROP>

Gewindeeinlaufweg vorgeben
 <_APP> = -<_APP>

Auswahl Zustellschrge als Winkel oder 
Breite

0 =

1 =

Zustellwinkel <_IANG>

Zustellschrge <_IFLANK>

ZEHNTAUSENDER: 

eingngig/mehrgngig

0 =

eingngig (mit Startwinkelver
satz <_NSP>)

1 =

mehrgngig

HUNDERTTAUSENDER: 

Startgang <_GST>

EINEMILLION:

0 =

1 =

komplette Bearbeitung

ab diesem Gang die Bearbeitung 
starten

2 =

nur diesen Gang bearbeiten

Durchhangskompensation bei Lngsge
winde

0 =

Segmenthhe balliges Gewinde 
XS

1 =

Radius balliges Gewinde RS

30

XS / RS

<_S_XRS>

REAL

Duchhangkompensation bei Lngsgewinde in Verbindung 
mit <_AMODE>: EINEMILLION

Hinweis

1) Die Parameter <_PITM>, <_PTAB> und <_PTABA> werden nur bei der Gewindeauswahl in 
den Gewindetabellen der Eingabemaske verwendet. 
Ein Zugriff auf die Gewindetabellen ber Zyklusdefinition bei Zykluslaufzeit ist nicht mglich.

1050

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

3.23.1.31

CYCLE435 - Abrichterkoordinatensystem setzen

Syntax     

Parameter

CYCLE435(<_T>, <_DD>, <S_TA>, <S_DA>, <S_AD>, <S_AL>, <S_PVD>, 
<S_PVL>, <S_PD>, <S_PL>, <_AMODE>)

Nr.

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

1

2

3

4

5

6

7

8

9

10

11

<_T> 

<_DD> 

<S_TA> 

<S_DA> 

<S_AD> 

<S_AL> 

<S_PVD> 

<S_PVL> 

<S_PD> 

<S_PL> 

STRING[32] Werkzeugname der Schleifscheibe

INT

Schneidennummer der Schleifscheibe

STRING[32] Bezugspunkt Abrichter - Name des Abrichters

INT

REAL

REAL

REAL

REAL

REAL

REAL

Schneidennummer des Abrichters

Abrichtbetrag Durchmesser

Abrichtbetrag plan

Profilierverschiebung Durchmesser

Profilierverschiebung plan

Profilieraufma Durchmesser

Profilieraufma plan

<_AMODE> 

INT

Alternativmodus

EINER:

aktives Werkzeug bei Zyklenende

0 =

1 =

Abrichter aktiv

Scheibe aktiv

3.23.1.32

CYCLE495 - Profilieren

Syntax     

Parameter

CYCLE495(<_T>, <_DD>, <_SC>, <_F>, <_VARI>, <_D>, <_DX>, <_DZ>, 
<S_PA>, <S_N>, <_DMODE>, <_AMODE>, <S_FW>, <S_HW>)

Nr.

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

1

2

3

4

<_T> 

<_DD> 

<_SC> 

<_F> 

STRING[20] Werkzeugname der Schleifscheibe

INT

REAL

REAL

Schneidennummer der Schleifscheibe

Abhebebetrag zum Umfahren von Hindernissen, inkrementell

Vorschub Profilieren

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1051

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

5

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<_VARI> 

INT

Bearbeitungsart

EINER:

ZEHNER: 

Profilierungsart

1 =

2 =

achsparallel

konturparallel

Bearbeitungsrichtung

0 =

ziehend

mglich mit den Schneidenlagen 
1 bis 4

1 =

stoend

mglich mit den Schneidenlagen 
1 bis 4

2 =

wechselnd

mglich mit den Schneidenlagen 
1 bis 8

3 =

Anfang  Ende

mglich mit den Schneidenlagen 
1 bis 8

4 =

Ende  Anfang

mglich mit den Schneidenlagen 
1 bis 8

HUNDERTER:

Zustellrichtung

1 =

2 =

3 =

4 =

Zustellung X- bei G18 bzw. Y- bei 
G19

Zustellung X+ bei G18 bzw. Y+ 
bei G19

Zustellung Z- bei G18 und bei 
G19

Zustellung Z+ bei G18 und bei 
G19

Abrichtbetrag bei der Profilierart achsparallel

Abrichtbetrag X bei G18 bzw. Y bei G19 bei der Profilierart konturparallel

Abrichtbetrag Z bei G18 und G19 bei der Profilierart konturparallel

Profilieraufma

Anzahl der Hbe im Profilierprogramm

Anzeigemodus

EINER:

Bearbeitungsebene G17/G18/G19

0 =

1 =

2 =

3 =

Kompatibilitt, es bleibt die vor 
Zyklusaufruf wirksame Ebene ak
tiv

G17 (nur im Zyklus aktiv)

G18 (nur im Zyklus aktiv)

G19 (nur im Zyklus aktiv)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

<_D> 

<_DX> 

<_DZ> 

<S_PA> 

<S_N> 

<_DMODE> 

REAL

REAL

REAL

REAL

INT

INT

6

7

8

9

10

11

1052

 
 
 
 
 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

12

13

14

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<_AMODE> 

INT

Alternativmodus

EINER:

Auswahl Profilieren Neu/Fortsetzen

1 =

2 =

Neu

Fortsetzen

ZEHNER: 

Auswahl Profilieraufma

0 =

1 =

von der Rohkontur bis zum tief
sten Punkt der Kontur

von der Rohkontur bis zum hch
sten Punkt der Kontur

<S_FW> 

<S_HW> 

REAL

REAL

Freiwinkel des Abrichters

Halterwinkel des Abrichters

3.23.1.33

CYCLE800 - Schwenken Ebene / Schwenken Werkzeug / Ausrichten Werkzeug

Syntax     

Parameter

CYCLE800(<_FR>, <_TC>, <_ST>, <_MODE>, <_X0>, <_Y0>, <_Z0>, <_A>, 
<_B>, <_C>, <_X1>, <_Y1>, <_Z1>, <_DIR>, <_FR_I>, <_DMODE>)

Nr.

1

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<_FR> 

INT

Freifahrmodus:

0 =

1 =

2 =

3 =

4 =

5 =

2

<_TC> 

STRING[32] Name Schwenkdatensatz:

""

kein Freifahren

Freifahren Maschinenachse Z

Freifahren Maschinenachse Z 
und danach XY

reserviert

Freifahren in Werkzeugrichtung 
maximal

Freifahren in Werkzeugrichtung 
inkrementell

(kein Name) wenn nur 1 
Schwenkdatensatz vorhanden

"0"

Abwahl Schwenkdatensatz (L
schen der Schwenkframes)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1053

 
 
 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

3

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<_ST> 

INT

Status Transformationen

EINER:

ZEHNER: 

HUNDERTER: 

0 =

1 =

Neu , Schwenkebene wird ge
lscht und mit den aktuellen Pa
rametern neu berechnet

Additiv , Schwenkebene setzt ad
ditiv auf aktive Schwenkebene 
auf

Werkzeugspitze nachfhren ja/nein (nur 
aktiv, wenn in IBN SCHWENKEN Funk
tion eingerichtet ist)

0 =

1 =

Werkzeugspitze nicht nachfhren

Werkzeugspitze nachfhren 
(TRAORI)

Werkzeug anstellen / ausrichten (Funkti
on wird in Eingabemaske SCHWENKEN 
Werkzeug angezeigt)

0 =

1 =

2 =

3 =

Werkzeug nicht anstellen

Werkzeug (vorzugweise Radien
frser) anstellen

Drehwerkzeug ausrichten (wenn 
B-Achskinematik fr Drehtechno
logie in IBN Schwenken einge
richtet ist)

Frswerkzeug ausrichten (wenn 
B-Achskinematik fr Drehtechno
logie in IBN Schwenken einge
richtet ist)

TAUSENDER: 

interner Parameter Schwenken in JOG 

ZEHNTAUSENDER: 

siehe Parameter Richtung <_DIR>

0 =

1 =

2 =

Schwenken "ja"

Schwenken "nein" Richtung "Mi
nus" 3)

Schwenken "nein" Richtung 
"Plus" 3)

HUNDERTTAUSENDER: 

siehe Parameter Richtung <_DIR>

0 =

1 =

2 =

Kompatibilitt

Richtungsauswahl "Minus" opti
miert (nur fr Bedienoberflche) 4)

Richtungsauswahl "Plus" opti
miert (nur fr Bedienoberflche) 4)

1054

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<_MODE> 5)

INT

Schwenkmodus: Auswertung der Schwenkwinkel und der Schwenkrei
henfolge (bitcodiert!)

Bit: 7 6

Bit: 5 4 3 2 1 0 
(bei Raumwinkeln ohne Be
deutung!)

0 0:

0 1:

1 0:

1 1:

Schwenkwinkel achsweise -> sie
he Parameter <_A>, <_B>, 
<_C> 

Raumwinkel -> siehe 
Parameter <_A>, <_B> 1) 

Projektionswinkel -> siehe Para
meter <_A>, <_B>,
 <_C> 1) 

Schwenkmodus Rundachsen di
rekt -> siehe Parameter <_A>, 
<_B> 1) 

x x x x 0 1      1.Drehung _A um X

x x x x 1 0      1.Drehung _A um Y

x x x x 1 1      1.Drehung _A um Z

x x 0 1 x x      2.Drehung _B um X

x x 1 0 x x      2.Drehung _B um Y

x x 1 1 x x      2.Drehung _B um Z

0 1 x x x x      3.Drehung _C um X

1 0 x x x x      3.Drehung _C um Y

1 1 x x x x      3.Drehung _C um Z

X0

Y0

Z0

X(A)

Y(B)

Z(C)

X1

Y1

Z1

<_X0> 

<_Y0> 

<_Z0> 

<_A> 

<_B> 

<_C> 

<_X1> 

<_Y1> 

<_Z1> 

- oder +

<_DIR> 

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

INT

Bezugspunkt X vor der Drehung

Bezugspunkt Y vor der Drehung

Bezugspunkt Z vor der Drehung

1. Drehung laut Einstellung in Parameter <_MODE>

2. Drehung laut Einstellung in Parameter <_MODE>

3. Drehung laut Einstellung in Parameter <_MODE>

Bezugspunkt X nach der Drehung

Bezugspunkt Y nach der Drehung

Bezugspunkt Z nach der Drehung

Verfahrbewegung der Rundachsen auslsen (default = -1!)

Nr.

4

5

6

7

8

9

10

11

12

13

14

15

FR

<_FR_I> 

REAL

Wert (ink) Freifahren in Werkzeugrichtung inkrementell

-1 =

+1 =

0 =

auf kleineren Wert der Rundach
se 1 oder 2 positionieren2) 

auf greren Wert der Rundach
se 1 oder 2 positionieren2)

Schwenken nein (nur Schwenkf
rame berechnen) 1) 3)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1055

 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

16

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<_DMODE> 

INT

Anzeigemodus

EINER:

Bearbeitungsebene G17/G18/G19

ZEHNER:

0 =

1 =

2 =

3 =

Kompatibilitt, es bleibt die vor 
Zyklusaufruf wirksame Ebene ak
tiv

G17 (nur im Zyklus aktiv)

G18 (nur im Zyklus aktiv)

G19 (nur im Zyklus aktiv)

Darstellung des Beta-Wertes bei Aus
richten Werkzeug

0 =

1 =

Wert

Pfeil

Hinweis

Sind folgende bergabeparameter indirekt (als Parameter) programmiert, wird die 
Eingabemaske nicht rckbersetzt: <_FR>, <_ST>, <_TC>, <_MODE>, <_DIR> 

1) Auswahl mglich, wenn in IBN SCHWENKEN Funktion eingerichtet ist.

2) Auswahl mglich, wenn in IBN SCHWENKEN Richtungsbezug auf Rundachse 1 oder 2 
eingestellt ist.

kein Auswahlfeld bei Richtungsbezug nein 

3) Auswahl Schwenken "nein" kann ausgeblendet sein SD 55221 Bit 0

Schwenken "nein" Richtung "Minus" entspricht <_DIR> = 0 und _ST ZEHNTAUSENDER = 1 

Schwenken "nein" Richtung "Plus" entspricht <_DIR> = 0 und _ST ZEHNTAUSENDER = 2

4) Die Richtungsauswahl der Rundachse 1 oder 2 erfolgt auch, wenn sich die Rundachse mit 
dem Richtungsbezug in Polstellung (Positionswert gleich Null) befindet.

5) Beispiel Codierung: Drehung achsweise, Drehreihenfolge ZYX

Binr: 00011011; Dezimal: 27

Die Achsbezeichner XYZ entsprechen den Geometrieachsen des NC-Kanals. Drehungen um 
die Achsen XYZ drfen einzeln ausgefhrt werden. Z.B. Drehreihenfolge um ZXZ ist in einem 
Aufruf des CYCLE800 nicht erlaubt

3.23.1.34

CYCLE801 - Positionsmuster Gitter oder Rahmen

Syntax     

1056

CYCLE801(<_SPCA>, <_SPCO>, <_STA>, <_DIS1>, <_DIS2>, <_NUM1>, 
<_NUM2>, <_VARI>, <_UMODE>, <_ANG1>, <_ANG2>, <_HIDE>, <_NSP>, 
<_DMODE>)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Parameter 

Datentyp

Bedeutung

intern

<_SPCA> 

<_SPCO> 

<_STA> 

REAL

REAL

REAL

<_DIS1> 

REAL

<_DIS2> 

REAL

<_NUM1> 

<_NUM2> 

<_VARI> 

INT

INT

INT

Bezugspunkt fr Positionsmuster (Gitter/Rahmen) in der 1. Achse (abs)

Bezugspunkt fr Positionsmuster (Gitter/Rahmen) in der 2. Achse (abs)

Grund-Drehwinkel 
(Winkel zur 1. Achse)

< 0 = Drehung im Uhrzeigersinn

> 0 = Drehung im Gegenuhrzeigersinn

Abstand der Spalten (Positionsabstand 1. Achse, ohne Vorzeichen ein
zugeben)

Abstand der Zeilen(Positionsabstand 2. Achse, ohne Vorzeichen ein
zugeben)

Anzahl der Spalte

Anzahl der Zeilen

Bearbeitungsart

EINER: 

ZEHNER: 

HUNDERTER: 

Positionsmuster

0 =

1 =

Gitter

Rahmen

reserviert

reserviert

Parameter

Nr.

Parameter 
Maske

X0

Y0

0

L1

L2

N1

N2

1

2

3

4

5

6

7

8

9

10

<_UMODE> 

INT

reserviert

X

<_ANG1> 

REAL

Scherwinkel zur 1. Achse (Schrgstellung der Zeilen bezogen auf die 1. 
Achse)

< 0 = Messung im Uhrzeigersinn 

(0 bis -90 Grad)

> 0 = Messung im Gegenuhrzeiger

sinn 
(0 bis 90 Grad)

11

Y

<_ANG2> 

REAL

Scherwinkel zur 2. Achse (Schrgstellung der Spalten bezogen auf die 
2. Achse)

< 0 = Messung im Uhrzeigersinn 

(0 bis -90 Grad)

> 0 = Messung im Gegenuhrzeiger

sinn 
(0 bis 90 Grad)

12

13

<_HIDE> 

STRING
[200]

Ausgeblendete Positionen

 max. 198 Zeichen

 Angabe der fortlaufenden Positionsnummer, z. B. "1,3" (Positionen 

1 und 3 werden nicht ausgefhrt)

<_NSP> 

INT

reserviert

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1057

 
 
 
 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Parameter 
Maske

Nr.

14

Parameter 

Datentyp

Bedeutung

intern

<_DMODE> 

INT

Anzeigemodus

EINER: 

Bearbeitungsebene G17/G18/G19

0 =

1 =

2 =

3 =

Kompatibilitt, es bleibt die vor 
Zyklusaufruf wirksame Ebene ak
tiv

G17 (nur im Zyklus aktiv)

G18 (nur im Zyklus aktiv)

G19 (nur im Zyklus aktiv)

3.23.1.35

CYCLE802 - Beliebige Positionen

Syntax     

CYCLE802(<_XA>, <_YA>, <_X0>, <_Y0>, <_X1>, <_Y1>, <_X2>, <_Y2>, 
<_X3>, <_Y3>, <_X4>, <_Y4>, <_X5>, <_Y5>, <_X6>, <_Y6>, <_X7>, <_Y7>, 
<_X8>, <_Y8>, <_VARI>, <_UMODE>, <_DMODE>, <S_ABA>, <S_AB0>, 
<S_AB1>, <S_AB2>, <S_AB3>, <S_AB4>, <S_AB5>, <S_AB6>, <S_AB7>, 
<S_AB8>)

Parameter

Nr.

Parameter 
Maske

Parameter 

Datentyp

Bedeutung

intern

1

2

3

4

5

6

7

8

9

10

11

12

1058

X0

Y0

X1

Y1

X2

Y2

X3

Y3

X4

Y4

<_XA> 

INT

Alternative fr alle X-Positionen (9-stelliger Dezimalwert)

Stellenzahl: 876543210 (Die Stelle entspricht der Bohrposition Xn)

Stellenwert:

1 =

absolut (1. programmierte Positi
on immer absolut)

2 =

inkrementell

<_YA> 

INT

Alternative fr alle Y-Positionen (9-stelliger Dezimalwert)

Stellenzahl: 876543210 (Die Stelle entspricht der Bohrposition Yn)

Stellenwert:

1. Position X

1. Position Y

2. Position X

2. Position Y

3. Position X

3. Position Y

4. Position X

4. Position Y

5. Position X

5. Position Y

<_X0> 

<_Y0> 

<_X1> 

<_Y1> 

<_X2> 

<_Y2> 

<_X3> 

<_Y3> 

<_X4> 

<_Y4> 

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

1 =

absolut (1. programmierte Positi
on immer absolut)

2 =

inkrementell

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

13

14

15

16

17

18

19

20

Parameter 
Maske

X5

Y5

X6

Y6

X7

Y7

X8

Y8

Parameter 

Datentyp

Bedeutung

intern

<_X5> 

<_Y5> 

<_X6> 

<_Y6> 

<_X7> 

<_Y7> 

<_X8> 

<_Y8> 

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

6. Position X

6. Position Y

7. Position X

7. Position Y

8. Position X

8. Position Y

9. Position X

9. Position Y

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1059

Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Parameter 
Maske

Nr.

21

Parameter 

Datentyp

Bedeutung

intern

<_VARI> 

INT

Bearbeitung

HUNDERTER: 

(nur fr Aufruf aus Jobshop) (vorerst nur 
0 und 2 ausgewertet)

0 =

1 =

2 =

kein Spindel klemmen

Spindel klemmen nur bei senk
rechtem Eintauchen mit G00 
oder G01

Spindel klemmen whrend der 
gesamten Bearbeitung

TAUSENDER: 

reserviert

ZEHNTAUSENDER: 

Positionsmuster mit/ohne Rundachse  
Achskombination
(mit <_VARI> HUNDERTTAUSEN
DER)

0 =

1 =

2 =

XY (nur XY ohne Rundachse, 
Kompatibilitt)

X,Y oder Z und Rundachse: 
XA, YB, ZC
(1 Rundachse mit Geo-Achse, 
um die die Rundachse dreht)

XY und Rundachse: 
XYA, XYB, XYC
(1 Rundachse mit 1. und 2. Geo-
Achse, ohne TRACYL)

HUNDERTTAUSENDER: 

Rundachse

ZEHNMILLIONEN + EIN
EMILLION: 

0 =

1 =

2 =

3 =

ohne Rundachse 
(nur XY, Kompatibilitt)

A-Achse (Rundachse um X)

B-Achse (Rundachse um Y)

C-Achse (Rundachse um Z)

Positionsmuster mit Rundachse  Offset
(bei mehreren Rundachsen um die glei
che Achse; wenn Index zu gro, dann 1. 
Achse)

00 =

1. A, B oder C-Achse oder bei 
Kompatibilitt

01 =

2. A, B oder C-Achse

...

19 =

20. A, B oder C-Achse

22

<_UMODE> 

INT

Auswahl der zu klemmenden Spindel: (nur fr Aufruf aus Jobshop) 
(Aufruf Anwenderzyklus CUST_TECHCYC)

3 =

Klemmen/Lsen Hauptspindel

23 = Klemmen/Lsen Gegenspindel

1060

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Parameter 
Maske

Nr.

23

Parameter 

Datentyp

Bedeutung

intern

<_DMODE> 

INT

Anzeigemodus

24

25

26

27

28

29

30

31

32

33

A0

A1

A2

A3

A4

A5

A6

A7

A8

EINER: 

Bearbeitungsebene G17/G18/G19

0 =

1 =

2 =

3 =

Kompatibilitt, es bleibt die vor 
Zyklusaufruf wirksame Ebene ak
tiv

G17 (nur im Zyklus aktiv)

G18 (nur im Zyklus aktiv)

G19 (nur im Zyklus aktiv)

<S_ABA> 

INT

Alternative fr alle AB-Positionen (9-stelliger Dezimalwert)

Stellenzahl:  876543210  (Die Stelle entspricht der Position ABn)

Stellenwert:

1 =

absolut (1. programmierte Positi
on immer absolut)

2 =

inkrementell

<S_AB0> 

REAL

1. Rundachsposition bei Positionsmuster mit Rundachse (in Verbin
dung mit <_VARI>)

<S_AB1> 

<S_AB2> 

<S_AB3> 

<S_AB4> 

<S_AB5> 

<S_AB6> 

<S_AB7> 

<S_AB8> 

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

Hinweis

2. Rundachsposition bei Positionsmuster mit Rundachse

3. Rundachsposition bei Positionsmuster mit Rundachse

4. Rundachsposition bei Positionsmuster mit Rundachse

5. Rundachsposition bei Positionsmuster mit Rundachse

6. Rundachsposition bei Positionsmuster mit Rundachse

7. Rundachsposition bei Positionsmuster mit Rundachse

8. Rundachsposition bei Positionsmuster mit Rundachse

9. Rundachsposition bei Positionsmuster mit Rundachse

Nicht bentigte Positionen der Parameter X1/Y1/A1 bis X8/Y8/A8 knnen weggelassen 
werden. Die Alternativwerte fr <_XA>, <_YA> und <S_ABA>  sind jedoch vollstndig fr alle 
9 Positionen anzugeben.

Bei Positionsmuster XA, YB oder ZC (eine Geometrieachse und Rundachse) ist die Achse der 
Bearbeitungsebene, die ber das Positionsmuster nicht verfahren wird (bei G17 und XA ist das 
Y) vor Zyklusaufruf zu positionieren.

3.23.1.36

CYCLE830 - Tieflochbohren 2

Syntax  

CYCLE830(<RTP>, <RFP>, <SDIS>, <_DP>, <FDEP>, <_DAM>, <DTB>, <DTS>, 
<FRF>, <VARI>, <_MDEP>, <_VRT>, <_DTD>, <_DIS1>, <S_FP>, <S_SDAC2>, 
<S_SV2>, <S_FB>, <_SDAC>, <_SV1>, <S_SPOS>, <S_ZA>, <S_FA>, <S_ZP>, 
<S_FS>, <S_ZS1>, <S_ZS2>, <S_N>, <S_ZD>, <S_FD>, <S_FR>, <S_SDAC3>, 
<S_SV3>, <S_CON>, <S_COFF>, <_GMODE>, <_DMODE>, <_AMODE>, 
<S_AMODE2>, <S_AMODE3>, <S_ZPV>)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1061

 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Parameter

Nr.

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

1

2

3

4

5

6

7

8

9

RP

Z0

SC

Z1

D

DF

DTB

DTS

FD1

<RTP> 

<RFP> 

<SDIS> 

<_DP> 

<FDEP> 

REAL

REAL

REAL

REAL

REAL

<_DAM> 

REAL

<DTB> 

<DTS> 

REAL

REAL

<FRF> 

REAL

Rckzugsebene (abs)

Bezugspunkt (abs)

Sicherheitsabstand (additiv auf Bezugspunkt, ohne Vorzeichen)

Endbohrtiefe abs/ink (siehe <_AMODE> EINER)

1. Bohrtiefe zum Spnebrechen/Entspanen absolut oder inkrementell 
bezogen auf den Bezugspunkt bei Anbohren/ohne Anbohren oder be
zogen auf Pilotbohrungstiefe (siehe <_AMODE> ZEHNTAUSENDER)

Betrag/Prozentsatz fr jede weitere Zustellung Degressionsbetrag oder 
-Prozentsatz (siehe <_AMODE> HUNDERTTAUSENDER)

Verweilzeit auf jeder Bohrtiefe (siehe <_AMODE> ZEHNER)

Verweilzeit beim Entspanen am Anfangspunkt (siehe <_AMODE> HUN
DERTER)

Prozentsatz fr den Vorschub bei der ersten Zustellung 
(siehe <_AMODE> ZEHNMILLIONEN)

10

<VARI> 

INT

Bearbeitung

EINER:

Spnebrechen/Entspanen

0 =

1 =

2 =

3 =

in einem Schnitt

Spnebrechen

Entspanen

Spnebrechen und Entspanen

ZEHNER:

Rckzug bei Entspanen

0 =

1 =

auf Pilotbohrtiefe

auf Sicherheitsabstand

HUNDERTER:

weicher Anschnitt

TAUSENDER:

0 =

1 =

nein

ja

Durchbohren

0 =

1 =

nein

ja

ZEHNTAUSENDER:

Anbohren/Pilotbohrung

0 =

1 =

2 =

ohne Anbohren

mit Anbohren

mit Pilotbohrung

HUNDERTTAUSENDER:

Rckzug

0 =

1 =

auf Pilotbohrtiefe

auf Rckzugsebene

11

12

V1

V2

<_MDEP> 

<_VRT> 

REAL

REAL

minimale Zustellung inkrementell (nur bei Prozentsatz fr Degression)

Rckzugsbetrag nach jeder Bearbeitung inkrementell (nur bei Spne
brechen)

13

DT

<_DTD> 

REAL

Verweilzeit auf Endbohrtiefe (siehe <_AMODE> TAUSENDER)

0 =

Standardwert 1 mm

> 0 = variabler Rckzugsbetrag

1062

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

14

15

16

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

V3

FP

<_DIS1> 

REAL

<S_FP> 

REAL

Vorhalteabstand inkrementell nur bei Entspanen (siehe <_AMODE> EIN
EMILLION)

Vorschub zum Einfahren in die Pilotbohrung als Wert oder in % (in Ver
bindung mit <S_AMODE2> HUNDERTER)

<S_SDAC2> 

INT

Spindeldrehrichtung beim Anfahren

17

SP

<S_SV2> 

REAL

Anfahren mit 

<S_FB> 

<_SDAC> 

REAL

REAL

Spindeldrehzahl in % von der Bohrdrehzahl

Bohrvorschub (siehe <S_AMODE2> EINER)

Spindeldrehrichtung beim Bohren

20

S

<_SV1> 

REAL 

Bohren mit 

3 =

4 =

5 =

M3

M4

M5 (Default)

konstanter Spindeldrehzahl 
(siehe <S_AMODE2> ZEHNMILLIONEN)

konstanter Schnittgeschwindigkeit

3 =

4 =

M3

M4

konstanter Spindeldrehzahl 
(siehe <S_AMODE2> EINEMILLION)

konstanter Schnittgeschwindigkeit

<S_SPOS> 

<S_ZA> 

REAL

REAL

<S_FA> 

REAL

<S_ZP> 

REAL

<S_FS> 

REAL

<S_ZS1> 

<S_ZS2> 

<S_N> 

<S_ZD> 

REAL

REAL

INT

REAL

<S_FD> 

REAL

<S_FR> 

REAL

Spindelposition, nur wenn Anfahren mit M5

Anbohrtiefe inkrementell bezogen auf Bezugspunkt oder absolut (sie
he <S_AMODE3> EINER)

Anbohrvorschub als Wert oder in % (in Verbindung mit <S_AMODE2> 
ZEHNER)

Pilotbohrung inkrementell bezogen auf Bezugspunkt, absolut oder Fak
tor des Bohrungsdurchmessers (siehe <S_AMODE3> ZEHNER)

Vorschub Anschnitt als Wert oder in % (in Verbindung mit <S_AMODE2> 
TAUSENDER)

Tiefe jedes Anschnitts mit konstantem Vorschub (ink)

Tiefe jedes Anschnitts fr Vorschuberhhung (ink)

Anzahl der Spnebrechhbe vor jedem Entspanen 

Restbohrtiefe inkrementell bezogen auf Endbohrtiefe oder absolut (in 
Verbindung mit <S_AMODE3> HUNDERTER)

Restbohrvorschub als Wert oder in % (in Verbindung mit <S_AMODE2> 
ZEHNTAUSENDER)

Vorschub Rckzug (in Verbindung mit <S_AMODE2> HUNDERTTAU
SENDER)

<S_SDAC3> 

INT

Spindeldrehrichtung beim Rckzug

3 =

4 =

5 =

M3

M4

M5

V4

F

18

19

V5

SPOS

ZA

FA

ZP 

FS

ZS1

ZS2

N

ZD

FD

FR

21

22

23

24

25

26

27

28

29

30

31

32

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1063

 
 
 
 
 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

33

SR

<S_SV3> 

REAL

Rckzug mit 

V6

Khlmittel 
ein

Khlmittel 
aus

34

35

36

37

konstanter Spindeldrehzahl 
(siehe <S_AMODE2> HUNDERTMILLIO
NEN)

konstanter Schnittgeschwindigkeit

<S_CON> 

STRING[10] Khlmittel ein, M-Befehl oder Unterprogrammaufruf

Spindeldrehzahl in % von der Bohrdrehzahl

<S_COFF> 

STRING[10] Khlmittel aus, M-Befehl oder Unterprogrammaufruf

<_GMODE> 

INT

Geometriemodus (Bewertung der programmierten Geometriewerte)

EINER:

ZEHNER:

reserviert

Bohrtiefe bezogen auf Spitze/Schaft

<_DMODE> 

INT

Anzeigemodus

EINER:

Bearbeitungsebene G17/G18/G19

0 =

1 =

Spitze

Schaft

ZEHNER:

HUNDERTER:

TAUSENDER:

ZEHNTAUSENDER:

0 =

1 =

2 =

3 =

Kompatibilitt, es bleibt die vor 
Zyklusaufruf wirksame Ebene ak
tiv

G17 (nur im Zyklus aktiv)

G18 (nur im Zyklus aktiv)

G19 (nur im Zyklus aktiv)

reserviert

reserviert

reserviert

Technologieskalierung innerhalb von Zy
klenmasken (Seite 1113)

0 =

1 =

Eingabe: komplett

Eingabe: einfach

1064

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
Nr.

38

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<_AMODE> 

INT

Alternativmodus 1

Arbeitsvorbereitung

3.23 Zyklen extern programmieren

EINER: 

Bohrtiefe = Endbohrtiefe Z1 abs/ink

0 =

1 =

inkrementell

absolut

ZEHNER: 

Verweilzeit auf jeder Bohrtiefe DTB in 
Sekunden/Umdrehungen

0 =

1 =

in Sekunden

in Umdrehungen

HUNDERTER: 

Verweilzeit zum Entspanen DTS in Se
kunden/Umdrehungen

0 =

1 =

in Sekunden

in Umdrehungen

TAUSENDER:

Verweilzeit auf Endbohrtiefe DT in Se
kunden/Umdrehungen

0 =

1 =

in Sekunden

in Umdrehungen

ZEHNTAUSENDER: 

1. Bohrtiefe D abs/ink

0 =

1 =

inkrementell

absolut

HUNDERTTAUSENDER: 

Betrag/Prozentsatz DF fr jede weitere 
Zustellung (Degression)

EINEMILLION: 

0 =

1 =

Betrag

Prozentsatz (0,001 bis 100 %)

Vorhalteabstand V3 automatisch/manu
ell

0 =

automatisch (wird im Zyklus be
rechnet)

1 =

manuell (programmierter Wert)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1065

 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

39

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<S_AMODE2
> 

INT

Alternativmodus 2

EINER:

EINER: Bohrvorschub F

0 =

1 =

F/min

F/U

ZEHNER: 

Bewertung Anbohrvorschub FA

0 =

1 =

2 =

in % vom Bohrvorschub

F/min

F/U

HUNDERTER:

Bewertung Vorschub zum Einfahren in 
Pilotbohrung FP

0 =

1 =

2 =

in % vom Bohrvorschub

F/min

F/U

TAUSENDER: 

Bewertung Vorschub Anschnitt FS

0 =

1 =

2 =

in % vom Bohrvorschub

F/min

F/U

ZEHNTAUSENDER: 

Bewertung Vorschub Durchbohren FD

0 =

1 =

2 =

in % vom Bohrvorschub

F/min

F/U

HUNDERTTAUSENDER: 

Vorschub Rckzug FR

EINEMILLION:

ZEHNMILLIONEN:

HUNDERTMILLIONEN:

0 =

1 =

F/min

Eilgang

Bohren - Spindeldrehzahl/Schnittge
schwindigkeit (S/V5)

0 =

1 =

konstante Spindeldrehzahl

konstante Schnittgeschwindig
keit

Anfahren mit Spindeldrehzahl/Schnittge
schwindigkeit (SP/V4)

0 =

1 =

2 =

konstante Spindeldrehzahl

konstante Schnittgeschwindig
keit

Spindeldrehzahl in % von der 
Bohrdrehzahl

Rckzug - Spindeldrehzahl/Schnittge
schwindigkeit (SR/V6)

0 =

1 =

2 =

konstante Spindeldrehzahl

konstante Schnittgeschwindig
keit

Spindeldrehzahl in % von der 
Bohrdrehzahl

1066

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
Nr.

40

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<S_AMODE3
> 

INT

Alternativmodus 3

EINER:

Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Anbohrtiefe ZA abs/ink

0 =

1 =

inkrementell

absolut

ZEHNER: 

Tiefe der Pilotbohrung ZP

0 =

1 =

2 =

inkrementell

absolut

Faktor des Bohrungsdurchmes
sers

HUNDERTER: 

Restbohrtiefe ZD ink/abs

0 =

1 =

inkrementell

absolut

41

ZPV

<S_ZPV> 

REAL

Vorhalteabstand inkrementell auf Pilotbohrungstiefe

3.23.1.37

CYCLE832 - High Speed Settings

Syntax     

CYCLE832(<S_TOL>, <S_TOLM>, <S_OTOL>)

Hinweis

Der CYCLE832 entlastet den Maschinenhersteller nicht von notwendigen 
Optimierungsaufgaben bei der Inbetriebnahme der Maschine. Dies betrifft die Optimierung der 
an der Bearbeitung beteiligten Achsen und die Einstellungen der NCU (Vorsteuerung, 
Ruckbegrenzung, usw.).

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1067

 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Parameter

Nr.

Parame
ter Maske

Parameter 
intern

Datentyp

Bedeutung

1

2

Toleranz

<S_TOL> 

REAL

Konturtoleranz

Die Konturtoleranz entspricht der Achstoleranz der Geometrieachsen.

<S_TOLM> 

INT

Bearbeitungsart (Technologie)

EINER:

0 =

1 =

2 =

3 =

4 =

0 =

1 =

ZEHNER:

belegt

wegen

Kompatibilitt

HUNDERTER

...

HUNDERT
TAUSENDER

EINEMILLION:

0 =

1 =

2 =

Abwahl

Schlichten (Finish)

Vorschlichten (Semifinish)

Schruppen (Rough)

Feinschlichten (Precision)

Kompatibilitt1) bzw. keine Orien
tierungstoleranz

Orientierungstoleranz im Parame
ter <S_OTOL>

Kompatibilitt. Es wird automa
tisch die beste zur Verfgung ste
hende Formenbaufunktion ver
wendet:

 Option Top Surface nicht aktiv:

 Advanced Surface

 Option Top Surface aktiv:

 Top Surface mit Glttung

Top Surface ohne Glttung

Top Surface mit Glttung

3

ORI-Tole
ranz

<S_OTOL>  REAL

Orientierungstoleranz bzw. Versionskennzeichen CYCLE832

Toleranzparameter fr die Orientierung des Werkzeugs.

Wird bentigt bei der Abarbeitung eines Hochgeschwindigkeitsbearbeitungs
programms auf Maschinen mit dynamischer Orientierungstransformation 
(z. B. der 5-Achs-Bearbeitung).

Der Parameter <S_OTOL> muss programmiert werden. Dies gilt auch fr An
wendungen auf 3-Achs-Maschinen bei Programmen ohne Orientierung des 
Werkzeugs (<S_OTOL> = 1).

1) Orientierungstoleranz abgeleitet von den Zyklen-Settingdaten SD55451 ... SD55454 (Orientierungstoleranz fr 

Dynamikmodus ...) bzw. SD55445 ... SD55449 (Konturtoleranz fr Dynamikmodus ...) multipliziert mit dem Faktor aus 
SD55441 ... SD55444.
Weitere Informationen: Inbetriebnahmehandbuch SINUMERIK Operate

1068

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Klartexteingabe

Um die Lesbarkeit des Zyklenaufrufs zu verbessern, kann der Parameter <S_TOLM> 
(Bearbeitungsart) auch im Klartext eingegeben werden. Klartexte sind sprachunabhngig. 
Folgende Eingaben sind zulssig:

_OFF 
_FINISH 
_SEMIFIN 
_ROUGH 
_PRECISION 
_ORI_FINISH 

_ORI_SEMIFIN 

_ORI_ROUGH 

_ORI_PRECISION 

_TOP_SURFACE_SMOOTH_OFF 
_TOP_SURFACE_SMOOTH_ON 

fr
fr
fr
fr
fr
fr

fr

fr

fr

fr
fr

 0  
 1  
 2  
 3  
4   
 11  

 12  

 13  

 14  

 1000000  
 2000000  

Abwahl
Schlichten
Vorschlichten
Schruppen
Feinschlichten
Schlichten mit Eingabe einer Ori
entierungstoleranz
Vorschlichten mit Eingabe einer 
Orientierungstoleranz
Schruppen mit Eingabe einer Ori
entierungstoleranz
Feinschlichten mit Eingabe einer 
Orientierungstoleranz
Top Surface ohne Glttung
Top Surface mit Glttung

Fr die Klartexteingabe bei Top Surface werden die Klartexte wie im folgenden Beispiel 
kombiniert:

CYCLE832(0.1, _TOP_SURFACE_SMOOTH_OFF+_ORI_FINISH, 1) 

Hinweis

Die Klartexte sind an die Funktionsnamen der G-Gruppe 59 (Dynamikmodus fr 
Bahninterpolation) angelehnt. Mit diesen Klartexten werden 3-Achs-Maschinen und 
Maschinen mit Mehrachsorientierungstransformation (TRAORI) in der Anwendung klar 
getrennt.

Abwahl von CYCLE832

Bei Abwahl von CYCLE832 muss der Parameter <S_TOL> mit Null bergeben werden.

Beispiel: CYCLE832(0,0,1)

Die Syntax CYCLE832() ist fr die Abwahl von CYCLE832 ebenfalls erlaubt.

Beispiele

Beispiel 1: CYCLE832 auf 3-Achs-Maschine ohne Orientierungstransformation

a) Zyklenaufruf mit Klartexteingabe

Programmcode

G710

Kommentar

; Masystem ist metrisch.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1069

 
 
 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Programmcode

Kommentar

CYCLE832(0.004,_FINISH,1)

...

; Aufruf CYCLE832 mit:
Konturtoleranz = 0,004 mm, Bearbeitungsart: 
Schlichten

; Abarbeitung eines Hochgeschwindigkeitsbear-
beitungsprogramms

b) Zyklenaufruf ohne Klartexteingabe

Programmcode 

G710

CYCLE832(0.004,1,1)

...

Kommentar

; s. o.

; s. o.

; s. o.

Beispiel 2: CYCLE832 auf 5-Achs-Maschine mit Orientierungstransformation

a) Zyklenaufruf und Abwahl mit Klartexteingabe

Programmcode

Kommentar

G710

TRAORI

CYCLE832(0.3,_ORI_ROUGH,0.8)

...

CYCLE832(0,_OFF,1)

; Masystem ist metrisch.

; Orientierungstransformation aktivieren.

; Aufruf CYCLE832 mit:
Konturtoleranz = 0,3 mm, Bearbeitungsart: 
Schruppen mit Eingabe einer Orientierungstole-
ranz, Orientierungstoleranz = 0,8 Grad

; Abarbeitung eines Hochgeschwindigkeitsbear-
beitungsprogramms

; Konturtoleranz = 0,
Bearbeitungsart: Abwahl CYCLE832,
Orientierungstoleranz = 0 Grad

b) Zyklenaufruf und Abwahl ohne Klartexteingabe

Programmcode 

G710

TRAORI

CYCLE832(0.3,13,0.8)

...

CYCLE832(0,0,1)

Kommentar

; s. o.

; s. o.

; s. o.

; s. o.

; s. o.

1070

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.23 Zyklen extern programmieren

3.23.1.38

CYCLE840 - Gewindebohren mit Ausgleichsfutter

Syntax     

Parameter

CYCLE840(<RTP>, <RFP>, <SDIS>, <DP>, <DPR>, <DTB>, <SDR>, <SDAC>, 
<ENC>, <MPIT>, <PIT>, <_AXN>, <_PITA>, <_TECHNO>, <_PITM>, <_PTAB>, 
<_PTABA>, <_GMODE>, <_DMODE>, <_AMODE>)

Nr.

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

1

2

3

4

5

6

7

8

9

10

11

RP

Z0

SC

Z1

Z1

DT

SDE

<RTP> 

<RFP> 

<SDIS> 

<DP> 

<DPR> 

<DTB> 

<SDR> 

<SDAC> 

<ENC> 

REAL

REAL

REAL

REAL

REAL

REAL

INT

INT

INT

Rckzugsebene (abs)

Bezugspunkt (abs)

Sicherheitsabstand (additiv auf Bezugspunkt, ohne Vorzeichen einzuge
ben)

Bohrtiefe (abs), siehe <_AMODE>

Bohrtiefe (ink) , siehe <_AMODE>

Verweilzeit auf Bohrtiefe/auf Sicherheitsabstand nach Rckzug in Se
kunden, siehe <ENC>

Drehrichtung fr den Rckzug

Drehrichtung nach Zyklusende

Gewindebohren mit Spindelgeber (G33)/Gewindebohren ohne Spindel
geber(G63)

0 =

mit Spindelgeber

20 = mit Spindelgeber

11 =

ohne Spindelgeber

1 =

ohne Spindelgeber

- Steigung 
aus <MPIT>/
<PIT> - ohne DT

- Steigung aus 
<MPIT>/<PIT> - 
mit DT nach Rck
zug auf  Sicher
heitsabstand

- Steigung 
aus <MPIT>/
<PIT> - mit DT 
auf Bohrtiefe

- Steigung aus pro
grammierten Vor
schub - mit DT auf 
Bohrtiefe (Vor
schub = Drehzahl  
Steigung)

<MPIT> 

REAL

Gewindegre nur fr "ISO metrisch" (Steigung wird intern whrend der 
Laufzeit berechnet) 

<PIT> 

REAL

Gewindesteigung als Wert, Maeinheit siehe <_PITA>

Wertebereich: 3 bis 48 (fr M3 bis M48), alternativ zu <PIT>

Wertebereich: > 0, alternativ zu MPIT

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1071

 
 
 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

12

13

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<_AXN> 

INT

Bohrachse

0 =

1 =

2 =

3. Geometrieachse

1. Geometrieachse

2. Geometrieachse

 3 = 3. Geometrieachse

<_PITA> 

INT

Maeinheit der Gewindesteigung (Auswertung <PIT> und <MPIT>)

0 =

Steigung in mm 

1 =

Steigung in mm 

2 =

Steigung in TPI 

3 =

Steigung in inch 

4 =

MODUL 

- 
Auswertung 
<MPIT>/<PIT>

- 
Auswertung <PIT>

- Auswertung 
<PIT> 
(Gewindegnge 
pro inch)

- 
Auswertung <PIT>

- 
Auswertung <PIT>

14

<_TECHNO>  INT

Technologie1)

EINER: 

Genauhaltverhalten

0 =

1 =

2 =

3 =

Genauhaltverhalten wie vor Zyklusaufruf 
aktiv

Genauhalt G601

Genauhalt G602

Genauhalt G603

ZEHNER: 

Vorsteuerung

0 =

1 =

2 =

mit/ohne Vorsteuerung wie vor Zyklu
saufruf aktiv

mit Vorsteuerung FFWON

ohne Vorsteuerung FFWOF

<_PITM> 

STRING[15] String als Merker fr Gewindesteigungseingabe2)

<_PTAB> 
<_PTABA>  STRING[20] String fr Auswahl in der Gewindetabelle (z.B. "M 10", "M 12", ...)2)

String fr Gewindetabelle ("", "ISO", "BSW", "BSP", "UNC")2)

STRING[5]

<_GMODE> 

INT

reserviert 

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

15

16

17

18

1072

 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

19

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<_DMODE> 

INT

Anzeigemodus

EINER: 

Bearbeitungsebene G17/G18/G19

ZEHNER: 

HUNDERTER: 

TAUSENDER: 

0 =

1 =

2 =

3 =

Kompatibilitt, es bleibt die vor Zyklu
saufruf wirksame Ebene aktiv

G17 (nur im Zyklus aktiv)

G18 (nur im Zyklus aktiv)

G19 (nur im Zyklus aktiv)

reserviert

reserviert

Kompatibilittsmode (nur fr Eingabemaske zu 
Rckbersetzen), wenn MD 52216 Bit0 = 11)

0 =

1 =

Technologieparameter werden ange
zeigt (Kompatibilitt): TECHNO-Parame
ter wirken 

Technologieparameter werden nicht an
gezeigt: Technologie "wie vor Zyklusauf
ruf programmiert" wirkt

ZEHNTAUSENDER:

Technologieskalierung innerhalb von Zyklen
masken (Seite 1113)

0 =

1 =

Eingabe: komplett

Eingabe: einfach

20

<_AMODE> 

INT

Alternativmodus

EINER: 

Bohrtiefe Z1 (abs/ink)

0 =

1 =

2 =

Kompatibilitt, aus Programmierung 
<DP>/<DPR>

inkrementell

absolut

1) Felder Technologie knnen ausgeblendet sein in Abhngigkeit von Settingdatum SD52216 MCS_FUNCTI
ON_MASK_DRILL
2) Die Parameter 15, 16, und 17 werden nur bei der Gewindeauswahl in den Gewindetabellen der Eingabemaske verwendet. 
Ein Zugriff auf die Gewindetabellen ber Zyklusdefinition bei Zykluslaufzeit ist nicht mglich!

3.23.1.39

CYCLE899 - Offene Nut

Syntax     

CYCLE899(<_RTP>, <_RFP>, <_SDIS>, <_DP>, <_LENG>, <_WID>, <_PA>, 
<_PO>, <_STA>, <_MID>, <_MIDA>, <_FAL>, <_FALD>, <_FFP1>, <_CDIR>, 
<_VARI>, <_GMODE>, <_DMODE>, <_AMODE>, <_UMODE>, <_FS>, <_ZFS>)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1073

 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Parameter

Nr.

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

RP

Z0

SC

Z1

L

W

X0

Y0

0

DZ

DXY

UXY

UZ

F

1

2

3

4

5

6

7

8

9

10

11

12

13

14

15

16

<_RTP> 

<_RFP> 

<_SDIS> 

<_DP> 

<_LENG> 

<_WID> 

<_PA> 

<_PO> 

<_STA> 

<_MID> 

<_MIDA> 

<_FAL> 

<_FALD> 

<_FFP1> 

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

<_CDIR> 

INT

Rckzugsebene (abs)

Bezugspunkt der Werkzeugachse(abs)

Sicherheitsabstand (additiv auf Bezugspunkt, ohne Vorzeichen einzu
geben)

Nuttiefe(abs/ink), siehe <_AMODE>

Lnge der Nut (ink)

Breite der Nut (ink)

Bezugspunkt/Startposition 1. Achse (abs)

Bezugspunkt/Startposition 2. Achse (abs)

Drehwinkel zur 1.Achse

maximale Zustelltiefe (ink), nur fr Wirbelfrsen

maximale Ebenenzustellung, siehe <_AMODE>

Schlichtaufma Ebene 

Schlichtaufma Tiefe 

Vorschub 

Frsrichtung 

EINER:

<_VARI> 

INT

Bearbeitung

EINER:

ZEHNER: 

HUNDERTER: 

TAUSENDER:

0 =

1 =

4 =

1 =

2 =

3 =

4 =

5 =

6 =

Gleichlauf

Gegenlauf

Wechselweise

Schruppen

Schlichten

Schlichten Boden

Schlichten Rand

Vorschlichten

Anfasen

reserviert

reserviert

1 =

2 =

Wirbelfrsen

Tauchfrsen

1074

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
Nr.

17

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<_GMODE> 

INT

Geometriemodus (Bewertung der programmierten Geometriewerte)

Arbeitsvorbereitung

3.23 Zyklen extern programmieren

EINER:

ZEHNER: 

HUNDERTER: 

reserviert

reserviert

Auswahl Bearbeitung/nur Startpunktbe
rechnung 

1 =

normale Bearbeitung

TAUSENDER:

Bemaung ber Mitte / Kante 

0 =

1 =

2 =

Bemaung ber Mitte

Bemaung ber Kante "links" 
("-" Richtung der 1.Achse) 

Bemaung ber Kante "rechts" 
("+" Richtung der 1.Achse)

18

<_DMODE> 

INT

Anzeigemodus

EINER:

Bearbeitungsebene G17/G18/G19

ZEHNER:

HUNDERTER:

TAUSENDER:

ZEHNTAUSENDER:

19

<_AMODE> 

INT

Alternativmodus

EINER:

ZEHNER: 

0 =

1 =

2 =

3 =

---

---

---

Kompatibilitt, es bleibt die vor 
Zyklusaufruf wirksame Ebene ak
tiv

G17 (nur im Zyklus aktiv)

G18 (nur im Zyklus aktiv)

G19 (nur im Zyklus aktiv)

reserviert

reserviert

reserviert

Technologieskalierung innerhalb von Zy
klenmasken (Seite 1113)

0 =

1 =

Eingabe: komplett

Eingabe: einfach

Nuttiefe Z1

0 =

1 =

absolut 

inkrementell

Einheit fr Ebenenzustellung (<_MIDA>) 
DXY

0 =

1 =

mm

% vom Werkzeugdurchmesser

HUNDERTER: 

Eintauchtiefe bei Anfasen ZFS

0 =

1 =

absolut 

inkrementell

20

21

22

FS

ZFS

<_UMODE> 

INT

reserviert

<_FS> 

<_ZFS> 

REAL

REAL

Fasenbreite (ink)

Eintauchtiefe (Werkzeugspitze) bei Anfasen (abs/ink), 
siehe <_AMODE>)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1075

 
 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

3.23.1.40

CYCLE930 - Einstich

Syntax     

Parameter

CYCLE930(<_SPD>, <_SPL>, <_WIDG>, <_WIDG2>, <_DIAG>, <_DIAG2>, 
<_STA>, <_ANG1>, <_ANG2>, <_RCO1>, <_RCI1>, <_RCI2>, <_RCO2>, 
<_FAL>, <_IDEP1>, <_SDIS>, <_VARI>, <_DN>, <_NUM>, <_DBH>, <_FF1>, 
<_NR>, <_FALX>, <_FALZ>, <_DMODE>, <_AMODE>)

Nr.

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<_SPD> 

<_SPL> 

<_WIDG> 

REAL

REAL

REAL

Bezugspunkt in der Planachse (immer Durchmesser)

Bezugspunkt in der Lngsachse

Einstichbreite unten

<_WIDG2>  REAL

Einstichbreite oben (nur fr die Oberflche)

<_DIAG> 

REAL

Einstichtiefe am Bezugspunkt, 

<_DIAG2>  REAL

Einstichtiefe gegenber dem Bezugspunkt (nur fr die Oberflche), 

bei abs und Lngsbearbeitung = Durchmesser, sonst ink

X0

Z0

B1

B2

T1

T2

0

1

2

R1/FS1

R2/FS2

R3/FS3

1

2

3

4

5

6

7

8

9

10

11

12

13

14

15

<_STA> 

<_ANG1> 

<_ANG2> 

<_RCO1> 

<_RCI1> 

<_RCI2> 

REAL

REAL

REAL

REAL

REAL

REAL

R4/FS4

<_RCO2> 

REAL

U

D

<_FAL> 

REAL

<_IDEP1>  REAL

bei abs und Lngsbearbeitung = Durchmesser, sonst ink 

Winkel der Schrge (-180  <_STA>  180)

Flankenwinkel 1 (0  <_ANG1> < 90) an der durch den Bezugspunkt 
bestimmten Seite des Einstichs

Flankenwinkel 2 (0  <_ANG2> < 90) gegenber dem Bezugspunkt

Verrundungsradius oder Fasenbreite 1, auen am Bezugspunkt

Verrundungsradius oder Fasenbreite 2, innen am Bezugspunkt

Verrundungsradius oder Fasenbreite 3, innen gegenber dem Bezugs
punkt

Verrundungsradius oder Fasenbreite 4, auen gegenber dem Bezugs
punkt

Schlichtaufma in X und Z, siehe <_VARI> (ZEHNTAUSENDER) (oh
ne Vorzeichen einzugeben)

maximale Tiefenzustellung beim Eintauchen (ohne Vorzeichen einzu
geben)

0 =

1. Schnitt direkt auf ganze Tiefe

> 0 = 1. Schnitt <_IDEP1>, 2. Schnitt 2 

 <_IDEP1> usw.

16

SC

<_SDIS> 

REAL

Sicherheitsabstand (ohne Vorzeichen einzugeben)

1076

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
Nr.

17

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<_VARI> 

INT

Bearbeitungsart

Arbeitsvorbereitung

3.23 Zyklen extern programmieren

EINER: 

ZEHNER: 

reserviert

Technologische Bearbeitung

1 =

2 =

3 =

Schruppen

Schlichten

Schruppen und Schlichten

HUNDERTER: 

Lage Lngs/Plan Auen/Innen +Z/+Z 
bzw. +X/-X

1 =

2 =

3 =

4 =

5 =

6 =

7 =

8 =

Lngs/Auen +Z 

Plan/Innen -X

Lngs/Innen +Z 

Plan/Innen +X

Lngs/Auen -Z 

Plan/Auen -X

Lngs/Innen -Z 

Plan/Auen +X

TAUSENDER: 

Lage Bezugspunkt

0 =

1 =

Bezugspunkt oben

Bezugspunkt unten

ZEHNTAUSENDER: 

Definition wie Schlichtaufmae wirken

0 =

1 =

Schlichtaufma U konturparallel

Schlichtaufmae UX und UZ ge
trennt

18

19

20

21

22

<_DN> 

INT

D-Nummer fr 2. Schneide des Werkzeugs

> 0 = D-Nummer fr Werkzeugkorrek
tur der 2. Schneide des Einste
chers

0 =

keine 2. Schneide programmiert

N

DP

F

<_NUM> 

<_DBH> 

<_FF1> 

<_NR> 

INT

REAL

REAL

INT

Anzahl der Einstiche (0 = 1 Einstich)

Abstand der Einstiche (nur erforderlich, wenn <_NUM> > 1)

Vorschub

Kennung fr die Einstichform entspricht den Vertikal-Softkeys zur Aus
wahl der Form

0 =

1 =

90-Flanken ohne Fasen/Verrun
dungen

schrge Flanken mit Fasen/
Verrundungen (ohne 0)

2 =

wie 1, aber auf Kegel (mit 0)

23

24

UX

UZ

<_FALX> 

REAL

<_FALZ> 

REAL

Schlichtaufma in X Achse, siehe <_VARI> (ZEHNTAUSENDER) (oh
ne Vorzeichen einzugeben)

Schlichtaufma in Z Achse, siehe <_VARI> (ZEHNTAUSENDER) (oh
ne Vorzeichen einzugeben)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1077

 
 
 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

25

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<_DMODE> 

INT

Anzeigemodus

EINER: 

Bearbeitungsebene G17/G18/G19

0 =

1 =

2 =

3 =

Kompatibilitt, es bleibt die vor 
Zyklusaufruf wirksame Ebene ak
tiv

G17 (nur im Zyklus aktiv)

G18 (nur im Zyklus aktiv)

G19 (nur im Zyklus aktiv)

26

<_AMODE> 

INT

Alternativmodus

EINER: 

Bemaung Tiefe (nur fr die Oberflche)

ZEHNER: 

0 =

1 =

Tiefe

0 =

1 =

am Bezugspunkt

gegenber dem Bezugspunkt

absolut 

inkrementell

HUNDERTER: 

Bemaung Breite (nur fr die Oberflche)

0 =

1 =

am Auendurchmesser (oben)

am Innendurchmesser (unten)

TAUSENDER: 

Radius/Fase 1 (<_RCO1>)

0 =

1 =

Radius

Fase

ZEHNTAUSENDER: 

Radius/Fase 2 (<_RCI1>)

0 =

1 =

Radius

Fase

HUNDERTTAUSENDER: 

Radius/Fase 3 (<_RCI2>)

0 =

1 =

Radius

Fase

EINEMILLION: 

Radius/Fase 4 (<_RCO2>)

0 =

1 =

Radius

Fase

3.23.1.41

CYCLE940 - Freistich Form E und F / Freistich Gewinde

Mit dem Zyklus CYCLE940 knnen verschiedene Freistiche programmiert werden. Diese 
unterscheiden sich in der Parametrierung zum Teil erheblich. 

Die zustzlichen Spalten in der Tabelle zeigen, welcher Parameter bei welcher Freistichform 
bentigt wird. Sie entsprechen den vertikalen Auswahlsoftkeys in der Zyklenmaske:

 E: Freistich Form E

 F: Freistich Form F

 A-D: Freistich Gewinde DIN (Formen A-D)

 T: Freistich Gewinde (freie Definition der Form)

1078

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

CYCLE940(<_SPD>, <_SPL>, <_FORM>, <_LAGE>, <_SDIS>, <_FFP>, <_VARI>, 
<_EPD>, <_EPL>, <_R1>, <_R2>, <_STA>, <_VRT>, <_MID>, <_FAL>, 
<_FALX>, <_FALZ>, <_PITI>, <_PTAB>, <_PTABA>, <_DMODE>, <_AMODE>)

Parameter 
intern

Datentyp

Progr. bei Form Bedeutung

E F A-D T  

Syntax     

Parameter

Nr. Para-
meter 
Maske

1

2

3

X0

Z0

<_SPD> 

<_SPL> 

REAL

REAL

FORM <_FORM>  CHAR

x

x

x

x

x

x

x

x

x

x Bezugspunkt in der Planachse (immer Durchmesser)

x Bezugspunkt Lngsachse (abs)

x Form des Freistichs (Grobuchstaben, z.B. "T")

Auswahl, aus welcher Tabelle die Freistichwerte genommen 
werden sollen 

A =

B =

C =

D =

E =

F =

T =

0 =

1 =

2 =

3 =

auen, Bezug DIN76, 
A = normal

auen, Bezug DIN76, 
B = kurz

innen, Bezug DIN76, 
C = normal

innen, Bezug DIN76, 
D = kurz

Bezug DIN509

Bezug DIN509

Freiform

Auen +Z: \____|

Auen -Z: |____/

Innen +Z: /-----|

Innen -Z: |-----\

4

LAGE

<_LAGE>  INT

x

x

x

x

Lage des Freistichs 
(parallel Z)

SC

F

5

6

7

<_SDIS>   

<_FFP> 

<_VARI>  INT

x

x

-

x

x

-

x

x

x

x Sicherheitsabstand (ink)

x Bearbeitungsvorschub (mm/U)

x Bearbeitungsart

EINER: 

Bearbeitung

1 =

2 =

3 =

Schruppen

Schlichten

Schruppen + Schlichten

ZEHNER: 

Bearbeitungsstrategie

0 =

1 =

konturparallel

lngs

Freistiche Form E und F werden immer in einem Zug wie Schlichten bearbeitet.

8

9

X1

Z1

<_EPD> 

<_EPL> 

x

-

-

-

x

-

x

-

-

-

-

-

- Aufma X (abs/ink), siehe <_AMODE>

x Freistichtiefe (abs/ink ), siehe <_AMODE>

- Aufma Z

x Freistichbreite (abs/ink), siehe <_AMODE>

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1079

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr. Para-
meter 
Maske

Parameter 
intern

Datentyp

Progr. bei Form Bedeutung

10 R1

11 R2

12



13 VX

14 D

15 U

16 UX

17 UZ

18 P

<_R1> 

<_R2> 

<_STA> 

<_VRT> 

<_MID> 

<_FAL> 

<_FALX>   

<_FALZ>   

<_PITI>  INT

-

-

-

x

-

-

-

-

-

-

-

-

-

x

-

-

-

-

-

-

-

-

x

-

x

x

x

x

x

x

x Verrundungsradius an der Schrgen

x Verrundungsradius in der Ecke

x Eintauchwinkel

- Planzug X (abs/ink), siehe <_AMODE>

x Planzug X bei Schlichten, (abs/ink), siehe <_AMODE>

x Tiefenzustellung 

x Schlichtaufma konturparallel, siehe <_AMODE>

x Schlichtaufma X

x Schlichtaufma Z

- Auswahl der Steigung, Form A-D, entspricht M1 ... M68

0 = 0.20
1 = 0.25
2 = 0.30
3 = 0.35
4 = 0.40
5 = 0.45

6 = 0.50
7 = 0.60
8 = 0.70
9 = 0.75
10 = 0.80
11 = 1.00

12 = 1.25
13 = 1.50
14 = 1.75
15 = 2.00
16 = 2.50
17 = 3.00

18 = 3.50
19 = 4.00
20 = 4.50
21 = 5.00
22 = 5.50
23 = 6.00

x

x

-

- Auswahl Radius/Tiefe, Form E, F

0 = 0.6  0.3
1 = 1.0  0.4
2 = 1.0  0.2
3 = 1.6 0.3

4 = 2.5  0.4
5 = 4.0  0.5
6 = 0.4  0.2
7 = 0.6  0.2

8 = 0.1  0.1
9 = 0.2 0.1

String fr Gewindetabelle ("", "ISO", "BSW", "BSP", "UNC") 
(nur fr Oberflche)

String fr Auswahl in der Gewindetabelle 
(z.B. "M 10", "M 12", ...) 
(nur fr die Oberflche)

<_PTAB>  STRING

[5]

<_PTABA>  STRING

[20]

<_DMODE>  INT

Anzeigemodus

x

x

x

x EINER: 

Bearbeitungsebene G17/G18/G19

19

20

21

0 =

1 =

2 =

3 =

Kompatibilitt, es bleibt die vor 
Zyklusaufruf wirksame Ebene 
aktiv

G17 (nur im Zyklus aktiv)

G18 (nur im Zyklus aktiv)

G19 (nur im Zyklus aktiv)

1080

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Nr. Para-
meter 
Maske

Parameter 
intern

Datentyp

Progr. bei Form Bedeutung

Arbeitsvorbereitung

3.23 Zyklen extern programmieren

22

<_AMODE>  INT

x

x

x

x

-

-

Alternativmodus

x EINER: 

x ZEHNER: 

Parameter <_EPD> Aufma X oder Frei
stichtiefe

0 =

1 =

absolut (immer Durchmesser)

inkrementell

Parameter <_EPL> Aufma Z oder Frei
stichbreite

0 =

1 =

absolut 

inkrementell

x

x

x

x HUNDERTER: 

Parameter <_VRT> Planzug X

0 =

1 =

absolut (immer Durchmesser)

inkrementell

-

-

x

x TAUSENDER: 

Schlichtaufma

0 =

1 =

Schlichtaufma konturparallel 
(<_FAL>)

Schlichtaufma getrennt 
(<_FALX>/<_FALZ>)

3.23.1.42

CYCLE951 - Abspanen

Syntax     

Parameter

CYCLE951(<_SPD>, <_SPL>, <_EPD>, <_EPL>, <_ZPD>, <_ZPL>, <_LAGE>, 
<_MID>, <_FALX>, <_FALZ>, <_VARI>, <_RF1>, <_RF2>, <_RF3>, <_SDIS>, 
<_FF1>, <_NR>, <_DMODE>, <_AMODE>)

Nr.

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

1

2

3

4

5

6

X0

Z0

X1

Z1

XM

1

2

ZM

1

2

<_SPD> 

<_SPL> 

<_EPD> 

<_EPL> 

<_ZPD> 

REAL

REAL

REAL

REAL

REAL

Bezugspunkt (abs, immer Durchmesser)

Bezugspunkt (abs)

Endpunkt

Endpunkt

Zwischenpunkt, siehe <_DMODE> (ZEHNER)

<_ZPL> 

REAL

Zwischenpunkt, siehe <_DMODE> (ZEHNER)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1081

 
 
 
 
 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

7

Lage

<_LAGE> 

INT

Lage der Abspanecke

0 =

1 =

2 =

3 =

auen/hinten

auen/vorne

innen/hinten

innen/vorne

D

UX

UZ

8

9

10

11

<_MID> 

<_FALX> 

<_FALZ> 

REAL

REAL

REAL

maximale Tiefenzustellung beim Eintauchen

Schlichtaufma in X

Schlichtaufma in Z

<_VARI> 

INT

Bearbeitungsart

12

13

14

15

16

17

R1/FS1

<_RF1> 

REAL

R2/FS2

<_RF2> 

REAL

R3/FS3

<_RF3> 

REAL

SC

F

<_SDIS> 

<_FF1> 

<_NR> 

REAL

REAL

INT

EINER: 

ZEHNER: 

Abspanrichtung (lngs oder plan) im Ko
ordinatensystem

1 =

2 =

1 =

2 =

lngs

plan

Schruppen bis Schlichtaufma

Schlichten

HUNDERTER:

TAUSENDER:

ZEHNTAUSENDER:

reserviert

reserviert

reserviert

Verrundungsradius oder Fasenbreite 1, siehe <_AMODE> (ZEHNTAU
SENDER)

Verrundungsradius oder Fasenbreite 2, siehe <_AMODE> (HUNDERT
TAUSENDER)

Verrundungsradius oder Fasenbreite 3, siehe <_AMODE> (EINEMILLI
ON)

Sicherheitsabstand

Vorschub fr Schruppen/Schlichten

Kennung der Abspanart (entspricht den Vertikal-Softkeys zur Auswahl 
der Form):

0 =

1 =

2 =

Abspanen 1, 90 Grad Ecke ohne 
Fasen/Verrundungen

Abspanen 2, 90 Grad Ecke mit 
Fasen/Verrundungen

Abspanen 3, beliebige Ecke mit 
Fasen/Verrundungen

1082

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
Nr.

18

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<_DMODE> 

INT

Anzeigemodus

Arbeitsvorbereitung

3.23 Zyklen extern programmieren

EINER: 

Bearbeitungsebene G17/G18/G19

0 =

1 =

2 =

3 =

Kompatibilitt, es bleibt die vor 
Zyklusaufruf wirksame Ebene ak
tiv

G17 (nur im Zyklus aktiv)

G18 (nur im Zyklus aktiv)

G19 (nur im Zyklus aktiv)

ZEHNER: 

Eingabeform <_ZPD>/<_ZPL>

0 =

1 =

2 =

3 =

4 =

5 =

Xm/Zm

Xm/1

Xm/2

1/Zm

2/Zm

1/2

21

<_AMODE> 

INT

Alternativmodus

EINER: 

Zwischenpunkt in X

ZEHNER: 

0 =

1 =

absolut, Wert der Planachse im 
Durchmesser

inkrementell, Wert der Planachse 
im Radius

Zwischenpunkt in Z

0 =

1 =

absolut 

inkrementell

HUNDERTER: 

Endpunkt in X

0 =

1 =

absolut, Wert der Planachse im 
Durchmesser

inkrementell, Wert der Planachse 
im Radius

TAUSENDER: 

Endpunkt in Z

0 =

1 =

absolut 

inkrementell

ZEHNTAUSENDER: 

Radius/Fase 1

0 =

1 =

Radius

Fase

HUNDERTTAUSENDER: 

Radius/Fase 2

EINEMILLION: 

0 =

1 =

Radius

Fase

Radius/Fase 3

0 =

1 =

Radius

Fase

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1083

 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

3.23.1.43

CYCLE952 - Abspanen / Abspanen Rest / Stechen / Stechen Rest / Stechdrehen / 
Stechdrehen Rest

Syntax     

Parameter

CYCLE952(<_PRG>, <_CON>, <_CONR>, <_VARI>, <_F>, <_FR>, <_RP>, <_D>, 
<_DX>, <_DZ>, <_UX>, <_UZ>, <_U>, <_U1>, <_BL>, <_XD>, <_ZD>, <_XA>, 
<_ZA>, <_XB>, <_ZB>, <_XDA>, <_XDB>, <_N>, <_DP>, <_DI>, <_SC>, 
<_DN>, <_GMODE>, <_DMODE>, <_AMODE>, <_PK>, <_DCH>, <_FS>)

Nr.

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

1

2

3

PRG

CON

<_PRG> 

<_CON> 

STRING[100
]

Name des Abspanprogramms

STRING[100
]

Name des Programms, aus dem die aktualisierte Rohteilkontur gelesen 
wird (bei Restbearbeitung)

CONR

<_CONR> 

STRING[100
]

Name des Programms, in das die aktualisierte Rohteilkontur 
(siehe <_AMODE> ZEHNTAUSENDER) geschrieben wird

1084

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Nr.

4

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<_VARI> 

INT

Bearbeitungsart

Arbeitsvorbereitung

3.23 Zyklen extern programmieren

EINER: 

Abspanart

1 =

2 =

3 =

lngs

plan

konturparallel

ZEHNER: 

Technologische Bearbeitung 
(siehe <_GMODE> HUNDERTER)

1 =

2 =

3 =

4 =

5 =

Schruppen

Schlichten

reserviert

Schruppen zweikanalig

Schlichten zweikanalig

HUNDERTER: 

Bearbeitungsrichtung

1 =

2 =

3 =

4 =

Bearbeitungsrichtung X -

Bearbeitungsrichtung X +

Bearbeitungsrichtung Z -

Bearbeitungsrichtung Z +

TAUSENDER: 

Zustellrichtung

1 =

2 =

3 =

4 =

Auen X -

Innen X +

Stirnseite Z -

Rckseite Z +

ZEHNTAUSENDER: 

Definition, wie Schlichtaufmae wirken

0 =

Schlichtaufmae UX und UZ ge
trennt

1 =

Schlichtaufma U konturparallel

HUNDERTTAUSENDER: 

Nachziehen

0 =

1 =

2 =

3 =

Kompatibilitt, Nachziehen auto
matisch

mit Nachziehen an der Kontur

ohne Nachziehen

Nachziehen automatisch

EINEMILLION: 

Hinterschnitte

0 =

1 =

2 =

Stelle wird nicht ausgewertet bei 
Stechen, - Rest und Stechdre
hen, - Rest

Hinterschnitte bearbeiten

Hinterschnitte nicht bearbeiten

ZEHNMILLIONEN: 

hinter/vor Drehmitte

0 =

1 =

Bearbeitung vor der Drehmitte

reserviert

5

F

FZ

<_F> 

REAL

Vorschub fr Schruppen/Schlichten

Vorschub Abszisse Stechdrehen

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1085

 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

6

7

8

9

10

11

12

13

14

15

16

17

18

19

20

21

22

23

24

25

FR

FX

RP

D

DX

DZ

UX

UZ

U

U1

BL

XD

ZD

XA

ZA

XB

ZB

XDA

XDB

N

DP

<_FR> 

REAL

Vorschub zum Eintauchen in Hinterschnitte Schruppen 

<_RP> 

<_D> 

<_DX> 

<_DZ> 

<_UX> 

<_UZ> 

<_U> 

<_U1> 

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

Vorschub Ordinate Stechdrehen

Rckzugsebene bei Innenbearbeitung (abs., immer Durchmesser)

Zustellung Schruppen (siehe <_AMODE> EINER)

Zustellung X (siehe <_AMODE> EINER)

Zustellung Z (siehe <_AMODE> EINER)

Schlichtaufma X (siehe <_VARI> ZEHNTAUSENDER)

Schlichtaufma Z (siehe <_VARI> ZEHNTAUSENDER)

Schlichtaufma konturparallel (siehe <_VARI> ZEHNTAUSENDER) 

zustzliches Schlichtaufma beim Schlichten (siehe <_AMODE> TAU
SENDER)

<_BL> 

INT

Rohteildefinition

1 =

2 =

3 =

Zylinder mit Aufma

Aufma auf Fertigteilkontur

Rohteilkontur ist angegeben

<_XD> 

<_ZD> 

<_XA> 

<_ZA> 

<_XB> 

<_ZB> 

<_XDA> 

REAL

REAL

REAL

REAL

REAL

REAL

REAL

<_XDB> 

REAL

<_N> 

<_DP> 

INT

REAL

Rohteildefinition X (siehe <_AMODE> HUNDERTTAUSENDER)

Rohteildefinition Z (siehe <_AMODE> EINEMILLION)

Grenze 1 X (abs., immer Durchmesser)

Grenze 1 Z (abs.)

Grenze 2 X (siehe <_AMODE> ZEHNMILLIONEN)

Grenze 2 Z (siehe <_AMODE> HUNDERTMILLIONEN)

Einstechgrenze 1 fr die 1. Einstichposition auf der Stirnseite (abs., 
immer Durchmesser)

Einstechgrenze 2 fr die 1. Einstichposition auf der Stirnseite (abs., 
immer Durchmesser)

Anzahl der Einstiche

Abstand der Einstiche

Lngs-Einstich: parallel zur Z-Achse

Plan-Einstich: parallel zur X-Achse

26

DI

<_DI> 

REAL

Abstand fr Vorschubunter
brechung

0 =

keine Unterbrechung

> 0 = mit Unterbrechung

27

28

SC

D2

<_SC> 

<_DN> 

REAL

INT

Sicherheitsabstand zum Umfahren von Hindernissen, inkremental

D-Nummer fr 2. Schneide, wenn nicht programmiert  D+1

1086

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
Nr.

29

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<_GMODE> 

INT

Geometriemodus (Bewertung der programmierten Geometriewerte)

Arbeitsvorbereitung

3.23 Zyklen extern programmieren

EINER: 

ZEHNER: 

HUNDERTER: 

re
ser
viert

re
ser
viert

Auswahl Bearbeitung / nur Startpunktbe
rechnung

0 =

1 =

2 =

normale Bearbeitung (kein Kom
patibilittsmodus erforderlich)

normale Bearbeitung

Startposition berechnen - keine 
Bearbeitung (nur fr Aufruf aus 
ShopMill/ShopTurn)

TAUSENDER: 

Eingrenzung

0 =

1 =

nein

ja

ZEHNTAUSENDER: 

Grenze 1 X eingeben

0 =

1 =

nein

ja

HUNDERTTAUSENDER: 

Grenze 2 X eingeben

0 =

1 =

nein

ja

EINEMILLION: 

Grenze 1 Z eingeben

0 =

1 =

nein

ja

ZEHNMILLIONEN: 

Grenze 2 Z eingeben

0 =

1 =

nein

ja

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1087

 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

30

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<_DMODE> 

INT

Anzeigemodus

EINER: 

Bearbeitungsebene G17/G18/G19

ZEHNER: 

0 =

1 =

2 =

3 =

Kompatibilitt, es bleibt die vor 
Zyklusaufruf wirksame Ebene ak
tiv

G17 (nur im Zyklus aktiv)

G18 (nur im Zyklus aktiv)

G19 (nur im Zyklus aktiv)

Technologiemodus

1 =

2 =

3 =

Konturabspanen

Konturstechen

Stechdrehen

HUNDERTER: 

Restmaterial bearbeiten 

TAUSENDER:

ZEHNTAUSENDER:

0 =

1 =

---

nein

ja

reserviert

Technologieskalierung innerhalb von Zy
klenmasken (Seite 1113)

0 =

1 =

Eingabe: komplett

Eingabe: einfach

HUNDERTTAUSENDER:

Programmname automatisch

0 =

1 =

nein

ja

1088

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
Nr.

31

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

<_AMODE> 

INT

Alternativmodus

Arbeitsvorbereitung

3.23 Zyklen extern programmieren

EINER: 

Auswahl Zustellung

0 =

Zustellung DX und DZ bei Ab
spanart konturparallel

ZEHNER: 

1 =

Zustellung D

Zustellstrategie

0 =

1 =

variable Schnitttiefe (90 ... 100 %)

konstante Schnitttiefe

HUNDERTER: 

Schnittaufteilung

TAUSENDER: 

0 =

1 =

gleichmig

an Kanten ausrichten

Auswahl Konturaufma U1, Doppel
schlichten

0 =

1 =

nein

ja

ZEHNTAUSENDER: 

Auswahl Rohteil aktualisieren

0 =

1 =

nein

ja

HUNDERTTAUSENDER: 

Auswahl Aufma auf Rohteil XD

0 =

1 =

absolut, Wert der Planachse im 
Durchmesser 

inkremental, Wert der Planachse 
im Radius

EINEMILLION: 

Auswahl Aufma auf Rohteil ZD

0 =

1 =

absolut 

inkrementell

ZEHNMILLIONEN: 

Auswahl Grenze 2 XB

0 =

1 =

absolut, Wert der Planachse im 
Durchmesser 

inkremental, Wert der Planachse 
im Radius

HUNDERTMILLION: 

Auswahl Grenze 2 ZB

EINEMILLIARDE: 

0 =

1 =

0 =

1 =

absolut 

inkrementell

Fhrungskanal 

Folgekanal

32

33

34

<_PK>

INT

Nummer des Partnerkanals, wenn mehr als 2 Kanle an der Maschine 
vorhanden sind

DCH

FS

<_DCH>

<_FS>

REAL

REAL

Kanalversatz

Vorschub Schlichten bei Komplettbearbeitung

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1089

 
 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

3.23.1.44

CYCLE4071 - Lngsschleifen mit Zustellung am Umkehrpunkt

Syntax

Parameter

Funktion

CYCLE4071(<S_A>, <S_B>, <S_W>, <S_U>, <S_I>, <S_K>, <S_H>, <S_A1>, 
<S_A2>)

Nr.

Parameter

Datentyp

Bedeutung

1

2

3

4

5

6

7

8

9

<S_A> 

<S_B> 

<S_W> 

<S_U> 

<S_I> 

<S_K> 

<S_H> 

<S_A1> 

<S_A2> 

REAL

REAL

REAL

REAL

REAL

REAL

INT

AXIS

AXIS

Zustelltiefe am Anfang

Zustelltiefe am Ende

Schleifbreite

Ausfeuerzeit

Vorschub fr Zustellung

Vorschub fr Querzustellung

Anzahl Wiederholungen

Zustellachse (optional) bzw. 1. Geometrieachse

Pendelachse (optional) bzw. 2. Geometrieachse

Der Zyklus dient zum Abarbeiten von sich wiederholenden Zustellungen. Dabei kann die 
Zustelltiefe am Anfang und am Ende unterschiedlich sein. Zwischen dem Zustellen erfolgt eine 
Tangentialbewegung.

1090

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Ablauf

Arbeitsvorbereitung

3.23 Zyklen extern programmieren

 Start des Zyklus an der aktuellen Position der Pendelachse.
 Verfahren der Zustellachse auf die Zustelltiefe am Anfang <S_A> mit dem Vorschub fr Zustel

lung <S_I>.

 Ausfeuern mit der Ausfeuerzeit <S_U>.
 Verfahren der Pendelachse mit der Schleifbreite <S_W> als Verfahrweg und dem Vorschub fr 

Querzustellung <S_K>.

 Verfahren der Zustellachse auf die Zustelltiefe am Ende <S_B> mit dem Vorschub fr Zustel

lung <S_I>.

 Ausfeuern mit der Ausfeuerzeit <S_U>. 
 Verfahren der Pendelachse mit der Schleifbreite <S_W> als Verfahrweg auf den Anfangspunkt 

und dem Vorschub fr Querzustellung <S_K>.

Kennzeichnet die sich wiederholenden Ablaufschritte.

Der Ablauf wird so oft wiederholt, bis die programmierte Anzahl Wiederholungen <S_H> erreicht 
ist.

Hinweis

Der Ablauf ist mit Einzelsatz nicht unterbrechbar.

Beispiel

Zwei Pendelbewegung mit folgenden Zyklenparameter ausfhren:

 Zustelltiefe am Anfang: 0,02 mm 

 Zustelltiefe am Ende: 0,01 mm 

 Hub: 100 mm

 Ausfeuerzeit: 1 s

 Vorschub Zustellung: 1 mm/min

 Quervorschub: 1000 mm/min

 Wiederholungen: 2 

 Pendel- und Zustellachse: Standardgeometrieachsen

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1091

(cid:20)(cid:21)(cid:22)(cid:25)(cid:23)(cid:26)(cid:24)(cid:31)(cid:54)(cid:66)(cid:36)(cid:33)(cid:31)(cid:54)(cid:66)(cid:37)(cid:33)(cid:31)(cid:54)(cid:66)(cid:58)(cid:33)(cid:41)(cid:3)(cid:32)(cid:3)(cid:31)(cid:54)(cid:66)(cid:46)(cid:33)(cid:41)(cid:3)(cid:32)(cid:3)(cid:31)(cid:54)(cid:66)(cid:44)(cid:33)(cid:31)(cid:54)(cid:66)(cid:56)(cid:33)(cid:31)(cid:54)(cid:66)(cid:56)(cid:33)Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Programmcode
N10 T1 D1                             

N20 CYCLE4071(0.02,0.01,100,1,1,1000,2) 

N30 M30

3.23.1.45

CYCLE4072 - Lngsschleifen mit Zustellung am Umkehrpunkt und Abbruchsignal

Syntax

Parameter

Funktion

CYCLE4072(<S_GAUGE>, <S_A>, <S_B>, <S_W>, <S_U>, <S_I>, <S_K>, 
<S_H>, <S_A1>, <S_A2>)

Nr.

1

2

3

4

5

6

7

8

9

10

Parameter

Datentyp

Bedeutung

<S_GAUGE> 

STRING

Abbruchbedingungen fr Zustellung:

1. Nummer eines schnellen Eingangs

<S_A> 

<S_B> 

<S_W> 

<S_U> 

<S_I> 

<S_K> 

<S_H> 

<S_A1> 

<S_A2> 

REAL

REAL

REAL

REAL

REAL

REAL

INT

AXIS

AXIS

2. Logischer Ausdruck

Zustelltiefe am Anfang

Zustelltiefe am Ende

Schleifbreite

Ausfeuerzeit

Vorschub fr Zustellung

Vorschub fr Querzustellung

Anzahl Wiederholungen

Zustellachse (optional) bzw. 1. Geometrieachse

Pendelachse (optional) bzw. 2. Geometrieachse

Der Zyklus dient zum Abarbeiten von sich wiederholenden Zustellungen unter 
Bercksichtigung eines externen Abbruchsignals. Die Zustelltiefe kann am Anfang und am 
Ende unterschiedlich sein. Zwischen dem Zustellen erfolgt eine Tangentialbewegung. Die 
Tiefenzustellung wird abgebrochen, wenn die Abbruchbedingung erfllt ist. Nach dem Abbruch 
der Tiefenzustellung wird immer ein kompletter Hub durchgefhrt.

1092

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Ablauf

Abbruch der Zustellung am Ende

Arbeitsvorbereitung

3.23 Zyklen extern programmieren

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1093

(cid:20)(cid:21)(cid:22)(cid:25)(cid:23)(cid:26)(cid:24)(cid:27)(cid:28)(cid:31)(cid:54)(cid:66)(cid:36)(cid:33)(cid:31)(cid:54)(cid:66)(cid:37)(cid:33)(cid:31)(cid:54)(cid:66)(cid:58)(cid:33)(cid:41)(cid:3)(cid:32)(cid:3)(cid:31)(cid:54)(cid:66)(cid:46)(cid:33)(cid:41)(cid:3)(cid:32)(cid:3)(cid:31)(cid:54)(cid:66)(cid:44)(cid:33)(cid:31)(cid:54)(cid:66)(cid:56)(cid:33)(cid:31)(cid:54)(cid:66)(cid:56)(cid:33)(cid:31)(cid:54)(cid:66)(cid:56)(cid:33)(cid:31)(cid:54)(cid:66)(cid:42)(cid:36)(cid:56)(cid:42)(cid:40)(cid:33)(cid:31)(cid:54)(cid:66)(cid:56)(cid:33)Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Abbruch der Zustellung am Anfang

 Start des Zyklus an der aktuellen Position der Pendelachse.
 Verfahren der Zustellachse auf die Zustelltiefe am Anfang <S_A> mit dem Vorschub fr Zustel

lung <S_I>.

 Ausfeuern mit der Ausfeuerzeit <S_U>.
 Verfahren der Pendelachse mit der Schleifbreite <S_W> als Verfahrweg und dem Vorschub fr 

Querzustellung <S_K>.

 Verfahren der Zustellachse auf die Zustelltiefe am Ende <S_B> mit dem Vorschub fr Zustel

lung <S_I>.

 Ausfeuern mit der Ausfeuerzeit <S_U>.
 Verfahren der Pendelachse mit der Schleifbreite <S_W> als Verfahrweg auf den Anfangspunkt 

und dem Vorschub fr Querzustellung <S_K>.

 Abbruchsignal: Die Bearbeitung endet nach Erreichen des nchsten Startpunkts.
 Ohne Abbruchsignal: Der Ablauf wird so oft wiederholt, bis die programmierte Anzahl Wieder

holungen <S_H> erreicht ist.

Kennzeichnet die sich wiederholenden Ablaufschritte.

Hinweis

Der Ablauf ist mit Einzelsatz nicht unterbrechbar.

Ressourcen

Als Ressourcen verwendet der Zyklus eine satzbergreifende Synchronaktion und eine 
Synchronaktionsvariable. Die Synchronaktion wird dynamisch aus dem freien Bereich des 
Synchronaktionsbandes ermittelt (CUS.DIR - 1 ..., CMA.DIR - 1000 ..., CST.DIR  1199 ...). Als 
Synchronaktionsvariable wird SYG_IS[1] verwendet.

1094

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:20)(cid:21)(cid:22)(cid:25)(cid:23)(cid:26)(cid:24)(cid:27)(cid:28)(cid:31)(cid:54)(cid:66)(cid:36)(cid:33)(cid:31)(cid:54)(cid:66)(cid:37)(cid:33)(cid:31)(cid:54)(cid:66)(cid:58)(cid:33)(cid:41)(cid:3)(cid:32)(cid:3)(cid:31)(cid:54)(cid:66)(cid:46)(cid:33)(cid:41)(cid:3)(cid:32)(cid:3)(cid:31)(cid:54)(cid:66)(cid:44)(cid:33)(cid:31)(cid:54)(cid:66)(cid:56)(cid:33)(cid:31)(cid:54)(cid:66)(cid:56)(cid:33)(cid:31)(cid:54)(cid:66)(cid:56)(cid:33)(cid:31)(cid:54)(cid:66)(cid:42)(cid:36)(cid:56)(cid:42)(cid:40)(cid:33)Beispiele

Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Beispiel 1: Oszillieren mit zwei Hben

Zyklenparameter:

 Zustelltiefe am Anfang: 0,02 mm 

 Zustelltiefe am Ende: 0,01 mm 

 Hub: 100 mm

 Ausfeuerzeit: 1 s

 Vorschub Zustellung: 1 mm/min

 Quervorschub: 1000 mm/min

 Wiederholungen: 2 

 Pendel- und Zustellachse: Standardgeometrieachsen

Abbruchsignal: schneller Eingang 1 ($A_IN[1] )

Programmcode
N10 T1 D1                             

N20 CYCLE4072("1",0.02,0.01,100,1,1,1000,2) 

N30 M30

Beispiel 2: Oszillieren mit zwei Hben

Zyklenparameter:

 Zustelltiefe am Anfang: 0,02 mm 

 Zustelltiefe am Ende: 0,01 mm 

 Hub: 100 mm

 Ausfeuerzeit: 1 s

 Vorschub Zustellung: 1 mm/min

 Quervorschub: 1000 mm/min

 Wiederholungen: 2 

 Pendel- und Zustellachse: Standardgeometrieachsen

Abbruchsignal: Variable $A_DBR[20] < 0,01

Programmcode
N10 T1 D1                             

N20 CYCLE4072("($A_DBR[20]<0.01)",0.02,0.01,100,1,1,1000,2) 

N30 M30

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1095

Arbeitsvorbereitung

3.23 Zyklen extern programmieren

3.23.1.46

CYCLE4073 - Lngschleifen mit kontinuierlicher Zustellung

Syntax

Parameter

Funktion

Ablauf

CYCLE4073(<S_A>, <S_B>, <S_W>, <S_U>, <S_K>, <S_H>, <S_A1>, <S_A2>)

Nr.

Parameter

Datentyp

Bedeutung

1

2

3

4

5

6

7

8

<S_A> 

<S_B> 

<S_W> 

<S_U> 

<S_K> 

<S_H> 

<S_A1> 

<S_A2> 

REAL

REAL

REAL

REAL

REAL

INT

AXIS

AXIS

Zustelltiefe am Anfang

Zustelltiefe am Ende

Schleifbreite

Ausfeuerzeit

Vorschub fr Querzustellung

Anzahl Wiederholungen

Zustellachse (optional) bzw. 1. Geometrieachse

Pendelachse (optional) bzw. 2. Geometrieachse

Der Zyklus dient zum Abarbeiten von sich wiederholenden Zustellungen. Dabei kann die 
Zustellung vom Anfang zum Ende und vom Ende zum Anfang unterschiedlich sein.

 Start des Zyklus an der aktuellen Position der Pendelachse mit Zustelltiefe 0.
 Verfahren der Pendelachse mit der Schleifbreite <S_W> als Verfahrweg und Vorschub fr Quer
zustellung <S_K> mit kontinuierlicher Zunahme der Zustelltiefe bis zur Zustelltiefe am 
Anfang <S_A>.

 Ausfeuern mit der Ausfeuerzeit <S_U>.
 Verfahren der Pendelachse mit der Schleifbreite <S_W> als Verfahrweg auf den Anfangspunkt 
und Vorschub fr Querzustellung <S_K> mit kontinuierlicher Zunahme der Zustelltiefe bis zur 
Zustelltiefe am Ende <S_B>.

  Ausfeuern mit der Ausfeuerzeit <S_U>. 

Kennzeichnet die sich wiederholenden Ablaufschritte.

Der Ablauf wird so oft wiederholt, bis die programmierte Anzahl Wiederholungen <S_H> erreicht 
ist.

1096

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:20)(cid:21)(cid:24)(cid:22)(cid:23)(cid:31)(cid:54)(cid:66)(cid:36)(cid:33)(cid:31)(cid:54)(cid:66)(cid:37)(cid:33)(cid:31)(cid:54)(cid:66)(cid:58)(cid:33)(cid:41)(cid:3)(cid:32)(cid:3)(cid:31)(cid:54)(cid:66)(cid:46)(cid:33)(cid:31)(cid:54)(cid:66)(cid:56)(cid:33)(cid:31)(cid:54)(cid:66)(cid:56)(cid:33)Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Beispiel

Hinweis

Der Ablauf ist mit Einzelsatz nicht unterbrechbar.

Oszillieren mit zwei Hben

Zyklenparameter:

 Zustelltiefe am Anfang: 0,02 mm 

 Zustelltiefe am Ende: 0,01 mm 

 Hub: 100 mm

 Ausfeuerzeit: 1 s

 Quervorschub: 1000 mm/min

 Wiederholungen: 2 

 Pendel- und Zustellachse: Standardgeometrieachsen

Programmcode
N10 T1 D1                             

N20 CYCLE4073(0.02,0.01,100,1,1000,2) 

N30 M30

3.23.1.47

CYCLE4074 - Lngschleifen mit kontinuierlicher Zustellung und Abbruchsignal

Syntax

Parameter

CYCLE4074(<S_GAUGE>, <S_A>, <S_B>, <S_W>, <S_U>, <S_K>, <S_H>, 
<S_A1>, <S_A2>)

Nr.

1

2

3

4

5

6

7

Parameter

Datentyp

Bedeutung

<S_GAUGE> 

STRING

Abbruchbedingungen fr Zustellung:

1. Nummer eines schnellen Eingangs

<S_A> 

<S_B> 

<S_W> 

<S_U> 

<S_K> 

<S_H> 

REAL

REAL

REAL

REAL

REAL

INT

2. Logischer Ausdruck

Zustelltiefe am Anfang

Zustelltiefe am Ende

Schleifbreite

Ausfeuerzeit

Vorschub fr Querzustellung

Anzahl Wiederholungen

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1097

Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Nr.

8

9

Parameter

Datentyp

Bedeutung

<S_A1> 

<S_A2> 

AXIS

AXIS

Zustellachse (optional) bzw. 1. Geometrieachse

Pendelachse (optional) bzw. 2. Geometrieachse

Der Zyklus dient zum Abarbeiten von sich wiederholenden Zustellungen unter 
Bercksichtigung z. B. eines externen Abbruchsignals. Die Zustelltiefe kann am Anfang und 
am Ende unterschiedlich sein. Die Tiefenzustellung wird abgebrochen, wenn die 
Abbruchbedingung erfllt ist. Nach dem Abbruch der Tiefenzustellung wird immer ein 
kompletter Hub durchgefhrt.

Abbruch der Zustellung vom Ende zum Anfang

Funktion

Ablauf

1098

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:25)(cid:20)(cid:21)(cid:24)(cid:22)(cid:23)(cid:26)(cid:31)(cid:54)(cid:66)(cid:36)(cid:33)(cid:31)(cid:54)(cid:66)(cid:37)(cid:33)(cid:31)(cid:54)(cid:66)(cid:58)(cid:33)(cid:41)(cid:3)(cid:32)(cid:3)(cid:31)(cid:54)(cid:66)(cid:46)(cid:33)(cid:31)(cid:54)(cid:66)(cid:56)(cid:33)(cid:31)(cid:54)(cid:66)(cid:56)(cid:33)(cid:31)(cid:54)(cid:66)(cid:42)(cid:36)(cid:56)(cid:42)(cid:40)(cid:33)(cid:31)(cid:54)(cid:66)(cid:56)(cid:33)Abbruch der Zustellung vom Anfang zum Ende

Arbeitsvorbereitung

3.23 Zyklen extern programmieren

 Start des Zyklus an der aktuellen Position der Pendelachse mit Zustelltiefe 0.
 Verfahren der Pendelachse mit der Schleifbreite <S_W> als Verfahrweg und Vorschub fr Quer
zustellung <S_K> mit kontinuierlicher Zunahme der Zustelltiefe bis zur Zustelltiefe am 
Anfang <S_A>.

 Ausfeuern mit der Ausfeuerzeit <S_U>.
 Verfahren der Pendelachse mit der Schleifbreite <S_W> als Verfahrweg auf den Anfangspunkt 
und Vorschub fr Querzustellung <S_K> mit kontinuierlicher Zunahme der Zustelltiefe bis zur 
Zustelltiefe am Ende <S_B>.

 Ausfeuern mit der Ausfeuerzeit <S_U>.
 Abbruchsignal: Die Tiefenzustellung wird abgebrochen. Die Bearbeitung endet nach Erreichen 

des nchsten Startpunkts.

 Ohne Abbruchsignal: Der Ablauf wird so oft wiederholt, bis die programmierte Anzahl Wieder

holungen <S_H> erreicht ist.

Kennzeichnet die sich wiederholenden Ablaufschritte.

Hinweis

Der Ablauf ist mit Einzelsatz nicht unterbrechbar.

Ressourcen

Als Ressourcen verwendet der Zyklus eine satzbergreifende Synchronaktion und eine 
Synchronaktionsvariable. Die Synchronaktion wird dynamisch aus dem freien Bereich des 
Synchronaktionsbandes ermittelt (CUS.DIR - 1 ..., CMA.DIR - 1000 ..., CST.DIR  1199 ...). Als 
Synchronaktionsvariable wird SYG_IS[1] verwendet.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1099

(cid:25)(cid:26)(cid:20)(cid:21)(cid:24)(cid:22)(cid:23)(cid:31)(cid:54)(cid:66)(cid:36)(cid:33)(cid:31)(cid:54)(cid:66)(cid:37)(cid:33)(cid:31)(cid:54)(cid:66)(cid:58)(cid:33)(cid:41)(cid:3)(cid:32)(cid:3)(cid:31)(cid:54)(cid:66)(cid:46)(cid:33)(cid:31)(cid:54)(cid:66)(cid:56)(cid:33)(cid:31)(cid:54)(cid:66)(cid:42)(cid:36)(cid:56)(cid:42)(cid:40)(cid:33)(cid:31)(cid:54)(cid:66)(cid:56)(cid:33)Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Beispiele

Beispiel 1: Oszillieren mit zwei Hben

Zyklenparameter:

 Zustelltiefe am Anfang: 0,02 mm 

 Zustelltiefe am Ende: 0,01 mm 

 Hub: 100 mm

 Ausfeuerzeit: 1 s

 Quervorschub: 1000 mm/min

 Wiederholungen: 2 

 Pendel- und Zustellachse: Standardgeometrieachsen

Abbruchsignal: schneller Eingang 1 ($A_IN[1] )

Programmcode
N10 T1 D1                             

N20 CYCLE4074("1",0.02,0.01,100,1,1000,2)

N30 M30

Beispiel 2: Oszillieren mit zwei Hben

Zyklenparameter:

 Zustelltiefe am Anfang: 0,02 mm 

 Zustelltiefe am Ende: 0,01 mm 

 Hub: 100 mm

 Ausfeuerzeit: 1 s

 Quervorschub: 1000 mm/min

 Wiederholungen: 2 

 Pendel- und Zustellachse: Standardgeometrieachsen

Abbruchsignal: Variable $A_DBR[20] < 0,01

Programmcode
N10 T1 D1                             

N20 CYCLE4074("($A_DBR[20]<0.01)",0.02,0.01,100,1,1000,2)

N30 M30

3.23.1.48

CYCLE4075 - Flachschleifen mit Zustellung am Umkehrpunkt

Syntax

1100

CYCLE4075(<S_I>, <S_J>, <S_K>, <S_A>, <S_R>, <S_F>, <S_P>, <S_A1>, 
<S_A2>)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Parameter

Funktion

Ablauf

Nr.

Parameter

Datentyp

Bedeutung

1

2

3

4

5

6

7

8

9

<S_I> 

<S_J> 

<S_K> 

<S_A> 

<S_R> 

<S_F> 

<S_P> 

<S_A1> 

<S_A2> 

REAL

REAL

REAL

REAL

REAL

REAL

REAL

AXIS

AXIS

Zustelltiefe am Anfang

Zustelltiefe am Ende

Gesamtzustelltiefe

Schleifbreite

Vorschub fr Zustellung

Vorschub fr Querzustellung

Ausfeuerzeit

Zustellachse (optional)

Pendelachse (optional)

Der Zyklus dient zum Bearbeiten mit einer Gesamtzustelltiefe in Zustellschritten. Die 
Zustelltiefen am Anfang und am Ende knnen unterschiedlich sein. Zwischen dem Zustellen 
erfolgt eine Tangentialbewegung.

Die Wegangaben P1 bis P4 knnen negativ oder positiv sein.

Die Angabe der Zustellachse und/oder Pendelachse sind optional. Wird ein bzw. beide 
Parameter nicht angegeben, verwendet der Zyklus die ersten beiden Geometrieachsen des 
Kanals.

Ist die Summe aus Zustelltiefe am Anfang und am Ende gleich 0 bzw. die Gesamtzustelltiefe 
gleich 0, wird nur ein Ausfeuerhub durchgefhrt.

Gesamtzustelltiefe erreicht bei Zustellung am zweiten Umkehrpunkt

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1101

(cid:20)(cid:21)(cid:22)(cid:25)(cid:23)(cid:26)(cid:24)(cid:31)(cid:54)(cid:66)(cid:44)(cid:33)(cid:31)(cid:54)(cid:66)(cid:45)(cid:33)(cid:31)(cid:54)(cid:66)(cid:46)(cid:33)(cid:31)(cid:54)(cid:66)(cid:36)(cid:33)(cid:41)(cid:3)(cid:32)(cid:3)(cid:31)(cid:54)(cid:66)(cid:41)(cid:33)(cid:41)(cid:3)(cid:32)(cid:3)(cid:31)(cid:54)(cid:66)(cid:53)(cid:33)(cid:31)(cid:54)(cid:66)(cid:51)(cid:33)(cid:31)(cid:54)(cid:66)(cid:51)(cid:33)(cid:31)(cid:54)(cid:66)(cid:51)(cid:33)(cid:31)(cid:54)(cid:66)(cid:51)(cid:33)Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Gesamtzustelltiefe erreicht bei Zustellung am ersten Umkehrpunkt

 Start des Zyklus an der aktuellen Position der Pendelachse.
 Verfahren der Zustellachse auf die Zustelltiefe am Anfang <S_I> mit dem Vorschub fr Zustel

lung <S_R>.

 Ausfeuern mit der Ausfeuerzeit <S_P>. 
 Verfahren der Pendelachse mit der Schleifbreite <S_A> als Verfahrweg und dem Vorschub fr 

Querzustellung <S_F>.

 Verfahren der Zustellachse auf die Zustelltiefe am Ende <S_J> mit dem Vorschub fr Zustel

lung <S_R>.

 Ausfeuern mit der Ausfeuerzeit <S_P>. 
 Verfahren der Pendelachse mit der Schleifbreite <S_A> als Verfahrweg auf den Anfangspunkt 

und dem Vorschub fr Querzustellung <S_F>.

Kennzeichnet die sich wiederholenden Ablaufschritte.

Der Ablauf wird so oft wiederholt, bis die Gesamtzustelltiefe <S_K> erreicht wurde. Der letzte 
Hub wird dann ungleichmig aufgeteilt.

Hinweis

Der Ablauf ist mit Einzelsatz nicht unterbrechbar.

Beispiel

Oszillieren mit:

 0,02 mm Zustelltiefe am Anfang

 0,01 mm Zustelltiefe am Ende

 Gesamtzustelltiefe 1 mm

 Hub 100 mm

 Vorschub Zustellung 1 mm/min

 Quervorschub 1000 mm/min

1102

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:20)(cid:21)(cid:22)(cid:25)(cid:23)(cid:26)(cid:24)(cid:31)(cid:54)(cid:66)(cid:44)(cid:33)(cid:31)(cid:54)(cid:66)(cid:45)(cid:33)(cid:31)(cid:54)(cid:66)(cid:46)(cid:33)(cid:31)(cid:54)(cid:66)(cid:36)(cid:33)(cid:41)(cid:3)(cid:32)(cid:3)(cid:31)(cid:54)(cid:66)(cid:41)(cid:33)(cid:41)(cid:3)(cid:32)(cid:3)(cid:31)(cid:54)(cid:66)(cid:53)(cid:33)(cid:31)(cid:54)(cid:66)(cid:51)(cid:33)(cid:31)(cid:54)(cid:66)(cid:51)(cid:33)(cid:31)(cid:54)(cid:66)(cid:51)(cid:33)(cid:31)(cid:54)(cid:66)(cid:51)(cid:33)Arbeitsvorbereitung

3.23 Zyklen extern programmieren

 Ausfeuerzeit 1 Sekunde

 Standardgeometrieachsen

Programmcode

N10 T1 D1                             

N20 CYCLE4075(0.02,0.01,1,100,1,1000,1) 

N30 M30

3.23.1.49

CYCLE4077 - Flachschleifen mit Zustellung am Umkehrpunkt und Abbruchsignal

Syntax

Parameter

Funktion

CYCLE4077(<S_GAUGE>, <S_I>, <S_J>, <S_K>, <S_A>, <S_R>, <S_F>, 
<S_P>, <S_A1>, <S_A2>)

Nr.

1

2

3

4

5

6

7

8

9

10

Parameter

Datentyp

Bedeutung

<S_GAUGE> 

STRING

Abbruchbedingung fr Zustellung:

 Nummer eines schnellen Eingangs

<S_I> 

<S_J> 

<S_K> 

<S_A> 

<S_R> 

<S_F> 

<S_P> 

<S_A1> 

<S_A2> 

REAL

REAL

REAL

REAL

REAL

REAL

REAL

AXIS

AXIS

 Logischer Ausdruck

Zustelltiefe am Anfang

Zustelltiefe am Ende

Gesamtzustelltiefe

Schleifbreite

Vorschub fr Zustellung

Vorschub fr Querzustellung

Ausfeuerzeit

Zustellachse (optional)

Pendelachse (optional)

Der Zyklus dient zum Bearbeiten mit einer Gesamtzustelltiefe in Zustellschritten. Die 
Zustelltiefen am Anfang und am Ende knnen unterschiedlich sein. Zwischen dem Zustellen 
erfolgt eine Tangentialbewegung. Die Tiefenzustellung wird abgebrochen, wenn das 
Abbruchsignal des schnellen Eingangs gleich 1 oder die Abbruchbedingung erfllt ist. Nach 
dem Abbruch wird ein kompletter Hub ausgefhrt.

Die Wegangaben P2 bis P5 knnen negativ oder positiv sein.

Die Angabe der Zustellachse und/oder Pendelachse sind optional. Wird ein bzw. beide 
Parameter nicht angegeben, verwendet der Zyklus die ersten beiden Geometrieachsen des 
Kanals.

Ist die Summe aus Zustelltiefe am Anfang und am Ende gleich 0 bzw. die Gesamtzustelltiefe 
gleich 0, wird nur ein Ausfeuerhub durchgefhrt.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1103

 
 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Ablauf

Abbruch der Zustellung am Ende

1104

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:27)(cid:28)(cid:20)(cid:21)(cid:22)(cid:25)(cid:23)(cid:26)(cid:24)(cid:31)(cid:54)(cid:66)(cid:44)(cid:33)(cid:31)(cid:54)(cid:66)(cid:45)(cid:33)(cid:31)(cid:54)(cid:66)(cid:46)(cid:33)(cid:31)(cid:54)(cid:66)(cid:36)(cid:33)(cid:41)(cid:3)(cid:32)(cid:3)(cid:31)(cid:54)(cid:66)(cid:41)(cid:33)(cid:41)(cid:3)(cid:32)(cid:3)(cid:31)(cid:54)(cid:66)(cid:53)(cid:33)(cid:31)(cid:54)(cid:66)(cid:51)(cid:33)(cid:31)(cid:54)(cid:66)(cid:51)(cid:33)(cid:31)(cid:54)(cid:66)(cid:42)(cid:36)(cid:56)(cid:42)(cid:40)(cid:33)(cid:31)(cid:54)(cid:66)(cid:51)(cid:33)(cid:31)(cid:54)(cid:66)(cid:51)(cid:33)Abbruch der Zustellung am Anfang

Arbeitsvorbereitung

3.23 Zyklen extern programmieren

 Start des Zyklus an der aktuellen Position der Pendelachse.
 Verfahren der Zustellachse auf die Zustelltiefe am Anfang <S_I> mit dem Vorschub fr Zustel

lung <S_R>.

 Ausfeuern mit der Ausfeuerzeit <S_P>.
 Verfahren der Pendelachse mit der Schleifbreite <S_A> als Verfahrweg und dem Vorschub fr 

Querzustellung <S_F>.

 Verfahren der Zustellachse auf die Zustelltiefe am Ende <S_J> mit dem Vorschub fr Zustel

lung <S_R>.

 Ausfeuern mit der Ausfeuerzeit <S_P>. 
 Verfahren der Pendelachse mit der Schleifbreite <S_A> als Verfahrweg auf den Anfangspunkt 

und dem Vorschub fr Querzustellung <S_F>.

 Abbruchsignal: Die Bearbeitung endet nach Erreichen des nchsten Startpunkts.
 Ohne Abbruchsignal: Der Ablauf wird so oft wiederholt, bis die Gesamtzustelltiefe <S_K> er

reicht wurde. Der letzte Hub wird dann ungleichmig aufgeteilt.

Kennzeichnet die sich wiederholenden Ablaufschritte.

Hinweis

Der Ablauf ist mit Einzelsatz nicht unterbrechbar.

Ressourcen

Als Ressourcen verwendet der Zyklus eine satzbergreifende Synchronaktion und eine 
Synchronaktionsvariable. Die Synchronaktion wird dynamisch aus dem freien Bereich des 
Synchronaktionsbandes ermittelt (CUS.DIR - 1 ..., CMA.DIR - 1000 ... , CST.DIR  1199 ...). Als 
Synchronaktionsvariable wird SYG_IS[1] verwendet.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1105

(cid:27)(cid:28)(cid:20)(cid:21)(cid:22)(cid:25)(cid:23)(cid:26)(cid:24)(cid:31)(cid:54)(cid:66)(cid:44)(cid:33)(cid:31)(cid:54)(cid:66)(cid:45)(cid:33)(cid:31)(cid:54)(cid:66)(cid:46)(cid:33)(cid:31)(cid:54)(cid:66)(cid:36)(cid:33)(cid:41)(cid:3)(cid:32)(cid:3)(cid:31)(cid:54)(cid:66)(cid:41)(cid:33)(cid:41)(cid:3)(cid:32)(cid:3)(cid:31)(cid:54)(cid:66)(cid:53)(cid:33)(cid:31)(cid:54)(cid:66)(cid:51)(cid:33)(cid:31)(cid:54)(cid:66)(cid:51)(cid:33)(cid:31)(cid:54)(cid:66)(cid:51)(cid:33)(cid:31)(cid:54)(cid:66)(cid:42)(cid:36)(cid:56)(cid:42)(cid:40)(cid:33)Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Beispiele

Beispiel 1

Oszillieren mit:

 0,02 mm Zustelltiefe am Anfang

 0,01 mm Zustelltiefe am Ende

 Gesamtzustelltiefe 1 mm

 Hub 100 mm

 Vorschub Zustellung 1 mm/min

 Quervorschub 1000 mm/min

 Ausfeuerzeit 1 Sekunde

 Standardgeometrieachsen

Abbruchsignal: schneller Eingang 1 ($A_IN[1] )

Programmcode

N10 T1 D1                             

N20 CYCLE4077("1",0.02,0.01,1,100,1,1000,1)

N30 M30

Beispiel 2

Oszillieren mit:

 0,02 mm Zustelltiefe am Anfang

 0,01 mm Zustelltiefe am Ende

 Gesamtzustelltiefe 1 mm

 Hub 100 mm

 Vorschub Zustellung 1 mm/min

 Quervorschub 1000 mm/min

 Ausfeuerzeit 1 Sekunde

 Standardgeometrieachsen

Abbruchsignal: Dualport-RAM-Variable 20 kleiner als 0,01 ($A_DBR[20] < 0,01)

Programmcode

N10 T1 D1                             

N20 CYCLE4077("($A_DBR[20]<0.01)",0.02,0.01,1,100,1,1000,1)

N30 M30

1106

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
3.23.1.50

CYCLE4078 - Flachschleifen mit kontinuierlicher Zustellung

Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Syntax

Parameter

Funktion

CYCLE4078(<S_I>, <S_J>, <S_K>, <S_A>, <S_F>, <S_P>, <S_A1>, <S_A2>)

Nr.

Parameter

Datentyp

Bedeutung

1

2

3

4

5

6

7

8

<S_I> 

<S_J> 

<S_K> 

<S_A> 

<S_F> 

<S_P> 

<S_A1> 

<S_A2> 

REAL

REAL

REAL

REAL

REAL

REAL

AXIS

AXIS

Zustelltiefe vom Anfang zum Ende

Zustelltiefe vom Ende zum Anfang

Gesamtzustelltiefe

Schleifbreite

Vorschub

Ausfeuerzeit

Zustellachse (optional)

Pendelachse (optional)

Der Zyklus dient zum Bearbeiten mit einer Gesamtzustelltiefe mittels kontinuierlicher 
Zustellung. Die Zustelltiefen vom Anfang zum Ende und vom Ende zum Anfang knnen 
unterschiedlich sein.

Die Wegangaben P1 bis P4 knnen negativ oder positiv sein.

Die Angabe der Zustellachse und/oder Pendelachse sind optional. Wird ein bzw. beide 
Parameter nicht angegeben, verwendet der Zyklus die ersten beiden Geometrieachsen des 
Kanals.

Ist die Summe der Zustelltiefen P1 und P2  gleich 0 bzw. die Gesamtzustelltiefe gleich 0 wird 
nur ein Ausfeuerhub durchgefhrt.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1107

Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Ablauf

 Start des Zyklus an der aktuellen Position der Pendelachse mit Zustelltiefe 0.
 Verfahren der Pendelachse mit der Schleifbreite <S_A> als Verfahrweg und Vorschub <S_F> 

mit kontinuierlicher Zunahme der Zustelltiefe bis zur Zustelltiefe am Anfang <S_I>.

 Ausfeuern mit der Ausfeuerzeit <S_P>.
 Verfahren der Pendelachse mit der Schleifbreite <S_A> als Verfahrweg auf den Anfangspunkt 
und Vorschub <S_F> mit kontinuierlicher Zunahme der Zustelltiefe bis zur Zustelltiefe am En
de <S_J>.

 Ausfeuern mit der Ausfeuerzeit <S_P>. 
 Verfahren der Pendelachse mit der Schleifbreite <S_A> als Verfahrweg auf den Anfangspunkt 

und Vorschub <S_F>.

Kennzeichnet die sich wiederholenden Ablaufschritte.

Der Ablauf wird so oft wiederholt, bis die Gesamtzustelltiefe <S_K> erreicht wurde. Der letzte 
Hub wird dann ungleichmig aufgeteilt.

Hinweis

Der Ablauf ist mit Einzelsatz nicht unterbrechbar.

Beispiel

Oszillieren mit:

 20 mm Zustelltiefe am Anfang

 10 mm Zustelltiefe am Ende

 Gesamtzustelltiefe 100 mm

 Hub 100 mm

 Vorschub 1000 mm/min

 Ausfeuerzeit 1 Sekunde

 Standardgeometrieachsen

1108

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:25)(cid:20)(cid:21)(cid:24)(cid:22)(cid:23)(cid:31)(cid:54)(cid:66)(cid:44)(cid:33)(cid:31)(cid:54)(cid:66)(cid:45)(cid:33)(cid:31)(cid:54)(cid:66)(cid:46)(cid:33)(cid:31)(cid:54)(cid:66)(cid:36)(cid:33)(cid:41)(cid:3)(cid:32)(cid:3)(cid:31)(cid:54)(cid:66)(cid:41)(cid:33)(cid:31)(cid:54)(cid:66)(cid:51)(cid:33)(cid:31)(cid:54)(cid:66)(cid:51)(cid:33)(cid:31)(cid:54)(cid:66)(cid:51)(cid:33)Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Programmcode

N10 T1 D1                             

N20 CYCLE4078(20,10,100,100,1000,1)

N30 M30

3.23.1.51

CYCLE4079 - Flachschleifen mit intermittierender Zustellung

Syntax

Parameter

Funktion

CYCLE4079(<S_I>, <S_J>, <S_K>, <S_A>, <S_R>, <S_F>, <S_P>, <S_A1>, 
<S_A2>)

Nr.

Parameter

Datentyp

Bedeutung

1

2

3

4

5

6

7

8

9

<S_I> 

<S_J> 

<S_K> 

<S_A> 

<S_R> 

<S_F> 

<S_P> 

<S_A1> 

<S_A2> 

REAL

REAL

REAL

REAL

REAL

REAL

REAL

AXIS

AXIS

Zustelltiefe am Anfang

Zustelltiefe am Ende

Gesamtzustelltiefe

Schleifbreite

Vorschub fr Zustellung

Vorschub fr Querzustellung

Ausfeuerzeit

Zustellachse (optional)

Pendelachse (optional)

Der Zyklus dient zum Bearbeiten mit einer Gesamtzustelltiefe in Zustellschritten. Die 
Zustelltiefen am Anfang und am Ende knnen unterschiedlich sein. Zwischen dem Zustellen 
erfolgt eine Tangentialbewegung.

Die Wegangaben P1 bis P4 knnen negativ oder positiv sein.

Die Angabe der Zustellachse und/oder Pendelachse sind optional. Wird ein bzw. beide 
Parameter nicht angegeben, verwendet der Zyklus die ersten beiden Geometrieachsen des 
Kanals.

Ist die Summe aus Zustelltiefe am Anfang und am Ende gleich 0 bzw. die Gesamtzustelltiefe 
gleich 0, wird nur ein Ausfeuerhub durchgefhrt.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1109

 
 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Ablauf

Gesamtzustelltiefe erreicht bei Zustellung am zweiten Umkehrpunkt

1110

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:20)(cid:21)(cid:22)(cid:25)(cid:23)(cid:26)(cid:24)(cid:31)(cid:54)(cid:66)(cid:44)(cid:33)(cid:31)(cid:54)(cid:66)(cid:45)(cid:33)(cid:31)(cid:54)(cid:66)(cid:46)(cid:33)(cid:31)(cid:54)(cid:66)(cid:36)(cid:33)(cid:41)(cid:3)(cid:32)(cid:3)(cid:31)(cid:54)(cid:66)(cid:41)(cid:33)(cid:41)(cid:3)(cid:32)(cid:3)(cid:31)(cid:54)(cid:66)(cid:53)(cid:33)(cid:31)(cid:54)(cid:66)(cid:51)(cid:33)(cid:31)(cid:54)(cid:66)(cid:51)(cid:33)(cid:31)(cid:54)(cid:66)(cid:51)(cid:33)(cid:31)(cid:54)(cid:66)(cid:51)(cid:33)Gesamtzustelltiefe erreicht bei Zustellung am ersten Umkehrpunkt

Arbeitsvorbereitung

3.23 Zyklen extern programmieren

 Start des Zyklus an der aktuellen Position der Pendelachse.
 Verfahren der Zustellachse auf die Zustelltiefe am Anfang <S_I> mit dem Vorschub fr Zustel

lung <S_R>.

 Ausfeuern mit der Ausfeuerzeit <S_P>. 
 Verfahren der Pendelachse mit der Schleifbreite <S_A> als Verfahrweg und dem Vorschub fr 

Querzustellung <S_F>.

 Verfahren der Zustellachse auf die Zustelltiefe am Ende <S_J> mit dem Vorschub fr Zustel

lung <S_R>.

 Ausfeuern mit der Ausfeuerzeit <S_P>. 
 Verfahren der Pendelachse mit der Schleifbreite <S_A> als Verfahrweg auf den Anfangspunkt 

und dem Vorschub fr Querzustellung <S_F>.

Kennzeichnet die sich wiederholenden Ablaufschritte.

Der Ablauf wird so oft wiederholt, bis die Gesamtzustelltiefe <S_K> erreicht wurde. Der letzte 
Hub wird dann ungleichmig aufgeteilt.

Hinweis

Der Ablauf ist mit Einzelsatz nicht unterbrechbar.

Beispiel

Oszillieren mit:

 0,02 mm Zustelltiefe am Anfang

 0,01 mm Zustelltiefe am Ende

 Gesamtzustelltiefe 1 mm

 Hub 100 mm

 Vorschub Zustellung 1 mm/min

 Quervorschub 1000 mm/min

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1111

(cid:20)(cid:21)(cid:22)(cid:25)(cid:23)(cid:26)(cid:24)(cid:31)(cid:54)(cid:66)(cid:44)(cid:33)(cid:31)(cid:54)(cid:66)(cid:45)(cid:33)(cid:31)(cid:54)(cid:66)(cid:46)(cid:33)(cid:31)(cid:54)(cid:66)(cid:36)(cid:33)(cid:41)(cid:3)(cid:32)(cid:3)(cid:31)(cid:54)(cid:66)(cid:41)(cid:33)(cid:41)(cid:3)(cid:32)(cid:3)(cid:31)(cid:54)(cid:66)(cid:53)(cid:33)(cid:31)(cid:54)(cid:66)(cid:51)(cid:33)(cid:31)(cid:54)(cid:66)(cid:51)(cid:33)(cid:31)(cid:54)(cid:66)(cid:51)(cid:33)(cid:31)(cid:54)(cid:66)(cid:51)(cid:33)Arbeitsvorbereitung

3.23 Zyklen extern programmieren

 Ausfeuerzeit 1 Sekunde

 Standardgeometrieachsen

Programmcode

N10 T1 D1                             

N20 CYCLE4079(0.02,0.01,1,100,1,1000,1) 

N30 M30

3.23.1.52

GROUP_BEGIN - Anfang Programmblock

Syntax

Parameter

GROUP_BEGIN(<_LEVEL>, <_NAME>, <_SP>, <_MODE>, <S_ICON>)

Nr.

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

1

2

3

4

5

<_LEVEL>  

INT

Ebene

0 =

1 =

Hauptebene

1. Unterebene

<_NAME> 

STRING[128]

Blockname

<_SP> 

INT

Spindel

0 =

1 =

2 =

keine Spindel

Hauptspindel

Gegenspindel

<_MODE> 

INT

Modus

Bit 0

Bit 1

= 1

= 1

Bit 12

Bit 13

reserviert

reserviert

GROUP_ADDEND existiert

ShopTurn: automatischer Rckzug (auf Werk
zeugwechselpunkt fahren)

<S_ICON> 

STRING[32]

Name des Icons (nur fr Bedienoberflche)

3.23.1.53

GROUP_END - Ende Programmblock

Syntax

GROUP_END(<_LEVEL>, <_SP>)

1112

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Parameter

Nr.

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

1

2

<_LEVEL>  

INT

<_SP> 

INT

Ebene

0 =

1 =

Spindel

0 =

1 =

2 =

Hauptebene

1. Unterebene

keine Spindel

Hauptspindel

Gegenspindel

3.23.1.54

GROUP_ADDEND - Ende Einfahrzusatz

Syntax

Parameter

GROUP_ADDEND(<_LEVEL>, <_SP>)

Nr.

Parameter 
Maske

Parameter 
intern

Datentyp

Bedeutung

1

2

<_LEVEL>  

INT

<_SP> 

INT

Ebene

0 =

1 =

Spindel

0 =

1 =

2 =

Hauptebene

1. Unterebene

keine Spindel

Hauptspindel

Gegenspindel

3.23.1.55

Randbedingungen

Technologieskalierung innerhalb von Zyklenmasken

Ist die Technologieskalierung aktiv, kann bei verschiedenen Zyklenmasken die vereinfachte 
Eingabe angewhlt werden, bei der nur die wesentlichsten Zyklenparameter angezeigt werden.

Bei folgenden Zyklenmasken kann z. B. die vereinfachte Eingabe angewhlt werden:

Technologie

Bohren

Frsen

Zyklenmaske

Tieflochbohren

Gewindebohren

Rechtecktasche

Konturfrsen: Tasche

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1113

 
 
 
 
Arbeitsvorbereitung

3.23 Zyklen extern programmieren

Technologie

Drehen

Zyklenmaske

Gewindedrehen: Lngs

Konturdrehen: Abspanen

Konturdrehen: Stechen

Konturdrehen: Stechdrehen

Inbetriebnahme

Bei den betreffenden Zyklenmasken steht an der Bedienoberflche die Auswahlmglichkeit 
"Eingabe: einfach" und "Eingabe: komplett" zur Verfgung.

Nicht angezeigte Zyklenparameter 

Die bei der vereinfachten Eingabe nicht angezeigten Zyklenparameter werden entweder mit 
festen, technologisch sinnvollen, aber nicht nderbaren Werten vorbelegt. Oder den 
Zyklenparametern werden ber kanalspezifische Zyklen-Settingdaten parametrierbare Werte 
zugewiesen. Siehe unten Absatz "Inbetriebnahme" > "Kanalspezifische Zyklen-Settingdaten"

Umschaltung "Eingabe: komplett" > "Eingabe: einfach"

Wird eine Zyklenmaske unter der Einstellung "Eingabe komplett" ausgefllt und anschlieend 
auf "Eingabe einfach" umgeschaltet, werden bei der Generierung des Zyklenaufrufs fr die 
dann nicht mehr angezeigten Parameter, die Default- oder Settingdatenwerte verwendet.

Kanalspezifische Konfigurationsmaschinendaten

Mit dem Maschinendatum wird die Mglichkeit zur Technologieskalierung innerhalb von 
Zyklenmasken aktiviert:

MD52210 $MCS_FUNCTION_MASK_DISP, Bit 9 = 1 (Auswahl "Eingabe einfach" anzeigen)

Kanalspezifische Zyklen-Settingdaten

Ist die vereinfachte Eingabe innerhalb von Zyklenmasken aktiv, knnen die Werte fr 
bestimmte Zyklenparameter ber folgende Settingdaten vorgegeben werden:

Nummer Bezeichner

Bedeutung

SD55300 $SCS_EASY_SAFETY_CLEARANCE

Sicherheitsabstand

SD55301 $SCS_EASY_DWELL_TIME

Verweilzeit

SD55305 $SCS_EASY_DRILL_DEEP_FD1

Tieflochbohren: Prozentsatz: 1. Vorschub

SD55306 $SCS_EASY_DRILL_DEEP_DF

Tieflochbohren: Prozentsatz: Zustellung

SD55307 $SCS_EASY_DRILL_DEEP_V1

Tieflochbohren: minimale Tiefenzustellung

SD55308 $SCS_EASY_DRILL_DEEP_V2

Tieflochbohren: Rckzugsbetrag

SD55309 $SCS_EASY_THREAD_RETURN_DIST

Gewindedrehen: Rcklaufabstand

3.23.2

bersicht Messzyklenparameter

1114

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Tabellen

4.1

Anweisungen

Hinweis

Zyklen

4

Die Liste der Anweisungen enthlt alle Zyklen, die im NC-Programm (G-Code) vorkommen 
knnen, d. h. im Programmeditor ber Masken programmiert werden knnen bzw. beim 
Schleifen ohne Programmieruntersttzung programmiert werden mssen. Nicht bercksichtigt 
wurden Zyklen, die aus Kompatibilittsgrnden in der Steuerung noch vorhanden sind, aber 
ber den Programmeditor von SINUMERIK Operate nicht mehr editiert werden knnen 
("Kompatibilittszyklen").

Anweisungen A ... C

Anweisung

Art 1) Bedeutung

W 2)

TP 3) SA 4) Beschreibung siehe 5)

1) 2) 3) 4) 5) Erluterungen siehe Legende (Seite 1115).

:

*

+

-

<

<<

<=

=

>=

/

/0



/7

A

A2

A3

A4

A5

O

O

O

O

O

O

O

O

O

O

NC-Hauptsatznummer, Sprungmarkenab
schluss, Kettungsoperator

Operator fr Multiplikation

Operator fr Addition

Operator fr Subtraktion

Vergleichsoperator, kleiner

Verkettungsoperator fr Strings

Vergleichsoperator, kleiner gleich

Zuweisungsoperator

Vergleichsoperator, grer gleich

Operator fr Division 

Satz wird ausgeblendet (1. Ausblendebene)
...
...
Satz wird ausgeblendet (8. Ausblendebene)

A

Achsname

A Werkzeugorientierung: RPY- oder Eulerwinkel

A Werkzeugorientierung: 1. Komponente des 

Richtungsvektors

A Werkzeugorientierung: 1. Komponente des 

Flchennormalenvektors am Satzanfang

A Werkzeugorientierung: 1. Komponente des 
Flchennormalenvektors am Satzende

m/s

s

s

s

s

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC 

PM-NC

PM-NC

PM-NC

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1115

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.1 Anweisungen

Anweisung

Art 1) Bedeutung

W 2)

TP 3) SA 4) Beschreibung siehe 5)

1) 2) 3) 4) 5) Erluterungen siehe Legende (Seite 1115).

A6

A7

ABS

AC

ACC

ACCLIMA

ACN

ACOS

ACP

ACTBLOCNO

ADDFRAME

ADIS

ADISPOS

ADISPOSA

ALF

AMIRROR

AND

ANG 

AP

APR

APRB

APRP

APW

APWB

APWP

APX

AR

AROT

AROTS

1116

A Werkzeugorientierung: 1. Komponente des 
Richtungsvektors fr die Drehachse des Ke
gels

A Werkzeugorientierung: 1. Vektorkomponente 

fr die Zwischenorientierung auf der Kegel
mantelflche

F

K

K

K

K

F

K

P

F

A

A

P

A

G

K

A

A

K

K

K

K

K

K

K

A

G

G

Absolutwert (Betrag)

absolute Maangabe von Koordinaten/Positi
onen

Beeinflussung der aktuellen axialen Beschleu
nigung

Beeinflussung der aktuellen maximalen axia
len Beschleunigung

absolute Maangabe fr Rundachsen, Positi
on in negativer Richtung anfahren

Arcus-Cosinus
(Trigon. Funktion)

absolute Maangabe fr Rundachsen, Positi
on in positiver Richtung anfahren

Ausgabe der aktuellen Satznummer eines 
Alarmsatzes, auch wenn "aktuelle Satzanzei
ge unterdrckt" (DISPLOF) aktiv ist!

Einrechnung und evtl. Aktivierung eines ge
messenen Frames

berschleifabstand fr Bahnfunktionen G1, 
G2, G3, ...

berschleifabstand fr Eilgang G0

Gre des Toleranzfenster fr IPOBRKA

Schnellabhebewinkel

Programmierbare Spiegelung

Logisches UND

Konturzug-Winkel

Polarwinkel

Zugriffsschutz lesen / anzeigen

Zugriffsrecht lesen, BTSS

Zugriffsrecht lesen, Teileprogramm

Zugriffsschutz schreiben

Zugriffsrecht schreiben, BTSS

Zugriffsrecht schreiben, Teileprogramm

Definition des Zugriffsschutzes fr die Ausfh
rung des angegebenen Sprachelements

ffnungswinkel

Programmierbare Drehung

Programmierbare Framedrehungen mit 
Raumwinkeln

s

s

s

m

m

s

s

m

m

m

m

s

s

m/s

m/s

s

s

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

PM-NC

PM-NC

+

PM-NC

PM-NC 

+

+

PM-NC

PM-NC

PM-NC 

+

PM-NC

PM-NC 

PM-NC

-

PM-NC, FM-B

PM-NC

PM-NC

+

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC 

PM-NC 

PM-NC

PM-NC 

PM-NC 

PM-NC

PM-NC

PM-NC

PM-NC

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Anweisung

Art 1) Bedeutung

W 2)

TP 3) SA 4) Beschreibung siehe 5)

1) 2) 3) 4) 5) Erluterungen siehe Legende (Seite 1115).

Tabellen

4.1 Anweisungen

AS

ASCALE

ASIN

ASPLINE

ATAN2

ATOL

ATRANS

AUXFUDEL

AUXFUDELG

AUXFUMSEQ

AUXFUSYNC

AX

AXCTSWE

AXCTSWEC

AXCTSWED

AXIS

AXNAME

AXSTRING

AXTOCHAN

AXTOSPI

B

B2

B3

B4 

B5

B6

K

G

F

G

F

A

G

P

P

P

P

K

P

P

P

K

F

F

P

F

A

s

m

m

s

Makro-Definition

Programmierbare Skalierung

Rechenfunktion, Arcussinus

Akima-Spline

Arcus-Tangens2

Achsspezifische Toleranz fr Kompressor-
Funktionen, Orientierungsglttung und ber
schleifarten

Additive programmierbare Nullpunktverschie
bung

Hilfsfunktion kanalspezifisch aus der globalen 
Liste lschen

Alle Hilfsfunktionen einer Hilfsfunktionsgrup
pe kanalspezifisch aus der globalen Liste l
schen

Ausgabe-Reihenfolge fr M-Hilfsfunktionen 
ermitteln

Aus der globalen Liste der Hilfsfunktionen ei
nen vollstndigen Teileprogrammsatz fr das 
kanalspezifische SERUPRO-Ende-ASUP als 
String generieren

Variabler Achsbezeichner

Achscontainer drehen

m/s

Freigabe zur Achscontainer-Drehung zurck
nehmen

Achscontainer drehen (Befehlsvariante fr die 
Inbetriebnahme!)

Achsbezeichner, Achsadresse

Konvertiert Eingangsstring in Achsbezeichner

Konvertiert den String Spindelnummer

Achse fr einen bestimmten Kanal anfordern. 
Ist vom NC-Programm und aus Synchronakti
on mglich.

konvertiert Achsbezeichner in einen Spindel
index um

Achsname

A Werkzeugorientierung: RPY- oder Eulerwinkel

A Werkzeugorientierung: . Komponente des 

Richtungsvektors

A Werkzeugorientierung: 2. Komponente des 

Flchennormalenvektors am Satzanfang

A Werkzeugorientierung: 2. Komponente des 
Flchennormalenvektors am Satzende

A Werkzeugorientierung: 2. Komponente des 
Richtungsvektors fr die Drehachse des Ke
gels

m/s

s

s

s

s

s

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC 

PM-NC 

FM-B

FM-B

FM-B

FM-B

PM-NC

PM-NC

PM-NC 

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC 

+

+

-

-

-

-

-

+

-

-

-

+

-

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1117

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.1 Anweisungen

Anweisung

Art 1) Bedeutung

W 2)

TP 3) SA 4) Beschreibung siehe 5)

1) 2) 3) 4) 5) Erluterungen siehe Legende (Seite 1115).

B7

A Werkzeugorientierung: 2. Vektorkomponente 

s

fr die Zwischenorientierung auf der Kegel
mantelflche

O

O

O

O

G

K

K

G

K

F

G

P

G

G

A

Bitweises UND

Bitweises ODER

Bitweise Negierung

Bitweises Exklusiv-ODER

Definieren des ersten Spline-Abschnitts durch 
die nachfolgenden 3 Punkte

m

Definiert zusammen mit dem Schlsselwort 
TO den abzuarbeitenden Programmteil in ei
nem indirekten Unterprogrammlauf

Bearbeitung der Interruptroutine soll erst mit 
dem nchsten Satzwechsel beginnen

Natrlicher bergang zum ersten Spline-Satz m

Datentyp: Wahrheitswerte TRUE/FALSE 
bzw. 1/0

Prft, ob Wert innerhalb des definierten Wer
tebereichs liegt. Gleichheit gibt Prfwert zu
rck.

Sprungfrmige Bahnbeschleunigung

Sprungfrmige Bahnbeschleunigung fr die 
programmierten Achsen einschalten

B-Spline

Tangentialer bergang zum ersten Spline-
Satz

Achsname

A Werkzeugorientierung: RPY- oder Eulerwinkel

A Werkzeugorientierung: 3. Komponente des 

Richtungsvektors

A Werkzeugorientierung: 3. Komponente des 

Flchennormalenvektors am Satzanfang

A Werkzeugorientierung: 3. Komponente des 
Flchennormalenvektors am Satzende

A Werkzeugorientierung: 3. Komponente des 
Richtungsvektors fr die Drehachse des Ke
gels

A Werkzeugorientierung: 3. Vektorkomponente 

fr die Zwischenorientierung auf der Kegel
mantelflche

K

K

K

P

Absolutes Anfahren einer Position

In Tabelle abgelegter Wert wird absolut in ne
gativer Richtung angefahren

In Tabelle abgelegter Wert wird absolut in po
sitiver Richtung angefahren

Lastanpassung ausschalten

m

m

m

m/s

s

s

s

s

s

s

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

+

PM-NC

PM-NC

-

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

-

PM-NC

B_AND

B_OR

B_NOT

B_XOR

BAUTO

BLOCK

BLSYNC

BNAT 6)

BOOL

BOUND

BRISK 6)

BRISKA

BSPLINE

BTAN

C

C2 

C3

C4

C5

C6

C7

CAC

CACN

CACP

CADAPTOF

1118

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Anweisung

Art 1) Bedeutung

W 2)

TP 3) SA 4) Beschreibung siehe 5)

1) 2) 3) 4) 5) Erluterungen siehe Legende (Seite 1115).

Tabellen

4.1 Anweisungen

CADAPTON

CALCDAT

CALCFIR

CALCPOSI

CALL

CALLPATH

CANCEL

CANCELSUB

CASE

CDC

CDOF 6)

CDOF2

CDON

CFC 6)

CFIN

CFINE

CFTCP

CHAN

CHANDATA

CHAR

CHF

CHKDM

CHKDNO

CHR

CIC

CIP

CLEARM

CLRINT

CMIRROR

COARSEA

P

F

P

F

K

P

P

P

K

K

G

G

G

G

G

F

G

K

P

K

A

F

F

A

K

G

P

P

F

K

Lastanpassung einschalten

Berechnet Radius und Mittelpunkt eines Krei
ses aus 3 oder 4 Punkten

FIR-Ruckfilter an Dynamikmodus anpassen

berprfung auf Schutzbereichsverletzung, 
Arbeitsfeldbegrenzung und Softwarelimits

Indirekter Unterprogrammaufruf

Programmierbarer Suchpfad bei Unterpro
grammaufrufen

Modale Synchronaktion abbrechen

Aktuelle Unterprogrammebene abbrechen

Bedingte Programmverzweigung

Direktes Anfahren einer Position

Kollisionsberwachung ausschalten

Kollisionsberwachung ausschalten, bei 3D-
Umfangsfrsen

Kollisionsberwachung einschalten

Konstanter Vorschub an der Kontur

Konstanter Vorschub nur bei Innenkrm
mung, nicht bei Auenkrmmung

Zuweisung der Fein-Verschiebung an eine 
FRAME-Variable

Konstanter Vorschub im Werkzeugschneiden-
Be-zugspunkt, Mittelpunkts-bahn

Spezifizierung des Gltigkeitsbereichs von 
Daten

Kanalnummer fr Kanaldatenzugriffe einstel
len

Datentyp: ASCII-Zeichen

Fase;
Wert = Lnge der Fase

m

m

m

m

m

m

s

Prfung der Eindeutigkeit innerhalb eines Ma
gazins

Eindeutigkeitsprfung der D-Nummern

Fase;
Wert = Lnge der Fase in Bewegungsrichtung

Inkrementelles Anfahren einer Position

Kreisinterpolation ber Zwischenpunkt

m

Rcksetzen einer/mehrerer Marken fr Kanal
koordinierung

Interrupt abwhlen

Spiegeln an einer Koordinatenachse

Bewegungsende beim Erreichen von "Genau
halt Grob"

m

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

-

-

-

-

-

-

+

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

FM-SA

FM-SA

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

-

PM-NC

PM-NC

PM-NC

-

PM-NC

PM-NC

PM-NC

FM-TM

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC 

PM-NC

-

-

+

-

-

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1119

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.1 Anweisungen

Anweisung

Art 1) Bedeutung

W 2)

TP 3) SA 4) Beschreibung siehe 5)

1) 2) 3) 4) 5) Erluterungen siehe Legende (Seite 1115).

COLLPAIR

COMPCAD

COMPCURV

COMPLETE

COMPOF 6)

COMPON

COMPSURF

CONTDCON

CONTPRON

CORROF

CORRTC

CORRTRAFO

COS

COUPDEF

COUPDEL

COUPOF

COUPOFS

COUPON

COUPONC

COUPRES

CP 6)

CPBC

CPDEF

CPDEL

CPFMOF

F

G

G

G

G

G

P

P

P

F

F

F

P

P

P

P

P

P

P

G

K

K

K

K

Prfen auf Zugehrigkeit zu einem Kollisions
paar

Kompressor-Funktion COMPCAD einschalten m

m

m

m

m

Kompressor-Funktion COMPCURV einschal
ten

Steueranweisung fr das Aus- und Einlesen 
von Daten

NC-Satz-Kompression ausschalten

Kompressor-Funktion COMPON einschalten

Kompressor-Funktion COMPSURF einschal
ten

Konturdecodierung in Tabellenform einschal
ten

Referenzaufbereitung einschalten

Alle aktiven berlagerten Bewegungen wer
den abgewhlt. 

Offsetvektoren oder Richtungsvektoren orien
tierbarer Werkzeugtrger nach Maschinenver
messung modifizieren.

Offsetvektoren oder Richtungsvektoren der 
Orientierungsachsen im kinematischen Mo
dell der Maschine modifizieren

Cosinus
(Trigon. Funktion)

Definition ELG-Verband / Synchronspindel-
Verband

ELG-Verband lschen

ELG-Verband / Synchronspindelpaar aus
schalten

Ausschalten ELG-Verband / Synchronspindel
paar mit Stopp der Folgespindel

ELG-Verband / Synchronspindelpaar ein
schalten

Einschalten ELG-Verband / Synchronspindel
paar mit vorhergehender Programmierung 
bernehmen

ELG-Verband rcksetzen

Bahnbewegung

m

Generische Kopplung: Satzwechselkriterium

Generische Kopplung: Anlegen eines Koppel
moduls

Generische Kopplung: Lschen eines Koppel
moduls

Generische Kopplung: Verhalten der Folge
achse beim vollstndigen Ausschalten

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

PM-NC

PM-NC

PM-NC

PM-NC 

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

-

-

-

-

-

+

PM-NC

-

-

-

-

-

-

-

+

+

+

+

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

FM-A

FM-A

FM-A

FM-A

1120

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Anweisung

Art 1) Bedeutung

W 2)

TP 3) SA 4) Beschreibung siehe 5)

1) 2) 3) 4) 5) Erluterungen siehe Legende (Seite 1115).

Tabellen

4.1 Anweisungen

CPFMON

CPFMSON

CPFPOS

CPFRS

CPLA

CPLCTID

CPLDEF

CPLDEL

CPLDEN

CPLINSC

CPLINTR

CPLNUM

CPLOF

CPLON

CPLOUTSC

CPLOUTTR

CPLPOS

CPLSETVAL

CPMALARM

CPMBRAKE

CPMPRT

CPMRESET

CPMSTART

K

K

K

K

K

K

K

K

K

K

K

K

K

K

K

K

K

K

K

K

K

K

K

Generische Kopplung: Verhalten der Folge
achse beim Einschalten

Generische Kopplung: Synchronisationsmo
dus

Generische Kopplung: Synchronposition der 
Folgeachse

Generische Kopplung: Koordinatenbezugs
system

Generische Kopplung: Definition einer Leit
achse

Generische Kopplung: Nummer der Kurventa
belle

Generische Kopplung: Definition einer Leit
achse und Anlegen eines Koppelmoduls

Generische Kopplung: Lschen einer Leitach
se eines Koppelmoduls

Generische Kopplung: Nenner des Koppelfak
tors

Generische Kopplung: Skalierfaktor fr den 
Eingangswert einer Leitachse

Generische Kopplung: Verschiebewert fr 
den Eingangswert einer Leitachse

Generische Kopplung: Zhler des Koppelfak
tors

Generische Kopplung: Ausschalten einer Leit
achse eines Koppelmoduls

Generische Kopplung: Einschalten einer Leit
achse eines Koppelmoduls

Generische Kopplung: Skalierfaktor fr den 
Ausgangswert einer Kopplung

Generische Kopplung: Verschiebewert fr 
den Ausgangswert einer Kopplung

Generische Kopplung: Synchronposition der 
Leitachse

Generische Kopplung: Kopplungsbezug

Generische Kopplung: Unterdrckung spezi
eller kopplungsbezogener Alarmausgaben

Generische Kopplung: Verhalten der Folge
achse bei bestimmten Stoppsignalen und -
kommandos

Generische Kopplung: Kopplungsverhalten 
beim Teileprogrammstart unter Satzsuchlauf 
via Programmtest

Generische Kopplung: Kopplungsverhalten 
bei RESET

Generische Kopplung: Kopplungsverhalten 
beim Teileprogrammstart

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

-

+

+

+

+

+

+

+

+

+

+

+

+

+

+

-

FM-A

FM-A

FM-A

FM-A

FM-A

FM-A

FM-A

FM-A

FM-A

FM-A

FM-A

FM-A

FM-A

FM-A

FM-A

FM-A

FM-A

FM-A

FM-A

FM-A

+

FM-A

+

+

FM-A

FM-A

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1121

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.1 Anweisungen

Anweisung

Art 1) Bedeutung

W 2)

TP 3) SA 4) Beschreibung siehe 5)

1) 2) 3) 4) 5) Erluterungen siehe Legende (Seite 1115).

CPMVDI

CPOF

CPON

CPRECOF 6)

CPRECON

CPRES

CPROT

CPROTDEF

CPSETTYPE

CPSYNCOP

CPSYNCOP2

CPSYNCOV

CPSYNFIP

CPSYNFIP2

CPSYNFIV

CR

CROT

CROTS

CRPL

CSCALE

CSPLINE

CT

CTAB

CTABDEF

CTABDEL

CTABEND

CTABEXISTS

K

K

K

G

G

K

P

P

K

K

K

K

K

K

K

A

F

F

F

F

F

G

F

P

P

P

F

Generische Kopplung: Verhalten der Folge
achse auf bestimmte NC/PLC-Nahtstellensig
nale

Generische Kopplung: Ausschalten eines 
Koppelmoduls

Generische Kopplung: Einschalten eines Kop
pelmoduls

Programmierbare Konturgenauigkeit aus
schalten

Programmierbare Konturgenauigkeit ein
schalten

m

m

Generische Kopplung: Aktiviert die projektier
ten Daten der Synchronspindelkopplung

Kanalspezifischer Schutzbereich ein-/
ausschalten 

Definition eines kanalspezifischen Schutzbe
reichs

Generische Kopplung: Kopplungstyp

Generische Kopplung: Schwellwert fr den 
Positionssynchronlauf "Grob"

Generische Kopplung: Schwellwert fr den 
Positionssynchronlauf "Grob" 2

Generische Kopplung: Schwellwert fr den 
Geschwindigkeitssynchronlauf "Grob"

Generische Kopplung: Schwellwert fr den 
Positionssynchronlauf "Fein"

Generische Kopplung: Schwellwert fr den 
Positionssynchronlauf "Fein" 2

Generische Kopplung: Schwellwert fr den 
Geschwindigkeitssynchronlauf "Fein"

Kreisradius

Drehung des aktuellen Koordinatensystems

Programmierbare Framedrehungen mit 
Raumwinkeln (Drehung in den angegebenen 
Achsen)

Frame-Drehung in einer beliebigen Ebene

Mastabsfaktor fr mehrere Achsen

Kubischer Spline

Kreis mit tangentialem bergang

Ermittle Folgeachsposition anhand der Leit
achsposition aus Kurventabelle

Tabellendefinition einschalten

Kurventabelle lschen

Tabellendefinition ausschalten

Prft die Kurventabelle mit der Nummer n

s

s

m

m

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

FM-A

+

+

-

-

-

+

+

+

+

+

+

+

-

-

-

-

+

-

-

-

+

FM-A

FM-A

PM-NC

PM-NC

FM-A

PM-NC

PM-NC

FM-A

FM-A

FM-A

FM-A

FM-A

FM-A

FM-A

PM-NC

PM-NC

PM-NC

FM-B

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

1122

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Anweisung

Art 1) Bedeutung

W 2)

TP 3) SA 4) Beschreibung siehe 5)

1) 2) 3) 4) 5) Erluterungen siehe Legende (Seite 1115).

Tabellen

4.1 Anweisungen

CTABFNO

CTABFPOL

CTABFSEG

CTABID

CTABINV

CTABISLOCK

CTABLOCK

CTABMEMTYP

CTABMPOL

CTABMSEG

CTABNO

CTABNOMEM

CTABPERIOD

CTABPOL

CTABPOLID

CTABSEG

CTABSEGID

CTABSEV

CTABSSV

CTABTEP

CTABTEV

CTABTMAX

CTABTMIN

CTABTSP

F

F

F

F

F

F

P

F

F

F

F

F

F

F

F

F

F

F

F

F

F

F

F

F

Anzahl der noch mglichen Kurventabellen im 
Speicher

Anzahl der noch mglichen Polynome im Spei
cher

Anzahl der noch mglichen Kurvensegmente 
im Speicher

Liefert Tabellen-Nummer der n-ten Kurventa
belle

Ermittle Leitachsposition anhand der Folge
achsposition aus Kurventabelle

Gibt den Sperrzustand der Kurventabelle mit 
der Nummer n zurck

Lschen und ber-schreiben, sperren

Gibt den Speicher zurck, in dem die Kurven
tabelle mit der Nummer n angelegt ist.

Anzahl der maximal mglichen Polynome im 
Speicher

Anzahl der maximal mglichen Kurvenseg
mente im Speicher

Anzahl der definierten Kurventabellen im 
SRAM oder DRAM

Anzahl der definierten Kurventabellen im 
SRAM oder DRAM

Gibt die Tabellenperiodizitt der Kurventabel
le mit der Nummer n zurck

Anzahl der bereits verwendeten Polynome im 
Speicher

Anzahl der von der Kurventabelle mit der 
Nummer n verwendeten Kurvenpolynome

Anzahl der bereits verwendeten Kurvenseg
mente im Speicher

Anzahl der von der Kurventabelle mit der 
Nummer n verwendeten Kurvensegmente

Liefert den Endwert der Folgeachse eines 
Segments der Kurventabelle

Liefert den Startwert der Folgeachse eines 
Segments der Kurventabelle

Liefert den Wert der Leitachse am Kurventa
bellen-Ende

Liefert den Wert der Folgeachse am Kurven
tabellen-Ende

Liefert Maximalwert der Folgeachse der Kur
ventabelle

Liefert Minimalwert der Folgeachse der Kur
ventabelle

Liefert den Wert der Leitachse am Kurventa
bellen-Anfang

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

FM-A

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1123

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.1 Anweisungen

Anweisung

Art 1) Bedeutung

W 2)

TP 3) SA 4) Beschreibung siehe 5)

1) 2) 3) 4) 5) Erluterungen siehe Legende (Seite 1115).

CTABTSV

CTABUNLOCK

CTOL

CTOLG0

CTRANS

CUT2D 6)

CUT2DD

CUT2DF

CUT2DFD

CUT3DC

CUT3DCC

CUT3DCCD

CUT3DCD

CUT3DF

CUT3DFD

CUT3DFF

CUT3DFS

CUTCONOF 6)

CUTCONON

CUTMOD

F

P

A

A

F

G

G

G

G

G

G

G

G

G

G

G

G

G

G

A

Liefert den Wert der Folgeachse am Kurven
tabellen-Anfang

Aufheben der Lsch- und berschreibsperre

Konturtoleranz fr Kompressor-Funktionen, 
Orientierungsglttung und berschleifarten

Konturtoleranz bei Eilgangbewegungen

Nullpunktverschiebung fr mehrere Achsen

2D-WRK

Auf ein Differenzwerkzeug bezogene 2-D-
WRK

2D-WRK, relativ zum aktuellen Frame (schr
ge Ebene)

Auf ein Differenzwerkzeug bezogene 2-D-
WRK, relativ zum aktuellen Frame (schrge 
Ebene)

3D-WRK fr das Umfangsfrsen

3D-WRK fr das Umfangsfrsen unter Berck
sichtigung einer Begrenzungsflche mit 3D-
Radiuskorrektur: Kontur an der Bearbeitungs
flche

3D-WRK fr das Umfangsfrsen unter Berck
sichtigung einer Begrenzungsflche mit Diffe
renzwerkzeug auf der Werkzeugmittelpunkt
bahn: Zustellung zur Begrenzungsflche

Auf ein Differenzwerkzeug bezogene 3D-
WRK fr das Umfangsfrsen

3D-WRK fr das Stirnfrsen mit Orientierungs
nderung 

Auf ein Differenzwerkzeug bezogene 3D-
WRK fr das Stirnfrsen mit Orientierungsn
derung

3D-WRK fr das Stirnfrsen mit konstanter 
Orientierung. Die Werkzeugorientierung ist 
die durch G17 - G19 festgelegte und gegebe
nenfalls durch einen Frame gedrehte Rich
tung.

3D-WRK fr das Stirnfrsen mit konstanter 
Orientierung. Die Werkzeugorientierung ist 
durch G17 - G19 festgelegt und wird durch 
Frames nicht beeinflusst.

Konstante Radiuskorrektur ausschalten

Konstante Radiuskorrektur einschalten

Modifikation der Korrekturdaten bei drehba
ren Werkzeugen einschalten (in Verbindung 
mit orientierbaren Werkzeugtrgern)

m

m

m

m

m

m

m

m

m

m

m

m

m

m

m

m

m

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

-

-

-

PM-NC

PM-NC

PM-NC 

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

1124

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.1 Anweisungen

Anweisung

Art 1) Bedeutung

W 2)

TP 3) SA 4) Beschreibung siehe 5)

1) 2) 3) 4) 5) Erluterungen siehe Legende (Seite 1115).

CUTMODK

A

Modifikation der Korrekturdaten bei drehba
ren Werkzeugen einschalten (in Verbindung 
mit Orientierungstransformationen, die mittels 
kinematischer Ketten definiert wurden)

m

+

PM-NC

CYCLE60

CYCLE61

CYCLE62

CYCLE63

CYCLE64

CYCLE70

CYCLE72

CYCLE76

CYCLE77

CYCLE78

CYCLE79

CYCLE81

CYCLE82

CYCLE83

CYCLE84

CYCLE85

CYCLE86

CYCLE92

CYCLE95

CYCLE98

CYCLE99

C (T) Gravurzyklus

C (T) Planfrsen

C (T) Konturaufruf

C (T) Konturtasche frsen

C (T) Konturtasche vorbohren

C (T) Gewindefrsen

C (T) Bahnfrsen

C (T) Rechteckzapfen frsen

C (T) Kreiszapfen frsen

C (T) Bohrgewinde frsen

C (T) Mehrkant

C (T) Bohren, Zentrieren

C (T) Bohren, Plansenken

C (T) Tieflochbohren

C (T) Gewindebohren ohne Ausgleichsfutter

C (T) Reiben

C (T) Ausdrehen

C (T) Abstich

C (T) Konturabspanen

C (T) Gewindekette

C (T) Gewindedrehen

CYCLE116

C (M) Berechnung von Mittelpunkt und Radius eines 

CYCLE119

CYCLE150

CYCLE435

CYCLE495

CYCLE750

Kreises

C (M) Bestimmung der rumlichen Lage

C (M) Messergebnisse anzeigen / protokollieren

C (T) Abrichterposition berechnen

C (T) Profilieren

C (A)

Interner Arbeitszyklus fr CYCLE751 ... CY
CLE759 (enthlt das MMC-Kommando fr 
den eigentlichen Funktionsaufruf)

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

 -

PM-NC 

PM-NC 

PM-NC 

PM-NC 

PM-NC 

PM-NC 

PM-NC 

PM-NC 

PM-NC 

PM-NC 

PM-NC 

PM-NC 

PM-NC 

PM-NC 

PM-NC 

PM-NC 

PM-NC 

PM-NC 

PM-NC 

PM-NC 

PM-NC 

PM-MC

PM-MC

PM-MC

PM-NC 

PM-NC 

FM-A

CYCLE751

C (A) Optimierungssitzung ffnen / ausfhren / 

M  

FM-A

CYCLE752

C (A) Achse zu einer Optimierungssitzung hinzuf

schlieen

CYCLE753

CYCLE754

CYCLE755

CYCLE756

CYCLE757

gen

C (A) Optimierungsmodus auswhlen

C (A) Datensatz hinzufgen / entfernen

C (A) Datensatz sichern / wiederherstellen

C (A) Optimierungsergebnisse aktivieren

C (A) Optimierungsdaten speichern

M

M

M

M

M

M

FM-A

FM-A

FM-A

FM-A

FM-A 

FM-A 

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1125

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.1 Anweisungen

Anweisung

Art 1) Bedeutung

W 2)

TP 3) SA 4) Beschreibung siehe 5)

1) 2) 3) 4) 5) Erluterungen siehe Legende (Seite 1115).

CYCLE758

CYCLE759

CYCLE782

CYCLE800

CYCLE801

CYCLE802

CYCLE830

CYCLE832

CYCLE840

CYCLE899

CYCLE930

CYCLE940

CYCLE951

CYCLE952

CYCLE961

CYCLE971

C (A) Parameterwert ndern

C (A) Parameterwert lesen

C (T) An Beladung anpassen

C (T) Schwenken

C (T) Gitter oder Rahmen

C (T) Beliebige Positionen

C (T) Tieflochbohren 2

C (T) High Speed Settings

C (T) Gewindebohren mit Ausgleichsfutter

C (T) Offene Nut frsen

C (T) Einstich

C (T) Freistich Formen

C (T) Abspanen

C (T) Konturstechen

C (M) Lage einer Werkstckecke (innen oder au
en) bestimmen und als Nullpunktverschie
bung einsetzen

C (M) Werkzeugmesstaster kalibrieren, Werkzeug
lnge und/oder Werkzeugradius messen (nur 
fr Technologie Frsen)

CYCLE973

C (M)

Werkstckmesstaster an einer Flche am 
Werkstck oder in einer Nut kalibrieren (nur 
fr Technologie Drehen) 

CYCLE974

C (M) Werkstcknullpunkt in der gewhlten Mes

sachse bestimmen, Werkzeugkorrektur mit 1-
Punkt-Messung bestimmen (nur fr Technolo
gie Drehen)

CYCLE976

C (M) Werkstckmesstaster in einem Kalibrierring 

bzw. an einer Kalibrierkugel vollstndig in der 
Arbeitsebene oder an einer Kante fr eine be
stimmte Achse und Richtung kalibrieren

CYCLE977

C (M) Mittelpunkt in der Ebene sowie Breite bzw. 

Durchmesser bestimmen

CYCLE978

C (M) Position einer Kante im Werkstckkoordina

tensystem messen

CYCLE979

C (M) Mittelpunkt in der Ebene bestimmen, Radius 

von Kreissegmenten messen

CYCLE982

C (M) Werkzeugmesstaster kalibrieren, Dreh-, 

Bohr- und Frswerkzeuge vermessen (nur fr 
Technologie Drehen)

CYCLE994

C (M) Werkstcknullpunk in der gewhlten Mes

sachse mit 2-Punkt-Messung bestimmen (nur 
fr Technologie Drehen)

CYCLE995

C (M) Winkligkeit der Spindel an einer Werkzeugma

schine messen

M

M

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

FM-A 

FM-A 

PM-NC

PM-NC 

PM-NC 

PM-NC 

PM-NC

PM-NC 

PM-NC 

PM-NC 

PM-NC 

PM-NC 

PM-NC 

PM-NC 

PM-MC

PM-MC

PM-MC

PM-MC

PM-MC

PM-MC

PM-MC

PM-MC

PM-MC

PM-MC

PM-MC

1126

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.1 Anweisungen

Anweisung

Art 1) Bedeutung

W 2)

TP 3) SA 4) Beschreibung siehe 5)

1) 2) 3) 4) 5) Erluterungen siehe Legende (Seite 1115).

CYCLE996

C (M) Transformationsrelevante Daten fr kinemati

CYCLE997

CYCLE998

sche Transformationen mit Rundachsen be
stimmen 

C (M) Mittelpunkt und Durchmesser einer Kugel be
stimmen, Mittelpunkte von drei verteilten Ku
geln messen 

C (M) Winkellage einer Flche (Ebene) bezogen auf 
die Arbeitsebene bestimmen, Winkel von Kan
ten im Werkstckkoordinatensystem bestim
men

CYCLE4071

C (T) Lngschleifen mit Zustellung am Umkehr

punkt

CYCLE4072

C (T) Lngschleifen mit Zustellung am Umkehr

punkt und Abbruchsignal

CYCLE4073

CYCLE4074

C (T) Lngschleifen mit kontinuierlicher Zustellung

C (T) Lngschleifen mit kontinuierlicher Zustellung 

und Abbruchsignal

CYCLE4075

C (T) Flachschleifen mit Zustellung am Umkehr

punkt

CYCLE4077

C (T) Flachschleifen mit Zustellung am Umkehr

punkt und Abbruchsignal

CYCLE4078

CYCLE4079

CYCLE9960

C (T) Flachschleifen mit kontinuierlicher Zustellung  

C (T) Flachschleifen mit intermittierender Zustellung  

C (M) Kinematik komplett vermessen

+

+

+

+

+

+

+

+

+

+

+

+

PM-MC

PM-MC

PM-MC

PM-NC

PM-NC 

PM-NC 

PM-NC 

PM-NC 

PM-NC 

PM-NC 

PM-NC 

PM-MC

Anweisungen D ... F

Anweisung

Art 1) Bedeutung

1)2)3)4)5) Erluterungen siehe Legende (Seite 1115).

W 2)

TP 3) SA 4) Beschreibung siehe 5)

D

D0

DAC

DC

DCI

DCM

DCU

DEF

DEFAULT

DEFINE

s

s

A Werkzeugkorrekturnummer

A

K

K

K

K

K

K

K

K

Bei D0 sind die Korrekturen fr das Werkzeug 
unwirksam

Absolut satzweise achsspezifische Durch
messerprogrammierung

Absolute Maangabe fr Rundachsen, Positi
on direkt anfahren

Datenklasse I (= Individual) zuordnen (nur SI
NUMERIK 828D!)

Datenklasse M (= Manufacturer) zuordnen 
(nur SINUMERIK 828D!)

Datenklasse U (= Anwender) zuordnen (nur 
SINUMERIK 828D!)

Variablendefinition

Zweig in der CASE-Verzweigung

Schlsselwort fr Makrodefinitionen

+

+

+

+

+

+

+

+

+

+

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1127

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.1 Anweisungen

Anweisung

Art 1) Bedeutung

1)2)3)4)5) Erluterungen siehe Legende (Seite 1115).

W 2)

TP 3) SA 4) Beschreibung siehe 5)

DELAYFSTOF

DELAYFSTON

DELDL

DELDTG

DELETE

DELMLOWNER

DELMLRES

DELMT

DELOBJ

DELT

DELTC

DELTOOLENV

DIACYCOFA

DIAM90

DIAM90A

DIAMCHAN

DIAMCHANA

DIAMCYCOF

DIAMOF 6)

DIAMOFA

DIAMON

DIAMONA

DIC

DILF

DISABLE

1128

P

P

F

P

P

F

F

P

F

Ende eines Stopp-Delay-Bereichs definieren

Beginn eines Stopp-Delay-Bereichs definie
ren

m

m

Additive Korrekturen lschen

Restweglschen

Die angegebene Datei lschen. Der Dateina
me kann mit Pfad und Datei-Kennung ange
geben werden.

Eigentmermagazinplatz des Werkzeugs l
schen

Magazinplatz-Reservierung lschen

Multitool lschen

Lschen von Elementen von kinematischen 
Ketten, Schutzbereichen, Schutzbereichsele
menten, Kollisionspaaren und Transformati
onsdaten

P Werkzeug lschen

P Werkzeugtrgerdatensatz lschen

F

K

G

K

K

K

G

G

K

G

K

K

A

P

Datenstze zur Beschreibung von Werkzeu
gumgebungen lschen

Achsspezifische modale Durchmesser-pro
grammierung: AUS in Zyklen

Durchmesserprogrammierung fr G90, Radi
usprogrammierung fr G91

Achsspezifische modale Durchmesserpro
grammierung fr G90 und AC, Radiuspro
grammierung fr G91 und IC

bernahme aller Achsen aus MD Achsfunkti
onen in den Kanalzustand der Durchmesser
programmierung

bernahme Kanalzustand der Durchmesser
programmierung

Kanalspezifische Durchmesserprogrammie
rung: AUS in Zyklen

Durchmesserprogrammierung: AUS
Grundstellung siehe Maschinenhersteller

Achsspezifische modale Durchmesserpro
grammierung: AUS 
Grundstellung siehe Maschinenhersteller

Durchmesserprogrammierung: EIN

Achsspezifische modale Durchmesserpro
grammierung: EIN 
Freischaltung siehe Maschinenhersteller

Relativ satzweise achsspezifische Durchmes
serprogrammierung

Rckzugsweg (Lnge)

Interrupt AUS

m

m

m

m

m

m

m

m

s

m

+

+

+

-

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

-

-

-

+

-

-

-

-

-

-

-

PM-NC

PM-NC

PM-NC

FM-SA

PM-NC

FM-TM

FM-TM

FM-TM

PM-NC

FM-TM

FM-TM

PM-NC

FM-A

PM-NC

PM-NC

PM-NC

PM-NC

FM-A

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

-

PM-NC

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Anweisung

Art 1) Bedeutung

1)2)3)4)5) Erluterungen siehe Legende (Seite 1115).

W 2)

TP 3) SA 4) Beschreibung siehe 5)

Tabellen

4.1 Anweisungen

DISC

DISCL

DISPLOF

DISPLON

DISPR

DISR

DISRP

DITE

DITS

DIV

DL

DO

DRFOF

DRIVE

DRIVEA

DYNFINISH

DYNNORM 6)

DYNPOS

DYNPREC

DYNROUGH

DYNSEMIFIN

DZERO

EAUTO

EGDEF

EGDEL

EGOFC

EGOFS

EGON

EGONSYN

EGONSYNE

A

A

berhhung bergangskreis Werkzeug-Radi
uskorrektur

m

Abstand des Endpunkts der schnellen Zustell
be-wegung, von der Bearbeitungsebene

PA

Aktuelle Satzanzeige unterdrcken

PA Unterdrckung der aktuellen Satzanzeige auf

s

s

m

m

m

m

m

m

m

m

m

m

m

m

A

A

A

A

A

K

A

K

P

G

P

G

G

G

G

G

G

P

G

P

P

P

P

P

P

P

heben

Repos-Bahndifferenz

Repos-Abstand

Abstand der Rckzugsebene von der Bearbei
tungsebene beim weichen An- und Abfahren

Gewindeauslaufweg

Gewindeeinlaufweg

Integer-Division

Ortsabhngige additive Werkzeugkorrektur 
an-whlen (DL, Summen- Einrichtekorrektur)

Synchronaktion: Auslsen von Aktionen bei 
erfllter Bedingung

Ausschalten der Handradverschiebungen 
(DRF)

Geschwindigkeitsabhngige Bahnbeschleuni
gung

Geknickte Beschleunigungskennlinie fr die 
programmierten Achsen einschalten

Dynamik fr Schlichten

Normale Dynamik

Dynamik fr Positionierbetrieb, Gewindeboh
ren

Dynamik fr Feinschlichten

Dynamik fr Schruppen

Dynamik fr Vorschlichten

Kennzeichnet alle D-Nummern der TO-Ein
heit als ungltig

Festlegung des letzten Spline-Abschnitts 
durch die letzten 3 Punkte

Definition eines elektronischen Getriebes

Kopplungsdefinition fr die Folgeachse l
schen

Elektronisches Getriebe kontinuierlich aus
schalten

Elektronisches Getriebe selektiv ausschalten

Elektronisches Getriebe einschalten

Elektronisches Getriebe einschalten

Elektronisches Getriebe einschalten, mit Vor
gabe von Anfahrmodus

+

+

+

+

+

+

+

+

+

+

+

-

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC 

PM-NC

PM-NC

PM-NC

PM-NC

FM-SA

PM-NC

PM-NC

+

-

-

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

-

-

-

-

-

-

-

-

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1129

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.1 Anweisungen

Anweisung

Art 1) Bedeutung

1)2)3)4)5) Erluterungen siehe Legende (Seite 1115).

W 2)

TP 3) SA 4) Beschreibung siehe 5)

ELSE

ELSE

ENABLE

ENAT 6)

ENDFOR

ENDIF

ENDLABEL

ENDLOOP

ENDPROC

ENDWHILE

ESRR

ESRS

ETAN

EVERY

EX

EXECSTRING

EXECTAB

EXECUTE

EXP

EXTCALL

EXTCLOSE

EXTERN

EXTOPEN

F

FA

FAD

FALSE

1130

K

K

P

G

K

K

K

K

K

K

P

P

G

K

K

P

P

P

F

A

P

K

P

A

K

A

K

NC-Programm: Programmverzweigung bei 
nicht erfllter IF-Bedingung

Synchronaktion: Auslsen von Aktionen bei 
nicht erfllter Bedingung

Interrupt EIN

Natrlicher Kurvenbergang zum nchsten 
Verfahrsatz

m

Endezeile der FOR-Zhlschleife

Endezeile der IF-Verzweigung

Endmarke fr Teilprogrammwiederholungen 
ber REPEAT

Endezeile der Endlos-Programmschleife 
LOOP

Endezeile eines Programms mit der Anfangs
zeile PROC

Endezeile der WHILE-Schleife

Antriebsautarkes ESR-Rckziehen im Antrieb 
parametrieren

Antriebsautarkes ESR-Stillsetzen im Antrieb 
parametrieren

Tangentialer Kurvenbergang zum nchsten 
Verfahrsatz bei Spline-Beginn

m

Synchronaktion ausfhren bei bergang der 
Bedingung von FALSE zu TRUE

Schlsselwert fr die Wertzuweisung in expo
nentieller Schreibweise

bergabe einer String-Variablen mit der aus
zufhrenden Teileprogrammzeile

Ein Element aus einer Bewegungstabelle ab
arbeiten

Programmausfhrung EIN

Exponentialfunktion ex

Externes Unterprogramm abarbeiten

Zum Schreiben geffnetes externes Gert/
Datei schlieen

Bekanntmachung eines Unterprogramms mit 
Parameterbergabe

Externes Gert/Datei fr den Kanal zum 
Schreiben ffnen

Vorschubwert 
(in Verbindung mit G4 wird mit F auch die Ver
weilzeit programmiert)

Axialer Vorschub

m

Zustell-Vorschub fr Weiches An- und Abfah
ren

Logische Konstante: falsch

+

-

+

+

+

+

+

+

+

+

+

+

+

-

+

+

+

+

+

+

+

+

+

+

+

+

+

-

+

-

PM-NC

FM-SA

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC, FM-B

PM-NC

PM-NC

PM-NC 

PM-NC 

PM-NC

+

FM-SA

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC 

PM-NC

PM-NC 

PM-NC

-

-

-

+

+

-

-

+

+

PM-NC

PM-NC

+

PM-NC

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Anweisung

Art 1) Bedeutung

1)2)3)4)5) Erluterungen siehe Legende (Seite 1115).

W 2)

TP 3) SA 4) Beschreibung siehe 5)

Tabellen

4.1 Anweisungen

FB

FCTDEF

FCUB

FD

FDA

FENDNORM 6)

FFWOF 6)

FFWON

FGREF

FGROUP

FI

FIFOCTRL

FILEDATE

FILEINFO

FILESIZE

FILESTAT

FILETIME

FINEA

FL

FLIN

FMA 

FNORM 6)

FOC

FOCOF

FOCON

FOR

FP

FPO

FPR

FPRAOF

FPRAON

A

P

G

A

K

G

G

G

K

P

K

G

P

P

P

P

P

K

K

G

K

G

K

K

K

K

A

K

P

P

P

Satzweiser Vorschub

Polynomfunktion definieren

Vorschub nach kubischem Spline vernderlich m

s

s

m

m

m

m

m

m

m

m

m

m

s

m

m

s

Bahnvorschub fr Handradberlagerung

Axialer Vorschub fr Handradberlagerung

Eckenverzgerung AUS

Vorsteuerung AUS

Vorsteuerung Ein

Bezugsradius bei Rundachsen oder Bahnbe
zugsfaktoren bei Orientierungsachsen (Vekto
rinterpolation)

Festlegung der Achse(n) mit Bahnvorschub

Parameter fr Zugriff auf Framedaten: Fein
verschiebung

Steuerung des Vorlaufpuffers

Liefert Datum des zuletzt schreibenden Zu
griffs auf die Datei

Liefert Summe von FILEDATE, FILESIZE, FI
LESTAT und FILETIME zusammen

Liefert aktuelle Gre der Datei

Liefert Filestatus der Rechte Lesen, Schrei
ben, Execute, Anzeigen , Lschen (rwxsd)

Liefert Uhrzeit des zuletzt schreibenden Zu
griffs auf die Datei

Bewegungsende beim Erreichen von "Genau
halt Fein"

Grenzgeschwindigkeit fr Synchronachsen

Vorschub linear vernderlich

Mehrere Vorschbe axial

Vorschub normal nach DIN66025

Satzweise wirksame Moment/Kraft-Begren
zung

Modale Moment/Kraft-Begrenzung ausschal
ten

Modale Moment/Kraft-Begrenzung einschal
ten

Zhlschleife mit fester Anzahl von Durchlufen

Festpunkt: Nummer des anzufahrenden Fest
punkts

ber ein Polynom programmierter Vorschub
verlauf

Kennzeichnung Rundachse

Umdrehungsvorschub ausschalten

Umdrehungsvorschub einschalten

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

-

-

-

+

+

+

+

+

+

PM-NC

-

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC 

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

FM-SA

FM-SA

FM-SA

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

-

-

-

-

-

-

+

+

+

-

-

-

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1131

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.1 Anweisungen

Anweisung

Art 1) Bedeutung

1)2)3)4)5) Erluterungen siehe Legende (Seite 1115).

W 2)

TP 3) SA 4) Beschreibung siehe 5)

FRAME

FRC

FRCM

FROM

FTOC

FTOCOF 6)

FTOCON

FXS

FXST

FXSW

FZ

K

A

A

K

Datentyp zur Festlegung von Koordinatensys
temen

Vorschub fr Radius und Fase

Vorschub fr Radius und Fase modal

Die Aktion wird ausgefhrt, wenn die Bedin
gung einmal erfllt ist und solange die Syn
chronaktion aktiv ist

P Werkzeugfeinkorrektur ndern

G

G

K

K

K

K

Online wirksame Werkzeugfeinkorrektur AUS

Online wirksame Werkzeugfeinkorrektur EIN

Fahren auf Festanschlag ein

Momentgrenze fr Fahren auf Festanschlag

berwachungsfenster fr Fahren auf Festan
schlag

Zahnvorschub

s

m

m

m

m

m

m

+

+

+

-

-

+

+

+

+

+

+

PM-NC

PM-NC

PM-NC

+

FM-SA

+

FM-SA

+

+

+

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC 

Anweisungen G ... L

Anweisung

Art 1) Bedeutung

W 2)

TP 3) SA 4) Beschreibung siehe 5)

1) 2) 3) 4) 5) Erluterungen siehe Legende (Seite 1115).

G0

G1 6)

G2

G3

G4

G5

G7

G9

G17 6)

G18

G19

G25

G26

G33

G34

G35

G40 6)

G41

1132

G

G

G

G

G

G

G

G

Linearinterpolation mit Eilgang (Eilgangsbe
wegung)

Linearinterpolation mit Vorschub (Geradenin
terpolation)

Kreisinterpolation im Uhrzeigersinn

Kreisinterpolation gegen Uhrzeigersinn

Verweilzeit, zeitlich vorbestimmt

Schrgeinstechschleifen

Ausgleichsbewegung beim Schrgeinstech
schleifen

Genauhalt - Geschwindigkeitsabnahme

G Wahl der Arbeitsebene X/Y

G Wahl der Arbeitsebene Z/X

G Wahl der Arbeitsebene Y/Z

G

G

G

G

G

Untere Arbeitsfeldbegrenzung

Obere Arbeitsfeldbegrenzung 

Gewindeschneiden mit konstanter Steigung

Gewindeschneiden mit linear zunehmender 
Steigung

Gewindeschneiden mit linear abnehmender 
Steigung

G Werkzeugradiuskorrektur AUS

m

m

m

m

s

s

s

s

m

m

m

s

s

m

m

m

m

G Werkzeugradiuskorrektur links von der Kontur m

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Anweisung

Art 1) Bedeutung

W 2)

TP 3) SA 4) Beschreibung siehe 5)

1) 2) 3) 4) 5) Erluterungen siehe Legende (Seite 1115).

Tabellen

4.1 Anweisungen

G42

G53

G54

G55

G56

G57

G58 (840D sl)

G58 (828D)

G59 (840D sl)

G59 (828D)

G60 6)

G62

G63

G64

G70

G71 6)

G74

G75

G90 6)

G91

G93

G94 6)

G95

G96

G97

G110

G111

G112

G140 6)

G141

G Werkzeugradiuskorrektur rechts von der Kon

m

tur

Unterdrckung der aktuellen Nullpunktver
schiebung (satzweise)

1.Einstellbare Nullpunktverschiebung

2. Einstellbare Nullpunktverschiebung

3. Einstellbare Nullpunktverschiebung

4. Einstellbare Nullpunktverschiebung

Absolute programmierbare Nullpunktver
schiebung (Grobverschiebung)

5. Einstellbare Nullpunktverschiebung

Additive programmierbare Nullpunktverschie
bung (Feinverschiebung)

6. Einstellbare Nullpunktverschiebung

Genauhalt - Geschwindigkeitsabnahme

Eckenverzgerung an Innenecken bei aktiver 
Werkzeuradiuskorrektur (G41, G42)

Gewindebohren mit Ausgleichsfutter

Bahnsteuerbetrieb

Inch-Maangabe fr geometrische Angaben 
(Lngen)

Metrische Maangabe fr geometrische An
gaben (Lngen)

Referenzpunktanfahren

Festpunktanfahren

Maangabe absolut

Kettenmaangabe

Zeitreziproker Vorschub 1/min

Linearvorschub F in mm/min oder inch/min 
und Grad/min

Umdrehungsvorschub F in mm/U oder inch/U

Umdrehungsvorschub (wie bei G95) und kon
stante Schnittgeschwindigkeit

Umdrehungsvorschub und konstante Spindel
drehzahl (konstante Schnittgeschwindigkeit 
AUS)

Polprogrammierung relativ zur letzten pro
grammierten Sollposition

Polprogrammierung relativ zum Nullpunkt des 
aktuellen Werkstck-Koordinatensystems

Polprogrammierung relativ zum letzten glti
gen Pol

Anfahrrichtung WAB festgelegt durch 
G41/G42

Anfahrrichtung WAB links der Kontur

s

m

m

m

m

s

m

s

m

m

m

s

m

m

m

s

s

m/s

m/s

m

m

m

m

m

s

s

s

m

m

G

G

G

G

G

G

G

G

G

G

G

G

G

G

G

G

G

G

G

G

G

G

G

G

G

G

G

G

G

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1133

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.1 Anweisungen

Anweisung

Art 1) Bedeutung

W 2)

TP 3) SA 4) Beschreibung siehe 5)

1) 2) 3) 4) 5) Erluterungen siehe Legende (Seite 1115).

G142

G143

G147

G148

G153

G247

G248

G290 6)

G291

G331

G332

G335

G336

G340 6)

G341

G347

G348

G450 6)

G451

G460 6)

G461

G462

G500 6)

G505 ... G599

G601 6)

G602

G603

G621

G641

G642

G643

1134

G

G

Anfahrrichtung WAB rechts der Kontur

Anfahrrichtung WAB tangentenabhngig

G Weiches Anfahren mit Gerade

G Weiches Abfahren mit Gerade

G

Unterdrckung aktueller Frames inklusive Ba
sisframe

G Weiches Anfahren mit Viertelkreis

G Weiches Abfahren mit Viertelkreis

G

G

G

G

G

G

G

G

Umschalten auf SINUMERIK-Mode EIN

Umschalten auf ISO2/3-Mode EIN

Gewindebohren ohne Ausgleichsfutter, positi
ve Steigung, Rechtslauf

Gewindebohren ohne Ausgleichsfutter, nega
tive Steigung, Linkslauf

Drehen eines balligen Gewindes im Uhrzei
gersinn

Drehen eines balligen Gewindes gegen den 
Uhrzeigersinn

Anfahrsatz rumlich (Tiefe und in der Ebene 
zugleich (Helix))

Zuerst in der senkrechten Achse zustellen (z), 
dann Anfahren in der Ebene

G Weiches Anfahren mit Halbkreis

G Weiches Abfahren mit Halbkreis

G

G

G

G

G

G

G

G

G

G

G

G

G

G

bergangskreis

Schnittpunkt der quidistanten

Einschalten der Kollisionsberwachung fr 
An- und Abfahrsatz

Einfgen eines Kreises im WRK-Satz

Einfgen einer Geraden im WRK-Satz

Ausschalten aller einstellbaren Frames, Ba
sisframes sind aktiv

5. ... 99. Einstellbare Nullpunktverschiebung

Satzwechsel bei Genauhalt fein

Satzwechsel bei Genauhalt grob

Satzwechsel bei IPO-Satzende

Eckenverzgerung an allen Ecken

Bahnsteuerbetrieb mit berschleifen nach 
Wegkriterium (= programmierbarer ber
schleifabstand)

Bahnsteuerbetrieb mit berschleifen unter 
Einhaltung definierter Toleranzen

Bahnsteuerbetrieb mit berschleifen unter 
Einhaltung definierter Toleranzen (satzintern)

m

m

s

s

s

s

s

m

m

m

m

m

m

m

m

s

s

m

m

m

m

m

m

m

m

m

m

m

m

m

m

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

FM-TM

FM-TM

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Anweisung

Art 1) Bedeutung

W 2)

TP 3) SA 4) Beschreibung siehe 5)

1) 2) 3) 4) 5) Erluterungen siehe Legende (Seite 1115).

Tabellen

4.1 Anweisungen

G644

G645

G700

G710 6)

G810 6), ..., G819

G820 6), ..., G829

G931

G942

G952

G961

G962

G971

G972

G973

GEOAX

GET

GETACTT

GETACTTD

GETD

GETDNO

GETEXET

GETFREELOC

GETSELT

m

m

m

m

m

m

m

m

m

m

m

m

G

G

G

G

G

G

G

G

G

G

G

G

G

G

P

P

F

F

P

F

P

P

P

Bahnsteuerbetrieb mit berschleifen mit ma
ximal mglicher Dynamik

Bahnsteuerbetrieb mit berschleifen von 
Ecken und tangentialer Satzbergnge unter 
Einhaltung definierter Toleranzen

Inch-Maangabe fr geometrische und tech
nologische Angaben (Lngen, Vorschub)

Metrische Maangabe fr geometrische und 
technologische Angaben (Lngen, Vorschub)

Fr den OEM-Anwender reservierte G-Grup
pe

Fr den OEM-Anwender reservierte G-Grup
pe

Vorschubvorgabe durch Verfahrzeit, konstan
te Bahngeschwindigkeit ausschalten

Linearvorschub und konstante Schnittge
schwindigkeit oder Spindeldrehzahl einfrieren

Umdrehungsvorschub und konstante Schnitt
geschwindigkeit oder Spindeldrehzahl einfrie
ren

Linearvorschub (wie bei G94) und konstante 
Schnittgeschwindigkeit

Linearvorschub oder Umdrehungsvorschub 
und konstante Schnittgeschwindigkeit

Linearvorschub und konstante Spindeldreh
zahl (konstante Schnittgeschwindigkeit AUS)

Linearvorschub oder Umdrehungsvorschub 
und konstante Spindeldrehzahl (konstante 
Schnittgeschwindigkeit AUS)

Umdrehungsvorschub ohne Spindeldrehzahl
begrenzung und konstante Spindeldrehzahl 
(G97 ohne LIMS fr ISO-Modus)

Den Geometrieachsen 1 - 3 neue Kanalach
sen zuordnen

Freigegebene Achse zwischen Kanlen tau
schen

Bestimmt das aktive Werkzeug aus einer 
Gruppe von gleichnamigen Werkzeugen

Bestimmt zu einer absoluten D-Nummer die 
zugehrige T-Nummer

Achse direkt zwischen Kanlen tauschen

Liefert D-Nummer einer Schneide (CE) eines 
Werkzeugs (T)

Lesen der eingewechselten T-Nummer

Fr ein gegebenes Werkzeug einen Leerplatz 
in den Magazinen suchen

Vorgewhlte T-Nummer liefern

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

PM-NC

PM-NC 

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

FM-TM

PM-NC

PM-NC

PM-NC 

FM-TM

FM-TM

FM-TM

+

+

-

+

-

-

-

-

-

-

-

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1135

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.1 Anweisungen

Anweisung

Art 1) Bedeutung

W 2)

TP 3) SA 4) Beschreibung siehe 5)

1) 2) 3) 4) 5) Erluterungen siehe Legende (Seite 1115).

GETT

GETTCOR

GETTENV

GETVARAP

GETVARDFT

GETVARLIM

GETVARPHU

GETVARTYP

GFRAME0 ...
GFRAME100

GOTO

GOTOB

GOTOC

GOTOF

GOTOS

GP

GROUP_
ADDEND

F

T-Nummer zu Werkzeugnamen bestimmen

F Werkzeuglngen bzw. Werkzeuglngenkom

F

F

F

F

F

F

G

K

K

ponenten auslesen

T-, D-, und DL-Nummern lesen

Zugriffsrecht auf eine System-/Anwendervari
able lesen

Standardwert einer System-/Anwendervariab
len lesen

Grenzwerte einer System-/Anwendervariab
len lesen

Physikalische Einheit einer System-/Anwen
dervariablen lesen

Datentyp einer System-/Anwendervariablen 
lesen

Aktivierung des Schleifframes <n> der Daten
haltung im Kanal

m

Sprunganweisung erst vorwrts dann rck
wrts (Richtung erst zum Programm-Ende 
und dann zum Programm-Anfang)

Sprunganweisung rckwrts (Richtung Pro
gramm-Anfang)

K Wie GOTO, aber Alarm 14080 "Sprungziel 

nicht gefunden" unterdrcken 

K

K

K

Sprunganweisung vorwrts (Richtung Pro
gramm-Ende)

Rcksprung auf Programmanfang

Schlsselwort zur indirekten Programmierung 
von Positionsattributen

C (T) Ende Einfahrzusatz

GROUP_BEGIN

C (T) Anfang Programmblock

GROUP_END

C (T) Ende Programmblock

P

P

A

Konstante Scheibenumfangsgeschwindigkeit 
(SUG) abwhlen

Konstante Scheibenumfangsgeschwindigkeit 
(SUG) anwhlen

Hilfsfunktionsausgabe an die PLC

C (T) Lochreihe

C (T) Lochkreis

A

A

K

P

Interpolationsparameter

Zwischenpunktkoordinate

Kettenmaeingabe

Alle Stze eines Technologiezyklus nach ICY
COF in einem IPO-Takt abarbeiten

s

s

s

s

s

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

-

-

-

-

-

-

-

-

-

-

FM-TM

PM-NC

PM-NC

PM-NC 

PM-NC 

PM-NC 

PM-NC 

PM-NC 

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

+

PM-NC, FM-B

PM-NC 

PM-NC 

PM-NC

PM-NC

PM-NC

+

FM-SA

GWPSOF

GWPSON

H...

HOLES1

HOLES2

I

I1

IC

ICYCOF

1136

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Anweisung

Art 1) Bedeutung

W 2)

TP 3) SA 4) Beschreibung siehe 5)

1) 2) 3) 4) 5) Erluterungen siehe Legende (Seite 1115).

Tabellen

4.1 Anweisungen

ICYCON

ID

IDS

IF

INDEX

INICF

INIPO

INIRE

INIT

INITIAL

INT

INTERSEC

INVCCW

INVCW

INVFRAME

IP

IPOBRKA

IPOENDA

IPTRLOCK

IPTRUNLOCK

IR

ISAXIS

ISD

ISFILE

ISNUMBER

ISOCALL

P

K

K

K

F

K

K

K

P

K

F

G

G

F

K

P

K

P

P

A

F

A

F

F

K

Jeden Satz eines Technologiezyklus nach 
ICYCON in einem separaten IPO-Takt abar
beiten

Kennzeichnung fr modale Synchronaktionen m

Kennzeichnung fr modale statische Syn
chronaktionen

Einleitung eines bedingten Sprungs im Teile
programm / Technologiezyklus

Index eines Zeichens im Eingangsstring be
stimmen

Initialisierung der Variablen bei NEWCONF

Initialisierung der Variablen bei PowerOn

Initialisierung der Variablen bei Reset

Anwahl eines bestimmten NC-Programms zur 
Abarbeitung in einem bestimmten Kanal

Erzeugen eines INI-Files ber alle Bereiche

Datentyp: Ganzzahliger Wert mit Vorzeichen

Schnittpunkt zwischen zwei Konturelementen 
berechnen

Evolvente fahren, gegen den Uhrzeigersinn

Evolvente fahren, im Uhrzeigersinn

Aus einem Frame den inversen Frame be
rechnen

Variabler Interpolationsparameter

Bewegungskriterium ab Einsatzpunkt der 
Bremsrampe

Bewegungsende beim Erreichen von "IPO-
Stopp"

Beginn des suchunfhigen Programma
bschnitts auf nchsten Maschinenfunktions
satz einfrieren.

Ende des suchunfhigen Programma
bschnitts auf aktuellen Satz zum Unterbre
chungszeitpunkt setzen.

Kreismittelpunktkoordinate (X-Richtung) beim 
Drehen balliger Gewinde

Prfen, ob die als Parameter angegebene Ge
ometrieachse 1 ist

Eintauchtiefe

Prfen, ob eine Datei im NC-Anwendungs-
speicher vorhanden ist

Prfen, ob Eingangsstring in Zahl umgewan
delt werden kann

Indirekter Aufruf eines in ISO-Sprache pro
grammierten Programms

m

m

m

m

m

m

m

+

-

-

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

FM-SA

+

+

+

-

-

-

-

+

-

-

-

-

-

FM-SA

FM-SA

PM-NC

PM-NC

PM-NC 

PM-NC 

PM-NC 

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

FM-B

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1137

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.1 Anweisungen

Anweisung

Art 1) Bedeutung

W 2)

TP 3) SA 4) Beschreibung siehe 5)

1) 2) 3) 4) 5) Erluterungen siehe Legende (Seite 1115).

ISVAR

J

J1

JERKA

JERKLIM

JERKLIMA

JR

K

K1

KONT

KONTC

KONTT

KR

L

LEAD 

LEADOF

LEADON

LENTOAX

LFOF 6)

LFON

LFPOS

LFTXT 6)

LFWP

LIFTFAST

LIMS

LLI

LN

1138

F

A

A

P

K

K

A

A

A

G

G

G

A

A

A

P

P

F

G

G

G

G

G

K

K

K

F

Prfen, ob der bergabeparameter eine in der 
NC bekannte Variable enthlt

Interpolationsparameter

Zwischenpunktkoordinate

ber MD eingestelltes Beschleunigungsver
halten fr die programmierten Achsen aktivie
ren

Maximalen Achsruck anpassen

Reduktion oder berhhung des maximalen 
Rucks einer Folgeachse

Kreismittelpunktkoordinate (Y-Richtung) beim 
Drehen balliger Gewinde

Interpolationsparameter

Zwischenpunktkoordinate

Kontur umfahren bei der Werkzeugkorrektur

Mit krmmungsstetigem Polynom an-/abfah
ren

Mit tangentenstetigem Polynom an-/abfahren

Kreismittelpunktkoordinate (Z-Richtung) beim 
Drehen balliger Gewinde

Unterprogramm-Nummer

Voreilwinkel

1. Werkzeugorientierung

2. Orientierungpolynome

Axiale Leitwerkkopplung AUS

Axiale Leitwerkkopplung EIN

Liefert Informationen ber die Zuordnung der 
Werkzeuglngen L1, L2 und L3 des aktiven 
Werkzeugs zur Abszisse, Ordinate und Appli
kate

Schnellrckzug fr Gewindeschneiden AUS

Schnellrckzug fr Gewindeschneiden EIN

Rckzug der mit POLFMASK oder POLFM
LIN bekannt gemachten Achse auf die mit 
POLF programmierte absolute Achsposition

Ebene der Rckzugsbewegung beim Schnell
abheben wird bestimmt aus der Bahntangen
te und der aktuellen Werkzeugrichtung

Ebene der Rckzugsbewegung beim Schnell
abheben wird bestimmt durch die aktuelle Ar
beitsebene (G17/G18/G19)

Schnellabheben

Drehzahlbegrenzung
bei G96/G961 und G97

Unterer Grenzwert von Variablen

Natrlicher Logarithmus

s

s

m

m

s

s

m

m

m

s

m

m

m

m

m

m

m

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

PM-NC

PM-NC

PM-NC

-

-

PM-NC

+

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

+

PM-NC

PM-NC

+

+

-

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC 

PM-NC

PM-NC 

+

PM-NC

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.1 Anweisungen

Anweisung

Art 1) Bedeutung

W 2)

TP 3) SA 4) Beschreibung siehe 5)

1) 2) 3) 4) 5) Erluterungen siehe Legende (Seite 1115).

LOCK

P

Synchronaktion mit ID sperren
(Technologiezyklus stoppen)

LONGHOLE

C (T) Langloch

LOOP

K

Einleitung einer Endlosschleife

-

+

+

+

FM-SA

PM-NC 

PM-NC

Anweisungen M ... R

Anweisung

Art 1) Bedeutung

W 2)

TP 3) SA 4) Beschreibung siehe 5)

1) 2) 3) 4) 5) Erluterungen siehe Legende (Seite 1115).

M0

M1

M2

M3

M4

M5

M6

M17

M19

M30

M40

M41 ... M45

M70

MASLDEF

MASLDEL

MASLOF

MASLOFS

MASLON

MATCH

MAXVAL

MCALL

MEAC

MEAFRAME

MEAS

MEASA

MEASURE

MEAW

MEAWA

Programmierter Halt

Wahlweiser Halt

Programmende Hauptprogramm (wie M30)

Spindeldrehrichtung rechts

Spindeldrehrichtung links

Spindel Halt

Werkzeugwechsel

Programmende Unterprogramm

Spindelpositionierung auf die im SD43240 ein
getragene Position

Programmende Hauptprogramm (wie M2)

Automatische Getriebeschaltung

Getriebestufe 1 ... 5

bergang in Achsbetrieb

Master/Slave-Achsverband definieren

Master/Slave-Achsverband trennen und Defi
nition des Verbandes lschen

Ausschalten einer temporren Kopplung

Ausschalten einer temporren Kopplung mit 
automatischem Stillsetzen der Slave-Achse

Einschalten einer temporren Kopplung

Suchen eines String im String

Grerer Wert zweier Variablen (arithm. Funk
tion)

Modaler Unterprogrammaufruf

Axiales kontinuierliches Messen ohne Rest
weglschen

Frame-Berechnung aus Messpunkten

Messen mit Restweglschen

Axiales Messen mit Restweglschen

Berechnungsmethode fr die Werkstck- und 
Werkzeugvermessung

Messen ohne Restweglschen

Axiales Messen ohne Restweglschen

P

P

P

P

P

F

F

K

K

F

A

K

F

A

K

s

s

s

s

s

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

-

+

+

-

+

-

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

FM-TE

PM-NC

+

PM-NC

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1139

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.1 Anweisungen

Anweisung

Art 1) Bedeutung

W 2)

TP 3) SA 4) Beschreibung siehe 5)

1) 2) 3) 4) 5) Erluterungen siehe Legende (Seite 1115).

MI

MINDEX

MINVAL

MIRROR

MMC

MOD

MODAXVAL

MOV

MOVT

MSG

MVTOOL

N

NAMETOINT

NC

NEWCONF

NEWMT

NEWT

NORM 6)

NOT

NPROT

NPROTDEF

NUMBER

OEMIPO1

OEMIPO2

OF

OFFN

OMA1 

OMA2 

OMA3 

OMA4 

OMA5 

OR

1140

K

F

F

G

P

K

F

K

A

P

P

A

F

K

P

F

F

G

K

P

P

F

G

G

K

A

A

A

A

A

A

K

Zugriff auf Frame-Daten: Spiegelung

Index eines Zeichens im Eingangsstring be
stimmen

Kleinerer Wert zweier Variablen (arithm. Funk
tion)

Programmierbare Spiegelung

s

Aus dem Teileprogramm interaktiv Dialog
fenster am HMI aufrufen

Modulo-Division

Modulo-Position einer Modulo-Rundachse er
mitteln

Positionierachse starten

Endpunkt einer Verfahrbewegung in Werk
zeugrichtung angeben

Programmierbare Meldungen

m

Sprachbefehl zum Bewegen eines Werkzeugs

NC-Nebensatznummer

Systemvariablenindex ermitteln

Spezifizierung des Gltigkeitsbereichs von 
Daten

Genderte Maschinendaten bernehmen 
(entspricht "Maschinendatum wirksam set
zen")

Neues Multitool anlegen

Neues Werkzeug anlegen

Normaleinstellung im Anfangs-, Endpunkt bei 
der Werkzeugkorrektur

m

Logisches NICHT (Negation)

Maschinenspezifischer Schutzbereich 
EIN/AUS

Definition eines maschinenspezifischen 
Schutzbereichs

Eingangsstring in Zahl umwandeln

OEM-Interpolation 1

OEM-Interpolation 2

Schlsselwort in der CASE-Verzweigung

Aufma zur programmierten Kontur

OEM-Adresse 1

OEM-Adresse 2

OEM-Adresse 3

OEM-Adresse 4

OEM-Adresse 5

Logischer Operator, ODER-Verknpfung

m

m

m

m

m

m

m

m

+

+

+

+

+

+

+

-

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

-

+

-

-

+

FM-SA

FM-B

-

-

-

-

-

-

-

-

PM-NC

FM-TM

PM-NC

PM-NC

PM-NC

PM-NC

FM-TM

FM-TM

PM-NC

PM-NC

PM-NC 

PM-NC 

PM-NC 

PM-NC 

PM-NC 

PM-NC 

PM-NC 

PM-NC 

PM-NC 

PM-NC 

PM-NC 

PM-NC 

PM-NC 

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.1 Anweisungen

Anweisung

Art 1) Bedeutung

W 2)

TP 3) SA 4) Beschreibung siehe 5)

1) 2) 3) 4) 5) Erluterungen siehe Legende (Seite 1115).

ORIAXES

ORIAXPOS

ORIC 6)

ORICONCCW

ORICONCW

ORICONIO

ORICONTO

ORICURVE

ORID

ORIEULER 6)

ORIMKS

ORIPATH

ORIPATHS

ORIPLANE

ORIRESET

ORIROTA 6)

ORIROTC

ORIROTR

ORIROTT

ORIRPY

ORIRPY2

ORIS

ORISOF 6)

ORISOLH

ORISON

G

G

G

G

G

G

G

G

G

G

Lineare Interpolation der Maschinenachsen 
oder Orientierungsachsen

Orientierungswinkel ber virtuelle Orientie
rungsachsen mit Rundachspositionen

Orientierungsnderungen an Auenecken 
werden dem einzufgenden Kreissatz berla
gert

Interpolation auf einer Kreismantelflche im 
Gegenuhrzeigersinn

Interpolation auf einer Kreismantelflche im 
Uhrzeigersinn

Interpolation auf einer Kreismantelflche mit 
Angabe einer Zwischenorientierung

Interpolation auf einer Kreismantelflche im 
tangentialen bergang
(Angabe der Endorientierung)

Interpolation der Orientierung mit Vorgabe der 
Bewegung zweier Kontaktpunkte des Werk
zeugs

Orientierungsnderungen werden vor dem 
Kreissatz ausgefhrt

Orientierungswinkel ber Euler-Winkel

G Werkzeugorientierung im Maschinen-Koordi

natensystem

G Werkzeugorientierung bezogen auf die Bahn 

G Werkzeugorientierung bezogen auf die Bahn, 
ein Knick im Orientierungsverlauf wird geglt
tet

G

P

G

G

G

G

G

G

A

G

F

G

Interpolation in einer Ebene
(entspricht ORIVECT)
Grokreisinterpolation

Grundstellung der Werkzeugorientierung mit 
bis zu 3 Orientierungsachsen

Drehwinkel zu einer absolut vorgegebenen 
Drehrichtung

Tangentialer Drehvektor zur Bahntangente

Drehwinkel relativ zur Ebene zwischen Start- 
und Endorientierung

Drehwinkel relativ zur nderung des Orientie
rungsvektors 

Orientierungswinkel ber RPY-Winkel (XYZ)

Orientierungswinkel ber RPY-Winkel (ZYX)

Orientierungsnderung

Glttung des Orientierungsverlaufs AUS

Orientierungen berechnen

Glttung des Orientierungsverlaufs EIN

m

m

m

m

m

m

m

m

m

m

m

m

m

m

m

m

m

m

m

m

m

m

m

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

PM-NC

PM-NC 

PM-NC

PM-NC, FM-TR

PM-NC, FM-TR 

PM-NC, FM-TR

PM-NC, FM-TR

PM-NC, FM-TR

PM-NC

PM-NC 

PM-NC

PM-NC

PM-NC

PM-NC

-

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC 

PM-NC

PM-NC 

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1141

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.1 Anweisungen

Anweisung

Art 1) Bedeutung

W 2)

TP 3) SA 4) Beschreibung siehe 5)

1) 2) 3) 4) 5) Erluterungen siehe Legende (Seite 1115).

ORIVECT 6)

ORIVIRT1

ORIVIRT2

G

G

G

Grokreisinterpolation (identisch mit ORIPLA
NE)

Orientierungswinkel ber virtuelle Orientie
rungsachsen (Definition 1)

Orientierungswinkel ber virtuelle Orientie
rungsachsen (Definition 1)

ORIWKS 6)

G Werkzeugorientierung im Werkstck-Koordi

OS

OSB

OSC

OSCILL

OSCTRL

OSD

OSE

OSNSC

OSOF 6)

OSP1

OSP2

OSS

OSSE

OST

OST1

OST2

OTOL

OTOLG0

OVR

OVRA

OVRRAP

P

PAROT

natensystem

Pendeln ein/aus

Pendeln: Startpunkt

Konstante Glttung Werkzeugorientierung

Axis: 1 - 3 Zustellachsen

Optionen pendeln

berschleifen de Werkzeugorientierung 
durch Vorgabe der berschleiflnge mit SD

Pendeln Endpunkt

Pendeln: Ausfunkanzahl

Glttung der Werkzeugorientierung AUS

Pendeln: linker Umkehrpunkt

Pendeln rechter Umkehrpunkt

Glttung der Werkzeugorientierung am Satz
ende

Glttung der Werkzeugorientierung am Satz
anfang und Satzende

berschleifen der Werkzeugorientierung 
durch Vorgabe der Winkeltoleranz in Grad mit 
dem SD (maximale Abweichung vom pro
grammiert. Orientierungsverlauf) 

Pendeln: Haltepunkt im linken Umkehrpunkt

m

Pendeln: Haltepunkt im rechten Umkehrpunkt m

Orientierungstoleranz fr Kompressor-Funkti
onen, Orientierungsglttung und berschleif
arten

Orientierungstoleranz bei Eilgangbewegun
gen

Drehzahlkorrektur

Axiale Drehzahlkorrektur

Eilgang-Korrektur

Anzahl Unterprogrammdurchlufe

K

K

G

K

K

G

K

K

G

K

K

G

G

G

K

K

A

A

K

K

K

A

G Werkstckkoordinatensystem am Werkstck 

ausrichten

PAROTOF 6)

G Werkstckbezogene Frame-Drehung aus

schalten

PCALL

K

Unterprogramme mit absoluter Pfadangabe 
und Parameterbergabe aufrufen

m

m

m

m

m

m

m

m

m

m

m

m

m

m

m

m

m

m

m

m

m

m

m

m

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC 

PM-NC 

-

-

PM-NC

+

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC 

1142

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Anweisung

Art 1) Bedeutung

W 2)

TP 3) SA 4) Beschreibung siehe 5)

1) 2) 3) 4) 5) Erluterungen siehe Legende (Seite 1115).

Tabellen

4.1 Anweisungen

PDELAYOF 

PDELAYON 6)

PHI

PHU

PL

PM

PO

POCKET3

POCKET4

POLF

POLFA

POLFMASK

POLFMLIN

POLY 

POLYPATH 

PON 

PONS 

POS

POSA

POSM

POSMT

POSP

POSRANGE

POT

PR

G

G

K

K

A

K

K

Verzgerung beim Stanzen AUS

Verzgerung beim Stanzen EIN

Drehwinkel der Orientierung um die Richtung
sachse des Kegels

Physikalische Einheit einer Variablen

1. B-Spline: Knotenabstand

2. Polynom-Interpolation: Lnge des Parame
terintervalls bei Polynom-Interpolation

m

m

s

pro Minute

Polynomkoeffizient bei Polynom-Interpolation

s

C (T) Rechtecktasche frsen

C (T) Kreistasche frsen

m

m

m

m

m

m

m

m

K

P

P

P

G

P

G

G

K

K

P

P

K

F

F

K

Rckzugsposition LIFTFAST

Rckzugsposition von Einzelachsen mit 
$AA_ESR_TRIGGER starten 

Achsen fr den Rckzug ohne Zusammen
hang zwischen den Achsen freigeben

Achsen fr den Rckzug mit linearen Zusam
menhang zwischen den Achsen freigeben

Polynom-Interpolation

Polynom-Interpolation selektierbar fr die 
Achsgruppen AXIS oder VECT

Stanzen EIN

Stanzen EIN im IPO-Takt

Achse positionieren

Achse positionieren ber Satzgrenze

Magazin positionieren

Multitool auf WZ-Halter auf Platznummer po
sitionieren

Positionieren in Teilstcken (Pendeln)

Ermitteln, ob sich die aktuell interpolierte Soll
position einer Achse in einem Fenster um eine 
vorgegebene Referenzposition befindet

Quadrat 
(Arithmetische Funktion)

Pro Umdrehung

PREPRO

PA Unterprogramme mit Vorbereitung kennzeich

PRESETON

PRESETONS

PRIO

nen

P

P

K

Istwertsetzen mit Verlust des Referenziersta
tus

Istwertsetzen ohne Verlust des Referenzier
status

Schlsselwort zum Setzen der Prioritt bei der 
Behandlung von Interrupts

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

PM-NC

PM-NC

PM-NC

PM-NC 

PM-NC

PM-NC

PM-NC

PM-NC 

PM-NC 

PM-NC

+

PM-NC

-

-

-

+

+

-

-

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

FM-TM

FM-TM

PM-NC

+

FM-SA

+

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

+

+

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1143

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.1 Anweisungen

Anweisung

Art 1) Bedeutung

W 2)

TP 3) SA 4) Beschreibung siehe 5)

1) 2) 3) 4) 5) Erluterungen siehe Legende (Seite 1115).

PRLOC

PROC

PROTA

PROTD

PROTS

PSI

PTP

PTPG0

PTPWOC

PUNCHACC

PUTFTOC

PUTFTOCF

PW

QU

R...

RAC

RDISABLE

READ

REAL

REDEF

RELEASE

REP

REPEAT

REPEATB

REPOSA

REPOSH

REPOSHA

1144

K

K

P

F

P

K

G

G

G

Initialisierung der Variablen bei Reset nur 
nach lokaler nderung

Erste Anweisung eines Programms

Neuberechnung des Kollisionsmodells anfor
dern

Abstand zweier Schutzbereiche berechnen

Setzen des Schutzbereichszustandes

ffnungswinkel des Kegels

Punkt-zu-Punkt-Bewegung (PTP-Fahren)

Punkt-zu-Punkt-Bewegung nur bei G0, sonst 
Bahnbewegung CP

Punkt-zu-Punkt-Bewegung ohne Ausgleichs
bewegungen, die durch Orientierungsnde
rungen verursacht sind

m

m

m

P Wegabhngige Beschleunigung beim Nibbeln

P Werkzeugfeinkorrektur fr paralleles Abrich

ten

P Werkzeugfeinkorrektur in Abhngigkeit einer 
mit FCTDEF festgelegten Funktion fr paral
leles Abrichten

A

K

A

K

P

P

K

K

P

K

B-Spline, Punkt-Gewicht

Schnelle Zusatz-
(Hilfs-)funktionsausgabe

Rechenparameter auch als einstellbarer Ad
ressbezeichner und mit numerischer Erweite
rung

Absolut satzweise achsspezifische Radiu
sprogrammierung

Einlesesperre

Liest in der angegebenen Datei eine oder 
mehrere Zeilen ein und legt gelesene Informa
tionen im Feld ab

Datentyp: Gleitpunktvariable mit Vorzeichen 
(reale Zahlen) 

Redefinition von Systemvariablen, Anwender
variablen und NC-Sprachbefehlen 

Maschinenachsen zum Achstausch freigeben

Schlsselwort zur Initialisierung aller Elemen
te eines Feldes mit demselben Wert

K Wiederholung einer Programmschleife

K Wiederholung einer Programmzeile

G Wiederanfahren an die Kontur linear mit allen 

Achsen

G Wiederanfahren an die Kontur mit Halbkreis

G Wiederanfahren an die Kontur mit allen Ach

sen; Geometrieachsen im Halbkreis

s

s

s

s

s

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

-

+

+

+

+

+

+

+

+

+

+

PM-NC 

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

-

-

-

+

-

FM-SA

PM-NC

PM-NC

PM-NC

+

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Anweisung

Art 1) Bedeutung

W 2)

TP 3) SA 4) Beschreibung siehe 5)

1) 2) 3) 4) 5) Erluterungen siehe Legende (Seite 1115).

Tabellen

4.1 Anweisungen

REPOSL

REPOSQ

REPOSQA

RESETMON

RET

RETB

RIC

RINDEX

RMB

RMBBL

RME

RMEBL

RMI 6)

RMIBL 6)

RMN

G Wiederanfahren an die Kontur linear

G Wiederanfahren an die Kontur im Viertelkreis

G Wiederanfahren an die Kontur linear mit allen 
Achsen; Geometrieachsen im Viertelkreis

P

P

P

K

F

Sprachbefehl zur Sollwertaktivierung

Unterprogrammende

Unterprogrammende

Relativ satzweise achsspezifische Radiuspro
grammierung

Index eines Zeichens im Eingangsstring be
stimmen

G Wiederanfahren an Satzanfangspunkt

G Wiederanfahren an Satzanfangspunkt

G Wiederanfahren an Satzendpunkt

G Wiederanfahren an Satzendpunkt

G Wiederanfahren an Unterbrechungspunkt

G Wiederanfahren an Unterbrechungspunkt

G Wiederanfahren an nchstliegenden Bahn

punkt

RMNBL

G Wiederanfahren an nchstliegenden Bahn

RND

RNDM

ROT

ROTS

ROUND

ROUNDUP

RP

RPL

RT

RTLIOF

RTLION 6)

punkt

Konturecke verrunden

Modales Verrunden

Programmierbare Drehung

Programmierbare Frame-Drehungen mit 
Raumwinkeln

Runden der Nachkommastellen

Aufrunden eines Eingabewerts

Polarradius

Drehung in der Ebene

Parameter fr Zugriff auf Framedaten: Dre
hung

G0 ohne Linearinterpolation (Einzelachsinter
polation)

G0 mit Linearinterpolation

A

A

G

G

F

F

A

A

K

G

G

s

s

s

s

m

s

m

s

m

s

m

s

s

m

s

s

m/s

s

m

m

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

PM-NC

PM-NC

PM-NC

FM-TM

PM-NC

PM-NC

PM-NC

-

+

+

-

PM-NC

PM-NC 

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

+

+

Anweisungen S ... Z

Anweisung

Art 1) Bedeutung

W 2)

TP 3) SA 4) Beschreibung siehe 5)

1) 2) 3) 4) 5) Erluterungen siehe Legende (Seite 1115).

S

SAVE

A

PA

Spindeldrehzahl
(bei G4, G96/G961 andere Bedeutung)

m/s

Attribut zur Rettung von Informationen bei Un
terprogrammaufrufen

+

+

+

PM-NC

PM-NC

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1145

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.1 Anweisungen

Anweisung

Art 1) Bedeutung

W 2)

TP 3) SA 4) Beschreibung siehe 5)

1) 2) 3) 4) 5) Erluterungen siehe Legende (Seite 1115).

SBLOF

SBLON

SC

SCALE

SCC

SCPARA

SD

SET

SETAL

SETDNO

SETINT

SETM

SETMS

SETMS(n)

SETMTH

SETPIECE

s

s

P

P

K

G

K

K

A

K

P

F

K

P

P

P

P

P

Einzelsatz unterdrcken

Einzelsatzunterdrckung aufheben

Parameter fr Zugriff auf Framedaten: Skalie
rung

Programmierbare Skalierung

Selektive Zuordnung einer Planachse zu G96/
G961/G962. Achsbezeichner knnen Geo-, 
Kanal oder Maschinenachse sein.

Servo-Parameterersatz programmieren

Spline-Grad

Schlsselwort zur Initialisierung aller Elemen
te eines Feldes mit aufgelisteten Werten

Alarm setzen

D-Nummer der Schneide (CE) eines Werk
zeugs (T) zuordnen

Festlegung, welche Interruptroutine aktiviert 
werden soll, wenn ein NC-Eingang ansteht

Setzen von Markern im eigenen Kanal

Zurckschalten auf die im Maschinendatum 
festgelegte Masterspindel

Spindel n soll als Masterspindel gelten

Masterwerkzeughalternummer setzen

Stckzahl fr alle Werkzeuge bercksichti
gen, die der Spindel zugeordnet sind

SETTA

P Werkzeug aus Verschleiverbund aktiv set

zen

SETTCOR

F

Vernderung von Werkzeugkomponenten un
ter Bercksichtigung aller Randbedingungen

SETTIA

P Werkzeug aus Verschleiverbund inaktiv set

zen

Startpunktversatz fr Gewindeschneiden

m

Sinus (Trigon. Funktion)

Die mit SIRELIN, SIRELOUT und SIRELTIME 
parametrierten Sicherheitfunktionen aktivie
ren

Eingangsgren des Funktionsbausteins initi
alisieren

Ausgangsgren des Funktionsbausteins ini
tialisieren

Timer des Funktionsbausteins initialisieren

A

F

F

P

P

P

C (T) Lngsnut

C (T) Kreisnut

G

P

Ruckbegrenzte Bahnbeschleunigung

m

Ruckbegrenzte Achsbeschleunigung fr die 
programmierten Achsen einschalten

SF

SIN

SIRELAY

SIRELIN

SIRELOUT

SIRELTIME

SLOT1

SLOT2

SOFT

SOFTA

1146

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

-

+

+

+

+

+

+

+

-

-

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

+

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC 

PM-NC

PM-NC

FM-TM

FM-TM

FM-TM

PM-NC

FM-TM

PM-NC

PM-NC

FM-SI

FM-SI

FM-SI

FM-SI

PM-NC 

PM-NC 

PM-NC

PM-NC

+

-

+

-

-

-

-

-

-

+

+

-

-

-

-

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Anweisung

Art 1) Bedeutung

W 2)

TP 3) SA 4) Beschreibung siehe 5)

1) 2) 3) 4) 5) Erluterungen siehe Legende (Seite 1115).

Tabellen

4.1 Anweisungen

SON 

SONS

SPATH 6)

SPCOF

SPCON

SPI

SPIF1 6)

SPIF2

SPLINEPATH

SPN 

SPOF 6)

SPOS

SPOSA

SPP

SPRINT

SQRT

SR

SRA

ST

STA

START

STARTFIFO 6)

STAT

STOLF

STOPFIFO

STOPRE

STOPREOF

STRING

G

G

G

P

P

F

G

G

P

A

G

K

K

A

F

F

A

K

A

K

P

G

A

G

P

P

K

m

m

m

m

m

m

m

s

m

m

m

m

s

m

s

m

m

s

m

m

Nibbeln EIN

Nibbeln EIN im IPO-Takt

Bahnbezug fr FGROUP-Achsen ist Bogen
lnge

Masterspindel oder Spindel (n) von Lagerege
lung in Drehzahlregelung umschalten

Masterspindel oder Spindel (n) von Drehzahl
regelung in Lageregelung umschalten

Konvertiert Spindelnummer in Achsbezeich
ner

Schnelle
NC-Ein-/Ausgnge fr Stanzen/Nibbeln Byte 1

Schnelle
NC-Ein-/Ausgnge fr Stanzen/Nibbeln Byte 2

Spline-Verband festlegen

Anzahl der Teilstrecken pro Satz

Hub AUS,
Stanzen, Nibbeln AUS

Spindelposition

Spindelposition ber Satzgrenzen hinweg

Lnge einer Teilstrecke

Liefert einen Eingangsstring formatiert zurck

Quadratwurzel
(arithmetische Funktion)
(square root)

Pendelrckzugsweg fr Synchronaktion

Pendelrckzugsweg bei externem Eingang 
axial fr Synchronaktion

Pendelausfeuerzeit fr Synchronaktion

Pendelausfeuerzeit axial fr Synchronaktion

Starten der ausgewhlten Programme in meh
reren Kanlen gleichzeitig aus dem laufenden 
Programm

Abarbeiten; parallel dazu Auffllen des Vor
laufpuffers

Stellung der Gelenke

G0-Toleranzfaktor

Anhalten der Bearbeitung; Auffllen des Vor
laufpuffers, bis STARTFIFO erkannt wird, Vor
laufpuffer voll oder Programmende

Vorlaufstopp, bis alle vorbereiteten Stze vom 
Hauptlauf abgearbeitet sind

Vorlaufstopp aufheben

Datentyp: Zeichenkette

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

-

+

-

-

-

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

FM-TE

FM-TE

-

PM-NC

PM-NC

PM-NC

+

PM-NC

PM-NC

PM-NC

PM-NC 

+

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

-

PM-NC

PM-NC

PM-NC

PM-NC 

PM-NC

-

+

PM-NC

FM-SA

PM-NC

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1147

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.1 Anweisungen

Anweisung

Art 1) Bedeutung

W 2)

TP 3) SA 4) Beschreibung siehe 5)

1) 2) 3) 4) 5) Erluterungen siehe Legende (Seite 1115).

STRINGIS

STRLEN

SUBSTR

SUPA

SUPD

SVC

SYNFCT

SYNR

SYNRW

SYNW

T

TAN

TANG

TANGDEL

TANGOF

TANGON

TCA
(828D: _TCA)

TCARR

TCI

TCOABS 6)

TCOFR

TCOFRX

s

s

m

F

F

F

G

G

Prft vorhandenen NC-Sprachumfang und 
speziell fr diesen Befehl gehrende NC-Zy
klennamen, Anwendervariablen, Makros und 
Labelnamen, ob diese existieren, gltig, defi
niert oder aktiv sind.

Lnge eines Strings bestimmen

Index eines Zeichens im Eingangsstring be
stimmen

Unterdrckung der aktuellen Nullpunktver
schiebung, einschlielich programmierter Ver
schiebungen, Systemframes, Handradver
schiebungen (DRF), externer Nullpunktver
schiebung und berlagerte Bewegung

Unterdrckung der aktiven Werkzeugkorrek
turen

K Werkzeug-Schnittgeschwindigkeit

P

K

K

K

Auswertung eines Polynoms abhngig von ei
ner Bedingung in der Bewegungssynchron
aktion

Lesen der Variable erfolgt synchron, d. h. zum 
Abarbeitungszeitpunkt

Lesen und Schreiben der Variable erfolgt syn
chron, d. h. zum Abarbeitungszeitpunkt

Schreiben der Variable erfolgt synchron, d. h. 
zum Abarbeitungszeitpunkt

A Werkzeug aufrufen 

(wechseln nur, wenn im Maschinendatum fest
gelegt; ansonsten M6-Befehl ntig)

F

P

P

P

P

Tangens (Trigon. Funktion)

Tangentialsteuerung: Kopplung definieren

Tangentialsteuerung: Kopplung lschen

Tangentialsteuerung: Kopplung ausschalten

Tangentialsteuerung: Kopplung einschalten

P Werkzeuganwahl / Werkzeugwechsel unab

hngig vom Status des Werkzeugs

A Werkzeugtrger (Nummer "m") anfordern

P Wechsle Werkzeug aus Zwischenspeicher in 

das Magazin

G Werkzeuglngenkomponenten aus der aktu
ellen Werkzeugorientierung bestimmen

G Werkzeuglngenkomponenten aus der Orien
tierung des aktiven Frames bestimmen

G Werkzeugorientierung eines aktiven Frames 
bei der Werkzeugwahl bestimmen, Werkzeug 
zeigt in X-Richtung

m

m

m

+

+

+

+

+

+

-

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

-

-

-

PM-NC

PM-NC

PM-NC

PM-NC

-

PM-NC

PM-NC 

+

FM-SA

PM-NC

PM-NC

PM-NC

PM-NC

+

PM-NC

-

-

-

-

-

-

PM-NC

PM-NC

PM-NC

PM-NC

FM-TM

PM-NC

FM-TM

PM-NC

PM-NC

PM-NC

1148

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Anweisung

Art 1) Bedeutung

W 2)

TP 3) SA 4) Beschreibung siehe 5)

1) 2) 3) 4) 5) Erluterungen siehe Legende (Seite 1115).

Tabellen

4.1 Anweisungen

TCOFRY

TCOFRZ

THETA

TILT

TLIFT

TML

TMOF

TMON

TO

TOFF

TOFFL

TOFFLR

TOFFOF

TOFFON

TOFFR

TOFRAME

TOFRAMEX

TOFRAMEY

TOFRAMEZ

TOLOWER

TOOLENV

TOOLGNT

TOOLGT

TOROT

TOROTOF 6)

TOROTX

G Werkzeugorientierung eines aktiven Frames 
bei der Werkzeugwahl bestimmen, Werkzeug 
zeigt in Y-Richtung

G Werkzeugorientierung eines aktiven Frames 
bei der Werkzeugwahl bestimmen, Werkzeug 
zeigt in Z-Richtung

A

A

P

Drehwinkel

Seitwrtswinkel

Tangentialsteuerung: Zwischensatzerzeu
gung einschalten

m

m

s

m

P Werkzeuganwahl mit Magazin-Platznummer

P Werkzeugberwachung abwhlen

P Werkzeugberwachung anwhlen

K

Bezeichnet den Endwert in einer FOR-Zhl
schleife

A Werkzeuglngen-Offset in Richtung der Werk

m

zeuglngenkomponente, die parallel zu der 
im Index angegebenen Geometrieachse wirkt.

A Werkzeuglngen-Offset in Richtung der Werk
zeuglngenkomponente L1, L2 bzw. L3

A

P

P

Simultaner Werkzeuglngen- und Werkzeu
gradius-Offset

Online-Werkzeuglngenkorrektur rcksetzen

Online-Werkzeuglngenkorrektur aktivieren

A Werkzeugradius-Offset

G

G

G

G

F

F

F

F

G

G

G

Z-Achse des WKS durch Frame-Drehung pa
rallel zur Werkzeugorientierung ausrichten

X-Achse des WKS durch Frame-Drehung pa
rallel zur Werkzeugorientierung ausrichten

Y-Achse des WKS durch Frame-Drehung pa
rallel zur Werkzeugorientierung ausrichten

wie TOFRAME

Buchstaben eines Strings in Kleinbuchstaben 
wandeln

Alle aktuellen Zustnde speichern, die fr die 
Bewertung der im Speicher abgelegten Werk
zeugdaten von Bedeutung sind

Anzahl der Werkzeuge einer Werkzeuggrup
pe ermitteln

T-Nummer eines Werkzeugs aus einer Werk
zeuggruppe ermitteln

Z-Achse des WKS durch Frame-Drehung pa
rallel zur Werkzeugorientierung ausrichten

Framedrehungen in Werkzeugrichung AUS

X-Achse des WKS durch Frame-Drehung pa
rallel zur Werkzeugorientierung ausrichten

m

m

m

m

m

m

m

m

m

m

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

PM-NC

PM-NC

PM-NC 

PM-NC

PM-NC 

FM-TM

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

FM-TM

FM-TM

PM-NC

PM-NC

PM-NC

-

-

-

-

-

-

-

-

-

-

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1149

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.1 Anweisungen

Anweisung

Art 1) Bedeutung

W 2)

TP 3) SA 4) Beschreibung siehe 5)

1) 2) 3) 4) 5) Erluterungen siehe Legende (Seite 1115).

TOROTY

TOROTZ

TOUPPER

TOWBCS

TOWKCS

TOWMCS

TOWSTD 6)

TOWTCS

TOWWCS

TR

TRAANG

TRACON

TRACYL

TRAFOOF

TRAFOON

TRAILOF

TRAILON

TRANS

TRANSMIT

TRAORI

TRUE

TRUNC

TU

TURN

ULI

UNLOCK

UNTIL

1150

G

G

F

G

G

G

G

G

G

K

P

P

P

P

P

P

P

G

P

P

K

F

Y-Achse des WKS durch Frame-Drehung pa
rallel zur Werkzeugorientierung ausrichten

wie TOROT

Buchstaben eines Strings in Grobuchstaben 
wandeln

Verschleiwerte im Basiskoordinatensystem 
(BKS)

Verschleiwerte im Koordinatensystem des 
Werkzeugkopfes bei kinetischer Transforma
tion (unterscheidet sich vom MKS durch Werk
zeugdrehung)

Verschleiwerte im Maschinen-Koordinaten
system (MKS)

Grundstellungswert fr Korrekturen in der 
Werkzeuglnge

Verschleiwerte im Werkzeug-Koordinaten
system (Werkzeugtrgerbezugspunkt T an 
der Werkzeughalteraufnahme)

Verschleiwerte im Werkstck-Koordinaten
system (WKS)

Verschiebungskomponente einer Frame-Vari
ablen

Transformation schrge Achse

Kaskadierte Transformation

Zylinder: Mantelflchen-Transformation

Im Kanal aktive Transformationen ausschal
ten

Mit kinematischen Ketten definierte Transfor
mation einschalten

Achssynchrones Mitschleppen AUS

Achssynchrones Mitschleppen EIN

Absolute programmierbare Nullpunktver
schiebung

Polar-Transformation (Stirnflchenbearbei
tung)

4-, 5-Achstransformation, Generische Trans
formation

Logische Konstante: wahr

Abschneiden der Nachkommastellen

Achswinkel

A Windungsanzahl fr Schraubenlinie

K

P

K

Oberer Grenzwert von Variablen

Synchronaktion mit ID freigeben (Technolo
giezyklus fortsetzen)

Bedingung zur Beendigung einer REPEAT-
Schleife

m

m

m

m

m

m

m

m

s

s

s

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

-

+

PM-NC

PM-NC

-

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

-

-

-

-

-

+

+

-

-

PM-NC

+

PM-NC

PM-NC

PM-NC

PM-NC 

+

FM-SA

PM-NC

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Anweisung

Art 1) Bedeutung

W 2)

TP 3) SA 4) Beschreibung siehe 5)

1) 2) 3) 4) 5) Erluterungen siehe Legende (Seite 1115).

Tabellen

4.1 Anweisungen

m

m

m

m

m

m

m

m

m

m

m

m

m

m

m

m

UPATH

VAR

VELOLIM

VELOLIMA

WAITC

WAITE

G

K

K

K

Bahnbezug fr FGROUP-Achsen ist Kurven
parameter

Schlsselwort: Art der Parameterbergabe

Maximale Achsgeschwindigkeit oder Spindel
drehzahl anpassen

Reduktion oder berhhung der maximalen 
Geschwindigkeit einer Folgeachse

P Warten, bis Kopplungssatzwechselkriterium 

fr die Achsen/Spindeln erfllt ist

P Warten auf das Programmende in einem an

deren Kanal.

WAITENC

P Warten auf synchronisierte bzw. restaurierte 

Achspositionen

WAITM

P Warten auf Marker im angegebenen Kanal; 

vorhergehenden Satz mit Genauhalt beenden.

WAITMC

P Warten auf Marker im angegeben. Kanal; Ge

nauhalt nur, wenn die anderen Kanle den 
Marker noch nicht erreicht haben.

WAITP

WAITS

P Warten auf Verfahrende der Positionierachse

P Warten auf Erreichen der Spindelposition

WALCS0 6)

G WKS-Arbeitsfeldbegrenzung abgewhlt

WALCS1

WALCS2

WALCS3

WALCS4

WALCS5

WALCS6

WALCS7

WALCS8

WALCS9

WALCS10

WALIMOF

WALIMON 6)

WHEN

WHENEVER

WHILE

WRITE

WRTPR

X

XOR

G WKS-Arbeitsfeldbegrenzungsgruppe 1 aktiv

G WKS-Arbeitsfeldbegrenzungsgruppe 2 aktiv

G WKS-Arbeitsfeldbegrenzungsgruppe 3 aktiv

G WKS-Arbeitsfeldbegrenzungsgruppe 4 aktiv

G WKS-Arbeitsfeldbegrenzungsgruppe 5 aktiv

G WKS-Arbeitsfeldbegrenzungsgruppe 6 aktiv

G WKS-Arbeitsfeldbegrenzungsgruppe 7 aktiv

G WKS-Arbeitsfeldbegrenzungsgruppe 8 aktiv

G WKS-Arbeitsfeldbegrenzungsgruppe 9 aktiv

G WKS-Arbeitsfeldbegrenzungsgruppe 10 aktiv

BKS-Arbeitsfeldbegrenzung AUS

BKS-Arbeitsfeldbegrenzung EIN

Die Aktion wird einmal ausgefhrt, wenn die 
Bedingung einmal erfllt ist.

Die Aktion wird zyklisch in jedem Interpolator
takt ausgefhrt, wenn die Bedingung erfllt ist.

Beginn der WHILE-Programmschleife

Text ins Dateisystem schreiben. 
Fgt einen Satz am Ende der angegebenen 
Datei an.

Zeichenkette in BTSS-Variable schreiben

G

G

K

K

K

P

P

A

O

Achsname

Logisches Exklusiv- ODER

m/s

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

-

-

+

+

+

+

+

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC 

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

PM-NC

FM-SA

FM-SA

-

+

-

-

-

-

-

-

-

-

-

-

-

-

-

-

-

-

-

-

-

-

+

+

PM-NC

-

PM-NC 

-

+

PM-NC 

PM-NC

PM-NC

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1151

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.1 Anweisungen

Anweisung

Art 1) Bedeutung

W 2)

TP 3) SA 4) Beschreibung siehe 5)

1) 2) 3) 4) 5) Erluterungen siehe Legende (Seite 1115).

Y

Z

A

A

Achsname

Achsname

m/s

m/s

+

+

+

+

PM-NC

PM-NC

1152

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Tabellen

4.1 Anweisungen

1) Art der Anweisung:

  A

Adresse

Bezeichner, dem ein Wert zugewiesen wird (z. B. OVR=10). Es gibt auch einige Adressen, 
die ohne Wertzuweisung eine Funktion ein- oder ausschalten (z. B. CPLON und CPLOF).

  C (A) AST-Zyklus

Vordefiniertes NC-Programm fr das automatische Nachoptimieren mit AST (= automati
sche Servo Optimierung). Die Anpassung an die konkrete Optimierungssituation erfolgt 
ber Parameter, die dem Zyklus beim Aufruf bergeben werden.

  C (M) Messzyklus

Vordefiniertes NC-Programm, in dem ein bestimmter Messvorgang, wie z. B. das Bestim
men des Innendurchmessers eines zylindrischen Werkstcks, allgemeingltig program
miert ist. Die Anpassung an die konkrete Messsituation erfolgt ber Parameter, die dem 
Zyklus beim Aufruf bergeben werden.

  C (T) Technologischer Zyklus

Vordefiniertes NC-Programm, in dem ein bestimmter Bearbeitungsvorgang, wie z. B. das 
Bohren eines Gewindes oder das Frsen einer Tasche, allgemeingltig programmiert ist. 
Die Anpassung an die konkrete Bearbeitungssituation erfolgt ber Parameter, die dem Zyk
lus beim Aufruf bergeben werden.

F

Vordefinierte Funktion (liefert Rckgabewert)

Der Aufruf der vordefinierten Funktion kann als Operand im Ausdruck stehen.

  G

G-Befehl

G-Befehle sind in Gruppen eingeteilt. Es kann nur ein G-Befehl einer Gruppe in einem Satz 
geschrieben werden. Ein G-Befehl kann modal wirksam sein (bis auf Widerruf durch einen 
anderen Befehl derselben Gruppe), oder er ist nur fr den Satz wirksam, in dem er steht 
(satzweise wirksam). 

  K

Schlsselwort

Bezeichner, der die Syntax eines Satzes bestimmt. Einem Schlsselwort wird kein Wert 
zugewiesen und mit einem Schlsselwort kann auch keine NC-Funktion ein-/ausgeschaltet 
werden.

Beispiele: Kontrollstrukturen (IF, ELSE, ENDIF, WHEN, ...), Programmablauf (GOTOB, 
GOTO, RET )

  O

Operator

Operator fr eine mathematische, Vergleichs- oder logische Operation

  P

Vordefinierte Prozedur (liefert keinen Rckgabewert)

  PA

Programmattribut

Programmattribute stehen am Ende der Definitionszeile eines Unterprogramms:
PROC <Programmname>(...) <Programmattribut>

Sie bestimmen das Verhalten beim Ablauf des Unterprogramms.

2) Wirksamkeit der Anweisung:

m

s

modal

satzweise

3) Programmierbarkeit im Teileprogramm:

+

-

M

programmierbar

nicht programmierbar

nur vom Maschinenhersteller programmierbar

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1153

(cid:47)(cid:72)(cid:74)(cid:72)(cid:81)(cid:71)(cid:72) 
Tabellen

4.1 Anweisungen

4) Programmierbarkeit in Synchronaktionen:

+

-

T

programmierbar

nicht programmierbar

nur in Technologiezyklen programmierbar

5) Verweis auf das Dokument, das die ausfhrliche Beschreibung der Anweisung enthlt:

FM-A

FM-B

FM-SA

FM-SI

FM-TE

FM-TM

FM-TR

PM-MC

PM-NC

Funktionshandbuch Achsen und Spindeln

Funktionshandbuch Basisfunktionen

Funktionshandbuch Synchronaktionen

Funktionshandbuch Safety Integrated

Funktionshandbuch Technologien

Funktionshandbuch Werkzeugverwaltung

Funktionshandbuch Transformationen

Programmierhandbuch Messzyklen

Programmierhandbuch NC-Programmierung

6) Standardeinstellung bei Programmanfang (im Auslieferungsstand der Steuerung, wenn nichts an

deres programmiert ist).

1154

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

4.2

Adressen

4.2.1

Adressbuchstaben

Buchstabe

Bedeutung

A

B

C

D

E

F

G

H

I

J

K

L

M

N

O

P

Q

R

S

T

U

V

W

X

Y

Z

%

:

/

einstellbarer Adressbezeichner

einstellbarer Adressbezeichner

einstellbarer Adressbezeichner

An-/Abwahl der Werkzeuglngenkorrektur, Werkzeugschneide

einstellbarer Adressbezeichner

Vorschub

Verweilzeit in Sekunden

G-Befehl

H-Funktion

einstellbarer Adressbezeichner

einstellbarer Adressbezeichner

einstellbarer Adressbezeichner

Unterprogrammname, -aufruf

M-Funktion

Nebensatz-Nummer

frei

Programmdurchlaufzahl

einstellbarer Adressbezeichner

Variablen-Bezeichner (R-Parameter)

einstellbarer Adressbezeichner (ohne numerische Erweiterung)

Spindel-Wert 

Verweilzeit in Spindelumdrehungen

Werkzeugnummer

einstellbarer Adressbezeichner

einstellbarer Adressbezeichner

einstellbarer Adressbezeichner

einstellbarer Adressbezeichner

einstellbarer Adressbezeichner

einstellbarer Adressbezeichner

Anfangs- und Trennzeichen bei der bertragung von Dateien

Hauptsatznummer

Ausblendkennung

Tabellen

4.2 Adressen

numerische 
Erweiterung

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1155

 
 
 
 
 
 
 
 
 
 
Tabellen

4.2 Adressen

4.2.2

Feste Adressen

Feste Adressen ohne axiale Erweiterung

modal/
satz
weise

m

m, s

x

siehe 
Liste 
der G
Funkti
onen

s

s

s

s

m

m

s

m, s

m

Adressbe
zeichner

Adresstyp

Korrektur
nummer

Vorschub, 
Verweilzeit

G-Befehl

Hilfsfunktio
nen

Unterpro
gramm
nummer

Hilfsfunktio
nen

Satznum
mer

Override

Override fr 
Eilgangge
schwindig
keit

Unterpro
gramm
durchlauf
zahl

Spindel, 
Verweilzeit

Zuordnung 
einer Plan
achse zu 
G96
/G961/G962

D

F

G

H

L

M

N

OVR

OVRRAP

P

S

SCC

1156

G70/
G71

G700/
G710

G90/
G91

IC

AC

DC,
ACN,
ACP

CIC,
CAC,
CDC,
CACN,
CACP

QU

Datentyp des zu
gewiesenen 
Werts

x

x

x

x

vorzeichenlos
INT

vorzeichenlos
REAL

vorzeichenlos
INT

M:
vorzeichenlos
INT

H:
REAL

vorzeichenlos
INT

M:
vorzeichenlos
INT

H:
REAL

vorzeichenlos
INT

vorzeichenlos
REAL

vorzeichenlos
REAL

vorzeichenlos
INT

x

vorzeichenlos
REAL

REAL

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Adressbe
zeichner

Adresstyp

modal/
satz
weise

G70/
G71

G700/
G710

G90/
G91

IC

AC

Tabellen

4.2 Adressen

DC,
ACN,
ACP

CIC,
CAC,
CDC,
CACN,
CACP

QU

Datentyp des zu
gewiesenen 
Werts

x

x

x

x

x

x

REAL

REAL

SPOS

SPOSA

T

Spindelpo
sition

Spindelpo
sition ber 
Satzgren
zen hinweg

Werkzeug
nummer

m

m

m

Feste Adressen mit axialer Erweiterung

Adressbe
zeichner

Adresstyp

modal/
satz
weise

G70/
G71

G700/
G710

G90/
G91

IC

AC

x

vorzeichenlos
INT

DC,
ACN,
ACP

CIC,
CAC,
CDC,
CACN,
CACP

QU

Datentyp des zu
gewiesenen 
Werts

vorzeichenlos
REAL

vorzeichenlos
REAL

ACC

ACCLIMA

AX

FA

FDA

FGREF

FL

FMA

FOC

m

m

1)

m

s

m

m

m

s

Axiale Be
schleuni
gung

Axiale Be
schleuni
gungsbe
grenzung 
Folgeachse

Variabler 
Achsbe
zeichner

Axialer Vor
schub

Axialer Vor
schub fr 
Handrad
berlage
rung

Bezugsra
dius

Axialer 
Grenz-Vor
schub

Axialer Syn
chron-Vor
schub

Satzweises 
Fahren mit 
begrenztem 
Moment

x

x

x

x

x

x

x

x

x

x

REAL

x

x

vorzeichenlos
REAL

vorzeichenlos
REAL

vorzeichenlos
REAL

vorzeichenlos
REAL

vorzeichenlos
REAL

REAL

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1157

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.2 Adressen

Adressbe
zeichner

Adresstyp

modal/
satz
weise

G70/
G71

G700/
G710

G90/
G91

IC

AC

DC,
ACN,
ACP

CIC,
CAC,
CDC,
CACN,
CACP

QU

Datentyp des zu
gewiesenen 
Werts

Modales 
Fahren mit 
begrenztem 
Moment 
AUS

Modales 
Fahren mit 
begrenztem 
Moment EIN

Fahren auf 
Festan
schlag EIN

Moment
grenze fr 
Fahren auf 
Festan
schlag

berwach
ungsfenster 
fr Fahren 
auf Festan
schlag

Variabler In
terpolations
parameter

axiale Ruck
begrenzung

axiale Ruck
begrenzung 
Folgeachse

Zyklisches 
Messen

Axiales Mes
sen mit 
Restwegl
schen

Axiales Mes
sen ohne 
Restwegl
schen

Positionier
achse star
ten

Pendeln 
EIN/AUS

m

m

m

m

m

s

m

m

s

s

s

m

m

FOCOF

FOCON

FXS

FXST

FXSW

IP

JERKLIM

JERKLIMA

MEAC

MEASA

MEAWA

MOV

OS

1158

REAL

REAL

vorzeichenlos
INT

REAL

REAL

x

x

x

x

x

REAL

vorzeichenlos
REAL

vorzeichenlos
REAL

INT
Modus und
1 - 4 Trigger
ereignisse

INT
Modus und
1 - 4 Trigger
ereignisse

INT
Modus und
1 - 4 Trigger
ereignisse

x

x

x

x

x

x

x

REAL

vorzeichenlos
INT

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Adressbe
zeichner

Adresstyp

modal/
satz
weise

G70/
G71

G700/
G710

G90/
G91

IC

AC

Tabellen

4.2 Adressen

DC,
ACN,
ACP

CIC,
CAC,
CDC,
CACN,
CACP

QU

Datentyp des zu
gewiesenen 
Werts

OSB

OSCILL

OSCTRL

OSE

OSNSC

OSP1

OSP2

OST1

OST2

OVRA

PO

POLF

POS

POSA

Pendeln 
Startpunkt

Achszuord
nung fr 
Pendeln, 
Pendeln ein
schalten

Optionen 
Pendeln

Pendeln 
Endpunkt

Ausfunkan
zahl Pen
deln

Linker Um
kehrpunkt 
(Pendeln)

Rechter Um
kehrpunkt 
(Pendeln)

Haltezeit im 
linken Um
kehrpunkt 
(Pendeln)

Haltezeit im 
rechten Um
kehrpunkt 
(Pendeln)

Axialer 
Override

Polynomko
effizient

Position 
LIFTFAST

Positionier
achse

Positionier
achse ber 
Satzgrenzen

m

m

m

m

m

m

m

m

m

m

s

m

m

m

x

x

x

x

x

x

REAL

Axis:
1 - 3 Zustellach
sen

vorzeichenlos
INT:
Setzoptionen, 
vorzeichenlos
INT: Rcksetz
optionen

REAL

vorzeichenlos
INT

REAL

REAL

REAL

REAL

vorzeichenlos
REAL

vorzeichenlos
REAL

vorzeichenlos
REAL

REAL

REAL

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1159

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.2 Adressen

Adressbe
zeichner

Adresstyp

modal/
satz
weise

G70/
G71

G700/
G710

G90/
G91

IC

AC

DC,
ACN,
ACP

CIC,
CAC,
CDC,
CACN,
CACP

QU

Datentyp des zu
gewiesenen 
Werts

m

x

x

x

x

x

x

m

m

m

m

POSP

STA

SRA

VELOLIM

VELOLIMA

Positionie
ren in Teil
stcken 
(Pendeln)

Ausfeuer
zeit (axial)

Rckzugs
weg bei ex
ternem Ein
gang (axial)

Axiale Ge
schwindig
keitsbegren
zung

Axiale Ge
schwindig
keitsbegren
zung Folge
achse

REAL:
Endposition

Real:
Teillnge

INT: Option

vorzeichenlos
REAL

vorzeichenlos
REAL

vorzeichenlos
REAL

vorzeichenlos
REAL

1) absolute Endpunkte: modal, inkrementelle Endpunkte: satzweise, ansonsten modal/satzweise in Abhngigkeit vom Syntax-

bestimmenden G-Befehl

4.2.3

Einstellbare Adressen

Adresstyp

Adressbe
zeichner 
(Standardein
stellung)

IC

AC

modal/
satz-
weise

G90/
G91

DC,
ACN,
ACP

PR,
PM

QU Max. 

Anzahl

Datentyp des 
zugewiesenen 
Werts

CIC,
CAC,
CDC,
CACN,
CACP

Achswerte und Endpunkte

X, Y, Z,
A, B, C

AP

RP

Achse

Polarwinkel

Polarradius

1)

m/s 1)

m/s 1)

x

x

x

x

x

x

x

x

 x

x

Werkzeugorientierung

A2, B2, C2

Eulerwinkel 
oder RPY-Win
kel

s

8

1

1

REAL

REAL

vorzeichenlos
REAL

3

REAL

1160

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.2 Adressen

Adresstyp

IC

AC

modal/
satz-
weise

G90/
G91

DC,
ACN,
ACP

PR,
PM

QU Max. 

Anzahl

Datentyp des 
zugewiesenen 
Werts

CIC,
CAC,
CDC,
CACN,
CACP

Adressbe
zeichner 
(Standardein
stellung)

A3, B3, C3 

A4, B4, C4

A5, B5, C5 

A6, B6, C6

A7, B7, C7

LEAD

THETA

TILT

ORIS

Komponenten 
des Richtungs
vektors

Komponenten 
des Flchennor
malenvektors 
am Satzanfang

Komponenten 
des Flchennor
malenvektors 
am Satzende

Komponenten 
des Richtungs
vektors fr die 
Drehachse des 
Kegels

Vektorkompo
nenten fr die 
Zwischenorien
tierung auf der 
Kegelmantelfl
che

Voreilwinkel

Drehwinkel Dre
hung um die WZ-
Richtung

Seitwrtswinkel

Orientierungs
nderung (bezo
gen auf die 
Bahn)

Interpolationsparameter

I, J, K

I1, J1, K1

RPL

CR

AR

TURN

Interpolations
parameter
Zwischenpunkt
koordinate

Drehung in der 
Ebene

Kreisradius

ffnungswinkel

Windungsan
zahl fr Schrau
benlinie

s

s

s

s

s

m

m

m

m

s

s

s

s

s

s

3

3

REAL

REAL 

3

REAL

3

REAL

3

REAL

1

1

1

1

REAL

REAL

REAL

REAL

x

x

x 2)

x 2)

3

REAL

x

x

x

3

1

1

1

1

REAL

REAL

vorzeichenlos
REAL

vorzeichenlos
REAL

vorzeichenlos
INT

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1161

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.2 Adressen

Adresstyp

Adressbe
zeichner 
(Standardein
stellung)

IC

AC

modal/
satz-
weise

G90/
G91

DC,
ACN,
ACP

PR,
PM

QU Max. 

Anzahl

Datentyp des 
zugewiesenen 
Werts

CIC,
CAC,
CDC,
CACN,
CACP

PL

PW

SD

TU

STAT

SF

DISCL

DISR

DISPR

ALF

DILF

FP

s

s

m

s

m

m

s

s

s

m

m

s

Parameter Inter
vall-Lnge

Punkt-Gewicht

Spline-Grad

Achswinkel

Stellung der Ge
lenke

Startpunktver
satz fr Gewin
deschneiden

Sicherheitsab
stand WAB

Repos-Ab
stand / WAB-Ab
stand

Repos-Bahndif
ferenz

Schnellabhebe-
Winkel

Schnellabhebe-
Lnge

Festpunkt: Num
mer des anzu
fahrenden Fest
punkts

RNDM

Rundung modal

m

s

s

s

s

m

m

Rundung satz
weise

Fase satzweise

Fase in ur
sprnglicher Be
wegungsrich
tung

Konturzug-Win
kel

Eintauchtiefe

berhhung 
bergangskreis 
Werkzeugradi
uskorrektur

RND

CHF

CHR

ANG

ISD

DISC

1162

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1

vorzeichenlos
REAL

vorzeichenlos
REAL

vorzeichenlos
INT

vorzeichenlos
INT

vorzeichenlos
INT

REAL

vorzeichenlos
REAL

vorzeichenlos
REAL

vorzeichenlos
REAL

vorzeichenlos
INT

REAL

vorzeichenlos
INT

vorzeichenlos
REAL

vorzeichenlos
REAL

vorzeichenlos
REAL

vorzeichenlos
REAL

REAL

REAL

vorzeichenlos
REAL

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Adresstyp

Adressbe
zeichner 
(Standardein
stellung)

IC

AC

modal/
satz-
weise

G90/
G91

DC,
ACN,
ACP

PR,
PM

QU Max. 

Anzahl

Datentyp des 
zugewiesenen 
Werts

CIC,
CAC,
CDC,
CACN,
CACP

Tabellen

4.2 Adressen

1

1

1

1

1

1

1

1

REAL

REAL

REAL

vorzeichenlos
REAL

vorzeichenlos
REAL

vorzeichenlos
INT

vorzeichenlos
INT

vorzeichenlos
REAL

OFFN

DITS

DITE

Offset Kontur - 
normal

Gewindeein
laufweg

Gewindeaus
laufweg

berschleifkriterien

ADIS

ADISPOS

berschleifab
stand

berschleifab
stand fr Eilgang

Messen

MEAS

MEAW

Messen mit 
schaltendem 
Taster

Messen mit 
schaltendem 
Taster ohne 
Restweglschen

Achs-, Spindelverhalten

LIMS

COARSEA

FINEA

IPOENDA

DIACYCOFA

DIAM90A

Spindeldreh
zahlbegrenzung

Satzwechsel
verhalten: Ge
nauhalt grob axi
al

Satzwechsel
verhalten: Ge
nauhalt fein axial

Satzwechsel
verhalten: Inter
polator-Stopp 
axial

Planachse:
axiale Durch
messerpro
grammierung 
AUS in Zyklen

Planachse: axia
le Durchmesser
programmie
rung bei G90

m

m

m

m

m

s

s

m

m

m

m

m

m

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1163

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.2 Adressen

Adressbe
zeichner 
(Standardein
stellung)

DIAMCHAN

Adresstyp

IC

AC

modal/
satz-
weise

G90/
G91

DC,
ACN,
ACP

PR,
PM

QU Max. 

Anzahl

Datentyp des 
zugewiesenen 
Werts

CIC,
CAC,
CDC,
CACN,
CACP

m

Planachse:
bernahme al
ler Planachsen 
in den Kanalzu
stand der Durch
messerpro
grammierung

DIAMCHANA Planachse: 

m

bernahme Ka
nalzustand der 
Durchmesser
programmierung

Planachse: axia
le Durchmesser
programmie
rung AUS

Planachse: axia
le Durchmesser
programmie
rung EIN

Position: Indirek
te Programmie
rung von Positi
onsattributen

Geschwindigkeit 
der langsamen 
Zustellbewe
gung

Bahnvorschub 
fr Handrad
berlagerung

Vorschub fr Ra
dius und Fase

Vorschub fr Ra
dius und Fase 
modal

Satzweiser Vor
schub

DIAMOFA

DIAMONA

GP

Vorschbe

FAD

FD

FRC

FRCM

FB

Nibbeln / Stanzen

Anzahl der Teil
strecken pro 
Satz

Lnge einer Teil
strecke

SPN

SPP

1164

m

m

m

s

s

s

m

s

s

m

x

1

1

1

1

1

1

1

vorzeichenlos
REAL

vorzeichenlos
REAL

vorzeichenlos
REAL

vorzeichenlos
REAL

vorzeichenlos
REAL

INT

REAL

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Adresstyp

Adressbe
zeichner 
(Standardein
stellung)

IC

AC

modal/
satz-
weise

G90/
G91

DC,
ACN,
ACP

PR,
PM

QU Max. 

Anzahl

Datentyp des 
zugewiesenen 
Werts

CIC,
CAC,
CDC,
CACN,
CACP

Tabellen

4.2 Adressen

x

x

x

x

x

x

x

x

x

x

x

x

x

x

x

Schleifen

ST

SR

Ausfeuerzeit

Rckzugsweg

s

s

Werkzeuganwahl

TCARR

Werkzeugtrger

m

Werkzeugverwaltung

DL

Werkzeugsum
menkorrektur

OEM Adressen

OMA1

OMA2

OMA3

OMA4

OMA5

Sonstiges

CUTMOD

CUTMODK

TOFF

OEM-Adresse 1

OEM-Adresse 2

OEM-Adresse 3

OEM-Adresse 4

OEM-Adresse 5

Modifikation der 
Korrekturdaten 
bei drehbaren 
Werkzeugen (in 
Verbindung mit 
orientierbaren 
Werkzeugtr
gern)

Modifikation der 
Korrekturdaten 
bei drehbaren 
Werkzeugen (in 
Verbindung mit 
Orientierungs
transformatione, 
die mittels kine
matischer Ket
ten definiert wur
den)

Werkzeugln
gen-Offset paral
lel zur angege
benen Geomet
rieachse

m

m

m

m

m

m

m

m

m

1

1

1

1

1

1

1

1

1

vorzeichenlos
REAL

vorzeichenlos
REAL

INT

INT

REAL

REAL

REAL

REAL

REAL

INT

STRING

REAL

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1165

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.2 Adressen

Adressbe
zeichner 
(Standardein
stellung)

TOFFL

TOFFR

TOFFLR

Adresstyp

IC

AC

modal/
satz-
weise

G90/
G91

DC,
ACN,
ACP

PR,
PM

QU Max. 

Anzahl

Datentyp des 
zugewiesenen 
Werts

CIC,
CAC,
CDC,
CACN,
CACP

m

m

m

Werkzeugln
gen-Offset in 
Richtung der 
WZ-Lngen
komponente
L1, L2 bzw. L3

Werkzeugradi
us-Offset

Simultaner 
Werkzeugln
gen- und Werk
zeugradius-Off
set

REAL

REAL

REAL

1) absolute Endpunkte: modal, inkrementelle Endpunkte: satzweise, ansonsten modal/satzweise in Abhngigkeit vom 

syntaxbestimmenden G-Befehl

2) Als Kreismittelpunkte wirken IPO-Parameter inkrementell. Mit AC knnen sie absolut programmiert werden. Bei anderen 

Bedeutungen (z. B. Gewindesteigung) wird die Adressmodifikation ignoriert.

1166

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.3 G-Befehle

4.3

G-Befehle

4.3.1

G-Befehle

G-Befehle sind in G-Gruppen eingeteilt. In Teileprogrammen oder Synchronaktionen kann in 
einem Satz nur ein G-Befehl einer G-Gruppe geschrieben werden. Eine G-Befehl kann modal 
wirksam oder satzweise wirksam sein. 

Modal: bis zur Programmierung eines anderen G-Befehles derselben G-Gruppe.

4.3.2

G-Gruppe 1: Modal wirksame Bewegungsbefehle

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

SAG

MH

x

G0

G1

G2

G3

CIP

ASPLINE

BSPLINE

CSPLINE

POLY

G33

G331

G332

OEMIPO1

OEMIPO2

CT

G34

G35

INVCW

INVCCW

G335

G336

1

2

3

4

5

6

7

8

9

10

11

12

13

14

15

16

17

18

19

20

21

Eilgangsbewegung

Linearinterpolation (Geradeninterpolation)

Kreisinterpolation im Uhrzeigersinn

Kreisinterpolation gegen Uhrzeigersinn

Kreisinterpolation ber Zwischenpunkt

Akima-Spline

B-Spline

Kubischer Spline

Polynom-Interpolation

Gewindeschneiden mit konstanter Steigung

Gewindebohren

Rckzug (Gewindebohren)

reserviert

reserviert

Kreis mit tangentialem bergang

Gewindeschneiden mit linear zunehmender Steigung

Gewindeschneiden mit linear abnehmender Steigung

Evolventen-Interpolation im Uhrzeigersinn

Evolventen-Interpolation gegen den Uhrzeigersinn

Drehen eines balligen Gewindes im Uhrzeigersinn

Drehen eines balligen Gewindes gegen den Uhrzeiger
sinn

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

m

m

m

m

m

m

m

m

m

m

m

m

m

m

m

m

m

m

m

m

m

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1167

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.3 G-Befehle

4.3.3

G-Gruppe 2: Satzweise wirksame Bewegungen, Verweilzeit

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

SAG

MH

G4

G63

G74

G75

REPOSL

REPOSQ

REPOSH

REPOSA

REPOSQA

REPOSHA

G147

G247

G347

G148

G248

G348

G5

G7

1

2

3

4

5

6

7

8

9

10

11

12

13

14

15

16

17

18

Verweilzeit, zeitlich vorbestimmt

Gewindebohren ohne Synchronisation

Referenzpunktfahren mit Synchronisation

Festpunkt anfahren

Wiederanfahren an die Kontur linear

Wiederanfahren an die Kontur im Viertelkreis

Wiederanfahren an die Kontur im Halbkreis

Wiederanfahren an die Kontur linear mit allen Achsen

Wiederanfahren an die Kontur mit allen Achsen, Geo
metrieachsen im Viertelkreis

Wiederanfahren an die Kontur mit allen Achsen, Geo
metrieachsen im Halbkreis

Anfahren der Kontur mit Gerade

Anfahren der Kontur mit Viertelkreis

Anfahren der Kontur mit Halbkreis

Verlassen der Kontur mit Gerade

Verlassen der Kontur mit Viertelkreis

Verlassen der Kontur mit Halbkreis

Schrgeinstechschleifen

Ausgleichsbewegung beim Schrgeinstechschleifen

-

-

-

-

-

-

-

-

-

-

-

-

-

-

-

-

-

-

s

s

s

s

s

s

s

s

s

s

s

s

s

s

s

s

s

s

4.3.4

G-Gruppe 3: Programmierbarer Frame, Arbeitsfeldbegrenzung und 
Polprogrammierung

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

SAG

MH

TRANS

ROT

SCALE

MIRROR

ATRANS

AROT

ASCALE

AMIRROR

-

G25

1168

1

2

3

4

5

6

7

8

9

TRANSLATION: programmierbare Verschiebung

ROTATION: programmierbare Drehung

SCALE: programmierbare Skalierung

MIRROR: programmierbare Spiegelung

Additive TRANSLATION: additive programmierbare 
Verschiebung

Additive ROTATION: programmierbare Drehung

Additive SCALE: programmierbare Skalierung

Additive MIRROR: programmierbare Spiegelung

frei

10

Minimale Arbeitsfeldbegrenzung/Spindeldrehzahlbe
grenzung

-

-

-

-

-

-

-

-

-

-

s

s

s

s

s

s

s

s

-

s

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.3 G-Befehle

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

SAG

MH

G26

G110

G111

G112

G58

G59

ROTS

AROTS

11

12

13

14

15

16

17

18

Maximale Arbeitsfeldbegrenzung/Spindeldrehzahlbe
grenzung

Polprogrammierung relativ zur letzten programmierten 
Sollposition

Polprogrammierung relativ zum Nullpunkt des aktuel
len Werkstckkoordinatensystems

Polprogrammierung relativ zum letzten gltigen Pol

Absolute programmierbare Nullpunktverschiebung

Additive programmierbare Nullpunktverschiebung

Rotation mit Raumwinkel

Additive Rotation mit Raumwinkel

-

-

-

-

-

-

-

-

s

s

s

s

s

s

s

s

4.3.5

G-Gruppe 4: FIFO

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

STARTFIFO

STOPFIFO

1

2

Start FIFO
Abarbeiten und parallel dazu Auffllen des Vorlaufpuf
fers

Stopp FIFO,
Anhalten der Bearbeitung; Fllen des Vorlaufspeichers 
bis STARTFIFO erkannt wird, Vorlaufspeicher voll 
oder Programmende

FIFOCTRL

3

Einschalten der automatischen Vorlaufpuffersteuerung

+

+

+

m

m

m

SAG

MH

x

4.3.6

G-Gruppe 6: Ebenenanwahl

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

G17

G18

G19

1

2

3

Ebenenanwahl 1. - 2. Geometrieachse

Ebenenanwahl 3. - 1. Geometrieachse

Ebenenanwahl 2. - 3. Geometrieachse

+

+

+

m

m

m

SAG

MH

x

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1169

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.3 G-Befehle

4.3.7

G-Gruppe 7: Werkzeugradiuskorrektur

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

G40

G41

G42

1

2

3

Keine Werkzeugradiuskorrektur

Werkzeugradiuskorrektur links von der Kontur

Werkzeugradiuskorrektur rechts von der Kontur

+

-

-

m

m

m

SAG

MH

x

4.3.8

G-Gruppe 8: Einstellbare Nullpunktverschiebung

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

G500

G54

G55

G56

G57

G505

...

G599

1

2

3

4

5

6

Ausschalten der einstellbaren Nullpunktverschiebung 
(G54 ... G57, G505 ... G599)

1. einstellbare Nullpunktverschiebung

2. einstellbare Nullpunktverschiebung

3. einstellbare Nullpunktverschiebung

4. einstellbare Nullpunktverschiebung

5. einstellbare Nullpunktverschiebung

...

...

100

99. einstellbare Nullpunktverschiebung

+

+

+

+

+

+

+

+

m

m

m

m

m

m

m

m

SAG

MH

x

Mit den G-Befehlen dieser G-Gruppe wird jeweils ein einstellbarer Anwender-Frame $P_UIFR[ ] aktiviert. 
G54 entspricht Frame $P_UIFR[1], G505 entspricht Frame $P_UIFR[5]. 
Die Anzahl der einstellbaren Anwender-Frames und damit die Anzahl von G-Befehle dieser G-Gruppe, ist einstellbar ber 
MD28080 $MC_MM_NUM_USER_FRAMES.

4.3.9

G-Gruppe 9: Frame- und Werkzeugkorrektur-Unterdrckung

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

SAG

MH

G53

SUPA

G153

SUPD

1170

1

2

3

4

Unterdrckung der aktuellen Frames:
programmierbares Frame einschlielich
Systemframe fr TOROT und TOFRAME und
aktives einstellbares Frame (G54 ... G57, G505 ... 
G599)

Wie G153 inklusive der Unterdrckung der
Systemframes fr Istwersetzen, Ankratzen, externe 
Nullpunktverschiebung, PAROT einschlielich Hand
radverschiebungen (DRF), [externe Nullpunktverschie
bung], berlagerte Bewegung

Wie G53 inklusive der Unterdrckung aller kanalspezi
fischen und/oder NCU-globalen Basisframes

Unterdrckung der aktiven Werkzeugkorrekturen

-

-

-

-

s

s

s

s

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.3 G-Befehle

4.3.10

G-Gruppe 10: Genauhalt - Bahnsteuerbetrieb

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

SAG

MH

x

G60

G64

G641

G642

G643

G644

G645

1

2

3

4

5

6

7

Genauhalt

Bahnsteuerbetrieb

Bahnsteuerbetrieb mit berschleifen nach Wegkriteri
um (= programmierbarer berschleifabstand)

Bahnsteuerbetrieb mit berschleifen unter Einhaltung 
definierter Toleranzen

Bahnsteuerbetrieb mit berschleifen unter Einhaltung 
definierter Toleranzen (satzintern)

Bahnsteuerbetrieb mit berschleifen mit maximal mg
licher Dynamik

Bahnsteuerbetrieb mit berschleifen von Ecken und 
tangentialer Satzbergnge unter Einhaltung definier
ter Toleranzen

+

+

+

+

+

+

+

m

m

m

m

m

m

m

4.3.11

G-Gruppe 11: Genauhalt satzweise

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

SAG

MH

G9

1

Genauhalt

-

s

4.3.12

G-Gruppe 12: Satzwechselkriterien bei Genauhalt (G60/G9)

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

G601

G602

G603

1

2

3

Satzwechsel bei Genauhalt fein

Satzwechsel bei Genauhalt grob

Satzwechsel bei IPO-Satzende

SAG

MH

x

+

+

+

m

m

m

4.3.13

G-Gruppe 13: Werkstckvermaung Inch/metrisch

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

SAG

MH

G70

G71

1

2

Eingabesystem inch (Lngen)

Eingabesystem metrisch mm (Lngen)

+

+

m

m

x

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1171

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.3 G-Befehle

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

SAG

MH

G700

G710

3

4

Eingabesystem inch, inch/min
(Lngen + Geschwindigkeit + Systemvariable)

Eingabesystem metrisch mm, mm/min
(Lngen + Geschwindigkeit + Systemvariable)

+

+

m

m

4.3.14

G-Gruppe 14: Werkstckvermaung absolut/inkremental

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

G90

G91

1

2

Absolutmaangabe

Kettenmaangabe

SAG

MH

x

+

+

m

m

4.3.15

G-Gruppe 15: Vorschubtyp

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

G93

G94

G95

G96

G97

G931

G961

G971

G942

G952

G962

G972

G973

1172

SAG

MH

x

1

2

3

4

5

6

7

8

9

10

11

12

13

Zeitreziproker Vorschub 1/min

Linearvorschub in mm/min, inch/min

Umdrehungsvorschub in mm/U, inch/U

Umdrehungsvorschub (wie bei G95) und konstante 
Schnittgeschwindigkeit

Umdrehungsvorschub und konstante Spindeldrehzahl 
(konstante Schnittgeschwindigkeit AUS)

Vorschubvorgabe durch Verfahrzeit, konstante Bahn
geschwindigkeit ausschalten

Linearvorschub (wie bei G94) und konstante Schnitt
geschwindigkeit

Linearvorschub und konstante Spindeldrehzahl (kon
stante Schnittgeschwindigkeit AUS)

Linearvorschub und konstante Schnittgeschwindigkeit 
oder konstante Spindeldrehzahl

Umdrehungsvorschub und konstante Schnittgeschwin
digkeit oder konstante Spindeldrehzahl

Linearvorschub oder Umdrehungsvorschub und kon
stante Schnittgeschwindigkeit

Linearvorschub oder Umdrehungsvorschub und kon
stante Spindeldrehzahl (konstante Schnittgeschwin
digkeit AUS)

Umdrehungsvorschub ohne Spindeldrehzahlbegren
zung und konstante Spindeldrehzahl (G97 ohne LIMS 
fr ISO-Modus)

+

+

+

+

+

+

+

+

+

+

+

+

+

m

m

m

m

m

m

m

m

m

m

m

m

m

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.3 G-Befehle

4.3.16

G-Gruppe 16: Vorschub-Override an Innen- und Auenkrmmung

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

CFC

CFTCP

CFIN

1

2

3

Konstanter Vorschub an der Kontur wirksam bei Innen- 
und Auenkrmmung

Konstanter Vorschub in Werkzeugschneidenbezugs
punkt (Mittelpunktsbahn)

Konstanter Vorschub bei Innenkrmmung, Beschleu
nigung bei Auenkrmmung

+

+

+

m

m

m

SAG

MH

x

4.3.17

G-Gruppe 17: An-/Abfahrverhalten Werkzeugkorrektur

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

NORM

KONT

KONTT

KONTC

1

2

3

4

Normalenstellung im Anfangs-/Endpunkt

Kontur umfahren im Anfangs-/Endpunkt

Tangentenstetiges An-/Abfahren

Krmmungsstetiges An-/Abfahren

+

+

+

+

m

m

m

m

SAG

MH

x

4.3.18

G-Gruppe 18: Eckenverhalten Werkzeugkorrektur

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

G450

G451

1

2

bergangskreis
(Werkzeug umfhrt Werkstckecken auf einer Kreis
bahn)

Schnittpunkt der quidistanten
(Werkzeug schneidet in der Werkstckecke frei)

+

+

m

m

SAG

MH

x

4.3.19

G-Gruppe 19: Kurvenbergang bei Spline-Beginn

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

BNAT

BTAN

BAUTO

1

2

3

Natrlicher Kurvenbergang zum ersten Spline-Satz

Tangentialer Kurvenbergang zum ersten Spline-Satz

Festlegung des ersten Spline-Abschnitts durch die fol
genden 3 Punkte

+

+

+

m

m

m

SAG

MH

x

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1173

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.3 G-Befehle

4.3.20

G-Gruppe 20: Kurvenbergang bei Spline-Ende

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

ENAT

ETAN

EAUTO

1

2

3

Natrlicher Kurvenbergang zum nchsten Verfahr
satz

Tangentialer Kurvenbergang zum nchsten Verfahr
satz

Festlegung des letzten Spline-Abschnitts durch die 
letzten 3 Punkte

+

+

+

m

m

m

SAG

MH

x

4.3.21

G-Gruppe 21: Beschleunigungsprofil

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

BRISK

SOFT

DRIVE

1

2

3

Sprungfrmige Bahnbeschleunigung

Rckbegrenzte Bahnbeschleunigung

Geschwindigkeitsabhngige Bahnbeschleunigung

+

+

+

m

m

m

SAG

MH

x

4.3.22

G-Gruppe 22: Werkzeugkorrekturtyp

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

CUT2D

CUT2DF

CUT3DC 

CUT3DF 

CUT3DFS 

CUT3DFF 

CUT3DCC 

CUT3DCCD 

1174

SAG

MH

x

1

2

3

4

5

6

7

8

2-D-WRK

2-D-WRK, relativ zum aktuellen Frame (schrge 
Ebene)

3D-WRK fr das Umfangsfrsen

3D-WRK fr das Stirnfrsen mit Orientierungsnde
rung

3D-WRK fr das Stirnfrsen mit konstanter Orientie
rung. Die Werkzeugorientierung ist durch G17 - G19 
festgelegt und wird durch Frames nicht beeinflusst.

3D-WRK fr das Stirnfrsen mit konstanter Orientie
rung. Die Werkzeugorientierung ist die durch G17 -
 G19 festgelegte und gegebenenfalls durch einen 
Frame gedrehte Richtung.

3D-WRK fr das Umfangsfrsen unter Bercksichti
gung einer Begrenzungsflche mit 3D-Radiuskorrek
tur: Kontur an der Bearbeitungsflche

3D-WRK fr das Umfangsfrsen unter Bercksichti
gung einer Begrenzungsflche mit Differenzwerkzeug 
auf der Werkzeugmittelpunktbahn: Zustellung zur Be
grenzungsflche

+

+

+

+

+

+

+

+

m

m

m

m

m

m

m

m

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.3 G-Befehle

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

SAG

MH

CUT2DD

CUT2DFD

CUT3DCD

CUT3DFD

9

10

11

12

Auf ein Differenzwerkzeug bezogene 2-D-WRK

Auf ein Differenzwerkzeug bezogene 2-D-WRK, re
lativ zum aktuellen Frame (schrge Ebene)

Auf ein Differenzwerkzeug bezogene 3D-WRK fr das 
Umfangsfrsen

Auf ein Differenzwerkzeug bezogene 3D-WRK fr das 
Stirnfrsen mit Orientierungsnderung

+

+

+

+

m

m

m

m

4.3.23

G-Gruppe 23: Kollisionsberwachung an Innenkonturen

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

CDOF

CDON

CDOF2

1

2

3

Kollisionsberwachung AUS

Kollisionsberwachung EIN

Kollisionsberwachung AUS beim 3D-Umfangsfrsen

+

+

+

m

m

m

SAG

MH

x

4.3.24

G-Gruppe 24: Vorsteuerung

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

FFWOF

FFWON

1

2

Vorsteuerung AUS

Vorsteuerung EIN

SAG

MH

x

+

+

m

m

4.3.25

G-Gruppe 25: Bezug Werkzeugorientierung

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

ORIWKS 

ORIMKS 

1

2

Werkzeugorientierung im Werkstck-Koordinatensys
tem (WKS)

Werkzeugorientierung im Maschinen-Koordinatensys
tem (MKS)

+

+

m

m

SAG

MH

x

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1175

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.3 G-Befehle

4.3.26

G-Gruppe 26: Wiederanfahrmodus fr REPOS (modal wirksam)

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

RMB

RMI

RME

RMN

1

2

3

4

Wiederanfahren an Satzanfangspunkt

Wiederanfahren an Unterbrechungspunkt

Wiederanfahren an Satzendpunkt

Wiederanfahren an nchstliegenden Bahnpunkt

-

-

-

-

m

m

m

m

SAG

MH

x

4.3.27

G-Gruppe 27: Werkzeugkorrektur bei Orientierungsnderung an Auenecken

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

ORIC 

ORID 

1

2.

Orientierungsnderungen an Auenecken werden 
dem einzufgenden Kreissatz berlagert

Orientierungsnderungen werden vor dem Kreissatz 
ausgefhrt

+

+

m

m

SAG

MH

x

4.3.28

G-Gruppe 28: Arbeitsfeldbegrenzung

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

WALIMON

WALIMOF

1

2

Arbeitsfeldbegrenzung EIN

Arbeitsfeldbegrenzung AUS

SAG

MH

x

+

+

m

m

4.3.29

G-Gruppe 29: Radius-/Durchmesserprogrammierung

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

DIAMOF

DIAMON

1176

1

2

Modal wirksame kanalspezifische Durchmesserpro
grammierung AUS

Mit dem Ausschalten wird die kanalspezifische Radiu
sprogrammierung wirksam.

Modal wirksame unabhngige kanalspezifische Durch
messerprogrammierung EIN

Die Wirkung ist unabhngig vom programmierten Ma
angabe-Modus (G90/G91).

+

+

m

m

SAG

MH

x

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.3 G-Befehle

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

SAG

MH

DIAM90

3

DIAMCYCOF

4

Modal wirksame abhngige kanalspezifische Durch
messerprogrammierung EIN

Die Wirkung ist abhngig vom programmierten Ma
angabe-Modus (G90/G91).

Modal wirksame kanalspezifische Durchmesserpro
grammierung whrend der Zyklusbearbeitung AUS

+

+

m

m

4.3.30

G-Gruppe 30: NC-Satz-Kompression

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

COMPOF

COMPCAD

COMPSURF

1

4

5

NC-Satz-Kompression AUS

Kompressor-Funktion COMPCAD EIN

Kompressor-Funktion COMPSURF EIN

+

+

+

m

m

m

SAG

MH

x

4.3.31

G-Gruppe 31: OEM-G-Befehle

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

SAG

MH

G810 

G811 

G812 

G813 

G814 

G815 

G816 

G817 

G818 

G819 

1

2

3

4

5

6

7

8

9

OEM-G-Befehl

OEM-G-Befehl

OEM-G-Befehl

OEM-G-Befehl

OEM-G-Befehl

OEM-G-Befehl

OEM-G-Befehl

OEM-G-Befehl

OEM-G-Befehl

10

OEM-G-Befehl

-

-

-

-

-

-

-

-

-

-

m

m

m

m

m

m

m

m

m

m

Zwei G-Gruppen sind fr den OEM-Anwender reserviert. Damit gibt er die Programmierung der von ihm eingebrachten 
Funktionen zur Programmierung nach auen.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1177

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.3 G-Befehle

4.3.32

G-Gruppe 32: OEM-G-Befehle

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

SAG

MH

G820 

G821 

G822 

G823 

G824 

G825 

G826 

G827 

G828 

G829 

1

2

3

4

5

6

7

8

9

OEM - G-Befehl

OEM - G-Befehl

OEM - G-Befehl

OEM - G-Befehl

OEM - G-Befehl

OEM - G-Befehl

OEM - G-Befehl

OEM - G-Befehl

OEM - G-Befehl

10

OEM - G-Befehl

-

-

-

-

-

-

-

-

-

-

m

m

m

m

m

m

m

m

m

m

Zwei G-Gruppen sind fr den OEM-Anwender reserviert. Damit gibt er die Programmierung der von ihm eingebrachten 
Funktionen zur Programmierung nach auen.

4.3.33

G-Gruppe 33: Einstellbare Werkzeugfeinkorrektur

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

FTOCOF 

FTOCON 

1

2

Online wirksame Werkzeugfeinkorrektur AUS

Online wirksame Werkzeugfeinkorrektur EIN

+

-

m

m

SAG

MH

x

4.3.34

G-Gruppe 34: Glttung Werkzeugorientierung

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

OSOF 

OSC 

OSS 

OSSE 

OSD 

OST 

1178

1

2

3

4

5

6

Glttung Werkzeugorientierung AUS

Konstante Glttung Werkzeugorientierung

Glttung Werkzeugorientierung am Satzende

Glttung Werkzeugorientierung am Satzanfang und -
ende

Satzinternes berschleifen mit Vorgabe der Weglnge

Satzinternes berschleifen mit Vorgabe der Winkelto
leranz

+

+

+

+

+

+

m

m

m

m

m

m

SAG

MH

x

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.3 G-Befehle

4.3.35

G-Gruppe 37: Vorschubprofil

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

FNORM 

FLIN 

FCUB 

1

2

3

Vorschub normal nach DIN66025

Vorschub linear vernderlich

Vorschub nach kubischem Spline vernderlich

+

+

+

m

m

m

SAG

MH

x

4.3.36

G-Gruppe 39: Programmierbare Konturgenauigkeit

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

CPRECOF

CPRECON

1

2

Programmierbare Konturgenauigkeit AUS

Programmierbare Konturgenauigkeit EIN

+

+

m

m

SAG

MH

x

4.3.37

G-Gruppe 40: Werkzeugradiuskorrektur konstant

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

CUTCONOF

CUTCONON

1

2

Konstante Werkzeugradiuskorrektur AUS

Konstante Werkzeugradiuskorrektur EIN

+

+

m

m

SAG

MH

x

4.3.38

G-Gruppe 41: Gewindeschneiden unterbrechbar

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

LFOF

LFON

1

2

Gewindeschneiden unterbrechbar AUS

Gewindeschneiden unterbrechbar EIN

+

+

m

m

SAG

MH

x

4.3.39

G-Gruppe 42: Werkzeugtrger

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

TCOABS

TCOFR

1

2

Werkzeuglngenkomponenten aus der aktuellen 
Werkzeugorientierung bestimmen

Werkzeuglngenkomponenten aus der Orientierung 
des aktiven Frames bestimmen

+

+

m

m

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

SAG

MH

x

1179

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.3 G-Befehle

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

SAG

MH

TCOFRZ

TCOFRY

TCOFRX

3

4

5

Werkzeugorientierung eines aktiven Frames bei der 
Werkzeugwahl bestimmen, Werkzeug zeigt in Z-Rich
tung

Werkzeugorientierung eines aktiven Frames bei der 
Werkzeugwahl bestimmen, Werkzeug zeigt in Y-Rich
tung

Werkzeugorientierung eines aktiven Frames bei der 
Werkzeugwahl bestimmen, Werkzeug zeigt in X-Rich
tung

+

+

m

m

m

4.3.40

G-Gruppe 43: Anfahrrichtung WAB

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

G140

G141

G142

G143

1

2

3

4

Anfahrrichtung WAB festgelegt durch G41/G42

Anfahrrichtung WAB links von der Kontur

Anfahrrichtung WAB rechts von der Kontur

Anfahrrichtung WAB tangentenabhngig

+

+

+

+

m

m

m

m

SAG

MH

x

4.3.41

G-Gruppe 44: Wegaufteilung WAB

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

G340

G341

1

2

Anfahrsatz rumlich, d. h. Tiefenzustellung und Anfah
ren in der Ebene in einem Satz

Zuerst Zustellen in der senkrechten Achse (Z), dann 
Anfahren in der Ebene

+

+

m

m

SAG

MH

x

4.3.42

G-Gruppe 45: Bahnbezug der FGROUP-Achsen

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

SPATH

UPATH

1

2

Bahnbezug fr FGROUP-Achsen ist die Bogenlnge

Bahnbezug fr FGROUP-Achsen ist der Kurvenpara
meter

+

+

m

m

SAG

MH

x

1180

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.3 G-Befehle

4.3.43

G-Gruppe 46: Ebenenanwahl fr Schnellabheben

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

LFTXT

LFWP

LFPOS

1

2

3

Ebene wird bestimmt aus der Bahntangente und der 
aktuellen Werkzeugorientierung

Ebene wird bestimmt durch die aktuelle Arbeitsebene 
(G17/G18/G19)

Axiales Abheben auf eine Position

+

+

+

m

m

m

SAG

MH

x

4.3.44

G-Gruppe 47: Modus-Umschaltung fr externen NC-Code

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

G290

G291

1

2

SINUMERIK-Sprachmodus aktivieren

ISO-Sprachmodus aktivieren

+

+

m

m

SAG

MH

x

4.3.45

G-Gruppe 48: An- / Abfahrverhalten bei Werkzeugradiuskorrektur

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

G460

G461

G462

1

2

3

Kollisionsberwachung fr An- und Abfahrsatz EIN

Randsatz mit Kreisbogen verlngern, wenn kein 
Schnittpunkt im WRK-Satz

Randsatz mit Gerade verlngern, wenn kein Schnitt
punkt im WRK-Satz

+

+

+

m

m

m

SAG

MH

x

4.3.46

G-Gruppe 49: Punkt-zu-Punkt-Bewegung

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

CP

PTP

PTPG0

PTPWOC

1

2

3

4

Bahnbewegung

Punkt-zu-Punkt-Bewegung (Synchronachsbewegung)

Punkt-zu-Punkt-Bewegung nur bei G0, sonst Bahnbe
wegung CP

Punkt-zu-Punkt-Bewegung ohne Ausgleichsbewegun
gen, die durch Orientierungsnderungen verursacht 
sind

+

+

+

+

m

m

m

m

SAG

MH

x

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1181

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.3 G-Befehle

4.3.47

G-Gruppe 50: Orientierungsprogrammierung

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

ORIEULER

ORIRPY

ORIVIRT1

ORIVIRT2

ORIAXPOS

ORIRPY2

1

2

3

4

5

6

Orientierungswinkel ber Euler-Winkel

Orientierungswinkel ber RPY-Winkel (Drehreihenfol
ge XYZ)

Orientierungswinkel ber virtuelle Orientierungsach
sen (Definition 1)

Orientierungswinkel ber virtuelle Orientierungsach
sen (Definition 2)

Orientierungswinkel ber virtuelle Orientierungsach
sen mit Rundachspositionen

Orientierungswinkel ber RPY-Winkel (Drehreihenfol
ge ZYX)

+

+

+

+

+

+

m

m

m

m

m

m

SAG

MH

x

4.3.48

G-Gruppe 51: Interpolationsart Orientierungsprogrammierung

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

SAG

MH

x

ORIVECT

ORIAXES

ORIPATH

ORIPLANE

ORICONCW

ORI
CONCCW

ORICONIO

ORICONTO

ORICURVE

1

2

3

4

5

6

7

8

9

ORIPATHS

10

Grokreisinterpolation (identisch mit ORIPLANE)

Lineare Interpolation der Maschinenachsen oder Ori
entierungsachsen

Werkzeugorientierungspfad bezogen auf die Bahn

Interpolation in der Ebene (identisch mit ORIVECT)

Interpolation auf einer Kegelmantelflche im Uhrzei
gersinn

Interpolation auf einer Kegelmantelflche gegen Uhr
zeigersinn

Interpolation auf einer Kegelmantelflche mit Angabe 
einer Zwischenorientierung

Interpolation auf einer Kegelmantelflche mit tangenti
alem bergang

Interpolation mit zustzlicher Raumkurve fr die Orien
tierung

Werkzeugorientierung bezogen auf die Bahn, Knick im 
Orientierungsverlauf wird geglttet

+

+

+

+

+

+

+

+

+

+

m

m

m

m

m

m

m

m

m

m

1182

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.3 G-Befehle

4.3.49

G-Gruppe 52: Werkstckbezogene Frame-Drehung

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

PAROTOF

PAROT

1

2

Werkstckbezogene Frame-Drehung AUS 

Werkstckbezogene Frame-Drehung EIN

+

+

m

m

Das Werkstckkoordinatensystem wird am Werkstck 
ausgerichtet.

SAG

MH

x

4.3.50

G-Gruppe 53: Werkzeugbezogene Frame-Drehung

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

SAG

MH

x

TOROTOF

TOROT

TOROTZ

TOROTY

TOROTX

TOFRAME

TOFRAMEZ

TOFRAMEY

TOFRAMEX

1

2

3

4

5

6

7

8

9

Werkzeugbezogene Frame-Drehung AUS

Z-Achse des WKS durch Frame-Drehung parallel zur 
Werkzeugorientierung ausrichten

wie TOROT

Y-Achse des WKS durch Frame-Drehung parallel zur 
Werkzeugorientierung ausrichten

X-Achse des WKS durch Frame-Drehung parallel zur 
Werkzeugorientierung ausrichten

Z-Achse des WKS durch Frame-Drehung parallel zur 
Werkzeugorientierung ausrichten

wie TOFRAME

Y-Achse des WKS durch Frame-Drehung parallel zur 
Werkzeugorientierung ausrichten

X-Achse des WKS durch Frame-Drehung parallel zur 
Werkzeugorientierung ausrichten

+

+

+

+

+

+

+

+

+

m

m

m

m

m

m

m

m

m

4.3.51

G-Gruppe 54: Vektordrehung bei Polynomprogrammierung

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

ORIROTA

ORIROTR

ORIROTT

ORIROTC

1

2

3

4

Vektordrehung absolut 

Vektordrehung relativ

Vektordrehung tangential

Tangentialer Drehvektor zur Bahntangente

+

+

+

+

m

m

m

m

SAG

MH

x

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1183

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.3 G-Befehle

4.3.52

G-Gruppe 55: Eilgangbewegung mit/ohne Linear-Interpolation

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

RTLION

RTLIOF

1

2

Eilgangbewegung mit Linear-Interpolation EIN

Eilgangbewegung mit Linear-Interpolation AUS

+

+

m

m

Die Eilgangbewegung wird mit Einzelachsinterpolation 
durchgefhrt.

SAG

MH

x

4.3.53

G-Gruppe 56: Einrechnung des Werkzeugverschleies

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

SAG

MH

x

TOWSTD

TOWMCS

TOWWCS

TOWBCS

TOWTCS

TOWKCS

1

2

3

4

5

6

Grundstellungswert fr Korrekturen in der Werkzeug
lnge

Verschleiwerte im Maschinenkoordinatensystem 
(MKS)

Verschleiwerte im Werkstckkoordinatensystem 
(WKS)

Verschleiwerte im Basiskoordinatensystem (BKS)

Verschleiwerte im Werkzeugkoordinatensystem 
(Werkzeugtrgerbezugspunkt T an der Werkzeughal
teraufnahme)

Verschleiwerte im Koordinatensystem des Werkzeug
kopfes bei kinetischer Transformation
(unterscheidet sich vom MKS durch Werzeugdrehung)

+

+

+

+

+

+

m

m

m

m

m

m

4.3.54

G-Gruppe 57: Eckenverzgerung

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

FENDNORM

G62

G621

1

2

3

Eckenverzgerung AUS

Eckenverzgerung an Innenecken bei aktiver Werk
zeugradiuskorrektur (G41/G42)

Eckenverzgerung an allen Ecken

+

+

+

m

m

m

SAG

MH

x

1184

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.3 G-Befehle

4.3.55

G-Gruppe 59: Dynamikmodus fr Bahninterpolation

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

DYNNORM

DYNPOS

DYNROUGH

DYNSEMIFIN

DYNFINISH

DYNPREC

1

2

3

4

5

6

Normale Dynamik

Positionierbetrieb, Gewindebohren

Schruppen

Vorschlichten

Schlichten

Feinschlichten

SAG

MH

x

+

+

+

+

+

+

m

m

m

m

m

m

4.3.56

G-Gruppe 60: Arbeitsfeldbegrenzung

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

SAG

MH

x

WALCS0

WALCS1

WALCS2

WALCS3

WALCS4

WALCS5

WALCS6

WALCS7

WALCS8

WALCS9

WALCS10

1

2

3

4

5

6

7

8

9

10

11

WKS-Arbeitsfeldbegrenzung AUS

WKS-Arbeitsfeldbegrenzungsgruppe 1 aktiv

WKS-Arbeitsfeldbegrenzungsgruppe 2 aktiv

WKS-Arbeitsfeldbegrenzungsgruppe 3 aktiv

WKS-Arbeitsfeldbegrenzungsgruppe 4 aktiv

WKS-Arbeitsfeldbegrenzungsgruppe 5 aktiv

WKS-Arbeitsfeldbegrenzungsgruppe 6 aktiv

WKS-Arbeitsfeldbegrenzungsgruppe 7 aktiv

WKS-Arbeitsfeldbegrenzungsgruppe 8 aktiv

WKS-Arbeitsfeldbegrenzungsgruppe 9 aktiv

WKS-Arbeitsfeldbegrenzungsgruppe 10 aktiv

+

+

+

+

+

+

+

+

+

+

+

m

m

m

m

m

m

m

m

m

m

m

4.3.57

G-Gruppe 61: Glttung Werkzeugorientierung

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

ORISOF

ORISON

1

2

Glttung Werkzeugorientierung AUS

Glttung Werkzeugorientierung EIN

+

+

m

m

SAG

MH

x

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1185

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.3 G-Befehle

4.3.58

G-Gruppe 62: Wiederanfahrmodus fr REPOS (satzweise wirksam)

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

RMBBL

RMIBL

RMEBL

RMNBL

1

2

3

4

Wiederanfahren an Satzanfangspunkt

Wiederanfahren an Unterbrechungspunkt

Wiederanfahren an Satzendpunkt

Wiederanfahren an nchstliegenden Bahnpunkt

-

-

-

-

s

s

s

s

SAG

MH

x

4.3.59

G-Gruppe 64: Schleifframes

G-Befehl

Nr. 1)

Bedeutung

MD20150 2)

W 3)

STD 4)

Aktiver Schleifframe im Kanal $P_GFRAME = 

Schleifframe der Datenhaltung $P_GFR[ 0 ] (Nullframe)

Schleifframe der Datenhaltung $P_GFR[ 1 ]

Schleifframe der Datenhaltung $P_GFR[ 2 ]

1

2

3

...

101

Schleifframe der Datenhaltung $P_GFR[ 100 ]

+

+

+

+

+

m

m

m

m

m

SAG

MH

x

GFRAME[ 0 ]

GFRAME[ 1 ]

GFRAME[ 2 ]

...

GFRA
ME[ 100 ]

1)

2)

Interne Nummer (z. B. fr PLC-Schnittstelle)

Projektierbarkeit des G-Befehls als Lschstellung der G-Gruppe bei Hochlauf, Reset bzw. Teile
programmende (mit MD20150 $MC_GCODE_RESET_VALUES):

+

-

projektierbar

nicht projektierbar

3) Wirksamkeit des G-Befehls:

m modal (satzbergreifend)

s

satzweise

4)

Lschstellung, siehe folgende Maschinendaten:

 MD20149 $MC_GCODE_RESET_S_VALUES (Lschstellung der G-Gruppen (fix) )

 MD20150 $MC_GCODE_RESET_VALUES (Lschstellung der G-Gruppen)

 MD20151 $MC_GCODE_RESET_S_MODE (Resetverhalten der G-Gruppen (fix) )

 MD20152 $MC_GCODE_RESET_MODE (Resetverhalten der G-Gruppen)

 MD20154 $MC_EXTERN_GCODE_RESET_VALUES (Lschstellung der G-Gruppen im ISO-

Mode)

 MD20156 $MC_EXTERN_GCODE_RESET_MODE (Resetverhalten der externen G-Gruppen)

SAG Standardeinstellung Siemens AG

MH

Standardeinstellung Maschinenhersteller (siehe Angaben des Maschinen-Herstellers)

1186

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

(cid:47)(cid:72)(cid:74)(cid:72)(cid:81)(cid:71)(cid:72) 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.4 Vordefinierte Prozeduren

4.4

Vordefinierte Prozeduren

Durch den Aufruf einer vordefinierten Prozedur wird die Ausfhrung einer vordefinierten NC-
Funktion angestoen. Eine vordefinierte Prozedur liefert im Unterschied zur vordefinierten 
Funktion keinen Rckgabewert zurck.   

Koordinatensystem

Bezeichner

Parameter

Erluterung

PRESETON

PRESETONS

DRFOF

1.

2.

AXIS *):
Achsbezeich
ner
Maschinen
achse

AXIS *):
Achsbezeich
ner
Maschinen
achse

REAL:
Preset-Ver
schiebung
G700/G710 
Kontext

REAL:
Preset-Ver
schiebung
G700/G710 
Kontext

3. - 15.

wie 1 ...

4. - 16.

wie 2 ...

Istwertsetzen fr die programmier
ten Achsen mit Verlust des Referen
zierstatus

wie 1 ...

wie 2 ...

Istwertsetzen fr die programmier
ten Achsen ohne Verlust des Refe
renzierstatus

DRF-Verschiebung lschen fr alle 
dem Kanal zugeordneten Achsen

*) Anstelle der Maschinenachsbezeichner knnen generell auch die Geometrie- oder Zusatzachsbezeichner stehen, sofern 
eine eindeutige Abbildung mglich ist.

Achsverbnde

Bezeichner

Parameter

GEOAX

1.

2.

INT:
Geometrie
achsnummer 
1 - 3

AXIS:
Kanalachs
bezeichner

FGROUP

1.  8.

AXIS:
Kanalachsbezeichner

Erluterung

3. / 5.

wie 1

4. / 6.

wie 2

Anwahl eines parallelen Koordinaten
systems

Variabler F-Wert-Bezug: Festlegung 
der Achsen, auf die sich der Bahn
vorschub bezieht

Maximale Achsanzahl: 8

Mit FGROUP ( ) ohne Angabe von 
Parametern wird die Standardeinstel
lung fr den F-Wert-Bezug aktiviert.

Festlegung des Spline-Verbandes

Maximale Achsanzahl: 8

SPLINEPATH

1.

2. - 9.

AXIS:
Geometrie- oder Zusatzbezeichner

INT:
Spline-Ver
band (muss 1 
sein)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1187

 
 
 
 
 
 
 
 
Tabellen

4.4 Vordefinierte Prozeduren

Achsverbnde

Bezeichner

Parameter

POLYPATH

1.

2.

STRING

STRING

Mitschleppen

Bezeichner

Parameter

TANG 

TANGON 

TANGOF 

TLIFT 

TRAILON 

TRAILOF

TANGDEL

1.

AXIS: 
Achs
name 
Folge
achse

AXIS: 
Achs
name 
Folge
achse

AXIS: 
Achs
name 
Folge
achse

AXIS: 
Nachge
fhrte 
Achse

AXIS: 
Folge
achse

AXIS: 
Folge
achse

AXIS: 
Folge
achse

2.

3.

4.

5.

6.

CHAR: 
Option: 
"B": 
Nach
fhrung 
im BKS 
"W": 
Nach
fhrung 
im WKS

CHAR 
Optimie
rung: 
"S": Stan
dard

"P": 
autom. 
mit ber
schleif
weg, 
Winkel
toleranz

AXIS : 
Leitach
se 1

AXIS: 
Leitach
se 2

REAL: 
Koppel
faktor

REAL: 
Offset
Winkel

REAL:
ber
schleif
weg

REAL:
Winkel
toleranz

REAL: 
Koppel
faktor

AXIS: 
Leitach
se

AXIS: 
Leitach
se

Erluterung

Einschalten der Polynominterpolati
on fr selektive Achsgruppen

Erluterung

Tangentialsteuerung: Kopplung de
finieren

Aus den beiden angegebenen Leit
achsen wird die Tangente fr die 
Nachfhrung bestimmt. Der Kop
pelfaktor gibt den Zusammenhang 
zwischen einer nderung des Win
kels der Tangente und der nachge
fhrten Achse an. Er ist in der Regel 
1.

Tangentialsteuerung: Kopplung 
einschalten

Tangentialsteuerung: Kopplung 
ausschalten

Tangentialsteuerung: Zwischen
satzerzeugung einschalten

Achssynchrones Mitschleppen ein
schalten

Achssynchrones Mitschleppen aus
schalten

Tangentialsteuerung: Kopplung l
schen

1188

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.4 Vordefinierte Prozeduren

Kurventabellen

Bezeichner

Parameter

Erluterung

1.

2.

3.

4.

5.

INT:
Verhalten 
an Rndern 
des Def.
Bereichs

INT:
Verhalten 
an Rndern 
des Def.
Bereichs

INT:
Tabellen
nummer

INT:
Tabellen
nummer

STRING:
Angabe 
des Spei
cherorts

CTABDEF

AXIS:
Folgeachse

AXIS:
Leitachse

CTABEND

AXIS:
Folgeachse

AXIS:
Leitachse

CTABDEL

INT:
Tabellen
nummer n

INT:
Tabellen
nummer m

CTABLOCK

INT:
Tabellen
nummer n

CTABUNLOCK INT:

LEADON

LEADOF

Tabellen
nummer n

AXIS:
Folgeachse

AXIS:
Leitachse

AXIS:
Folgeachse

AXIS:
Leitachse

INT:
Tabellen
nummer

Beschleunigungsprofil axial

Bezeichner

Parameter

BRISKA

1.  8.

AXIS

SOFTA

AXIS

DRIVEA

AXIS

JERKA

AXIS

STRING:
Angabe 
des Spei
cherorts

Tabellendefinition EIN

Die nachfolgenden Bewegungsst
ze bestimmen die Kurventabelle.

Tabellendefinition AUS

Kurventabelle lschen

Sperrt die Kurventabelle mit der 
Nummer n, d. h. diese Tabelle kann 
nicht gelscht/berschrieben wer
den.

Gibt die mit CTABLOCK geschtz
te Tabelle mit der Nummer n wieder 
frei

Leitwertkopplung EIN

Leitwertkopplung AUS

Erluterung

Sprungfrmige Achsbeschleunigung 
fr die programmierten Achsen ein
schalten

Ruckbegrenzte Achsbeschleuni
gung fr die programmierten Achsen 
einschalten

Geknickte Beschleunigungskennli
nie fr die programmierten Achsen 
einschalten

Das ber Maschinendatum 
$MA_AX_JERK_ENABLE eingestell
te Beschleunigungsverhalten wirkt 
fr die programmierten Achsen.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1189

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.4 Vordefinierte Prozeduren

Umdrehungsvorschub

Bezeichner

Parameter

Erluterung

FPRAON

1.

2.

Umdrehungsvorschub axial EIN

AXIS:
Achse, fr die Umdrehungsvor
schub eingeschaltet wird

AXIS:
Achse/Spindel, von der Umdre
hungsvorschub abgeleitet 
wird. 
Ist keine Achse programmiert, 
so wird der Umdrehungsvor
schub von der Masterspindel 
abgeleitet.

FPRAOF

1. - n.

AXIS:
Achsen, fr die Umdrehungsvorschub ausgeschaltet wird

FPR

1.

AXIS:
Achse/Spindel, von der Umdre
hungsvorschub abgeleitet 
wird. 
Ist keine Achse programmiert, 
so wird der Umdrehungsvor
schub von der Masterspindel 
abgeleitet.

Umdrehungsvorschub axial AUS

Der Umdrehungsvorschub kann fr 
mehrere Achsen gleichzeitig ausge
schaltet werden. Es knnen so viele 
Achsen programmiert werden, wie 
maximal pro Satz zulssig sind.

Auswahl einer Rundachse/Spindel, 
von der der Umdrehungsvorschub 
der Bahn bei G95 abgeleitet wird.

Die mit FPR getroffene Einstellung 
gilt modal.

Transformationen

Bezeichner

Parameter

Erluterung

TRACYL

TRANSMIT

1.

2.

3.

REAL:
Arbeitsdurch
messer

INT:
Nummer der 
Transformati
on

INT:
Nummer der 
Transformati
on

Zylinder: Mantelflchen-Transformation

Pro Kanal knnen mehrere Transformationen einge
stellt werden. Die Transformationsnummer gibt an, 
welche Transformation aktiviert werden soll. Entfllt 
der 2. Parameter, so wird der ber MD eingestellte 
Transformationsverband aktiviert.

Transmit: Polar-Transformation

Pro Kanal knnen mehrere Transformationen einge
stellt werden. Die Transformationsnummer gibt an, 
welche Transformation aktiviert werden soll. Entfllt 
der Parameter, so wird der ber MD eingestellte 
Transformationsverband aktiviert.

1190

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
Tabellen

4.4 Vordefinierte Prozeduren

Erluterung

Transformation schrge Achse

Pro Kanal knnen mehrere Transformationen einge
stellt werden. Die Transformationsnummer gibt an, 
welche Transformation aktiviert werden soll. Entfllt 
der 2. Parameter, so wird der ber MD eingestellte 
Transformationsverband aktiviert. 
Wird der Winkel nicht programmiert
(TRAANG ( ,2) oder TRAANG)
so ist der letzte Winkel modal wirksam.

4-, 5-Achs-Transformation

Pro Kanal knnen mehrere Transformationen einge
stellt werden. Die Transformationsnummer gibt an, 
welche Transformation aktiviert werden soll.

Kaskadierte Transformation

Die Bedeutung der Parameter hngt von der Art der 
Kaskadierung ab.

Transformation ausschalten

Mit kinematischen Ketten definierte Transformation 
einschalten

Transformationen

Bezeichner

Parameter

TRAANG 

1.

REAL:
Winkel

2.

3.

INT:
Nummer der 
Transformati
on

INT:
Nummer der 
Transformati
on

INT:
Nummer der 
Transformati
on

REAL: weitere 
Parameter 
MD-abh.

STRING:
Name des 
Transformati
onsdatensat
zes

REAL:
Bezugs- bzw. 
Arbeitsdurch
messer
(nur TRACYL)

BOOL:
mit/ohne Nut
wandkorrektur
(nur TRACYL)

TRAORI 

TRACON

TRAFOOF

TRAFOON

Spindel

Bezeichner

Parameter

Erluterung

SPCON

SPCOF

SETMS

1

INT:
Spindelnummer

INT:
Spindelnummer

INT:
Spindelnummer

2. - n.

INT:
Spindelnummer

INT:
Spindelnummer

Umschalten in den lagegeregelten Spindelbetrieb

Umschalten in den drehzahlgeregelten Spindelbetrieb

Deklaration der Spindel als Master-Spindel fr den 
aktuellen Kanal

Mit SETMS( ) ohne Angabe von Parametern wird die 
ber Maschinendaten getroffene Voreinstellung wirk
sam.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1191

 
 
 
 
 
 
Tabellen

4.4 Vordefinierte Prozeduren

Schleifen

Bezeichner

GWPSON

GWPSOF

TMON

TMOF

Parameter

1.

INT:
Spindelnummer

INT:
Spindelnummer

INT:
T-Nummer

INT:
T-Nummer

Erluterung

Konstante Scheibenumfangsgeschwindigkeit EIN

Wird die Spindelnummer nicht programmiert, so wird fr die Spindel 
des aktiven Werkzeugs Scheibenumfangsgeschwindigkeit angewhlt.

Konstante Scheibenumfangsgeschwindigkeit AUS

Wird die Spindelnummer nicht programmiert, so wird fr die Spindel 
des aktiven Werkzeugs Scheibenumfangsgeschwindigkeit abgewhlt.

Schleifspezifische Werkzeugberwachung EIN

Wird keine T-Nummer programmiert, so wird die berwachung fr das 
aktive Werkzeug eingeschaltet.

Werkzeugberwachung AUS

Wird keine T-Nummer programmiert, so wird die berwachung fr das 
aktive Werkzeug ausgeschaltet.

Abspanen

Bezeichner

Parameter

1.

2.

3.

4.

CONTPRON

REAL [ ,11]:
Konturtabelle

CHAR: Bear
beitungsart

INT:
Anzahl der 
Hinterschnitte

INT:
Status der Be
rechnung

CONTDCON

REAL [ , 6]: 
Konturtabelle

INT: 
Bearbeitungs
richtung

EXECUTE

INT: Fehler
status

Erluterung

Referenzaufbereitung einschalten

Die im Folgenden aufgerufenen Kon
turprogramme bzw. NC-Stze wer
den in einzelne Bewegungen aufge
teilt und in der Konturtabelle abge
legt.

Die Anzahl der Hinterschnitte wird 
zurckgeliefert.

Konturdecodierung

Die Stze einer Kontur werden mit 
einer Tabellenzeile je Satz speicher
gnstig codiert in einer benannten 
Tabelle gespeichert.

Programmausfhrung einschalten

Damit wird aus dem Referenzaufbe
reitungsmodus oder nach Aufbau ei
nes Schutzbereichs zur normalen 
Programmbearbeitung zurckge
schaltet.

1192

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
Tabellen

4.4 Vordefinierte Prozeduren

Tabelle abarbeiten

Bezeichner

Parameter

Erluterung

EXECTAB

1.

REAL [ 11]:
Element aus Bewegungsta
belle

Schutzbereiche

Bezeichner

Parameter

CPROTDEF

1.

2.

INT:
Nummer des 
Schutzbe
reichs

BOOL: 
TRUE: 
Werkzeugori
entierter 
Schutzbereich

NPROTDEF

INT:
Nummer des 
Schutzbe
reichs

BOOL: 
TRUE: 
Werkzeugori
entierter 
Schutzbereich

Ein Element aus einer Bewegungstabelle abarbeiten

4.

5.

REAL: Be
grenzung in 
Plus-Richtung

REAL: Be
grenzung in 
Minus-Rich
tung

Erluterung

Definition eines Kanal-
spezifischen Schutz
bereichs

REAL: Be
grenzung in 
Plus-Richtung

REAL: Be
grenzung in 
Minus-Rich
tung

Definition eines Ma
schinen-spezifischen 
Schutzbereichs

3.

INT:

0:
4. und 5. Para
meter werden 
nicht ausge
wertet

1:
4. Parameter 
wird ausge
wertet

2:
5. Parameter 
wird ausge
wertet

3:
4. und 5. Para
meter werden 
ausgewertet

INT:

0:
4. und 5. Para
meter werden 
nicht ausge
wertet

1:
4. Parameter 
wird ausge
wertet

2:
5. Parameter 
wird ausge
wertet

3:
4. und 5. Para
meter werden 
ausgewertet

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1193

Tabellen

4.4 Vordefinierte Prozeduren

Schutzbereiche

Bezeichner

Parameter

1.

2.

3.

4.

5.

Erluterung

Kanal-spezifischen 
Schutzbereich 
EIN/AUS

REAL: Ver
schiebung 
des Schutz
bereichs in 
der ersten Ge
ometrieachse

REAL: Ver
schiebung 
des Schutz
bereichs in 
der zweiten 
Geometrie
achse

REAL: Ver
schiebung 
des Schutz
bereichs in 
der dritten Ge
ometrieachse

CPROT

INT:
Nummer des 
Schutzbe
reichs

NPROT

INT:
Nummer des 
Schutzbe
reichs

INT: Option

0: Schutzbe
reich aus

1: Schutzbe
reich vorakti
vieren

2: Schutzbe
reich ein

3: Schutzbe
reich vorakti
vieren mit be
dingtem 
Stopp, nur bei 
aktiven 
Schutz-berei
chen

INT: Option

0: Schutzbe
reich aus

1: Schutzbe
reich vorakti
vieren

2: Schutzbe
reich ein

3: Schutzbe
reich vorakti
vieren mit be
dingtem 
Stopp, nur bei 
aktiven 
Schutz-berei
chen

REAL: Ver
schiebung 
des Schutz
bereichs in 
der ersten Ge
ometrieachse

REAL: Ver
schiebung 
des Schutz
bereichs in 
der zweiten 
Geometrie
achse

REAL: Ver
schiebung 
des Schutz
bereichs in 
der dritten Ge
ometrieachse

Maschinen-spezifi
schen Schutzbereich 
EIN/AUS

Vorlauf / Einzelsatz

Bezeichner

Parameter

STOPRE

SBLOF

SBLON

Erluterung

Vorlaufstopp, bis alle vorbereiteten Stze vom Haupt
lauf abgearbeitet sind

Einzelsatzbearbeitung unterdrcken

Unterdrckung der Einzelsatzbearbeitung aufheben

1194

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
Tabellen

4.4 Vordefinierte Prozeduren

Interrupts

Bezeichner

DISABLE

ENABLE

CLRINT

Parameter

Erluterung

1.

INT:
Nummer des Inter
rupt-Eingangs

INT:
Nummer des Inter
rupt-Eingangs

Die Interruptroutine, die dem angegebenen Hardware-Eingang zugeordnet ist, 
wird inaktiv geschaltet. Auch Schnellabheben wird nicht ausgefhrt. Die mit SE
TINT getroffene Zuordnung zwischen Hardware-Eingang und Interruptroutine 
bleibt erhalten und kann mit ENABLE wieder aktiviert werden.

Reaktivierung der mit DISABLE inaktiv geschalteten Interruptroutinen-Zuordnung.

INT:
Nummer des Inter
rupt-Eingangs

Zuordnung von Interruptroutinen und Attributen zu einem Interrupt-Eingang l
schen. Die Interruptroutine ist somit abgewhlt. Beim Eintreffen des Interrupts 
erfolgt keine Reaktion.

Synchronaktionen

Bezeichner

Parameter

1.  n.

CANCEL

INT:
Nummer der Synchronaktion

Erluterung

Abbrechen der modalen Synchronaktion mit der an
gegebenen ID. Es knnen auch mehrere IDs  durch 
Kommata getrennt -- angegeben werden.

CANCELSUB

Aktuelle Unterprogrammebene abbrechen

Funktionsdefinition

Bezeichner

Parameter

Erluterung

1.

2.

3.

4.-7.

FCTDEF

INT:
Funktions
nummer

REAL:
Unterer 
Grenzwert

REAL:
Oberer Grenz
wert

REAL:
Koeffizienten a0-
a3

Polynomfunktion definieren

Diese wird in SYNFCT oder PUTF
TOCF ausgewertet.

Kommunikation

Bezeichner

Parameter

1.

2.

MMC

STRING: 
Kommando

CHAR: 
Quittungsmodus*) 
"N": ohne Quittung 
"S": synchrone Quittung
"A": asynchrone Quittung

Erluterung

Kommando an HMI-Kommando-
Interpreter fr die Projektierung 
von Fenstern ber NC-Programm

*) Kommandos werden auf Anforderung von der ausfhrenden Komponente (Kanal, NC ) quittiert.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1195

 
 
Tabellen

4.4 Vordefinierte Prozeduren

Programmkoordinierung

Bezeichner

Parameter

INIT

1.

2.

3.

INT: 
Kanalnum
mer

STRING: 
Pfadanga
be

CHAR: 
Quittungs-
modus**)

oder
Kanalname 
aus 
MD20000*)

1. - n.

INT: 
Kanalnummer

START

oder
Kanalname aus MD20000 *)

WAITE

INT: 
Kanalnummer

oder
Kanalname aus MD20000 *)

WAITM

WAITMC

1.

INT:
Marken
nummer

INT:
Marken
nummer

2. - n.

INT: 
Kanalnummer

oder
Kanalname aus MD20000 *)

INT: 
Kanalnummer

oder
Kanalname aus MD20000 *)

SETM

1. - n.

INT:
Markennummer

CLEARM

INT:
Markennummer

1. - n.

Erluterung

Anwahl eines NC-Programms zur Abarbeitung 
in einem Kanal

Starten der angewhlten Programme in meh
reren Kanlen gleichzeitig aus dem laufenden 
Programm

Dieses Kommando hat fr den eigenen Kanal 
keine Wirkung.

Warten auf das Programmende in einem oder 
mehreren anderen Kanlen

Warten auf das Erreichen einer Marke in den 
angegebenen Kanlen

Der vorhergehende Satz wird mit Genauhalt 
beendet.

Warten auf das Erreichen einer Marke in den 
angegebenen Kanlen

Genauhalt wird nur eingeleitet, wenn die ande
ren Kanle die Marke noch nicht erreicht ha
ben.

Setzen einer oder mehrerer Marken fr die Ka
nalkoordinierung

Die Bearbeitung im eigenen Kanal wird davon 
nicht beeinflusst.

Lschen einer oder mehrerer Marken fr die 
Kanalkoordinierung

Die Bearbeitung im eigenen Kanal wird davon 
nicht beeinflusst.

1196

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
Programmkoordinierung

Bezeichner

Parameter

WAITP

WAITS

RET

RETB

GET

GETD

AXIS:
Achsbezeichner

INT:
Spindelnummer

1.

INT (oder 
STRING):
Sprungziel 
(Satz-Nr. / 
Marke) fr 
Rck
sprung

INT (oder 
STRING):
Sprungziel 
(Satz-Nr. / 
Marke) fr 
Rck
sprung

2.

INT:

0:
Rck
sprung auf 
Sprungziel 
aus 1. Par.

> 0:
Rck
sprung auf 
den Folge
satz

INT:

0:
Rck
sprung auf 
Sprungziel 
aus 1. Par.

> 0:
Rck
sprung auf 
den Folge
satz

1. - n.

AXIS:
Achsbezeichner ***)

AXIS:
Achsbezeichner ***)

3.

4.

INT:
Anzahl der 
zu ber
springen
den Unter
programm
ebenen

BOOL:
Rck
sprung auf 
ersten Satz 
im Haupt
programm

INT:
Anzahl der 
zu ber
springen
den Unter
programm
ebenen

BOOL:
Rck
sprung auf 
ersten Satz 
im Haupt
programm

RELEASE

AXIS:
Achsbezeichner ***)

1.

2.

3.

4.

Tabellen

4.4 Vordefinierte Prozeduren

Erluterung

Warten, bis die angegebenen Positionierach
sen, die zuvor mit POSA programmiert wur
den, ihren programmierten Endpunkt erreichen

Warten, bis die angegebenen Spindeln, die zu
vor mit SPOSA programmiert wurden, ihren 
programmierten Endpunkt erreichen

Unterprogrammende ohne Funktions-Ausga
be an die PLC

Bei Angabe des 1. Parameters (Sprungziel) 
erfolgt der Rcksprung zuerst auf den Satz 
nach dem Aufrufsatz. Anschlieend wird das 
Ziel abhngig von der Programmierung (RET 
oder RETB) nach folgender Strategie gesucht:

 RET:

Suche in Richtung Programmende. Ist die 
Suche nicht erfolgreich, wird als nchstes 
in Richtung Programmanfang gesucht.

 RETB::

Suche in Richtung Programmanfang. Ist 
die Suche nicht erfolgreich, wird als nchs
tes in Richtung Programmende gesucht.

Maschinenachse(n) belegen

Die angegebenen Achsen mssen mit RE
LEASE im anderen Kanal freigegeben werden.

Maschinenachse(n) direkt belegen

Die angegebenen Achsen mssen nicht mit 
RELEASE freigegeben sein.

Maschinenachse(n) freigeben

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1197

 
 
 
 
 
 
 
 
Tabellen

4.4 Vordefinierte Prozeduren

Programmkoordinierung

Bezeichner

PUTFTOC

Parameter

REAL:
Korrektur
wert

Erluterung

ndern der Werkzeugfeinkorrektur

INT:
Parameter
nummer

INT:
Kanalnum
mer

INT: Spin
delnummer

oder
Kanalname 
aus 
MD20000*)

PUTFTOCF

INT: 
Nr. der 
Funktion

VAR REAL: 
Bezugswert

INT: Para
meter-num
mer

INT: 
Kanalnum
mer

oder
Kanalname 
aus 
MD20000*)

ndern der Werkzeugfeinkorrektur in Abhn
gigkeit einer mit FCTDEF festgelegten Funkti
on 
(Polynom max. 3. Grades)

Bei FCTDEF ist die hier verwendete Nr. anzu
geben.

3. - n.

wie 1 ...

4. - m.

wie 2 ...

Achsen an andere Kanle bergeben

AXTOCHAN

1.

2.

AXIS:
Achsbe
zeichner

INT: 
Kanalnum
mer

oder
Kanalname 
aus 
MD20000*)

*) Anstelle von Kanalnummern knnen auch die ber MD20000 $MC_CHAN_NAME definierten Kanalnamen programmiert 
werden.
**) Kommandos werden auf Anforderung von der ausfhrenden Komponente (Kanal, NC ) quittiert.
***) Anstelle der Achse kann mittels der Funktion SPI jeweils auch eine Spindel programmiert werden: z. B. GET(SPI(1))

Datenzugriffe

Bezeichner

Parameter

Erluterung

CHANDATA

1.

INT: 
Kanal-num
mer

Kanalnummer fr Kanaldatenzugriffe einstellen (nur im Initialisierungsbaustein zuls
sig). Die folgenden Zugriffe beziehen sich auf den mit CHANDATA eingestellten Kanal.

NEWCONF

Genderte Maschinendaten bernehmen

1198

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
Tabellen

4.4 Vordefinierte Prozeduren

Meldungen

Bezeichner

MSG

WRTPR

Parameter

1.

STRING:
Meldung

STRING:
Zeichenkette

2.

INT:
Ausfhrung

INT:
Ausfhrung

Erluterung

Beliebige Zeichenkette als Meldung an die Bedienoberflche 
ausgeben

Zeichenkette in BTSS-Variable schreiben

Dateizugriffe

Bezeichner

Parameter

READ

1.

2.

3.

4.

5.

VAR INT:
Fehler

CHAR[160]:
Dateiname

INT:
Anfangszeile 
des zu lesen
den Dateibe
reichs

INT:
Anzahl der zu 
lesenden Zei
len

VAR 
CHAR[255]:
Variablenfeld, 
in dem die ge
lesene Infor
mation abge
legt wird

Erluterung

Stze aus Filesystem 
lesen

WRITE

1.

2.

3.

4.

VAR INT:
Fehler

CHAR[160]:
Dateiname

CHAR[200]:
Satz

STRING:
Gert/Datei 
fr externe 
Ausgabe

Satz ins Filesystem 
(oder auf ein externes 
Gert/Datei) schreiben

DELETE

1.

2.

Datei lschen

VAR INT:
Fehler

CHAR[160]:
Dateiname

Alarme

Bezeichner

Parameter

Erluterung

SETAL

1.

2.

STRING:
Zeichenkette

INT:
Alarmnum
mer (Zyklen
alarme)

Alarm setzen

Zur Alarmnummer kann zustzlich eine Zeichenkette mit bis zu 4 Para
metern angegeben werden.

Es stehen folgende vordefinierte Parameter zur Verfgung: 
%1 = Kanalnummer 
%2 = Satznummer, Label 
%3 = Textindex fr Zyklenalarme 
%4 = zustzlichen Alarmparameter

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1199

 
 
 
 
 
Tabellen

4.4 Vordefinierte Prozeduren

Werkzeugverwaltung

Bezeichner

Parameter

1.

INT:
T-Nr.

2.

INT:
D-Nr.

STRING[32]: 
Werkzeugbe
zeichner

INT:
Duplo-Nr.

INT:
Datensatz-
Nr. n

INT:
Datensatz-
Nr. m

DELDL

DELT 

DELTC

DZERO

GETFREELOC

1.

2.

VAR INT:
Magazin-Nr. 
(Rckgabe
wert)

VAR INT:
Platz-Nr. 
(Rckgabe
wert)

3.

INT:
T-Nr.

4.

5.

6.

INT:
Referenz-
Magazin-
Nr.

CHAR:
Angabe 
abh. von 
4. Para
meter

INT:
Reser
vierungs
modus

1.

2.

VAR INT:
T-Nr. (Rck
gabewert)

VAR INT:
T-Nr. (Rck
gabewert)

INT:
Spindel-Nr.

INT:
Spindel-Nr.

STRING:
Name der 
Werkzeug
umgebung

INT AR
RAY[3]:
Rckgabe
werte

1.

2.

3.

4.

INT:
Nr. des Plat
zes, auf den 
positioniert 
werden soll

INT:
Nr. des Ma
gazins, das 
bewegt wer
den soll

INT:
Platz-Nr. 
des inter
nen Maga
zins

INT: Maga
zin-Nr. des 
internen 
Magazins

GETSELT 

GETEXET

GETTENV

POSM

1200

Erluterung

Alle Summenkorrektu
ren einer Schneide l
schen (oder eines 
Werkzeugs, wenn D 
nicht angegeben wird)

Werkzeug lschen

Duplonummer kann 
entfallen.

Werkzeugtrger-Da
tensatznummer n bis 
m lschen

D-Nummern aller 
Werkzeuge der dem 
Kanal zugeordneten 
TO-Einheit ungltig 
setzen

Leerplatz fr ein Werk
zeug suchen

Liefert die T-Nummer 
des fr die Spindel vor
gewhlten Werkzeugs

Liefert die T-Nummer 
des aus Sicht des NC-
Programms aktiven 
Werkzeugs

Liest die in einer Werk
zeugumgebung abge
legten T-, D- und DL-
Nummern

Magazin positionieren

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Werkzeugverwaltung

Bezeichner

Parameter

RESETMON

SETDNO

VAR INT:
Status = Er
gebnis der 
Operation 
(Rckgabe
wert)

1.

INT:
T-Nr.

SETMTH

1.

INT:
Werkzeug
halter-Nr.

INT: interne
T-Nr.

INT:
D-Nr. des 
Werkzeugs

INT:
Optionaler 
bitcodierter 
Parameter

2.

INT: 
Schneiden-
Nr.

3.

INT:
D-Nr.

SETPIECE 

1.

2.

INT: Spin
del-Nr.

INT:
Wert, um den 
dekrementiert 
wird

SETTA

SETTIA

1.

2.

3.

4.

INT: Maga
zin-Nr.

INT: Ver
schleiver
bund-Nr.

INT: Maga
zin-Nr.

INT: Ver
schleiver
bund-Nr.

INT:
Werkzeug
untergrup
pe

INT:
Werkzeug
untergrup
pe

VAR INT:
Status = Er
gebnis der 
Operation 
(Rckgabe
wert)

VAR INT:
Status = Er
gebnis der 
Operation 
(Rckgabe
wert)

TCA

1.

2.

3.

STRING[32]:
Werkzeugbe
zeichner

INT:
Duplo-Nr.

INT:
Werkzeug
halter-Nr.

Tabellen

4.4 Vordefinierte Prozeduren

Erluterung

Istwert des Werk
zeugs auf den Sollwert 
setzen

Korrekturnummer (D) 
der Schneide des 
Werkzeugs (T) setzen

Werkzeughalter-Nr. 
setzen

Werkstckzhler der 
Spindel dekrementie
ren

Damit kann der An
wender die Stckzahl-
berwachungsdaten 
der an dem Bearbei
tungsprozess beteilig
ten Werkzeuge aktua
lisieren.

Werkzeug aus Ver
schleiverbund aktiv 
setzen

Werkzeug aus Ver
schleiverbund inaktiv 
setzen

WZ-Anwahl/-Wechsel 
unabhngig vom Sta
tus des Werkzeugs

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1201

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.4 Vordefinierte Prozeduren

Werkzeugverwaltung

Bezeichner

Parameter

TCI

1.

2.

INT:
Nr. des Zwi
schenspei
chers

INT:
Werkzeug
halter-Nr.

MVTOOL

1.

INT:
Status

2.

3.

4.

5.

INT: Maga
zin-Nr.

INT:
Platz-Nr.

INT: Maga
zin-Nr. 
nach der 
Bewegung

INT: Ziel
platz-Nr. 
nach der 
Bewe
gung

Erluterung

Werkzeug aus Zwi
schenspeicher in das 
Magazin wechseln

Sprachbefehl zum Be
wegen eines Werk
zeugs

Werkzeugorientierung

Bezeichner

Parameter

Erluterung

ORIRESET

1.

2.

3.

REAL:
Grundstellung 
1. Geoachse

REAL:
Grundstellung 
2. Geoachse

REAL:
Grundstellung 
3. Geoachse

Grundstellung der Werkzeugorientierung

Synchronspindel

Bezeichner

Parameter

Erluterung

1.

2.

3.

4.

5.

6.

COUPDEF

COUPDEL

COUPRES

AXIS:
Folge
spindel

AXIS:
Leitspin
del

AXIS:
Folge
spindel

AXIS:
Folge
spindel

AXIS:
Leitspin
del

AXIS:
Leitspin
del

REAL:
Zhler 
berset
zungs-ver
hltnis

REAL:
Nenner 
berset
zungsver
hltnis

STRING[8]:
Satzwech
selverhal
ten 

STRING[2]:
Koppelart

Synchronspindel-Ver
band definieren

Synchronspindel-Ver
band lschen

Kopplungsparameter 
zurcksetzen auf pro
jektierte MD- und SD-
Werte

1202

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
Synchronspindel

Bezeichner

Parameter

1.

2.

3.

4.

5.

6.

COUPON

AXIS:
Folge
spindel

AXIS:
Leitspin
del

REAL:
Einschalt
position der 
Folgespin
del

COUPONC

AXIS:
Folge
spindel

AXIS:
Leitspin
del

COUPOF

AXIS:
Folge
spindel

AXIS:
Leitspin
del

REAL:
Ausschalt
position der 
Folgespin
del (abso
lut)

REAL:
Ausschalt
position der 
Leitspindel 
(absolut)

Tabellen

4.4 Vordefinierte Prozeduren

Erluterung

Synchronspindel-
Kopplung einschalten

Wird fr die Folgespin
del eine Einschaltposi
tion (Winkelversatz 
zwischen FS und LS, 
der sich -- absolut oder 
inkrementell -- auf die 
Null-Grad-Position der 
LS in positiver Dreh
richtung bezieht) an
gegeben, dann wird 
die Kopplung erst ein
geschaltet, wenn die 
angegebene Position 
berfahren wurde.

Synchronspindel-
Kopplung einschalten

Mit COUPONC wird 
beim Einschalten der 
Kopplung die aktuell 
wirksame Drehzahl 
der Folgespindel
( M3/M4 S...) ber
nommen.

Synchronspindel-
Kopplung ausschalten

Werden Positionen an
gegeben, dann wird 
die Kopplung erst auf
gelst, wenn alle ange
gebenen Positionen 
berfahren wurden. 

Die Folgespindel dreht 
mit der letzten Dreh
zahl vor Ausschalten 
der Kopplung weiter.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1203

 
 
 
 
 
 
 
 
 
Tabellen

4.4 Vordefinierte Prozeduren

Synchronspindel

Bezeichner

Parameter

1.

2.

3.

4.

5.

6.

COUPOFS

AXIS:
Folge
spindel

AXIS:
Leitspin
del

REAL:
Ausschalt
position der 
Folgespin
del (abso
lut)

WAITC

AXIS:
Folge
spindel

STRING
[8]:
Satz
wechsel
verhalten

AXIS:
Folgespin
del

STRING[8]:
Satzwech
selverhal
ten

Elektronisches Getriebe

Bezeichner

Parameter

EGDEL

1.

AXIS:
Folge
achse

EGDEF

1.

AXIS:
Folge
achse

2. / 4. / 
6. / 8. / 
10.

AXIS:
Leitachse

3. / 5. / 
7. / 9. / 
11.

INT:
Kopp
lungsart

EGON

1.

2.

AXIS:
Folge
achse

STRING:
Satz
wechsel
verhalten

3. / 6. / 
9. / 12. / 
15.

AXIS:
Leitachse

4. / 7. / 
10. / 13. / 
16.

5. / 8. / 
11. / 14. / 
17.

REAL:
Zhler 
des Kop
pelfak
tors

REAL:
Nenner 
des Kop
pelfak
tors

Erluterung

Synchronspindel-
Kopplung ausschalten 
mit Stopp der Folge
spindel

Wird eine Position an
gegeben, dann wird 
die Kopplung erst auf
gelst, wenn die ange
gebene Position ber
fahren wurde

Warten, bis das Kopp
lungssatzwechselkri
terium fr die Spindeln 
(max. 2) erfllt ist

Wird das Satzwechsel
verhalten nicht ange
geben, gilt das bei der 
Definition mit COUP
DEF angegebene 
Satzwechselverhalten.

Erluterung

Kopplungs
definition fr 
die Folgeach
se lschen

Definition ei
nes elektroni
schen Getrie
bes

Elektroni
sches Getrie
be EIN ohne 
Synchronisa
tion

1204

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.4 Vordefinierte Prozeduren

Elektronisches Getriebe

Bezeichner

Parameter

EGONSYN

1.

2.

3.

AXIS:
Folge
achse

STRING:
Satz
wechsel
verhalten

REAL:
Syn
chronpo
sition der 
Folge
achse

4. / 8. / 
12. / 16. / 
20.

5. / 9. / 
13. / 17. / 
21.

6. / 10. / 
14. / 18. / 
22.

7. / 11. / 
15. / 19. / 
23.

AXIS:
Leitachse

REAL:
Syn
chronpo
sition der 
Leitachse

REAL:
Zhler 
des Kop
pelfak
tors

REAL:
Nenner 
des Kop
pelfak
tors

EGONSYNE

1.

2.

3.

4.

5. / 9. / 
13. / 17. / 
21.

6. / 10. / 
14. / 18. / 
22.

7. / 11. / 
15. / 19. / 
23.

8. / 12. / 
16. / 20. / 
24.

AXIS:
Folge
achse

STRING:
Satz
wechsel
verhalten

REAL:
Syn
chronpo
sition der 
Folge
achse

STRING:
Anfahr
modus

AXIS:
Leitachse

REAL:
Syn
chronpo
sition der 
Leitachse

REAL:
Zhler 
des Kop
pelfak
tors

REAL:
Nenner 
des Kop
pelfak
tors

EGOFS

1.

AXIS:
Folge
achse

2. - n.

AXIS:
Leitachse

EGOFC

1.

AXIS:
Folge
spindel

Erluterung

Elektroni
sches Getrie
be EIN mit 
Synchronisa
tion

Elektroni
sches Getrie
be EIN mit 
Synchronisa
tion und
Vorgabe des 
Anfahrmodus 

Elektroni
sches Getrie
be selektiv 
ausschalten

Elektroni
sches Getrie
be ausschal
ten (Variante 
nur fr Spin
deln)

Nibbeln

Bezeichner

Parameter

Erluterung

1.

2.

3.

4.

PUNCHAAC

REAL:
kleinster Lo
chabstand

REAL:
Anfangsbe
schleunigung

REAL:
grter Lo
chabstand

REAL:
Endbeschleuni
gung

Wegabhngige Beschleunigung 
aktivieren

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1205

 
 
 
 
 
 
Tabellen

4.4 Vordefinierte Prozeduren

Auskunftsfunktionen im passiven Filesystem

Bezeichner

Parameter

Erluterung

1.

2.

3.

FILEDATE

FILETIME

FILESIZE

FILESTAT

VAR INT:
Fehlermel
dung

VAR INT:
Fehlermel
dung

VAR INT:
Fehlermel
dung

VAR INT:
Fehlermel
dung

CHAR[160]:
Dateiname

CHAR[160]:
Dateiname

VAR CHAR[8]:
Datum im For
mat 
"dd.mm.yy"

VAR CHAR[8]:
Uhrzeit im For
mat 
"hh.mm.ss"

Liefert das Datum des letzten Schreibzugriffs auf ei
ne Datei

Liefert die Uhrzeit des letzten Schreibzugriffs auf ei
ne Datei

CHAR[160]:
Dateiname

VAR INT:
Dateigre

Liefert die aktuelle Gre einer Datei 

CHAR[160]:
Dateiname

VAR CHAR[5]:
Datum im For
mat "rwxsd"

Liefert den Status einer Datei bezglich folgender 
Rechte:

 Lesen (r: read)

 Schreiben (w: write)

 Ausfhren (x: execute)

 Anzeigen (s: show)

 Lschen (d: delete)

Liefert fr eine Datei die Summe der Informationen, 
die ber FILEDATE, FILETIME, FILESIZE und FI
LESTAT auslesbar sind

FILEINFO

VAR INT:
Fehlermel
dung

CHAR[160]:
Dateiname

VAR 
CHAR[32]:
Datum im For
mat "rwxsd 
nnnnnnnn 
dd.mm.yy 
hh:mm:ss"

Master/Slave-Kopplung

Bezeichner

Parameter

Erluterung

MASLON

MASLOF

MASLOFS

MASLDEF

MASLDEL

1206

1. - n.

AXIS:
Achsbezeichner

AXIS:
Achsbezeichner

AXIS:
Achsbezeichner

AXIS:
Achsbezeichner

AXIS:
Achsbezeichner

Master/Slave-Kopplung einschalten

Master/Slave-Kopplung trennen

Master/Slave-Kopplung trennen und Slave-Spindeln automatisch ab
bremsen 

Master/Slave-Kopplung definieren

Die letzte Achse ist die Master-Achse.

Master/Slave-Kopplung trennen und Definition des Verbandes lschen

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Tabellen

4.4 Vordefinierte Prozeduren

Online-Werkzeuglngenkorrektur

Bezeichner

Parameter

1.

2.

Erluterung

TOFFON

TOFFOF

REAL:
Offset-Wert in 
Korrektur
richtung

AXIS:
Korrektur
richtung

AXIS:
Korrektur
richtung

Online- Werkzeuglngenkorrektur in der angegebenen Korrekturrich
tung aktivieren

Online-Werkzeuglngenkorrektur in der angegebenen Korrekturrich
tung zurcksetzen

Parameter

Erluterung

Beginn des suchunfhigen Programmabschnitts

Ende des suchunfhigen Programmabschnitts

SERUPRO

Bezeichner

IPTRLOCK

IPTRUNLOCK

Rckzug

Bezeichner

Parameter

1. - n.

POLFMASK

AXIS:
Geometrie- bzw. Maschinenachsname

POLFMLIN

AXIS:
Geometrie- bzw. Maschinenachsname

POLFA

1.

AXIS:
Kanalachsbezeich
ner

2.

INT:
Typ

3.

REAL:
Wert

Kollisionsvermeidung

Bezeichner

Parameter

Erluterung

Erluterung

Achsen fr den Schnellrckzug frei
geben (ohne Zusammenhang zwi
schen den Achsen)

Achsen fr den linearen Schnell
rckzug freigeben

Rckzugsposition fr Einzelachsen

PROTA

PROTS

1.

STRING:
"R"

1.

CHAR:
Status

Neuberechnung des Kollisionsmodells anfordern

2. - n.

Schutzbereichszustand setzen

STRING:
Schutzbe
reichsname

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1207

 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.5 Vordefinierte Prozeduren in Synchronaktionen

4.5

Vordefinierte Prozeduren in Synchronaktionen

Die folgenden vordefinierten Prozeduren stehen ausschlielich in Synchronaktionen zur 
Verfgung.

Synchronprozeduren

Bezeichner

Parameter

Erluterung

STOPREOF

Vorlaufstopp aufheben

Eine Synchronaktion mit einem STOPREOF-Befehl bewirkt 
einen Vorlaufstopp nach dem nchsten Ausgabesatz (= Satz 
an den Hauptlauf). Der Vorlaufstopp wird aufgehoben mit 
dem Ende des Ausgabesatzes oder wenn die STOPREOF-
Bedingung erfllt ist. Smtliche Synchronaktionsanweisun
gen mit STOPREOF-Befehl gelten dann als bearbeitet.

RDISABLE

DELDTG

1.

Einlesesperre

Restweglschen

AXIS:
Achse fr axiales Restweglschen (opti
onal). Entfllt die Achse, wird Restweg
lschen fr Bahnweg angestoen.

Eine Synchronaktion mit einem DELDTG-Befehl bewirkt ei
nen Vorlaufstopp nach dem nchsten Ausgabesatz (= Satz 
an den Hauptlauf). Der Vorlaufstopp wird aufgehoben mit 
dem Ende des Ausgabesatzes oder wenn die erste DELDTG-
Bedingung erfllt ist. In $AA_DELT[<Achse>] findet man die 
axiale Entfernung zum Zielpunkt bei axialem Restwegl
schen, in $AC_DELT den Bahnrestweg.

Programmkoordinierung Technologiezyklen

Bezeichner

Parameter

Erluterung

LOCK

UNLOCK

ICYCON

ICYCOF

1.

INT:
ID der Synchronaktion, die gesperrt wer
den soll

Synchronaktion mit ID sperren bzw. Technologiezyklus stop
pen

Es knnen eine oder mehrere IDs programmiert werden.

INT:
ID der Synchronaktion, die freigegeben 
werden soll

Synchronaktion mit ID freigeben bzw. Technologiezyklus 
fortsetzen

Es knnen eine oder mehrere IDs programmiert werden.

Jeden Satz eines Technologiezyklus nach ICYCON in einem 
separaten IPO-Takt abarbeiten

Alle Stze eines Technologiezyklus nach ICYCOF in einem 
IPO-Takt abarbeiten

1208

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
4.5 Vordefinierte Prozeduren in Synchronaktionen

Tabellen

Polynomfunktionen

Bezeichner

Parameter

SYNFCT

1.

2.

3.

VAR REAL:
Ergebnis
variable *)

VAR REAL:
Eingangs
variable **)

INT:
Nummer 
der Poly
nomfunkti
on, die mit 
FCTDEF 
definiert 
wurde

FTOC

1.

2.

3.

4.

5.

VAR REAL:
Eingangs-
variable **)

INT:
Lnge 
1, 2, 3

INT:
Kanalnum
mer

INT:
Spindel
nummer

INT:
Nummer 
der Poly
nomfunkti
on, die mit 
FCTDEF 
definiert 
wurde

Erluterung

Wenn in der Bewegungssyn
chronaktion die Bedingung er
fllt ist, wird das durch den ers
ten Ausdruck bestimmte Poly
nom an der Eingangsvariablen 
ausgewertet. Der Wert wird 
dann nach unten und nach oben 
begrenzt und der Ergebnisvari
ablen zugewiesen.

ndern der Werkzeugfeinkor
rektur in Abhngigkeit einer mit 
FCTDEF festgelegten Funktion 
(Polynom max. 3. Grades).
Bei FCTDEF muss die hier ver
wendete Nummer angegeben 
werden.

*) Als Ergebnisvariable sind nur spezielle Systemvariablen zulssig (siehe Funktionshandbuch Synchronaktionen).
**) Als Eingangsvariable sind nur spezielle Systemvariablen zulssig (siehe Funktionshandbuch Synchronaktionen).

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1209

 
 
 
Tabellen

4.6 Vordefinierte Funktionen

4.6

Vordefinierte Funktionen

Durch den Aufruf einer vordefinierten Funktion wird die Ausfhrung einer vordefinierten NC-
Funktion angestoen, die im Unterschied zur vordefinierten Prozedur einen Rckgabewert 
liefert. Der Aufruf der vordefinierten Funktion kann als Operand im Ausdruck stehen.   

Koordinatensystem

Bezeichner

Rckgabe
wert

CTRANS

FRAME

CFINE

FRAME

CSCALE

FRAME

Parameter

Erluterung

1.

2.

3. - 15.

4. - 16.

AXIS:
Achsbezeich
ner

AXIS:
Achsbezeich
ner

AXIS:
Achsbezeich
ner

REAL: Ver
schiebung

REAL: Ver
schiebung

REAL:
Mastabsfak
tor

AXIS:
Achsbezeich
ner

AXIS:
Achsbezeich
ner

AXIS:
Achsbezeich
ner

REAL: Ver
schiebung

REAL: Ver
schiebung

REAL:
Mastabsfak
tor

Translation: Nullpunkt-
verschiebung GROB fr 
mehrere Achsen

Translation: Nullpunkt-
verschiebung FINE fr 
mehrere Achsen

Scale: Mastabsfaktor 
fr mehrere Achsen

CROT

FRAME

1.

2.

3. und 5.

4. und 6.

AXIS:
Achsbezeich
ner

REAL: Dre
hung

AXIS:
Achsbezeich
ner

REAL: Dre
hung

Rotation: Drehung des 
aktuellen Koordinaten
systems

Maximale Parameteran
zahl: 6
(je ein Achsbezeichner 
und Wert pro Geometrie
achse).

CROTS

FRAME

AXIS:
Achsbezeich
ner

REAL: Dre
hung mit 
Raumwinkel

AXIS:
Achsbezeich
ner

REAL: Dre
hung mit 
Raumwinkel

Rotation: Drehung des 
aktuellen Koordinaten
systems mit Raumwinkel

CMIRROR

1.

FRAME

AXIS

2. - 8.

AXIS

Maximale Parameteran
zahl: 6
(je ein Achsbezeichner 
und Wert pro Geometrie
achse).

Mirror: Spiegeln an einer 
Koordinatenachse

1210

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.6 Vordefinierte Funktionen

Parameter

Erluterung

1.

2.

INT:
Drehachse

FRAME:
additives ge
messenes 
oder berech
netes Frame

REAL:
Drehwinkel

STRING:
spezifiziert 
Zielframe

Koordinatensystem

Bezeichner

Rckgabe
wert

CRPL

FRAME

ADDFRAME

INT:

0: OK

1: Zielan
gabe 
(String) ist 
falsch

2: Ziel
Frame ist 
nicht pro
jektiert

3: Drehung 
im Frame 
ist nicht er
laubt

INVFRAME

FRAME

1.

FRAME

MEAFRAME

FRAME

1.

2.

3.

REAL[3,3]:
Koordinaten 
der gemesse
nen Raum
punkte

REAL[3,3]:
Koordinaten 
der Sollpunkte

VAR REAL:
Variable, mit 
der Informati
onen zur Qua
litt der 
FRAME-Be
rechnung zu
rckgegeben 
werden 

Frame-Drehung in einer 
beliebigen Ebene

Berechnet den Ziel-
Frame, der durch den 
String spezifiziert ist

Der Ziel-Frame wird so 
berechnet, dass sich das 
neue Gesamt-Frame als 
Verkettung des alten Ge
samt-Frames mit dem 
bergebenen Frame er
gibt.

Berechnet aus einem 
Frame den inversen 
Frame

Die Frame-Verkettung 
eines Frames mit sei
nem inversen Frame er
gibt immer einen Null-
Frame

Frame-Berechnung aus 
3 Messpunkten im Raum

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1211

 
 
 
 
 
 
 
 
Tabellen

4.6 Vordefinierte Funktionen

Geometrie-Funktionen

Bezeichner

Rckgabewert Parameter

Erluterung

1. 

2. 

3. 

CALCDAT

BOOL:
Fehlerstatus

INT:
Anzahl Punkte

VAR REAL [n, 
2]:
Tabelle (Abszis
se, Ordinate) 
der Punkte 1 bis 
n

INTERSEC

BOOL:
Fehlerstatus

VAR REAL [11]:
Erstes Kontur
element

VAR REAL [11]:
Zweites Kontur
element

VAR REAL [3]:
Ergebnis: Abs
zisse, Ordinate 
und Radius des 
errechneten 
Kreismittel
punkts

VAR REAL [2]:

Ergebnisvektor 
zur Schnittpunkt
koordinate: Abs
zisse und Ordi
nate

Berechnet die Mittelpunktskoor
dinaten und den Radius des 
Kreises aus 3 oder 4 Punkten.

Die Punkte mssen verschie
den sein.

Berechnet die Schnittpunkt
koordinaten zwischen zwei Kon
turelementen. 

Der Fehlerstatus gibt an, ob ein 
Schnittpunkt gefunden wurde.

Kurventabellen-Funktionen

Bezeichner

CTAB

Rckga
bewert

REAL:
Folge
achspo
sition

Parameter

Erluterung

1.

2.

3.

4.

5.

6.

REAL:
Leitachs
position

INT:
Tabellen
nummer

VAR RE
AL[ ]:
Ergebnis 
Steigung

AXIS:
Folge
achse fr 
Skalie
rung

AXIS:
Leitach
se fr 
Skalie
rung

CTABINV

CTABID

REAL:
Leitachs
position

REAL:
Folge
achspo
sition

REAL:
Leitposi
tion

INT:
Tabellen
nummer

VAR RE
AL[ ]:
Ergebnis 
Steigung

AXIS:
Folge
achse fr 
Skalie
rung

AXIS:
Leitach
se fr 
Skalie
rung

INT:
Kurven
tabellen
nummer

INT:
Eintrags
nummer 
im Spei
cher

STRING:
Speicher
ort:
"SRAM", 
"DRAM"

Ermittelt die Folge
achsposition zur ange
gebenen Leitachsposi
tion aus Kurventabelle.

Sind Parameter 4/5 
nicht programmiert, 
wird mit Standard-Ska
lierung gerechnet.

Ermittelt die Leitachs
position zur angegebe
nen Folgeachspositi
on aus Kurventabelle.

Sind Parameter 5/6 
nicht programmiert, 
wird mit Standard-Ska
lierung gerechnet.

Ermittelt die Kurventa
bellennummer, die un
ter der angegebenen 
Nummer im Speicher 
eingetragen ist.

1212

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
Tabellen

4.6 Vordefinierte Funktionen

1.

2.

3.

4.

5.

6.

Parameter

Erluterung

Kurventabellen-Funktionen

Bezeichner

CTABISLOCK

Rckga
bewert

INT:
Sperrzu
stand

INT:
Tabellen
nummer

Ermittelt die Sperrzu
stand der Kurventabel
le:

> 0: Tabelle ist ge
sperrt

1: CTABLOCK

2: aktive Kopplung

3: CTABLOCK und ak
tive Kopplung

0: Tabelle ist nicht ge
lockt

-1: Tabelle existiert 
nicht 

Ermittelt die Existenz 
der Kurventabelle im 
statischen oder dyna
mischen NC-Speicher:

0: FALSE

1: TRUE

Ermittelt die Speicher
ort der Kurventabelle:

1: DRAM

0: SRAM

-1: Tabelle existiert 
nicht 

Ermittelt die Periodizi
tt der Kurventabelle:

0: nicht periodisch

1: periodisch in Leit
achse

2: periodisch in Leit- 
und Folgeachse

-1: Tabelle existiert 
nicht 

Ermittelt die Anzahl 
der definierten Kurven
tabellen (im statischen 
und dynamischen NC-
Speicher)

Ermittelt die Anzahl 
der definierten Kurven
tabellen im angegebe
nen Speicher

CTABEXISTS

INT:
Existenz

INT:
Tabellen
nummer

CTABMEMTYP

INT:
Speicher
ort

INT:
Tabellen
nummer

CTABPERIOD

INT:
Periodizi
tt

INT:
Tabellen
nummer

CTABNO

CTABNOMEM

INT:
Anzahl 
Kurven
tabellen

INT:
Anzahl  
Kurven
tabellen

STRING:
Speicher
ort:
"SRAM", 
"DRAM"

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1213

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.6 Vordefinierte Funktionen

Kurventabellen-Funktionen

Bezeichner

CTABFNO

CTABSEG

Rckga
bewert

INT:
Anzahl 
der Ta
bellen

INT:
Anzahl 
der Kur
venseg
mente

STRING:
Speicher
ort:
"SRAM", 
"DRAM"

STRING:
Speicher
ort:
"SRAM", 
"DRAM"

CTABFSEG

INT:
Anzahl 
der Kur
venseg
mente

STRING:
Speicher
ort:
"SRAM", 
"DRAM"

CTABSEGID

INT:
Tabellen
nummer

INT:
Anzahl 
der Kur
venseg
mente

CTABMSEG

INT:
Anzahl 
der Kur
venseg
mente

STRING:
Speicher
ort:
"SRAM", 
"DRAM"

1.

2.

3.

4.

5.

6.

Parameter

Erluterung

STRING:
Seg
mentart:

"L": Line
ar

"P": Poly
nom

STRING:
Seg
mentart:

"L": Line
ar

"P": Poly
nom

STRING:
Seg
mentart:

"L": Line
ar

"P": Poly
nom

STRING:
Seg
mentart:

"L": Line
ar

"P": Poly
nom

Ermittelt die Anzahl 
der noch mglichen 
Kurventabellen im an
gegebenen Speicher

Ermittelt die Anzahl 
der verwendeten Kur
vensegmente der an
gegebenen Segment
art im angegebenen 
Speicher

>=0: Anzahl

-1: Speichertyp ungl
tig 

Wird Parameter 2 
nicht programmiert, 
wird die Summe aus 
Linear- und Polynom-
Segmenten ausgege
ben.

Ermittelt die Anzahl 
der noch mglichen 
Kurvensegmente der 
angegebenen Seg
mentart im angegebe
nen Speicher

>=0: Anzahl

-1: Speichertyp ungl
tig 

Ermittelt die Anzahl 
der Kurvensegmente 
der angegebenen Seg
mentart, die von der 
Kurventabelle verwen
det werden

>=0: Anzahl

-1: Tabelle existiert 
nicht 

Ermittelt die Anzahl 
der maximal mgli
chen Kurvensegmen
te der angegebenen 
Segmentart im ange
gebenen Speicher

>=0: Anzahl

-1: Tabelle existiert 
nicht

1214

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.6 Vordefinierte Funktionen

1.

2.

3.

4.

5.

6.

Parameter

Erluterung

Kurventabellen-Funktionen

Bezeichner

CTABPOL

CTABPOLID

Rckga
bewert

INT:
Anzahl 
der Kur
venpoly
nome

INT:
Anzahl 
der Kur
venpoly
nome

STRING:
Speicher
ort:
"SRAM", 
"DRAM"

INT:
Tabellen
nummer

CTABFPOL

INT:
Anzahl 
der Kur
venpoly
nome

STRING:
Speicher
ort:
"SRAM", 
"DRAM

CTABMPOL

INT:
Anzahl 
der Kur
venpoly
nome

STRING:
Speicher
ort:
"SRAM", 
"DRAM

CTABSSV

CTABSEV

CTABTSV

REAL:
Folge
achspo
sition

REAL:
Folge
achspo
sition

REAL:
Folge
achspo
sition

REAL:
Leitachs
position

INT:
Tabellen
nummer

REAL:
Leitachs
position

INT:
Tabellen
nummer

VAR RE
AL[ ]:
Ergebnis 
Steigung

AXIS:
Folge
achse fr 
Skalie
rung

AXIS:
Leitach
se fr 
Skalie
rung

VAR RE
AL[ ]:
Ergebnis 
Steigung

AXIS:
Folge
achse fr 
Skalie
rung

AXIS:
Leitach
se fr 
Skalie
rung

INT:
Tabellen
nummer

AXIS:
Folge
achse

VAR RE
AL[ ]:
Ergebnis 
Steigung 
Start der 
Tabelle

Ermittelt die Anzahl 
der verwendeten Kur
venpolynome im ange
gebenen Speicher

>=0: Anzahl

-1: Tabelle existiert 
nicht

Ermittelt die Anzahl 
der Kurvenpolynome, 
die von der Kurventa
belle verwendet wer
den

>=0: Anzahl

-1: Tabelle existiert 
nicht

Ermittelt die Anzahl 
der maximal mgli
chen Kurvenpolynome 
im angegebenen Spei
cher:

>=0: Anzahl

-1: Tabelle existiert 
nicht

Ermittelt die Anzahl 
der maximal mgli
chen Kurvenpolynome 
im angegebenen Spei
cher:

>=0: Anzahl

-1: Tabelle existiert 
nicht

Ermittelt die Folge
achsposition am An
fang des zum angege
benen Leitachswert 
gehrenden Kurven
segments.

Ermittelt die Folge
achsposition am Ende 
des zum angegebe
nen Leitachswert ge
hrenden Kurvenseg
ments.

Ermittelt die Folge
achsposition am An
fang der Kurventabel
le.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1215

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Parameter

Erluterung

Tabellen

4.6 Vordefinierte Funktionen

Kurventabellen-Funktionen

Bezeichner

CTABTEV

Rckga
bewert

REAL:
Folge
achspo
sition

1.

2.

INT:
Tabellen
nummer

CTABTSP

REAL:
Leitachs
position

INT:
Tabellen
nummer

CTABTEP

REAL:
Leitachs
position

INT:
Tabellen
nummer

CTABTMIN

REAL:
Minimal
wert

INT:
Tabellen
nummer

VAR RE
AL[ ]:
Ergebnis 
Steigung 
Ende der 
Tabelle

VAR RE
AL[ ]:
Ergebnis 
Steigung 
Start der 
Tabelle

VAR RE
AL[ ]:
Ergebnis 
Steigung 
Ende der 
Tabelle

REAL:
Leitwert
intervall 
untere 
Grenze

4.

5.

6.

AXIS:
Folge
achse

AXIS:
Leitachse

3.

AXIS:
Folge
achse

AXIS:
Leitachse

AXIS:
Leitachse

REAL:
Leitwert
intervall 
obere 
Grenze

CTABTMAX

REAL:
Maximal
wert

INT:
Tabellen
nummer

REAL:
Leitwert
intervall 
untere 
Grenze

REAL:
Leitwert
intervall 
obere 
Grenze

AXIS:
Folge
achse

AXIS:
Leitachse

Hinweis:
Die Kurventabellen-Funktionen knnen auch in Synchronaktionen programmiert werden.

Ermittelt die Folge
achsposition am Ende 
der Kurventabelle.

Ermittelt die Leitachs
position am Anfang 
der Kurventabelle.

Ermittelt die Leitachs
position am Ende der 
Kurventabelle.

Ermittelt den Minimal
wert der Folgeachse 
im gesamten Definiti
onsbereich der Kur
ventabelle oder in ei
nem definierten Inter
vall.

Ermittelt den Maximal
wert der Folgeachse 
im gesamten Definiti
onsbereich der Kur
ventabelle oder in ei
nem definierten Inter
vall.

Achsfunktionen

Bezeichner

AXNAME

AXSTRING

Rckgabe
wert

AXIS:
Achsbe
zeichner

STRING[ ]:
Achsname

1. 

2. 

3.

4.

Erluterung

Parameter

STRING [ ]:
Eingangs
string

AXIS:
Achsbezeich
ner

Konvertiert Eingangsst
ring in Achsbezeichner

Konvertiert Achsbe
zeichner in String

1216

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.6 Vordefinierte Funktionen

Rckgabe
wert

1. 

2. 

3.

4.

Erluterung

Parameter

Achsfunktionen

Bezeichner

ISAXIS

BOOL:
Achse vor
handen 
(TRUE) oder 
nicht (FALSE)

INT:
Nummer der 
Geometrie-
achse 
(1 bis 3)

Prft, ob die als Para
meter angegebene Ge
ometrieachse 1 bis 3 
entsprechend Maschi
nendatum MD20050 
$MC_AXCONF_GEO
AX_ASSIGN_TAB vor
handen ist

Konvertiert Spindel
nummer in Achsbe
zeichner

Konvertiert Achsbe
zeichner in Spindel
nummer

Berechnet aus der ein
gegebenen Achspositi
on den Modulo-Rest

Ist die angegebene 
Achse keine Modulo-
Achse, wird die Achs
position unverndert 
zurckgegeben.

Ermittelt, ob sich die 
Sollposition einer Ach
se in einem Fenster um 
eine vorgegebene Re
ferenzposition befindet

SPI

AXTOSPI

MODAXVAL

AXIS:
Achsbe
zeichner

INT:
Spindelnum
mer

REAL:
Modulo-Wert

INT:
Spindelnum
mer

AXIS:
Achsbezeich
ner

AXIS:
Achsbezeich
ner

REAL:
Achsposition

AXIS:
Achsbezeich
ner

REAL:
Referenzpo
sition im Koor
dinatensys
tem

REAL:
Positions
fensterbreite

INT:
Koordinaten
system

POSRANGE

BOOL:
Sollposition 
innerhalb des 
Positions
fensters 
(TRUE) oder 
nicht (FALSE)

Werkzeugverwaltung

Bezeichner

Rckgabewert

Parameter

Erluterung

1.

2.

3.

CHKDM

CHKDNO

INT:
Status: Ergeb
nis der Prfung

INT:
Magazinnum
mer

INT:
Status: Ergeb
nis der Prfung

INT:
T-Nummer des 
1. Werkzeugs

GETACTT

INT:
Status

INT:
T-Nummer 

GETACTTD

INT:
Status: Ergeb
nis der Prfung

VAR INT:
gefundene T-
Nummer (Rck
gabewert)

INT:
D-Nummer

INT:
T-Nummer des 
2. Werkzeugs

STRING[32]:
Werkzeugname

INT:
D-Nummer

Prft die Eindeutigkeit der D-
Nummer innerhalb eines Maga
zins

INT:
D-Nummer

Prft die Eindeutigkeit der D-
Nummer

Ermittelt das aktive Werkzeug 
aus einer Gruppe von gleichna
migen Werkzeugen

Ermittelt zur absoluten D-Num
mer die zugehrige T-Nummer

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1217

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.6 Vordefinierte Funktionen

Werkzeugverwaltung

Bezeichner

Rckgabewert

Parameter

Erluterung

1.

2.

3.

GETDNO

INT:
D-Nummer

INT:
T-Nummer

INT:
Schneidennum
mer

GETT

NEWT

INT:
T-Nummer

INT:
T-Nummer

STRING[32]:
Werkzeugname

INT:
Duplo-Nummer

STRING[32]:
Werkzeugname

INT:
Duplo-Nummer

TOOLENV

INT:
Status

DELTOOLENV INT:

Status

STRING:
Name

STRING:
Name

GETTENV

INT:
Status

STRING:
Name

Arithmetik

Bezeichner

Rckgabewert

1.

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

REAL

SIN

ASIN

COS

ACOS

TAN

ATAN2

SQRT

POT

TRUNC

ROUND

ROUNDUP

ABS

LN

EXP

MINVAL

1218

VAR INT:

T-Nummer [0]

D-Nummer [1]

DL-Nummer [2] 

Parameter

2.

3.

REAL

REAL

Ermittelt die D-Nummer der 
Schneide des Werkzeugs T

Ermittelt die T-Nummer zum 
Werkzeugnamen

Legt neues Werkzeug an (Werk
zeugdaten bereitstellen)

Die Duplo-Nummer kann entfal
len.

Speichert die Werkzeugumge
bung mit angegebenem Namen 
im statischen NC-Speicher

Lscht die Werkzeugumgebung 
mit angegebenem Namen im 
statischen NC-Speicher

Lscht alle Werkzeugumge
bungen, wenn kein Name ange
geben ist.

Ermittelt T-Nummer  D-Nummer 
und DL-Nummer aus einer 
Werkzeugumgebung mit ange
gebenem Namen

Erluterung

Sinus

Arcus-Sinus

Cosinus

Arcus-Cosinus

Tangens

Arcus-Tangens 2

Quadratwurzel

Quadrat

Ganzzahliger Anteil

Abrunden

Aufrunden

Absolutwert

Natrlicher Logarithmus

Exponentialfunktion ex

Ermittelt den  kleineren Wert 
der beiden Parameter

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.6 Vordefinierte Funktionen

Arithmetik

Bezeichner

Rckgabewert

Parameter

Erluterung

MAXVAL

REAL

1.

REAL

2.

REAL

3.

Ermittelt den greren Wert 
der beiden Parameter

BOUND

REAL:
Prfstatus

REAL:
Untergrenze

REAL:
Obergrenze

REAL:
Vergleichswert

Ermittelt, ob der Vergleichswert 
innerhalb der Grenzen liegt.

Hinweis:
Die Arithmetik Funktionen knnen auch in Synchronaktionen programmiert werden. Die Berechnung bzw. Auswertung dieser 
Arithmetik-Funktionen erfolgt dann im Hauptlauf. Fr Berechnungen und als Zwischenspeicher kann auch der Synchronak
tions-Parameter $AC_PARAM[<n>] genutzt werden.

String-Funktionen

Bezeichner

Rckgabewert

Parameter

Erluterung

1.

2.

3.

ISNUMBER

BOOL

NUMBER

REAL

TOUPPER

STRING

TOLOWER

STRING

STRLEN

INT

INDEX

INT

RINDEX

INT

MINDEX

INT

STRING:
Eingangs
string

STRING:
Eingangs
string

STRING:
Eingangs
string

STRING:
Eingangs
string

STRING:
Eingangs
string

STRING:
Eingangs
string

CHAR:
Suchzei
chen

STRING:
Eingangs
string

CHAR:
Suchzei
chen

STRING:
Eingangs
string

STRING:
Suchzei
chen

SUBSTR

STRING 

SPRINT

STRING

STRING:
Eingangs
string

STRING:
Eingangs
string

INT

INT

Prft, ob der Eingangsstring in eine Zahl ge
wandelt werden kann

Wandelt den Eingangsstring in eine Zahl

Wandelt den Eingangsstring in Grobuchsta
ben

Wandelt den Eingangsstring in Kleinbuchsta
ben

Ermittelt die Lnge des Eingangsstrings bis 
Stringende (/0)

Ermittelt die Stelle des Zeichens im Ein
gangsstring von links nach rechts.

Das 1. Zeichen des Strings von links hat den 
Index 0.

Ermittelt die Stelle des Zeichens im Ein
gangsstring von rechts nach links.

Das 1. Zeichen des Strings von rechts hat den 
Index 0.

Ermittelt die Stelle eines der im 2. Parameter 
angegebenen Zeichen im Eingangsstring von 
links nach rechts.

Das 1. Zeichen des Eingangsstrings von  links 
hat den Index 0.

Ermittelt den durch Beginn (2. Parameter) und 
Anzahl von Zeichen (3. Parameter) beschrie
benen Teilstring des Eingangsstrings.

Ermittelt den formatierten Eingangsstring

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1219

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.6 Vordefinierte Funktionen

Funktionen fr Messzyklen

Bezeichner

CALCPOSI

Rck
gabe
wert

INT:
Status

1.

2.

3.

4.

5.

6.

Parameter

Erluterung

REAL[3]:
Aus
gangs
position 
im WKS

REAL[3]:
inkre
mentelle 
Wegvor
gabe be
zogen 
auf Aus
gangs
position

REAL[5]:
Mindest
abstn
de zu 
den 
berwa
chungs
grenzen

REAL[3]:
Rckga
befeld fr 
den 
mgl. 
inkr. Weg

BOOL:
Umrech
nung des 
Masys
tems ja/
nein

INT:
Art der 
Grenz
berwa
chung

GETTCOR

INT:
Status

REAL
[11]:

LENTOAX

INT:
Status

INT[3]:
Achszu
ordnung 
der Geo
achsen

STRING:
Name 
der WZ
Umge
bung

INT:
interne T-
Nr. des 
Werk
zeugs

INT:
Schnei
den
nummer 
(D-Nr.) 
des 
Werk
zeugs

INT:
Nummer 
der orts
abhn
gigen 
Korrek
tur (DL-
Nr. des 
WZs))

STRING:
Koordi
naten
system 
fr die 
Zuord
nung

STRING:
WZ-Ln
genkom
ponente : 
Koordi
naten
system

REAL[3]:
Matrix 
zur Ab
bildung 
der WZ-
Lngen 
im Koor
dinaten
system

Prft, ob ausgehend von 
einem gegebenen Start
punkt die Geometrieach
sen einen vorgegebenen 
Weg verfahren knnen, 
ohne die Achsgrenzen zu 
verletzen

Fr den Fall, das der vor
gegebene Weg ohne Ver
letzungen nicht gefahren 
werden kann, wird der 
maximal zulssige Wert 
zurckgegeben.

Ermittelt die Werkzeug
lngen und Werkzeug
lngenkomponenten aus 
WZ-Umgebung bzw. ak
tueller Umgebung

Ermittelt Informationen 
ber die Zuordnung der 
WZ-Lngen L1, L2, L3 
des aktiven WZs zu Abs
zisse, Ordinate, Applikate

Die Zuordnung zu den 
Geometrieachsen wird 
durch Frames und die ak
tive Ebene (G17 -G19) 
beeinflusst.

1220

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
Tabellen

4.6 Vordefinierte Funktionen

SETTCOR

INT:
Status

1.

2.

3.

4.

5.

6.

7.

8.

9.

REAL
[3]:
Kor
rektur
vektor 
im 
Raum

STR.:
Kom
ponen
tenbe
zeich
ner

INT:
zu 
korr. 
Kom
ponen
te(n)
0 - 11

INT:
Art der 
Schrei
bope
ration
0 - 3

INT:
Index 
der 
Geo
achse

INT:
int. T-
Nr. 
des 
WZs

STRIN
G:
Name 
der 
WZ-
Umge
bung

INT:
D-Nr. 
des 
WZs

INT:
DL-Nr. 
des 
WZs

Verndert 
Werkzeug
komponen
ten unter 
Berck
sichtigung 
aller Rand
bedingun
gen, die in 
die Bewer
tung der ein
zelnen 
Kompo
nenten ein
gehen

Sonstige Funktionen

Bezeichner

STRINGIS

ISVAR

Rckga
bewert

INT:
Info ber 
den 
String

BOOL:
Variable 
bekannt 
ja/nein

GETVARTYP

INT:
Datentyp

GETVARPHU

GETVARAP

INT:
Zahlen
wert der 
physikali
schen 
Einheit

INT:
Schutz
stufe fr 
den Zu
griff

1.

2.

3.

4.

5.

6.

Parameter

Erluterung

STRING:
Name 
des zu 
prfen
den Ele
ments

STRING:
Name 
der Vari
ablen

STRING:
Name 
der Vari
ablen

STRING:
Name 
der Vari
ablen

STRING:
Name 
der Vari
ablen

STRING:
Art des 
Zugriffs

Prft, ob der angegebe
ne String als Element 
der NC-Programmier
sprache im aktuellen 
Sprachumfang zur Ver
fgung steht

Prft, ob der bergabe
parameter eine in der 
NC bekannte Variable 
enthlt (Maschinenda
tum, Settingdatum, 
Systemvariable, allge
meine Variablen wie 
GUD's)

Ermittelt den Datentyp 
einer System- /Anwen
dervariablen

Ermittelt die physikali
sche Einheit einer Sys
tem- /Anwendervariab
len

Ermittelt das Zugriffs
recht auf eine System- /
Anwendervariable

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1221

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.6 Vordefinierte Funktionen

Sonstige Funktionen

Bezeichner

GETVARLIM

Rckga
bewert

INT:
Status

GETVARDFT

INT:
Status

STRING:
Name 
der Vari
ablen

STRING:
Name 
der Vari
ablen

COLLPAIR

PROTD

DELOBJ

1.

2.

3.

4.

5.

6.

Parameter

Erluterung

CHAR:
Gibt an, 
welcher 
Grenz
wert aus
gelesen 
werden 
soll

VAR RE
AL/
STRING/
FRAME:
Rckga
be des 
Stan
dard
werts

STRING:
Name 
des 2. 
Schutz
bereichs

VAR RE
AL:
Rckga
be des 
Grenz
werts

INT:
Index auf 
erste Di
mension 
(optional)

INT:
Index auf 
zweite 
Dimensi
on (optio
nal)

INT:
Index auf 
dritte Di
mension 
(optional)

BOOL:
Masys
tem fr 
Abstand 
und Ab
stands
vektor 
(optional)

BOOL:
Alarm
unter
drckung
(optional)

BOOL:
Alarm
unter
dr
ckung(op
tional)

VAR RE
AL:
Rckga
bewert:
3-dimen
sionaler 
Ab
stands
vektor

INT:
Ende-In
dex der 
zu l
schen
den Kom
ponen
ten (opti
onal)

BOOL:
Alarm
unter
drckung
(optional)

Ermittelt den unteren/
oberen Grenzwert ei
ner System- /Anwen
dervariablen

Ermittelt den Standard
wert einer System- /
Anwendervariablen

Prft auf Zugehrigkeit 
zu einem Kollisionspaar

Ermittelt den Abstand 
der beiden angegebe
nen Schutzbereiche

Lscht Elementen von 
kinematischen Ketten, 
Schutzbereichen, 
Schutzbereichsele
menten, Kollisionspaa
ren und Transformati
onsdaten

Ermittelt anhand der 
Zeichenkette den zuge
hrigen Systemvariab
lenindex

INT:
Prfer
gebnis

STRING:
Name 
des 1. 
Schutz
bereichs

REAL:
Abstand 
der bei
den 
Schutz
bereiche

INT:
Fehler
nummer

STRING:
Name 
des 1. 
Schutz
bereichs

STRING:
Name 
des 2. 
Schutz
bereichs

STRING:
Typ der 
zu l
schen
den Kom
ponente

INT:
Start-In
dex der 
zu l
schen
den Kom
ponen
ten (opti
onal)

STRING:
Zeichen
kette/
Name

NAMETOINT

INT:
System
variab
lenindex

STRING:
Name 
des Sys
temvari
ablenfel
des

1222

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Tabellen

4.6 Vordefinierte Funktionen

Parameter

Erluterung

2.

3.

4.

5.

6.

Sonstige Funktionen

Bezeichner

Rckga
bewert

ORISOLH

INT:

Fehler
nummer

1.

INT:

Steuert 
das Ver
halten 
der Funk
tion

REAL:

Erster 
Winkel

REAL:

Zweiter 
Winkel

CORRTRAFO

INT:
Fehler
nummer

REAL:
Korrek
turvektor

CORRTC

INT:
Fehler
nummer

REAL:
Korrek
turvektor

INT:
Zu modi
fizieren
des Ele
ment

INT:
Zu modi
fizieren
des Ele
ment

INT:
Korrek
turmodus

INT:
Korrek
turmodus

BOOL:
Alarm
unter
drckung
(optional)

BOOL:
Alarm
unter
drckung
(optional)

Untersttzt den Anwen
der dabei, die Rund
achspositionen einer 
Maschine so einzustel
len, dass ein Drehwerk
zeug in eine definierte, 
kinematikunabhngige 
Lage relativ zum Werk
stck gebracht wird. 

Voraussetzung:

Es ist eine 6-Achstrans
formation aktiv ist, die 
mit kinematischen Ket
ten parametriert ist.

Offsetvektoren oder 
Richtungsvektoren der 
Orientierungsachsen 
im kinematischen Mo
dell der Maschine modi
fizieren.

Offsetvektoren oder 
Richtungsvektoren ori
entierbarer Werkzeug
trger nach Maschinen
vermessung modifizie
ren.

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1223

 
 
 
 
 
 
 
Tabellen

4.6 Vordefinierte Funktionen

1224

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Anhang

A.1

Liste der Abkrzungen

A

A

A

ADI4

AC

ALM

ARM

AS

ASCII

ASIC

ASUP

AUTO

AUXFU

AWL

AWP

B

BA

BAG

BCD

BERO

BI

BICO

BIN

BIOS

BKS

BM

BO

BTSS

C

CAD

CAM

CC

CEC

Ausgang

Analog Drive Interface for 4 Axes

Adaptive Control

Active Line Module

Asynchroner rotatorischer Motor

Automatisierungssystem

American Standard Code for Information Interchange: Amerikanische Code-Norm fr 
den Informationsaustausch

Application Specific Integrated Circuit: Anwender-Schaltkreis

Asynchrones Unterprogramm

Betriebsart "Automatic"

Auxiliary Function: Hilfsfunktion

Anweisungsliste

Anwenderprogramm

Betriebsart

Betriebsartengruppe

Binary Coded Decimals: Im Binrcode verschlsselte Dezimalzahlen

Berhrungsloser Nherungsschalter

Binector Input

Binector Connector

Binary Files: Binrdateien

Basic Input Output System

Basiskoordinatensystem

Betriebsmeldung

Binector Output

Bedientafelschnittstelle

Computer-Aided Design

Computer-Aided Manufacturing

Compile Cycle: Compile-Zyklen

Cross Error Compensation

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1225

Anhang

A.1 Liste der Abkrzungen

C

CF-Card

CI

CNC

CO

CoL

COM

CPA

CRT

CSB

CU

CP

CPU

CR

CRC

CST

CTS

Compact Flash-Card

Connector Input

Computerized Numerical Control: Computeruntersttzte numerische Steuerung

Connector Output

Certificate of License

Communication

Compiler Projecting Data: Projektierdaten des Compilers

Cathode Ray Tube: Bildrhre

Central Service Board: PLC-Baugruppe

Control Unit

Communication Processor

Central Processing Unit: Zentrale Rechnereinheit

Carriage Return

Cyclic Redundancy Check

Configured Stop: Konfigurierter Halt

Clear To Send: Meldung der Sendebereitschaft bei seriellen Daten-Schnittstellen

CUTCOM

Cutter Radius Compensation: Werkzeugradiuskorrektur

D

DAU

DB

DBB

DBD

DBW

DBX

DDE

DDS

DIN

DIO

DIR

DLL

DO

DPM

DPR

DRAM

DRF

DRIVE-CLiQ

DRY

DSB

DSC 

DSR

1226

Digital-Analog-Umwandler

Datenbaustein (PLC)

Datenbaustein-Byte (PLC)

Datenbaustein-Doppelwort (PLC)

Datenbaustein-Wort (PLC)

Datenbaustein-Bit (PLC)

Dynamic Data Exchange

Drive Data Set: Antriebsdatensatz

Deutsche Industrie Norm

Data Input/Output: Datenbertragungs-Anzeige

Directory: Verzeichnis

Dynamic Link Library

Drive Object

Dual Port Memory

Dual Port RAM

Dynamischer Speicher (ungepuffert)

Differential Resolver Function: Differential-Drehmelder-Funktion (Handrad)

Drive Component Link with IQ

Dry Run: Probelaufvorschub

Decoding Single Block: Dekodierungseinzelsatz

Dynamic Servo Control / Dynamic Stiffness Control

Data Send Ready

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

D

DW

DWORD

E

E

EES

E/A

ENC

EFP

EGB

EMV

EN

ENC

EnDat

EPROM

Anhang

A.1 Liste der Abkrzungen

Datenwort

Doppelwort (aktuell 32 Bit)

Eingang

Execution from External Storage

Ein-/Ausgabe

Encoder: Istwertgeber

Einfach Peripheriemodul (PLCE/ABaugruppe)

Elektronisch gefhrdete Baugruppen/Bauelemente

Elektromagnetische Vertrglichkeit

Europische Norm

Encoder: Istwertgeber

Geberschnittstelle

Erasable Programmable Read Only Memory: Lschbarer, elektrisch programmierba
rer nur Lesespeicher

ePS Network Services

Dienste zur internetgesttzten Maschinen-Fernwartung

EQN

ES

ESR

ETC

F

FB

FC

FDD

FdStop

FEPROM

FIFO

FIPO

FPU

FM

FRK

FST

FUP

FW

G

GC

GDIR

Typbezeichnung eines Absolutwertgebers mit 2048 Sinussignalen/Umdrehung

Engineering System

Erweitertes Stillsetzen und Rckziehen

ETCTaste ">"; Erweiterung der Softkeyleiste im gleichen Men

Funktionsbaustein (PLC)

Function Call: Funktionsbaustein (PLC)

Feed Disable: Vorschubsperre

Feed Stop: Vorschub Halt

FlashEPROM: Les und schreibbarer Speicher

First In First Out: Speicher, der ohne Adressangabe arbeitet und dessen Daten in 
derselben Reihenfolge gelesen werden, in der sie gespeichert wurden

Feininterpolator

Floating Point Unit: Gleitpunkteinheit

Fehlermeldung

Frsradiuskorrektur

Feed Stop: Vorschub Halt

Funktionsplan (Programmiermethode fr PLC)

Firmware

Global Control (PROFIBUS: Broadcast-Telegram)

Globaler Teileprogrammspeicher

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1227

Anhang

A.1 Liste der Abkrzungen

G

GEO 

GIA 

GND

GP

GS 

GSD

GSDML

GUD

H

HEX 

HiFu 

HLA

HMI

HSA

HT

HW

I

IBN

IKA

IM

IMR

IMS

INC

INI

IPO

ISA

ISO

J

JOG

K

KV
KP
K
KOP

1228

Geometrie, z.B. Geometrieachse

Gear Interpolation Data: Getriebeinterpolationsdaten

Signal Ground

Grundprogramm (PLC)

Getriebestufe

Gertestammdatei zur Beschreibung eines PROFIBUS Slaves

Generic Station Description Markup Language: XML-basierte Beschreibungs-sprache 
zur Erstellung einer GSD-Datei

Global User Data: Globale Anwenderdaten

Kurzbezeichnung fr hexadezimale Zahl 

Hilfsfunktion 

Hydraulischer Linearantrieb

Human Machine Interface: SINUMERIK-Bedienoberflche

Hauptspindelantrieb

Handheld Terminal

Hardware

Inbetriebnahme

Interpolatorische Kompensation

Interface-Modul: Anschaltungsbaugruppe

Interface-Modul Receive: Anschaltungsbaugruppe fr Empfangsbetrieb

Interface-Modul Send: Anschaltungsbaugruppe fr Sendebetrieb

Increment: Schrittma

Initializing Data: Initialisierungsdaten

Interpolator

International Standard Architecture

International Standard Organization

Jogging: Einrichtbetrieb

Verstrkungsfaktor des Regelkreises

Proportionalverstrkung

bersetzungsverhltnis

Kontaktplan (Programmiermethode fr PLC)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Anhang

A.1 Liste der Abkrzungen

Logic Machine Axis Image: Logisches Maschinenachsen-Abbild

Local Area Network

Liquid-Crystal Display: Flssigkristallanzeige

Light Emitting Diode: Leuchtdiode

Line Feed

Lagemesssystem

Lageregler

Least Significant Bit: Niederwertigstes Bit

Local User Data: Anwenderdaten (lokal)

Media Access Control

Main program: Hauptprogramm (OB1, PLC)

Megabyte

Motion Control Interface

MotionControlInformationSystem

Machine Control Panel: Maschinensteuertafel

Maschinendatum bzw. Maschinendaten

Manual Data Automatic: Handeingabe

Motor Data Set: Motordatensatz

Meldungswort

Maschinenkoordinatensystem

Motor Module

Main Program File: Hauptprogramm (NC)

Multi Point Interface

Maschinensteuertafel

Numerical Control: Numerische Steuerung mit Satzaufbereitung, Verfahrbereich usw.

Numerical Control Unit: Hardware-Einheit des NC

Numerical Control Kernel

NC Start Disable

Bezeichnung des Betriebssystems des NC

Nahtstellensignal

Non-Uniform Rational B-Spline

Nullpunktverschiebung

Numerical Extension: Achserweiterungsbaugruppe

L

LAI

LAN

LCD

LED

LF

LMS

LR

LSB

LUD

M

MAC

MAIN

MB

MCI

MCIS

MCP

MD

MDA

MDS

MELDW

MKS

MM

MPF

MPI

MSTT

N

NC

NCU

NCK

NCSD

NRK

NST

NURBS

NV

NX

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1229

Anhang

A.1 Liste der Abkrzungen

O

OB

OEM

OLP

OP

OPI

OPT

OSI

P

PAA

PAE

PC

PCIN

PCMCIA

PCU

PG

PKE

PKW

PLC

PN

PNO

PO

POE

POS

POSMO A

POSMO CA

POSMO CD

POSMO SI

PPO

PPU

Organisationsbaustein in der PLC

Original Equipment Manufacturer

Optical Link Plug: Busstecker fr Lichtleiter

Operation Panel: Bedieneinrichtung

Operation Panel Interface: Bedientafel-Anschaltung

Options: Optionen

Open Systems Interconnection: Normung fr Rechnerkommunikation

Prozessabbild der Ausgnge

Prozessabbild der Eingnge

Personal Computer

Name der SW fr den Datenaustausch mit der Steuerung

Personal Computer Memory Card International Association:
Speichersteckkarten-Normierung

PC Unit: PC-Box (Rechnereinheit)

Programmiergert

Parameterkennung: Teil eines PKW

Parameterkennung: Wert (Parametrierteil eines PPO)

Programmable Logic Control: Anpass-Steuerung

PROFINET

PROFIBUS-Nutzerorganisation

POWER ON

Programmorganisationseinheit

Position/Positionieren

Positioning Motor Actuator: Positioniermotor

Positioning Motor Compact AC: Komplette Antriebseinheit mit integrierter Leistungs 
und Reglungsbaugruppe sowie Positioniereinheit und Programmspeicher; Wechsel
stromEinspeisung

Positioning Motor Compact DC: wie CA, jedoch Gleichstromeinspeisung

Positioning Motor Servo Integrated: Positioniermotor; Gleichstromeinspeisung

Parameter Prozessdaten Objekt ; Zyklisches Datentelegramm bei der bertragung mit 
PROFIBUSDP und Profil "Drehzahlvernderbare Antriebe"

Panel Processing Unit (zentrale Hardware einer Panel-basierten CNC-Steuerung z. B. 
SINUMERIK 828D)

PROFIBUS

Process Field Bus: Serieller Datenbus

PRT 

PSW

PTP 

PUD

PZD

1230

Programmtest

Programmsteuerwort

Point to Point: Punkt zu Punkt

Program Global User Data: Programmglobale Anwendervariable

Prozessdaten: Prozessdatenteil eines PPO

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Anhang

A.1 Liste der Abkrzungen

Quadrantenfehler Kompensation

Random Access Memory: Schreib-/Lese-Speicher

Funktion Referenzpunkt anfahren

Funktion Repositionieren

Read In Disable

Reduced Instruction Set Computer: Prozessortyp mit kleinem Befehlssatz und schnell
em Befehlsdurchsatz

Rapid Override: Eingangskorrektur

R-Parameter, Rechenparameter, vordefinierte Anwendervariable

R-Parameter Active: Speicherbereich in NC fr R-Parameternummern

Roll Pitch Yaw: Drehungsart eines Koordinatensystems

Rapid Traverse Linear Interpolation: Lineare Interpolation bei Eilgangbewegung

Request To Send: Sendeteil einschalten, Steuersignal von seriellen Daten-Schnittstel
len

Real Time Control Protocol

Synchronaktion

Safe Brake Control: Sichere Bremsansteuerung

Single Block: Einzelsatz

Subroutine: Unterprogramm (PLC)

Safe Brake Test

Safety Control Channel

Structured Control Language

Settingdatum bzw. Settingdaten

System Datenbaustein

Safe Direction

Setting Data Active: Kennzeichnung (Dateityp) fr Settingdaten

Q

QFK

R

RAM

REF

REPOS

RID

RISC

ROV

RP

RPA

RPY

RTLI

RTS

RTCP

S

SA

SBC

SBL

SBR

SBT

SCC

SCL

SD

SDB

SDI

SEA

SERUPRO

Search-Run by Program Test: Satzsuchlauf via Programmtest

SFB

SFC

SGA

SGE

SH

SIC

SIM

SK

SKP

SLM

System Funktionsbaustein

System Function Call

Sicherheitsgerichteter Ausgang

Sicherheitsgerichteter Eingang

Sicherer Halt

Safety Info Channel

Single in Line Module

Softkey

Skip: Funktion zum Ausblenden eines Teileprogrammsatzes

Synchroner Linearmotor

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1231

Anhang

A.1 Liste der Abkrzungen

S

SLP

SLS

SM

SMC

SME

SMI

SOS

SPF

SPS

SRAM

SRK

SRM

SS1

SS2

SSFK

SSI

SSL

STO

STW

SUG

SW

SYF

Safe Limited Position

Safely Limited Speed

Schrittmotor

Sensor Module Cabinet Mounted

Sensor Module Externally Mounted

Sensor Module Integrated

Safe Operating Stop

Sub Program File: Unterprogramm (NC)

Speicherprogrammierbare Steuerung = PLC

Statischer Speicher (gepuffert)

Schneidenradiuskorrektur

Synchron rotatorischer Motor

Safe Stop 1

Safe Stop 2

Spindelsteigungsfehlerkompensation

Serial Synchron Interface: Serielle synchrone Schnittstelle

Satzsuchlauf

Safe Torque Off

Steuerwort

Scheibenumfangsgeschwindigkeit

Software

System Files: Systemdateien

SYNACT 

Synchronized Action: Synchronaktion

T

TB

TCP

TCP/IP

TCU

TEA

TIA

TM

TO

TOA

TRANSMIT

TTL

TZ

Terminal Board (SINAMICS)

Tool Center Point: Werkzeugspitze

Transport Control Protocol / Internet Protocol

Thin Client Unit

Testing Data Active: Kennung fr Maschinendaten

Totally Integrated Automation

Terminal Module (SINAMICS)

Tool Offset: Werkzeugkorrektur

Tool Offset Active: Kennzeichnung (Dateityp) fr Werkzeugkorrekturen

Transform Milling Into Turning: Koordinatentransformation fr Frsbearbeitungen an 
einer Drehmaschine

TransistorTransistorLogik (SchnittstellenTyp)

Technologiezyklus

1232

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Anhang

A.1 Liste der Abkrzungen

U

UFR

UP

USB

USV

V

VDI

VDI

VDE

VI

VO

VSA

W

WAB

WKS

WKZ

WLK

WOP

WPD

WRK

WZ

WZK

WZV

WZW

X

XML

Z

ZOA

ZSW

User Frame: Nullpunktverschiebung

Unterprogramm

Universal Serial Bus

Unterbrechungsfreie Stromversorgung

Interne Kommunikationsschnittstelle zwischen NC und PLC

Verein Deutscher Ingenieure

Verband Deutscher Elektrotechniker

Voltage Input

Voltage Output

Vorschubantrieb

Funktion Weiches An- und Abfahren

Werkstckkoordinatensystem

Werkzeug

Werkzeuglngenkorrektur

Werkstatt-orientierte Programmierung

Work Piece Directory: Werkstckverzeichnis

Werkzeug-Radius-Korrektur

Werkzeug

Werkzeugkorrektur

Werkzeugverwaltung

Werkzeugwechsel

Extensible Markup Language

Zero Offset Active: Kennung fr Nullpunktverschiebungen

Zustandswort (des Antriebs)

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1233

Anhang

A.2 Dokumentationsbersicht

A.2

Dokumentationsbersicht

Eine umfangreiche Dokumentation zu den Funktionen von SINUMERIK MC ab der Version 
1.12 finden Sie unter Dokumentationsbersicht SINUMERIK MC (https://
support.industry.siemens.com/cs/ww/de/view/109771043).

Sie haben die Mglichkeit, die Dokumente anzuzeigen oder im PDF- und HTML5-Format 
herunterzuladen.

Die Dokumentation ist in folgende Kategorien unterteilt:

 Anwender: Bedienen

 Anwender: Programmieren

 Hersteller/Service: Inbetriebnahme

 Hersteller/Service: Funktionen

 Safety Integrated

1234

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Index

$

$A_PROBE, 597, 604
$A_PROBE_LIMITED, 605
$AA_ACC, 128
$AA_ATOL, 853
$AA_COUP_ACT

bei axialer Leitwertkopplung, 896
beim Mitschleppen, 874

$AA_FGREF, 112
$AA_FGROUP, 112
$AA_G0MODE, 181
$AA_LEAD_SP, 896
$AA_LEAD_SV, 896
$AA_MM, 598
$AA_MM1...4, 605
$AA_MW, 598
$AA_MW1...4, 605
$AC_ACT_PROG_NET_TIME, 945
$AC_ACTUAL_PARTS, 948
$AC_CTOL, 853
$AC_CTOL_G0_ABS, 185
$AC_CUT_INV, 787
$AC_CUTMOD, 786
$AC_CUTMOD_ANG, 786
$AC_CUTMODK, 786
$AC_CUTTING_TIME, 944
$AC_CYCLE_TIME, 944
$AC_DELAYFST, 836
$AC_F_TYPE, 142
$AC_FGROUP_MASK, 112
$AC_FZ, 142
$AC_MEA, 598, 605
$AC_OLD_PROG_NET_TIME, 945
$AC_OLD_PROG_NET_TIME_COUNT, 945
$AC_OPERATING_TIME, 944
$AC_OTOL, 853
$AC_OTOL_ G0_ABS, 185
$AC_PROG_NET_TIME_TRIGGER, 945
$AC_REPOS_PATH_MODE, 845
$AC_REQUIRED_PARTS, 947
$AC_S_TYPE, 96
$AC_SMAXVELO, 849
$AC_SMAXVELO_INFO, 849
$AC_SPECIAL_PARTS, 948
$AC_STOLF, 185
$AC_SVC, 96
$AC_TOFF, 86

$AC_TOFFCR, 86
$AC_TOFFL, 86
$AC_TOFFR, 86
$AC_TOTAL_PARTS, 947
$AC_TRAFO_CORR_ELEM_P, 717
$AC_TRAFO_CORR_ELEM_T, 717
$AC_TRAFO_ORIAX_LOC, 718
$AN_POWERON_TIME, 944
$AN_SETUP_TIME, 944
$NT_CLOSE_CHAIN_T, 718
$NT_CNTRL, 717
$NT_CORR_ELEM_P, 717
$NT_CORR_ELEM_T, 717
$NT_NAME, 710
$NT_ROT_AX_NAME, 782
$NT_TRAFO_INDEX, 710
$P_ACTBFRAME, 635
$P_AD, 786
$P_AEP, 276
$P_APDV, 276
$P_APR, 276
$P_BFRAME, 634
$P_CHBFRAME, 634
$P_CHBFRMASK, 635
$P_CTOL, 854
$P_CTOL_ G0_ABS, 185
$P_CUT_INV, 787
$P_CUTMOD, 786
$P_CUTMOD_ANG, 786
$P_CUTMOD_ERR, 788
$P_CUTMODK, 786
$P_DELAYFST, 836
$P_F_TYPE, 143
$P_FGROUP_MASK, 113
$P_FZ, 143
$P_GWPS, 103
$P_IFRAME, 636
$P_IS_EES_PATH, 556
$P_NCBFRAME, 634
$P_NCBFRMASK, 635
$P_ORI_DIFF, 777
$P_ORI_POS, 777
$P_ORI_SOL, 778
$P_ORI_STAT, 781
$P_OTOL, 854
$P_OTOL_ G0_ABS, 185
$P_PATH, 555
$P_PFRAME, 636
$P_PROG, 555

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1235

Index

$P_PROGPATH, 555
$P_S_TYPE, 97
$P_SIM, 608
$P_STACK, 555
$P_STOLF, 185
$P_SUBPAR, 489
$P_SVC, 97
$P_TOFF, 86
$P_TOFFCR, 86
$P_TOFFL, 86
$P_TOFFR, 86
$P_TOOLENV, 796
$P_TOOLENVN, 796
$P_WORKAREA_CS_COORD_SYSTEM, 351
$P_WORKAREA_CS_LIMIT_MINUS, 352
$P_WORKAREA_CS_LIMIT_PLUS, 351
$P_WORKAREA_CS_MINUS_ENABLE, 351
$P_WORKAREA_CS_PLUS_ENABLE, 351
$PA_ATOL, 854
$PA_FGREF, 112
$PA_FGROUP, 113
$SA_LEAD_TYPE, 896
$SC_CONTPREC, 830
$SC_MINFEED, 831
$SC_PA_ACTIV_IMMED, 576
$SN_PA_ACTIV_IMMED, 576
$TC_CARR_CORR_ELEM, 769
$TC_CARR1...14, 759
$TC_CARR18...23, 759
$TC_CARR18[m], 763
$TC_DP1 ... 25, 719
$TC_ECPxy, 723
$TC_SCPxy, 723
$TC_TP_MAX_VELO, 93

*

* (Rechenfunktion), 432

/

/ (Rechenfunktion), 432

+

+ (Rechenfunktion), 432

<

< (Vergleichsoperator), 434

<< (Verkettungsoperator), 441
<= ( Vergleichsoperator), 434
<> (Vergleichsoperator), 434

=

== (Vergleichsoperator), 434

>

> (Vergleichsoperator), 434
>= (Vergleichsoperator), 434

0

0-Zeichen, 439

A

Abrichterkoordinatensystem setzen - CYCLE435

extern programmieren, 1051

ABS, 432
Absolutma, 28
Abspanen

untersttzende Funktionen, 971

Abspanen - CYCLE951

extern programmieren, 1081

Abspanen / Abspanen Rest / Stechen / Stechen Rest / 
Stechdrehen / Stechdrehen Rest - CYCLE952

extern programmieren, 1084

Abstich - CYCLE92

extern programmieren, 1038

AC, 150
ACC, 127
ACCLIMA, 826
Achs

-tausch, 856
-typen, 366

Achsen

Bahn-, 369
Geometrie-, 366
Haupt-, 366
Kanal-, 369
Kommando-, 371
Maschinen-, 368
Mitschlepp-, 873
PLC-, 371
Positionier-, 369
Synchron-, 370
Zusatz-, 368

1236

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Index

ACN, 157
ACOS, 432
ACP, 157
ACTBLOCNO, 500
ACTFRAME, 614
ADIS, 290
ADISPOS, 290
ADISPOSA, 609
Adressbuchstaben, 1155
Adresse

Wertzuweisung, 46

Adressen, 372
Adressierung, 549
Alarme

im NC-Programm setzen, 962

ALF

fr Schnellabheben von der Kontur, 540
fr Schnellrckzug whrend 
Gewindeschneiden, 226

AMIRROR, 323
AND, 434
Anfahrpunkt/-winkel, 258
Anfang Programmblock - GROUP_BEGIN, 1112
ANG, 206
ANG1, 206
ANG2, 206
Anschlagpunkt, 32
Anweisung, 42
Anwender-XML, 953
AP, 175
APR, 403
APRB, 403
APRP, 403
APW, 403
APWB, 403
APWP, 403
AR

Kreisprogrammierung, 194

Arbeitsebene, 31
Arbeitsfeldbegrenzung

im BKS, 347
Arbeitsspeicher, 556
AROT, 311
AROTS, 317
Array, 408
AS, 480
ASCALE, 320
ASIN, 432
Asynchrones Pendeln, 931
ATAN2, 432
ATOL, 850
ATRANS, 305

Aufrunden, 437
Ausblendebenen, 48
Ausblendstze, 47
Ausdrehen - CYCLE86

extern programmieren, 1037

Ausgabe

auf externes Gert/Datei, 958

Automatischer Unterbrechungszeiger, 838
AV, 903
AX, 862
Axiale Leitwertkopplung, 892
AXIS, 387
AXNAME, 440
AXSTRING, 862
AXTOCHAN, 860
AXTOSPI, 862

B

B_AND, 434
B_NOT, 434
B_OR, 434
B_XOR, 434
Bahnachsen, 369
Bahnfrsen - CYCLE72

extern programmieren, 1014

Bahnrelative Werkzeugorientierung, 672
Bahnsteuerbetrieb, 290
Ballige Gewinde, 230
Basis-Koordinatensystem, 36
Basis-Nullpunktsystem, 37
Basisverschiebung, 38
Bearbeitungszeit, 944
Befehl, 42
Beliebige Positionen - CYCLE802
extern programmieren, 1058

Beschleunigungsmodus, 824
Bewegungsendekriterium
programmierbar, 609

Bezeichner, 41
Bezugspunkte, 32
Bezugsradius, 111
BFRAME, 614
Binr-Konstante, 377
BKS, 36
BLOCK, 525
BLSYNC, 535
BNS, 37
Bohren - CYCLE82

extern programmieren, 1027

Bohrer, 71

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1237

Index

Bohrgewinde frsen - CYCLE78
extern programmieren, 1022

BOOL, 387
BOUND, 415
BRISK, 824
BRISKA, 824

C

CAC, 587
CACN, 587
CACP, 587
CALL, 524
CALLPATH, 527
CASE, 459
case-insensitiv, 548
CDC, 587
CDOF, 279
CDOF2, 279
CDON, 279
CFC, 132
CFIN, 132
CFINE, 623
CFTCP, 132
CHAN, 387
CHANDATA, 556
CHAR, 387
CHF, 240
CHKDNO, 756
CHR, 240
CIC, 587
CIP, 197
CLEARM, 474
CLRINT, 537
COARSE, 903
COARSEA, 609
COLLPAIR, 705
COMPCAD, 587
COMPLETE, 556
COMPOF, 587
COMPSURF, 587
CONTDCON, 977
CONTPRON, 971
CORROF, 332
CORRTC, 766
CORRTRAFO, 711
COS, 432
COUPDEF, 903
COUPDEL, 903
COUPOF, 903
COUPOFS, 903
COUPON, 903

1238

COUPONC, 903
COUPRES, 903
CP, 688
CPBC, 915
CPDEF, 914
CPDEL, 914
CPFMOF, 917
CPFMON, 917
CPFMSON, 916
CPFPOS + CPOF, 917
CPFPOS + CPON, 915
CPFRS, 914
CPLA, 914
CPLCTID, 914
CPLDEF, 914
CPLDEL, 914
CPLDEN, 914
CPLINSC, 919
CPLINTR, 919
CPLNUM, 914
CPLOF, 914
CPLON, 914
CPLOUTSC, 919
CPLOUTTR, 919
CPLPOS, 915
CPLSETVAL, 914
CPMALARM, 920
CPMBRAKE, 920
CPMPRT, 919
CPMRESET, 918
CPMSTART, 919
CPMVDI, 920
CPOF, 914
CPON, 914
CPRECOF, 830
CPRECON, 830
CPROT, 573
CPROTDEF, 570
CPSETTYPE, 920
CPSYNCOP, 919
CPSYNCOP2, 919
CPSYNCOV, 920
CPSYNFIP, 919
CPSYNFIP2, 920
CPSYNFIV, 920
CR, 192
CROTS, 317
CT, 200
CTAB, 886
CTABDEF, 876
CTABDEL, 882
CTABEND, 876

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

CTABEXISTS, 882
CTABFNO, 890
CTABFPOL, 890
CTABFSEG, 890
CTABID, 884
CTABINV, 886
CTABISLOCK, 884
CTABLOCK, 883
CTABMEMTYP, 884
CTABMPOL, 890
CTABMSEG, 890
CTABNO, 890
CTABNOMEM, 890
CTABPERIOD, 884
CTABPOL, 890
CTABPOLID, 890
CTABSEG, 890
CTABSEGID, 890
CTABSEV, 886
CTABSSV, 886
CTABTEP, 886
CTABTEV, 886
CTABTMAX, 886
CTABTMIN, 886
CTABTSP, 886
CTABTSV, 886
CTABUNLOCK, 883
CTOL, 850
CTOLG0, 182
CTRANS, 623
CUT2D, 281
CUT2DD, 281
CUT2DF, 281
CUT2DFD, 281
CUT3DC, 735
CUT3DCC, 745
CUT3DCCD, 745
CUT3DCD, 735
CUT3DF, 739
CUT3DFD, 739
CUT3DFF, 739
CUT3DFS, 739
CUTCONOF, 283
CUTCONON, 283
CUTMOD, 783
CUTMODK, 783
CYCLE4071

extern programmieren, 1090

CYCLE4072

extern programmieren, 1092

CYCLE4073

extern programmieren, 1096

Index

CYCLE4074

extern programmieren, 1097

CYCLE4075

extern programmieren, 1100

CYCLE4077

extern programmieren, 1103

CYCLE4078

extern programmieren, 1107

CYCLE4079

extern programmieren, 1109

CYCLE435 - Abrichterkoordinatensystem setzen

extern programmieren, 1051

CYCLE495 - Profilieren

extern programmieren, 1051

CYCLE60 - Gravur

extern programmieren, 1003

CYCLE61 - Planfrsen

extern programmieren, 1006

CYCLE62 - Konturaufruf

extern programmieren, 1008

CYCLE63 - Konturtasche frsen / Konturtasche 
Restmaterial / Konturzapfen frsen / Konturzapfen 
Restmaterial

extern programmieren, 1008
CYCLE64 - Konturtasche vorbohren
extern programmieren, 1011

CYCLE70 - Gewindefrsen

extern programmieren, 1013

CYCLE72 - Bahnfrsen

extern programmieren, 1014

CYCLE76 - Rechteckzapfen

extern programmieren, 1017

CYCLE77 - Kreiszapfen

extern programmieren, 1020
CYCLE78 - Bohrgewinde frsen
extern programmieren, 1022

CYCLE79 - Mehrkant

extern programmieren, 1024

CYCLE800 - Schwenken Ebene / Schwenken 
Werkzeug / Ausrichten Werkzeug
extern programmieren, 1053

CYCLE801 - Positionsmuster Gitter oder Rahmen

extern programmieren, 1056
CYCLE802 - Beliebige Positionen
extern programmieren, 1058

CYCLE81 - Zentrieren

extern programmieren, 1026

CYCLE82 - Bohren

extern programmieren, 1027

CYCLE83 - Tieflochbohren 1

extern programmieren, 1030

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1239

Index

CYCLE830 - Tieflochbohren 2

extern programmieren, 1061
CYCLE832 - High Speed Settings
extern programmieren, 1067

CYCLE84 - Gewindebohren ohne Ausgleichsfutter

extern programmieren, 1033

CYCLE840 - Gewindebohren mit Ausgleichsfutter

extern programmieren, 1071

CYCLE85 - Reiben

extern programmieren, 1036

CYCLE86 - Ausdrehen

extern programmieren, 1037

CYCLE899 - Offene Nut

extern programmieren, 1073

CYCLE92 - Abstich

extern programmieren, 1038

CYCLE930 - Einstich

extern programmieren, 1076

CYCLE940 - Freistich Form E und F / Freistich 
Gewinde

extern programmieren, 1079

CYCLE95 - Konturabspanen

extern programmieren, 1040

CYCLE951 - Abspanen

extern programmieren, 1081

CYCLE952 - Abspanen / Abspanen Rest / Stechen / 
Stechen Rest / Stechdrehen / Stechdrehen Rest

extern programmieren, 1084

CYCLE98 - Gewindekette

extern programmieren, 1042

CYCLE99 - Gewindedrehen

extern programmieren, 1046

D

D..., 78
D0, 78
DAC, 164
Datei

-informationen, 568

Dateiname, 553
DC, 157
DEF, 387
DEFAULT, 459
DEFINE ... AS, 480
DELAYFSTOF, 834
DELAYFSTON, 834
DELDL, 723
DELETE, 564
DELOBJ, 701
DELTOOLENV, 794
Dezimal-Konstante, 376

1240

DIACYCOFA, 164
DIAM90, 162
DIAM90A, 164
DIAMCHAN, 164
DIAMCHANA, 164
DIAMCYCOF, 162
DIAMOF, 162
DIAMOFA, 164
DIAMON, 162
DIAMONA, 164
DIC, 164
DILF, 226
DIN Unterprogrammname, 553
DIN 66217, 34
DISABLE, 537
DISC, 262
DISCL, 265
DISPLOF, 500
DISPLON, 500
DISPR, 839
DISR, 265
DISRP, 265
DITE, 224
DITS, 224
DIV, 432
DL, 722
D-Nummer

frei vergeben, 756

D-Nummern

prfen, 756
umbenennen, 757

DO, 930
Drehachsen

Abstandsvektoren, 759
Richtungsvektoren, 759
Verdrehwinkel, 759

Drehung

des Orientierungsvektors, 670
Programmierbare, 311

Drehwerkzeuge, 74
Drehzahlsynchronitt, 903
Drei-Finger-Regel, 34
DRFOF, 334
DRIVE, 824
DRIVEA, 824
Durchmesser-Programmierung, 162
DV, 903
DYNFINISH, 828
DYNNORM, 828
DYNPOS, 828
DYNPREC, 828
DYNROUGH, 828

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

DYNSEMIFIN, 828

E

Easy XML, 953
Eckenverzgerung an allen Ecken, 609
Eckenverzgerung an Innenecken, 609
EES, 547
EES-Notation, 549
EG

Elektronisches Getriebe, 897

EGDEF, 897
EGDEL, 902
EGOFC, 901
EGOFS, 901
EGON, 898
EGONSYN, 898
EGONSYNE, 898
Einrichtewert, 723
Einstich - CYCLE930

extern programmieren, 1076

Eintauchtiefe, 738
Einzelsatz

-unterdrckung, 495

Elektronisches Getriebe, 897
ELSE, 468, 930
ENABLE, 537
Ende Einfahrzusatz - GROUP_ADDEND

extern programmieren, 1113

Ende Programmblock - GROUP_END

extern programmieren, 1112

ENDFOR, 471
ENDIF, 468
ENDLABEL, 461
ENDLOOP, 470
Endlosschleife, 470
ENDWHILE, 472
ENS, 38
Erweiterte Adressschreibweise, 373
Eulerwinkel, 655
EVERY, 930
EXECSTRING, 430
EXECTAB, 982
EXECUTE, 984
EXP, 432
EXTCALL

fr SINUMERIK 840D sl, 529

EXTCLOSE, 958
EXTERN, 518
extern programmieren, 1112
Externe Nullpunktverschiebung, 624
EXTOPEN, 958

Index

F

F...

bei Geradeninterpolation, 186
bei Gewindeschneiden G34 G35, 223
bei Vorschub, 105

FA, 123
FAD, 265
Fahrbefehl, 170
FALSE, 387
Fase, 240
FB, 137
FCTDEF, 731
FCUB, 819
FD, 128
FDA, 128
Feld

-definition, 408
-element, 409

Feldindex, 411
FENDNORM, 608
Festanschlag, 358
Festpunkt

anfahren, 354

FFWOF, 829
FFWON, 829
FGREF, 105
FGROUP, 105
FIFOCTRL, 832
FILEDATE, 568
FILEINFO, 568
FILESIZE, 568
FILESTAT, 568
FILETIME, 568
FINE, 903
FINEA, 609
FL, 105
FLIN, 819
FMA, 134
FNORM, 819
Folgeachse

bei axialer Leitwertkopplung, 892

FOR, 471
FP, 354
FPO, 819
FPR, 123
FPRAOF, 123
FPRAON, 123
Frame

abwhlen, 331
-Anweisungen, 302

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1241

Index

aufrufen, 620
-Kettung, 638
-Skalierung, 320
-Spiegelung, 323

FRAME, 387
Framekomponente

FI, 619
MI, 619
RT, 619
SC, 619
TR, 619
Frames, 300

Frameketten, 622
globale, 632
Kanalspezifische, 633
System-, 634
zuweisen, 621

Framevariable

Aufruf von Koordinatentransformationen, 612
Vordefinierte Framevariable, 614
Werte zuweisen, 617

Frserbearbeitungspunkt, 738
Frserhilfspunkt, 738
Frserspitze, 738
Frswerkzeuge, 69
FRC, 240
FRCM, 240
Freistich Form E und F / Freistich Gewinde - 
CYCLE940

extern programmieren, 1079

FROM, 930
FTOCOF, 734
FTOCON, 734
Funktion

vordefinierte, 1210

G

G0-Toleranzen, 182
G1, 186
G110, 173
G111, 173
G112, 173
G140, 265
G141, 265
G142, 265
G143, 265
G147, 265
G148, 265
G153

bei Frame abwhlen, 331
bei Nullpunktverschiebung, 144

G17, 146
G18, 146
G19, 146
G2, 189
G247, 265
G248, 265
G25

Arbeitsfeldbegrenzung, 347
Spindeldrehzahlbegrenzung, 103

G26

Arbeitsfeldbegrenzung, 347
Spindeldrehzahlbegrenzung, 103

G290, 968
G291, 968
G3, 189
G33, 216
G335, 230
G336, 230
G34, 223
G340, 265
G341, 265
G347, 265
G348, 265
G35, 223
G4, 363
G40, 246
G41, 246
G42, 246
G450, 262
G451, 262
G460, 276
G461, 276
G462, 276
G5, 685
G500

bei Nullpunktverschiebung, 144

G505 ... G599, 144
G53

bei Frame abwhlen, 331
bei Nullpunktverschiebung, 144

G54 ... G57, 144
G58, 309
G59, 309
G60, 288
G601, 288
G602, 288
G603, 288
G62, 608
G621, 608
G64, 290
G641, 290
G642, 290

1242

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

G643, 290
G644, 290
G645, 290
G7, 685
G70, 159
G700, 159
G71, 159
G710, 159
G74, 353
G75, 354
G810 ... G819, 607
G820 ... G829, 607
G9, 288
G90, 150
G91, 152
G93, 105
G94, 105
G95, 105
G96, 97
G961, 97
G962, 97
G97, 97
G971, 97
G972, 97
G973, 97
G-Befehle, 1167
G-Code

indirekt programmieren, 427

Genauhalt, 288
GEOAX, 863
Geometrie

-achsen, 366
Geometrieachse

umschalten, 863

Geraden

-interpolation, 186

Geschwindigkeitskopplung, 906
GET, 856
GETACTTD, 758
GETD, 856
GETDNO, 757
GETTCOR, 796
GETTENV, 795
GETVARAP, 419
GETVARDFT, 421
GETVARDIM, 421
GETVARLIM, 420
GETVARPHU, 418
GETVARTYP, 423
Gewinde

-drehrichtung, 218
-kette, 217

Index

-mehrgngig, 217
-schneiden G33, 216
-schneiden G34 G35, 223
-steigung, 223

Gewindebohren mit Ausgleichsfutter - CYCLE840

extern programmieren, 1071

Gewindebohren ohne Ausgleichsfutter - CYCLE84

extern programmieren, 1033

Gewindedrehen - CYCLE99

extern programmieren, 1046

Gewindefrsen - CYCLE70

extern programmieren, 1013

Gewindekette - CYCLE98

extern programmieren, 1042
GFRAME0 ... GFRAME100, 336
G-Gruppe

Technologie, 828

Glttung

des Orientierungsverlaufs, 681

Globaler Teileprogrammspeicher (GDIR), 547
GOTO, 456
GOTOB, 456
GOTOC, 456
GOTOF, 456
GOTOS, 455
GP, 428
Gravur - CYCLE60

extern programmieren, 1003

GROUP_ADDEND - Ende Einfahrzusatz

extern programmieren, 1113

GROUP_BEGIN - Anfang Programmblock

extern programmieren, 1112

GROUP_END - Ende Programmblock

extern programmieren, 1112

Grundstellung der Werkzeugorientierung 
ORIRESET, 651
GUD, 388
GWPSOF, 102
GWPSON, 102

H

Halt

am Zyklusende, 342
Programmierter, 342
Wahlweiser, 342

Haltesatz, 838
Handrad

-berlagerung, 128

Haupteintrag, 167
Helixinterpolation, 204
Hexadezimal-Konstante, 377

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1243

Index

High Speed Settings - CYCLE832
extern programmieren, 1067

Hilfsfunktionsausgabe

Eigenschaften der Hilfsfunktionen, 337
im Bahnsteuerbetrieb, 340
Schnelle, 339

HOLES1 - Positionsmuster Reihe
extern programmieren, 989

HOLES2 - Positionsmuster Kreis oder Teilkreis

extern programmieren, 989

I

I...

bei Gewindeschneiden G33, 216
bei Gewindeschneiden G34 G35, 223
bei Kreisinterpolation, 189

IC, 152
ID, 930
IDS, 930
IF, 468
IFRAME, 614
INDEX, 443
Indirekte Programmierung
von Adressen, 424
von G-Codes, 427
von Positionsattributen, 428
von Teileprogrammzeilen, 430

INICF, 387
INIPO, 387
INIRE, 387
INIT, 474
INITIAL, 556
INITIAL_INI, 556
Initialisierung

von Feldern, 409

Initialisierungsprogramm, 557
Inkrementalma, 30
INT, 387
INTEGER-Konstante, 376
Interner Vorlaufstopp, 365
Interpolation des Drehvektors, 670
Interruptroutine

Aus-/Einschalten, 537
Lschen, 537
Neu Zuordnen, 536
Programmierbare Verfahrrichtung, 540
Rckzugsbewegung, 540
Schnellabheben von der Kontur, 538

INTERSEC, 980
IPOBRKA, 609
IPOENDA, 609

1244

IPOSTOP, 903
IPTRLOCK, 837
IPTRUNLOCK, 837
IR, 230
ISAXIS, 862
ISFILE, 567
ISNUMBER, 440
ISOCALL, 526
Istwertkopplung, 906
ISVAR, 416

J

J...

bei Gewindeschneiden G34 G35, 223
bei Kreisinterpolation, 189

JERKLIM, 847
JERKLIMA, 826
JR, 230

K

K...

bei Gewindeschneiden G33, 216
bei Gewindeschneiden G34 G35, 223
bei Kreisinterpolation, 189

Kanal

-achsen, 369

Kartesische Koordinaten, 26
Kartesisches PTP-Fahren, 687
Kegelgewinde, 222
Kennung

fr spezielle Zahlenwerte, 51
fr systemeigene Variablen, 51
fr Zeichenkette, 51

Kettenma, 30
Kettenmaangabe, 152
Kinematik

Aufgelste, 763
Kinematiktyp, 763
Klemmoment

-Festanschlag, 361

Kollisionsberwachung, 279
Kommando

-achsen, 371
Kommentare, 46
Konstante, 376
KONT, 255
KONTC, 255
Kontroll

-strukturen, 467

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Index

KONTT, 255
Kontur

anfahren/verlassen, 255
-aufbereitung, 971
-codierung, 977
-element, 170
-tabelle, 971
wieder anfahren, 839
Konturabspanen - CYCLE95

extern programmieren, 1040

Konturaufbereitung

Fehlerrckmeldung, 984

Konturaufruf - CYCLE62

extern programmieren, 1008

Konturecke

anfasen, 240
verrunden, 240

Konturelement

abfahren, 982
Konturgenauigkeit

programmierbare, 830

Konturtasche frsen / Konturtasche Restmaterial / 
Konturzapfen frsen / Konturzapfen Restmaterial  
CYCLE63

extern programmieren, 1008
Konturtasche vorbohren  CYCLE64
extern programmieren, 1011
Konturzug-Programmierung, 206
Koordinaten

Kartesische, 26
Polar-, 27
Zylinder-, 176
Koordinatensystem

Basis-, 36
bersicht, 34

Koordinatentransformationen (Frames), 39
Koppelfaktor, 871
Kopplung

Generische, 913

Kopplungsart, 906
Kopplungsstatus

bei axialer Leitwertkopplung, 896
beim Mitschleppen, 874

Korrektur

-ebene, 283
Werkzeuglngen-, 65
Werkzeugradius-, 66

Korrekturspeicher, 719
KR, 230
Kreisdaten

berechnen, 983

Kreisinterpolation

mit Zwischen- und Endpunkt, 197
Schraubenlinieninterpolation, 204

Kreisnut - SLOT2

extern programmieren, 999

Kreisprogrammierung

Interpolationsarten, 189
mit Mittel- und Endpunkt, 189
mit ffnungswinkel und Mittelpunkt, 194
mit Polarkoordinaten, 196
mit Radius und Endpunkt, 192

Kreistasche - POCKET4

extern programmieren, 994

Kreiszapfen - CYCLE77

extern programmieren, 1020

L

L..., 516
Label, 461
Lagesynchronitt, 903
Lagesynchronitt mit Winkelversatz, 903
Langloch - LONGHOLE

extern programmieren, 1001

Lngsnut - SLOT1

extern programmieren, 996

Laufwerksname, 550
Laufzeit

-verhalten von Kontrollstrukturen, 467

LEAD, 652
LEADOF, 892
LEADON, 892
Leitachse

bei axialer Leitwertkopplung, 892

Leitwertkopplung

Ist- und Sollwertkopplung, 895
Synchronisation Leit- und Folgeachse, 894

Leitwertsimulation, 896
LENTOAX, 815
LF, 45
LFOF, 226
LFON, 226
LFPOS, 226
LFTXT, 226
LFWP, 226
LIFTFAST, 538
LIMS, 97
LINE FEED, 45
Linksgewinde, 218
LLI, 399
LN, 432
Lochstreifenformat, 42

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1245

Index

Logische Operatoren, 434
LONGHOLE - Langloch

extern programmieren, 1001

LookAhead, 295
LOOP, 470
LUD, 388

M

M..., 340
M0, 340
M1, 340
M17, 504
M19

bei Spindeln positionieren, 118
M-Funktionen, 340

M2, 340
M3, 88
M30, 504
M4, 88
M40, 340
M41, 340
M42, 340
M43, 340
M44, 340
M45, 340
M5, 88
M6, 62
M70, 118
Makro, 480
Maschinen

-achsen, 368
-Nullpunkt, 32

Maschinenkoordinatensystem, 34
MASLDEF, 927
MASLDEL, 927
MASLOF, 927
MASLOFS, 927
MASLON, 927
Maangaben

fr Rundachsen und Spindeln, 157
im Durchmesser, 162
im Radius, 162
Mglichkeiten, 150

Mastabsfaktor, 320
Masystem, 159
Masterspindel, 368
MATCH, 443
MAXVAL, 415
MCALL, 521
MD10010, 474
MD10240, 160

1246

MD10260, 159
MD10280, 474
MD10651, 231
MD10710, 226
MD15800, 387
MD18116, 794
MD18156, 387
MD20360, 801
MD24558, 803
MD24658, 803
MD9440, 80
MEAC, 598
MEAFRAME, 628
MEAS, 596
MEASA, 598
MEAW, 596
MEAWA, 598
Mehrkant - CYCLE79

extern programmieren, 1024

Meldungen, 344
M-Funktionen, 340
MINDEX, 443
MINVAL, 415
MIRROR, 323
Mitschleppachsen, 873
Mitschleppen, 871
Mitschleppverband, 871
MKS, 34
MMC, 953
MOD, 432
Modal wirksam, 44
MODAXVAL, 862
MPF, 546
MSG, 344

N

NAMETOINT, 704
NC-Hochsprache, 43
NCK, 387
NCK-Notation, 549
NC-Programm
erstellen, 49
NC-Programmierung
Zeichenvorrat, 50
Nenner-Polynom, 593
NEWCONF, 949
NOC, 903
NORM, 255
NOT, 434
NPROT, 573
NPROTDEF, 570

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Nullframe, 144
Nullpunkte

beim Drehen, 168

Nullpunktsystem
Basis-, 37
Einstellbares, 38
Nullpunktverschiebung
Einstellbare, 144
Externe, 624
Programmierbare, 305

NUMBER, 440
Numerische Erweiterung, 373
NUT, 663
Nutsge, 77

O

OEM-Adressen, 607
OEM-Funktionen, 607
OEMIPO1/2, 607
Offene Nut - CYCLE899

extern programmieren, 1073

OFFN, 246
Offset

Werkzeuglngen-, 82
Werkzeugradius-, 82

OMA1 ... OMA5, 607
Online-Werkzeuglngenkorrektur, 770
OR, 434
ORIAXES, 661
ORIC, 750
ORICONCCW, 663
ORICONCW, 663
ORICONIO, 663
ORICONTO, 663
ORICURVE, 666
ORID, 750
Orientierbare Werkzeugtrger, 759
Orientierungsachsen, 661
Orientierungsprogrammierung, 661
Orientierungstransformation TRAORI

Generische 5/6-Achs Transformation, 642
Maschinenkinematik, 642
Orientierungsbewegungen, 641
Orientierungsprogrammieung, 651
Varianten der Orientierungsprogrammieung, 651

Orientierungsvektor THETA, 670
ORIEULER, 661
ORIMKS, 659
ORIPATH, 673
ORIPATHS, 673
ORIPLANE, 663

Index

ORIRESET(A, B, C), 651
ORIROTA, 670
ORIROTC

bei Drehung der Werkzeugorientierung, 670
bei Interpolation der Werkzeugdrehung, 675

ORIROTR, 670
ORIROTT, 670
ORIRPY, 661
ORIRPY2, 661
ORIS, 750
ORISOF, 681
ORISOLH, 772
ORISON, 681
ORIVECT, 661
ORIVIRT1, 661
ORIVIRT2, 661
ORIWKS, 659
OS, 931
OSB, 931
OSC, 750
OSCILL, 936
OSCTRL, 931
OSD, 750
OSE, 931
OSNSC, 931
OSOF, 750
OSP1, 931
OSP2, 931
OSS, 750
OSSE, 750
OST, 750
OST1, 931
OST2, 931
OTOL, 850
OTOLG0, 182
OVR, 126
OVRA, 126
OVRRAP, 126

P

P..., 520
P_ACTFRAME, 636
Parameter

Aktual-, 487
Formal-, 487
-bergabe bei Unterprogrammaufruf, 518
-bergabe beim Unterprogrammaufruf, 487
Werkzeug-, 719

PAROT, 328
PAROTOF, 328
PCALL, 527

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1247

Index

Pendelbewegung

Umkehrbereich, 938
Umkehrpunkt, 938
Zustellung im Umkehrpunkt, 940

Pendeln

Asynchrones, 931
Asynchrones Pendeln, 931
Synchrones Pendeln, 936
Teilzustellung, 938
ber Synchronaktion steuern, 936

Pfadangabe, 550
PFRAME, 614
PHI

bei Orientierung entlang einer 
Kegelmantelflche, 663
Orientierungspolynome, 669

PHU, 401
PL

bei Polynom-Interpolation, 588

Planachse, 169
Planfrsen - CYCLE61

extern programmieren, 1006

Plangewinde, 221
PLC

-Achsen, 371

PM, 265
PO, 588
PO[PHI]

bei Drehung der Werkzeugorientierung, 673
bei Orientierung entlang einer 
Kegelmantelflche, 663
Orientierungspolynome, 669

PO[PSI]

bei Drehung der Werkzeugorientierung, 673
bei Orientierung entlang einer 
Kegelmantelflche, 663
Orientierungspolynome, 669

PO[THT]

bei Drehung der Werkzeugorientierung, 673
Orientierungspolynome, 669

PO[XH]

bei Orienierungsvorgabe zweier 
Kontaktpunkte, 666
Orientierungspolynome, 669

PO[YH]

bei Orienierungsvorgabe zweier 
Kontaktpunkte, 666
Orientierungspolynome, 669

PO[ZH]

bei Orienierungsvorgabe zweier 
Kontaktpunkte, 666
Orientierungspolynome, 669

POCKET3 - Rechtecktasche

extern programmieren, 991

POCKET4 - Kreistasche

extern programmieren, 994

Pol, 173
Polarkoordinaten, 27
Polarradius, 28
Polar-Transformation, 643
Polarwinkel, 28
POLF

fr Schnellrckzug whrend 
Gewindeschneiden, 226

POLFMASK

fr Schnellrckzug whrend 
Gewindeschneiden, 226

POLFMLIN

fr Schnellrckzug whrend 
Gewindeschneiden, 226

POLY, 588
Polynom-Interpolation, 588
Polynomkoeffizient, 590
POLYPATH, 588
POS, 113
POSA, 113
POSFS, 903
Positionierachsen, 369
Positionsattribute

indirekt programmieren, 428

Positionsmuster Gitter oder Rahmen - CYCLE801

extern programmieren, 1056

Positionsmuster Kreis oder Teilkreis - HOLES2

extern programmieren, 989
Positionsmuster Reihe - HOLES1
extern programmieren, 989

POSP, 113
POT, 432
PR, 265
PREPRO, 503
PRESETON, 625
PRESETONS, 627
PRIO, 535
PRLOC, 387
Process DataShare, 958
Profilieren - CYCLE495

extern programmieren, 1051

Programm

-adressierung, 549
-ende, 44
Initialisierungs-, 557
-kopf, 51
-laufzeiten, 944
-name, 41

1248

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Index

-speicher, 546
-sprnge, 456
-verzweigung, 459
-wiederholung, 520
Programmierter Halt, 342
Programmschleife

Endschleife, 470
IF-Schleife, 468
REPEAT-Schleife, 473
WHILE-Schleife, 472
Zhlschleife, 471

Programmspeicher
Dateitypen, 546
Standard-Verzeichnisse, 546

Programmteil

-wiederholung, 461
Programmteilwiederholung

mit indirekter Programmierung CALL, 525

PROTA, 706
PROTD, 708
PROTS, 707
Prozedur

vordefinierte, 1187

PSI

bei Orientierung entlang einer 
Kegelmantelflche, 663
Orientierungspolynome, 669

PTP, 687
PTPG0, 687
PTPWOC, 688
PUD, 388
Punkt-zu-Punkt-Fahren, 687
PUTFTOC, 734
PUTFTOCF, 733

Q

QU, 339

R

RAC, 164
Radius

effektiver, 111

Radius-Programmierung, 162
Randbedingungen bei Transformationen, 698
READ, 565
REAL, 387
REAL-Konstante, 376

Rechenparameter
Globaler, 386
Kanalspezifische, 384
Rechtecktasche - POCKET3

extern programmieren, 991

Rechteckzapfen - CYCLE76

extern programmieren, 1017

Rechtsgewinde, 218
REDEF, 393
Referenzpunkt, 33
Referenzpunktfahren, 353
Reiben - CYCLE85

extern programmieren, 1036

RELEASE, 856
REP, 408
REPEAT, 461
REPEATB, 461
REPOSA, 839
REPOSH, 839
REPOSHA, 839
REPOSL, 839
REPOSQ, 839
REPOSQA, 839
Restzeit

fr ein Werkstck, 946

RET, 505
RET (parametrierbar), 506
RETB (parametrierbar), 512
RG, 386
RIC, 164
Richtungsvektor, 656
RINDEX, 443
RMBBL, 839
RMEBL, 839
RMIBL, 839
RMNBL, 839
RND, 240
RNDM, 240
Rohteildefinition, 964
ROT, 311
ROTS, 317
ROUND, 432
ROUNDUP, 437
RP, 175
RPL, 311
RPY-Winkel, 655
Ruck

-begrenzung, 824
-korrektur, 847

Rckzug

-richtung beim Gewindeschneiden, 227

Run MyScreens, 953

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1249

Index

Rundung, 240

S

S, 88
Satz, 42

ausblenden, 47
-ende, 45
-ende LF, 51
-lnge, 45
-nummer, 45
Reihenfolge der Anweisungen, 45

Satzanzeige

unterdrcken, 500
Satzweise wirksam, 44
SAVE, 494
SBLOF, 495
SBLON, 495
SCALE, 320
SCC, 97
Schachtelungstiefe

von Kontrollstrukturen, 467

Schleifwerkzeuge, 72
Schneiden

-anzahl von Konturwerkzeugen, 282
-bezugspunkt, 285
-lage, 67
-lage relevante, 285
-mittelpunkt, 67
-nummer, 79
-radius, 67

Schneidennummer, 756
Schnellabheben von der Kontur, 538
Schnellrckzug

Gewindeschneiden, 226

Schnittgeschwindikeit (konstante), 97
Schrgeinstechschleifen, 685
Schrittgeschwindigkeit, 91
Schutzbereiche, 570
Schwenken Ebene / Schwenken Werkzeug / 
Ausrichten Werkzeug  CYCLE800
extern programmieren, 1053

SCPARA, 869
SD41610, 718
SD41611, 718
SD42010, 225
SD42440, 153
SD42442, 153
SD42465, 296
SD42466, 296
SD42475, 679
SD42476, 679

1250

SD42477, 679
SD42900, 726
SD42910, 726
SD42920, 727
SD42930, 727
SD42935, 729
SD42940, 730
SD42984, 785
SD43240, 119
SD43250, 119
SET, 408
SETAL, 962
SETDNO, 757
SETINT, 535
SETM, 474
SETMS, 88
SETTCOR, 803
SF, 216
SIN, 432
Singulre Stellen, 660
SLOT1 - Lngsnut

extern programmieren, 996

SLOT2 - Kreisnut

extern programmieren, 999

SOFT, 824
SOFTA, 824
Sollwertkopplung, 906
Sonderwerkzeuge, 76
Sonderzeichen, 50, 51
SPCOF, 117
SPCON, 117
Speicher

Arbeits-, 556
Programm-, 545
Vorlauf-, 832

SPF, 546
SPI, 862
Spindel

-drehrichtung, 88
-drehzahl, 88
-drehzahlbegrenzung, 103
Haupt-, 368
M-Funktionen, 342
Positionieren, 118
-tausch, 856

SPOS, 118
SPOSA, 118
Sprachmodus, 968
SPRINT, 447
Sprung

auf Programmanfang, 455
auf Sprungmarken, 456

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Sprungmarke

bei Programmsprngen, 457
bei Programmteilwiederholungen, 461

SQRT, 432
SR, 134
SRA, 134
ST, 134
STA, 134
START, 474
STARTFIFO, 832
Startpunkt, 33
Startpunktversatz

beim Gewindeschneiden, 217

Startpunkt-Zielpunkt, 170
STAT, 688
Stirnfrsen, 658
STOLF, 182
STOPFIFO, 832
STOPRE, 832
String

formatieren, 447
-lnge, 443
-operationen, 438
-Verkettung, 441

STRING, 387
STRINGIS, 950
STRLEN, 443
SUBSTR, 444
Suchpfad

bei Unterprogrammaufruf, 554
Programmierbarer Suchpfad, 527

Suchunfhige Bereiche erfassen und suchen, 838
SUG, 102
SUPA

bei Frame abwhlen, 331
bei Nullpunktverschiebung, 144

SVC, 91
S-Wert

Interpretation, 90

Synchron

-achsen, 370
Synchrones Pendeln

Auswertung IPO-Takt, 941
Nchste Teilzustellung, 942
Synchronaktionen, 939
Zuordnung von Pendel- und Zustellachse, 939
Zustellbewegung, 940
Zustellung im Umkehrbereich, 940
Zustellungen festlegen, 939

Synchronlauf
fein, 906
grob, 906

Index

Synchronspindel
Kopplung, 903
-paar festlegen, 908

SYNR, 387
SYNRW, 387
SYNW, 387
Systemframes, 634

T

T0, 62
TAN, 432
TANG, 921
TANGDEL, 925
TANGOF, 925
TANGON, 923
TCARR, 764
TCOABS, 764
TCOFR, 764
TCOFRX, 764
TCOFRY, 764
TCOFRZ, 764
THETA

bei Drehung der Werkzeugorientierung, 670
bei Interpolation der Werkzeugdrehung, 675

Tieflochbohren 1 - CYCLE83

extern programmieren, 1030

Tieflochbohren 2 - CYCLE830

extern programmieren, 1061

TILT, 652
TLIFT, 922
TMOF, 943
TMON, 943
TOFF, 82
TOFFL, 82
TOFFLR, 82
TOFFOF, 770
TOFFON, 770
TOFFR, 82
TOFRAME, 328
TOFRAMEX, 328
TOFRAMEY, 328
TOFRAMEZ, 328
TOLOWER, 442
TOOLENV, 791
TOROT, 328
TOROTOF, 328
TOROTX, 328
TOROTY, 328
TOROTZ, 328
TOUPPER, 442
TOWBCS, 728

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1251

Index

TOWKCS, 728
TOWMCS, 728
TOWSTD, 728
TOWTCS, 728
TOWWCS, 728
TRACYL, 682
TRAFOOF, 700
TRAFOON, 710
TRAILOF, 871
TRAILON, 871
TRANS, 305
Transformation mit schwenkbarer Linearachse, 648
Transformationen

Drei- Vier- und Fnf- Achstransformation, 649
Kinematikunabhngige Grundstellung der 
Werkzeugorientierung, 640
Kinematische Transformationen, 640
Orientierungstransformation, 639
Verkettete Transformationen, 641

Transformationsarten

Allgemeine Funktion, 639

TRANSMIT, 682
TRAORI, 649
TRUE, 387
TRUNC, 432
TU, 692
TURN, 204

U

ULI, 399
Umschaltbare Geometrieachsen, 863
Unterprogramm

Anwendung, 483
-aufruf indirekt, 524
-aufruf mit Parameterbergabe, 518
-aufruf modal, 521
-aufruf ohne Parameterbergabe, 516
-name, 484
Programmierbarer Suchpfad, 527
-rcksprung parametrierbar (RET ...), 506
-rcksprung parametrierbar (RETB...), 512
-wiederholung, 520

Unterprogrammaufruf mit Pfadangabe und 
Parametern, 527
UNTIL, 473

V

Variable

Typenkonvertierung, 423

Variablen

anwenderdefiniert, 387
Typkonvertierung, 439

VELOLIM, 848
VELOLIMA, 826
Vergleichsoperatoren, 434
Verkettung

von Strings, 441
Verschleiwert, 723
Verweilzeit, 363
Verzeichnispfad, 552
Vorlauf

-speicher, 832

Vorlaufstopp

Interner, 365

Vorschub

fr Bahnachsen, 107
fr Positionierachsen, 123
fr Synchronachsen, 109
-geschwindigkeit, 186
-korrektur, 126
Maeinheiten, 110
mit Handradberlagerung, 128
-Override, 130
Regeln, 105
Zeitreziproker, 108

W

WAB, 265
Wahlweiser Halt, 342
WAITC, 903
WAITE, 474
WAITENC, 868
WAITM, 474
WAITMC, 474
WAITP, 113
WAITS, 118
WALCS<n>, 350
WALCS0, 350
WALIMOF, 347
WALIMON, 347
Wegberechnung, 371
Werkstck

-Hauptverzeichnis, 546
-kontur, 171
-Nullpunkt, 32
-verzeichnisse, 546
-zhler, 947

Werkstck-Kette, 716
Werkstckkoordinatensystem, 39

1252

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

Index

Y

Y..., 172

Z

Z..., 172
Zhlschleife, 471
Zeichenvorrat, 50
Zentrieren - CYCLE81

extern programmieren, 1026

Zielpunkt, 170
Zusatzachsen, 368
Zylindergewinde, 221
Zylinderkoordinaten, 176
Zylindermanteltransformation, 643

Werkzeug

-gruppe, 68
-Korrekturspeicher, 67
-lngenkorrektur, 65
-orientierung, 750
-orientierung bei Framewechsel, 766
-parameter, 719
-radiuskorrektur, 66
-schneide, 78
-spitze, 67
-typ, 68
-typennummer, 68
-wechsel mit M6, 62
-wechsel mit T-Nummer, 62
-wechselpunkt, 33

Werkzeugdrehzahl
maximal, 93

Werkzeug-Kette, 716
Werkzeugkorrektur

Koordinatensystem fr Verschleiwerte, 727
Korrekturspeicher, 719
-Offset, 82

Werkzeugkorrekturen

additive, 722

Werkzeugorientierung
bahnrelativ, 672

Werkzeugradiuskorrektur
an Auenecken, 262
CUT2DF, 283
Eckenverzgerung, 608

Werkzeugtrger

-bezugspunkt, 33
-kinematik, 759
-Orientierbare, 764

Wertzuweisung, 46
WHEN, 930
WHEN-DO, 939
WHENEVER, 930
WHENEVER-DO, 939
WHILE, 472
WKS, 39

am Werkstck ausrichten, 328

WORKPIECE, 964
WRITE, 560
WRTPR, 345

X

X..., 172
XOR, 434

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

1253

Index

1254

NC-Programmierung
Programmierhandbuch, 02/2020, A5E47437142A AB

